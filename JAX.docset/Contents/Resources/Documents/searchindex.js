Search.setIndex({"alltitles": {"(p)jit primitive": [[1237, "p-jit-primitive"]], "1. Taking gradients with jax.grad": [[1230, "taking-gradients-with-jax-grad"]], "1. Tracing a function": [[1204, "tracing-a-function"]], "1D Convolutions": [[1207, "d-convolutions"]], "2. Computing gradients in a linear logistic regression": [[1230, "computing-gradients-in-a-linear-logistic-regression"]], "2. Evaluating a Jaxpr": [[1204, "evaluating-a-jaxpr"]], "3. Differentiating with respect to nested lists, tuples, and dicts": [[1230, "differentiating-with-respect-to-nested-lists-tuples-and-dicts"]], "3D Convolutions": [[1207, "id1"]], "4-way batch data parallelism and 2-way model tensor parallelism": [[1201, "way-batch-data-parallelism-and-2-way-model-tensor-parallelism"]], "4. Evaluating a function and its gradient using jax.value_and_grad": [[1230, "evaluating-a-function-and-its-gradient-using-jax-value-and-grad"]], "5. Checking against numerical differences": [[1230, "checking-against-numerical-differences"]], "8-way batch data parallelism": [[1201, "way-batch-data-parallelism"], [1211, "way-batch-data-parallelism"]], "8-way fully sharded data parallelism (FSDP)": [[1211, "way-fully-sharded-data-parallelism-fsdp"]], "8-way tensor parallelism (TP)": [[1211, "way-tensor-parallelism-tp"]], "A general strategy": [[1137, "a-general-strategy"], [1246, "a-general-strategy"]], "A realistic transformer example": [[1186, "a-realistic-transformer-example"]], "A simple example: Counter": [[1137, "a-simple-example-counter"], [1246, "a-simple-example-counter"]], "AMD GPU": [[1127, "amd-gpu"]], "AOT-compiled functions cannot be transformed": [[1104, "aot-compiled-functions-cannot-be-transformed"]], "API": [[1149, "api"], [1150, "api"], [1151, "api"], [1152, "api"], [1153, "api"], [1155, "api"], [1156, "api"], [1158, "api"], [1190, "api"]], "API Reference": [[1173, "api-reference"]], "API Specification": [[1186, "api-specification"], [1211, "api-specification"]], "API compatibility": [[1105, "api-compatibility"]], "API policy": [[1160, "api-policy"]], "Ability to rematerialize constants, not just operations with data dependence on arguments": [[1184, "ability-to-rematerialize-constants-not-just-operations-with-data-dependence-on-arguments"]], "Abstract evaluation": [[0, "abstract-evaluation"]], "Abstract evaluation rules": [[1202, "abstract-evaluation-rules"], [1236, "abstract-evaluation-rules"]], "Accessing memory": [[1219, "accessing-memory"]], "Activation functions": [[1168, "activation-functions"]], "Add RMS normalization to JAX as custom call": [[0, "add-rms-normalization-to-jax-as-custom-call"]], "Adding compiler tokens": [[1183, "adding-compiler-tokens"]], "Adding cond": [[1107, "adding-cond"]], "Adding custom trace events": [[1223, "adding-custom-trace-events"]], "Additional Notes for Building jaxlib from source on Windows": [[1119, "additional-notes-for-building-jaxlib-from-source-on-windows"]], "Additional notes for building a ROCM jaxlib for AMD GPUs": [[1119, "additional-notes-for-building-a-rocm-jaxlib-for-amd-gpus"]], "Advanced": [[1173, "advanced"]], "Advanced Automatic Differentiation in JAX": [[1133, "advanced-automatic-differentiation-in-jax"]], "Advanced RNG configuration": [[1173, "advanced-rng-configuration"]], "Advanced Tutorials": [[1103, "advanced-tutorials"]], "Advanced automatic differentiation": [[1227, "advanced-automatic-differentiation"]], "Advanced compilation": [[1228, "advanced-compilation"]], "Advanced debugging": [[1229, "advanced-debugging"]], "Advanced: Recursive jax.checkpoint": [[1234, "advanced-recursive-jax-checkpoint"]], "Advanced: recursive jax.checkpoint": [[1206, "advanced-recursive-jax-checkpoint"]], "Ahead-of-time lowering and compilation": [[1104, "ahead-of-time-lowering-and-compilation"]], "Annotate for intent": [[1185, "annotate-for-intent"]], "Another realistic example": [[1186, "another-realistic-example"]], "Appendix: Example Type Promotion Tables": [[1195, "appendix-example-type-promotion-tables"]], "Appendix: defining and motivating maps with unmapped inputs and outputs": [[1188, "appendix-defining-and-motivating-maps-with-unmapped-inputs-and-outputs"]], "Apple Silicon GPU (ARM-based)": [[1127, "apple-silicon-gpu-arm-based"]], "Applying optional parameters to pytrees": [[1224, "applying-optional-parameters-to-pytrees"]], "Argument classes": [[1165, "argument-classes"], [1166, "argument-classes"]], "Array Type Design Considerations": [[1185, "array-type-design-considerations"]], "Array constructors": [[1219, "array-constructors"]], "Array creation": [[1239, "array-creation"]], "Array devices and sharding": [[1239, "array-devices-and-sharding"]], "Array updates with other operations": [[1199, "array-updates-with-other-operations"]], "Array updates: x.at[idx].set(y)": [[1199, "array-updates-x-at-idx-set-y"]], "Aside: hosts and devices in JAX": [[1136, "aside-hosts-and-devices-in-jax"]], "Asynchronous callbacks": [[1117, "asynchronous-callbacks"]], "Asynchronous dispatch": [[1106, "asynchronous-dispatch"]], "Auto-batching predictions": [[1203, "auto-batching-predictions"], [1209, "auto-batching-predictions"]], "Auto-vectorization with jax.vmap()": [[1242, "auto-vectorization-with-jax-vmap"]], "Auto-vectorization with vmap()": [[1210, "auto-vectorization-with-vmap"]], "Autobatched with vmap": [[1213, "autobatched-with-vmap"]], "Autobatching for Bayesian Inference": [[1213, "autobatching-for-bayesian-inference"]], "Autodidax: JAX core from scratch": [[1107, "autodidax-jax-core-from-scratch"]], "Automatic Differentiation": [[1103, null]], "Automatic Vectorization": [[1132, "automatic-vectorization"]], "Automatic Vectorization in JAX": [[1132, "automatic-vectorization-in-jax"]], "Automatic differentiation": [[1129, "automatic-differentiation"], [1230, "automatic-differentiation"]], "Automatic parallelism via jit": [[1244, "automatic-parallelism-via-jit"]], "Automatic vectorization": [[1231, "automatic-vectorization"], [1231, "id2"]], "Auxiliary data": [[1130, "auxiliary-data"]], "Avoid unstable typing mechanisms": [[1185, "avoid-unstable-typing-mechanisms"]], "Axis 1: XLA alignment": [[1189, "axis-1-xla-alignment"]], "Axis 2: Array API Alignment": [[1189, "axis-2-array-api-alignment"]], "Axis 3: Existence of Downstream Implementations": [[1189, "axis-3-existence-of-downstream-implementations"]], "Axis 4: Complexity & Robustness of Implementation": [[1189, "axis-4-complexity-robustness-of-implementation"]], "Axis 5: Functional vs. Object-Oriented APIs": [[1189, "axis-5-functional-vs-object-oriented-apis"]], "Axis 6: General \u201cImportance\u201d to JAX Users & Stakeholders": [[1189, "axis-6-general-importance-to-jax-users-stakeholders"]], "BCOO Data Structure": [[1159, "bcoo-data-structure"]], "BCSR Data Structure": [[1159, "bcsr-data-structure"]], "Background": [[1183, "background"], [1185, "background"], [1189, "background"]], "Basic N-dimensional Convolution": [[1207, "basic-n-dimensional-convolution"]], "Basic One-dimensional Convolution": [[1207, "basic-one-dimensional-convolution"]], "Basic usage": [[1173, "basic-usage"]], "Basic usage of jax.custom_jvp and jax.custom_vjp APIs": [[1200, "basic-usage-of-jax-custom-jvp-and-jax-custom-vjp-apis"], [1227, "basic-usage-of-jax-custom-jvp-and-jax-custom-vjp-apis"]], "Batched-coordinate (BCOO) sparse matrices": [[1159, "batched-coordinate-bcoo-sparse-matrices"]], "Batching": [[1202, "batching"], [1236, "batching"]], "Behavior under JAX autodiff transformations": [[1152, "behavior-under-jax-autodiff-transformations"]], "Behavior under jax.vmap": [[1152, "behavior-under-jax-vmap"]], "Behavior under parallelization transformations": [[1152, "behavior-under-parallelization-transformations"]], "Benchmarking JAX code": [[1122, "benchmarking-jax-code"]], "Block specs": [[1218, "block-specs"]], "BlockSpec, a.k.a. how to chunk up inputs": [[1221, "blockspec-a-k-a-how-to-chunk-up-inputs"]], "BlockSpecs and grid iteration": [[1219, "blockspecs-and-grid-iteration"]], "Blocking on output tokens": [[1183, "blocking-on-output-tokens"]], "Breaking change for pjit after switching to jax.Array for host local inputs": [[1180, "breaking-change-for-pjit-after-switching-to-jax-array-for-host-local-inputs"]], "Broadcasting": [[1214, "broadcasting"], [1219, "broadcasting"]], "Buffer donation": [[1122, "buffer-donation"]], "Build gpu_ops extension module": [[0, "build-gpu-ops-extension-module"]], "Building JAX from source": [[1127, "building-jax-from-source"]], "Building from source": [[1119, "building-from-source"]], "Building jaxlib from source": [[1119, "building-jaxlib-from-source"]], "Building jaxlib from source with a modified XLA repository.": [[1119, "building-jaxlib-from-source-with-a-modified-xla-repository"]], "Building jaxprs with tracing": [[1107, "building-jaxprs-with-tracing"]], "Building on JAX": [[1108, "building-on-jax"], [1109, "building-on-jax"]], "Building or installing jaxlib": [[1119, "building-or-installing-jaxlib"]], "But\u2026 where do those resource names come from?": [[1214, "but-where-do-those-resource-names-come-from"]], "C code": [[0, "c-code"]], "CPU": [[1127, "cpu"]], "Caching": [[1131, "caching"]], "Callback overhead": [[1117, "callback-overhead"]], "Callbacks": [[1129, "callbacks"]], "Can this be improved?": [[1128, "can-this-be-improved"]], "Caveats": [[1199, "caveats"]], "Challenge 1: pytype, mypy and developer friction": [[1185, "challenge-1-pytype-mypy-and-developer-friction"]], "Challenge 2: array duck-typing": [[1185, "challenge-2-array-duck-typing"]], "Challenge 3: transformations and decorators": [[1185, "challenge-3-transformations-and-decorators"]], "Challenge 4: array annotation lack of granularity": [[1185, "challenge-4-array-annotation-lack-of-granularity"]], "Challenge 5: imprecise APIs inherited from NumPy": [[1185, "challenge-5-imprecise-apis-inherited-from-numpy"]], "Change log": [[1110, "change-log"]], "Check for correctness": [[0, "check-for-correctness"]], "Checking against numerical differences": [[1205, "checking-against-numerical-differences"]], "Classes": [[1175, "classes"], [1176, "classes"]], "Code generation flags": [[1125, "code-generation-flags"]], "Collectives": [[1214, "collectives"]], "Collectives tutorial": [[1211, "collectives-tutorial"]], "Combining Lattices": [[1195, "combining-lattices"]], "Combining transformations": [[1132, "combining-transformations"], [1231, "combining-transformations"]], "Common causes of OOM failures": [[1124, "common-causes-of-oom-failures"]], "Common function: jax.tree.map": [[1247, "common-function-jax-tree-map"]], "Common pytree functions": [[1135, "common-pytree-functions"], [1247, "common-pytree-functions"]], "Common pytree gotchas": [[1247, "common-pytree-gotchas"]], "Common pytree gotchas and patterns": [[1135, "common-pytree-gotchas-and-patterns"]], "Common pytree patterns": [[1247, "common-pytree-patterns"]], "Communication between devices": [[1136, "communication-between-devices"]], "Communication flags": [[1125, "communication-flags"]], "Comparing the three approaches": [[1244, "comparing-the-three-approaches"]], "Complex numbers and differentiation": [[1205, "complex-numbers-and-differentiation"], [1227, "complex-numbers-and-differentiation"]], "Composable Domain Specific Libraries with JAX exposed": [[1109, "composable-domain-specific-libraries-with-jax-exposed"]], "Composing VJPs, JVPs, and jax.vmap": [[1227, "composing-vjps-jvps-and-jax-vmap"]], "Composing VJPs, JVPs, and vmap": [[1205, "composing-vjps-jvps-and-vmap"]], "Computation follows data sharding and is automatically parallelized": [[1201, "computation-follows-data-sharding-and-is-automatically-parallelized"]], "Computation placement": [[1219, "computation-placement"]], "Computational Speedup on a Single Core across Multiple Devices": [[1109, "computational-speedup-on-a-single-core-across-multiple-devices"]], "Conclusion": [[1221, "conclusion"]], "Concurrency": [[1111, "concurrency"]], "Conda (community-supported)": [[1127, "conda-community-supported"]], "Conda installation": [[1127, "conda-installation"]], "Conditionals": [[1182, "conditionals"]], "Configuration": [[1129, "configuration"]], "Constant Vars": [[1182, "constant-vars"]], "Constant variables (vars)": [[1237, "constant-variables-vars"]], "Constraining shardings of intermediates in jitted code": [[1201, "constraining-shardings-of-intermediates-in-jitted-code"]], "Constraints of using VMEM/SMEM": [[1221, "constraints-of-using-vmem-smem"]], "Contents": [[1184, "contents"], [1190, "contents"], [1191, "contents"], [1193, "contents"]], "Contributing code using pull requests": [[1112, "contributing-code-using-pull-requests"]], "Contributing to JAX": [[1112, "contributing-to-jax"]], "Control autodiff\u2019s saved values with jax.checkpoint (aka jax.remat)": [[1206, "control-autodiff-s-saved-values-with-jax-checkpoint-aka-jax-remat"]], "Control flow": [[1219, "control-flow"]], "Control flow operators": [[1166, "control-flow-operators"]], "Controlling data and computation placement on devices": [[1122, "controlling-data-and-computation-placement-on-devices"]], "Controlling how each input is split (unconcatenated) and tiled with in_specs": [[1186, "controlling-how-each-input-is-split-unconcatenated-and-tiled-with-in-specs"], [1211, "controlling-how-each-input-is-split-unconcatenated-and-tiled-with-in-specs"]], "Controlling how each output assembled by concatenation, block transposition, and untiling using out_specs": [[1186, "controlling-how-each-output-assembled-by-concatenation-block-transposition-and-untiling-using-out-specs"], [1211, "controlling-how-each-output-assembled-by-concatenation-block-transposition-and-untiling-using-out-specs"]], "Controlling test behavior": [[1119, "controlling-test-behavior"]], "Copying and Serialization": [[1170, "copying-and-serialization"]], "Create primitives": [[0, "create-primitives"]], "Creating jax.Array": [[1180, "creating-jax-array"]], "Creating new notebooks": [[1119, "creating-new-notebooks"]], "Custom JVP/VJP rules for JAX-transformable functions": [[1190, "custom-jvp-vjp-rules-for-jax-transformable-functions"]], "Custom JVPs with jax.custom_jvp": [[1200, "custom-jvps-with-jax-custom-jvp"]], "Custom Operations": [[1249, null]], "Custom PyTrees and Initialization": [[1224, "custom-pytrees-and-initialization"]], "Custom VJPs with jax.custom_vjp": [[1200, "custom-vjps-with-jax-custom-vjp"]], "Custom derivative rules for JAX-transformable Python functions": [[1200, "custom-derivative-rules-for-jax-transformable-python-functions"], [1227, "custom-derivative-rules-for-jax-transformable-python-functions"]], "Custom gradient operators": [[1166, "custom-gradient-operators"]], "Custom inverse Jaxpr interpreter": [[1204, "custom-inverse-jaxpr-interpreter"]], "Custom operations for GPUs with C++ and CUDA": [[0, "custom-operations-for-gpus-with-c-and-cuda"]], "Custom policies for what\u2019s saveable": [[1206, "custom-policies-for-what-s-saveable"], [1234, "custom-policies-for-what-s-saveable"]], "Custom pytree nodes": [[1135, "custom-pytree-nodes"], [1247, "custom-pytree-nodes"]], "Custom pytrees and initialization with unexpected values": [[1247, "custom-pytrees-and-initialization-with-unexpected-values"]], "Customizing PRNG implementations": [[1194, "customizing-prng-implementations"]], "Data Loading with PyTorch": [[1203, "data-loading-with-pytorch"]], "Data Loading with tensorflow/datasets": [[1209, "data-loading-with-tensorflow-datasets"]], "Debug information and analyses, when available": [[1104, "debug-information-and-analyses-when-available"]], "Debugging NaNs": [[1199, "debugging-nans"]], "Debugging and Performance": [[1249, null]], "Debugging memory leaks": [[1120, "debugging-memory-leaks"]], "Debugging with jax.debug.print and other debugging callbacks": [[1117, "debugging-with-jax-debug-print-and-other-debugging-callbacks"]], "Deep Dives": [[1103, null]], "Define the ELBO and its gradient": [[1213, "define-the-elbo-and-its-gradient"]], "Defining new JAX primitives": [[1202, "defining-new-jax-primitives"], [1236, "defining-new-jax-primitives"]], "Dependence on JAX internal APIs that changed": [[1193, "dependence-on-jax-internal-apis-that-changed"]], "Design": [[1191, "design"]], "Design and background": [[1173, "design-and-background"]], "Design of Type Promotion Semantics for JAX": [[1195, "design-of-type-promotion-semantics-for-jax"]], "Design of typed PRNG keys": [[1194, "design-of-typed-prng-keys"]], "Detecting new-style typed keys": [[1194, "detecting-new-style-typed-keys"]], "Developer Documentation": [[1113, "developer-documentation"]], "Developer information": [[1224, "developer-information"]], "Development": [[1249, null]], "Device Memory Profiling": [[1120, "device-memory-profiling"]], "Device memory profiling": [[1172, "device-memory-profiling"]], "Differences from NumPy": [[1130, "differences-from-numpy"]], "Different kinds of JAX values": [[1122, "different-kinds-of-jax-values"]], "Differentiating with respect to nested lists, tuples, and dicts": [[1205, "differentiating-with-respect-to-nested-lists-tuples-and-dicts"]], "Differentiation rule": [[0, "differentiation-rule"]], "Dimension Numbers define dimensional layout for conv_general_dilated": [[1207, "dimension-numbers-define-dimensional-layout-for-conv-general-dilated"]], "Dimension ordering is meaningful": [[1219, "dimension-ordering-is-meaningful"]], "Direct Usage": [[1109, "direct-usage"]], "Display the results": [[1213, "display-the-results"]], "Distributed arrays and automatic parallelization": [[1201, "distributed-arrays-and-automatic-parallelization"]], "Doctests": [[1119, "doctests"]], "Documentation building on readthedocs.io": [[1119, "documentation-building-on-readthedocs-io"]], "Editing ipynb": [[1119, "editing-ipynb"]], "Editing md": [[1119, "editing-md"]], "Effects of Python operator dispatch": [[1248, "effects-of-python-operator-dispatch"]], "Efficient transposition of replication-inducing collectives": [[1188, "efficient-transposition-of-replication-inducing-collectives"]], "Elementwise operations": [[1219, "elementwise-operations"]], "Emulation mode": [[1216, "emulation-mode"]], "Enabling new JAX features by simplifying internals": [[1184, "enabling-new-jax-features-by-simplifying-internals"]], "Enforcing a differentiation convention": [[1200, "enforcing-a-differentiation-convention"]], "Enforcing ordered effects": [[1183, "enforcing-ordered-effects"]], "Enter Python Scalars": [[1195, "enter-python-scalars"]], "Err toward simplicity": [[1185, "err-toward-simplicity"]], "Error message": [[1193, "error-message"], [1193, "id2"]], "Evaluate a function and its gradient using value_and_grad": [[1205, "evaluate-a-function-and-its-gradient-using-value-and-grad"]], "Evaluation": [[1185, "evaluation"]], "Evaluation Rubric": [[1189, "evaluation-rubric"]], "Evaluation interpreter": [[1107, "evaluation-interpreter"]], "Evaluation: what\u2019s in scope?": [[1189, "evaluation-whats-in-scope"]], "Example": [[1136, "example"], [1193, "example"], [1193, "id1"]], "Example 1: all-gather on one side": [[1211, "example-1-all-gather-on-one-side"]], "Example 2: psum_scatter the result": [[1211, "example-2-psum-scatter-the-result"]], "Example of jax.tree.map with ML model parameters": [[1247, "example-of-jax-tree-map-with-ml-model-parameters"]], "Example problems": [[1200, "example-problems"], [1227, "example-problems"]], "Example(s)": [[1115, "example-s"]], "Example: Enforcing a differentiation convention": [[1227, "example-enforcing-a-differentiation-convention"]], "Example: Gradient clipping": [[1227, "example-gradient-clipping"]], "Example: Implicit function differentiation of iterative implementations": [[1227, "example-implicit-function-differentiation-of-iterative-implementations"]], "Example: ML model parameters": [[1135, "example-ml-model-parameters"]], "Example: Numerical stability": [[1227, "example-numerical-stability"]], "Example: Python debugging": [[1227, "example-python-debugging"]], "Example: Writing a simple neural network": [[1245, "example-writing-a-simple-neural-network"]], "Example: pure_callback with custom_jvp": [[1208, "example-pure-callback-with-custom-jvp"], [1233, "example-pure-callback-with-custom-jvp"]], "Example: sparse logistic regression": [[1159, "example-sparse-logistic-regression"]], "Examples": [[1103, null], [1115, "examples"], [1117, "examples"], [1216, "examples"]], "Examples: neural networks": [[1201, "examples-neural-networks"]], "Executing Pallas kernels with pallas_call": [[1216, "executing-pallas-kernels-with-pallas-call"]], "Exercises for the reader": [[1204, "exercises-for-the-reader"]], "Experimental APIs": [[1147, "experimental-apis"]], "Experimental Key Reuse Checking": [[1154, "experimental-key-reuse-checking"]], "Experimental Modules": [[1147, "experimental-modules"]], "Explanation": [[1192, "explanation"], [1193, "explanation"], [1193, "id3"]], "Explicit key paths": [[1247, "explicit-key-paths"]], "Explicit random state": [[1243, "explicit-random-state"]], "Exploring debug.callback": [[1208, "exploring-debug-callback"], [1233, "exploring-debug-callback"]], "Exploring io_callback": [[1233, "exploring-io-callback"]], "Exploring jax.experimental.io_callback": [[1208, "exploring-jax-experimental-io-callback"]], "Exploring jax.pure_callback": [[1208, "exploring-jax-pure-callback"]], "Exploring pure_callback": [[1233, "exploring-pure-callback"]], "Extended dtypes": [[1194, "extended-dtypes"]], "Extending JAX with new Pallas primitives": [[1216, "extending-jax-with-new-pallas-primitives"]], "Extending pytrees": [[1224, "extending-pytrees"]], "External Callbacks in JAX": [[1208, "external-callbacks-in-jax"]], "External callbacks": [[1233, "external-callbacks"]], "FROM_GDA and jax.Array": [[1180, "from-gda-and-jax-array"]], "FSDP + TP, with shard_map at the top level": [[1211, "fsdp-tp-with-shard-map-at-the-top-level"]], "Fin.": [[1199, "fin"]], "Final verification": [[1128, "final-verification"]], "Finding Help": [[1108, "finding-help"]], "Flavors of Callback": [[1208, "flavors-of-callback"]], "Flavors of callback": [[1233, "flavors-of-callback"]], "Following NumPy\u2019s lead": [[1185, "following-numpy-s-lead"]], "Forward differentiation": [[1202, "forward-differentiation"], [1236, "forward-differentiation"]], "Forward-mode autodiff with jvp": [[1107, "forward-mode-autodiff-with-jvp"]], "From positions to names in a toy neural network": [[1214, "from-positions-to-names-in-a-toy-neural-network"]], "Full GitHub test suite": [[1112, "full-github-test-suite"]], "Full solution: statically track device-varying vs device-invariant intermediates, plus new primitives": [[1188, "full-solution-statically-track-device-varying-vs-device-invariant-intermediates-plus-new-primitives"]], "Functional error checks with jax.experimental.checkify": [[1116, "functional-error-checks-with-jax-experimental-checkify"]], "Functionalizing checks": [[1114, "functionalizing-checks"]], "Fundamentals of jax.checkpoint": [[1206, "fundamentals-of-jax-checkpoint"]], "GDA\u2019s API name changes": [[1180, "gdas-api-name-changes"]], "GPU memory allocation": [[1124, "gpu-memory-allocation"]], "GPU performance tips": [[1125, "gpu-performance-tips"]], "GPU profiling": [[1223, "gpu-profiling"]], "General Convolutions": [[1207, "general-convolutions"]], "Generalized Convolutions in JAX": [[1207, "generalized-convolutions-in-jax"]], "Generate a fake binary classification dataset": [[1213, "generate-a-fake-binary-classification-dataset"]], "Generating random numbers": [[1201, "generating-random-numbers"]], "Getting Started with JAX": [[1108, "getting-started-with-jax"]], "Getting started with JAX numpy": [[1130, "getting-started-with-jax-numpy"]], "Goals": [[1190, "goals"]], "Goals of JAX Type Promotion": [[1195, "goals-of-jax-type-promotion"]], "Google Cloud": [[1222, "google-cloud"]], "Google Cloud TPU": [[1127, "google-cloud-tpu"]], "Google contributor license agreement": [[1112, "google-contributor-license-agreement"]], "Gotchas": [[1135, "gotchas"]], "Gradient Computation": [[1109, "gradient-computation"]], "Gradient checkpointing with jax.checkpoint (jax.remat)": [[1234, "gradient-checkpointing-with-jax-checkpoint-jax-remat"]], "Gradient clipping": [[1200, "gradient-clipping"]], "Gradients": [[1205, "gradients"]], "Gradients contain NaN where using where": [[1122, "gradients-contain-nan-where-using-where"]], "Grids": [[1218, "grids"]], "Guides": [[1217, null], [1220, null]], "Guiding Principles": [[1185, "guiding-principles"]], "Handling  non-differentiable arguments": [[1200, "handling-non-differentiable-arguments"], [1227, "handling-non-differentiable-arguments"]], "Handling PyTrees": [[1182, "handling-pytrees"]], "Handling of None": [[1135, "handling-of-none"]], "Handling of None by jax.tree_util": [[1247, "handling-of-none-by-jax-tree-util"]], "Handling of host local inputs to pjit like batch, etc": [[1180, "handling-of-host-local-inputs-to-pjit-like-batch-etc"]], "Handling pytrees": [[1237, "handling-pytrees"]], "Handling reductions": [[1221, "handling-reductions"]], "Hello world in Pallas": [[1218, "hello-world-in-pallas"]], "Hessian-vector products using both forward- and reverse-mode": [[1205, "hessian-vector-products-using-both-forward-and-reverse-mode"], [1227, "hessian-vector-products-using-both-forward-and-reverse-mode"]], "Hessian-vector products with grad-of-grad": [[1205, "hessian-vector-products-with-grad-of-grad"]], "Hessian-vector products with jax.grad-of-jax.grad": [[1227, "hessian-vector-products-with-jax-grad-of-jax-grad"]], "High-level steps": [[0, "high-level-steps"]], "Higher order optimization": [[1133, "higher-order-optimization"]], "Higher-order JAX primitives": [[1237, "higher-order-jax-primitives"]], "Higher-order derivatives": [[1133, "higher-order-derivatives"], [1227, "higher-order-derivatives"]], "Higher-order optimization": [[1227, "higher-order-optimization"]], "Higher-order primitives": [[1182, "higher-order-primitives"]], "Hourly investigation.": [[1128, "hourly-investigation"]], "How JAX primitives work": [[1202, "how-jax-primitives-work"]], "How JAX transformations work": [[1238, "how-jax-transformations-work"]], "How JAX transforms work": [[1131, "how-jax-transforms-work"]], "How are jax and jaxlib versioned?": [[1196, "how-are-jax-and-jaxlib-versioned"]], "How can I convert a JAX Tracer to a NumPy array?": [[1122, "how-can-i-convert-a-jax-tracer-to-a-numpy-array"]], "How can I disable jax.Array for now?": [[1180, "how-can-i-disable-jax-array-for-now"]], "How can I disable omnistaging for now?": [[1193, "how-can-i-disable-omnistaging-for-now"]], "How can I disable the change, and go back to the old behavior for now?": [[1184, "how-can-i-disable-the-change-and-go-back-to-the-old-behavior-for-now"]], "How can I safely make changes to the API of jaxlib?": [[1196, "how-can-i-safely-make-changes-to-the-api-of-jaxlib"]], "How do I fix bugs exposed by omnistaging?": [[1193, "how-do-i-fix-bugs-exposed-by-omnistaging"]], "How do I know if jax.Array broke my code?": [[1180, "how-do-i-know-if-jax-array-broke-my-code"]], "How do I know if omnistaging broke my code?": [[1193, "how-do-i-know-if-omnistaging-broke-my-code"]], "How do we make changes across the jax and jaxlib boundary between releases?": [[1196, "how-do-we-make-changes-across-the-jax-and-jaxlib-boundary-between-releases"]], "How is the source to jaxlib laid out?": [[1196, "how-is-the-source-to-jaxlib-laid-out"]], "How it\u2019s made: Two foundational autodiff functions": [[1227, "how-it-s-made-two-foundational-autodiff-functions"]], "How it\u2019s made: two foundational autodiff functions": [[1205, "how-it-s-made-two-foundational-autodiff-functions"]], "How this system solves the inefficient transpose examples": [[1188, "how-this-system-solves-the-inefficient-transpose-examples"]], "How to Think in JAX": [[1212, "how-to-think-in-jax"]], "How to enable jax.Array?": [[1180, "how-to-enable-jax-array"]], "How to handle uint64?": [[1195, "how-to-handle-uint64"]], "How to implement the solution": [[1188, "how-to-implement-the-solution"]], "How to make the API convenient for users (and backward compatible)": [[1188, "how-to-make-the-api-convenient-for-users-and-backward-compatible"]], "How to start a JEP": [[1197, "how-to-start-a-jep"]], "How to use jit with methods?": [[1122, "how-to-use-jit-with-methods"]], "Hyperparameters": [[1203, "hyperparameters"], [1209, "hyperparameters"]], "Image manipulation functions": [[1165, "image-manipulation-functions"]], "Immediate benefits of Pallas as a front-end": [[1216, "immediate-benefits-of-pallas-as-a-front-end"]], "Implementation Plan": [[1185, "implementation-plan"]], "Implementation notes": [[1190, "implementation-notes"]], "Implicit function differentiation of iterative implementations": [[1200, "implicit-function-differentiation-of-iterative-implementations"]], "Inadvertent transposing of key buffers": [[1194, "inadvertent-transposing-of-key-buffers"]], "Incorporating JAX code into your, or your users, workflows": [[1109, "incorporating-jax-code-into-your-or-your-users-workflows"]], "Initializers": [[1169, "initializers"]], "Initializing the cluster": [[1198, "initializing-the-cluster"]], "Innocuous numerical changes": [[1184, "innocuous-numerical-changes"]], "Inputs should be permissively-typed": [[1185, "inputs-should-be-permissively-typed"]], "Inspecting staged-out computations": [[1104, "inspecting-staged-out-computations"]], "Installation": [[1120, "installation"], [1223, "installation"], [1242, "installation"]], "Installing JAX": [[1127, "installing-jax"]], "Installing jax": [[1119, "installing-jax"]], "Installing jaxlib with pip": [[1119, "installing-jaxlib-with-pip"]], "Installing older jaxlib wheels": [[1127, "installing-older-jaxlib-wheels"]], "Interactions with positional axes": [[1214, "interactions-with-positional-axes"]], "Interactive inspection with jax.debug": [[1116, "interactive-inspection-with-jax-debug"]], "Interactive inspection with jax.debug.breakpoint()": [[1117, "interactive-inspection-with-jax-debug-breakpoint"]], "Internal APIs": [[1181, "internal-apis"]], "Internal pytree handling": [[1224, "internal-pytree-handling"]], "Intro and a quick example": [[1201, "intro-and-a-quick-example"]], "Introducing and eliminating named axes": [[1214, "introducing-and-eliminating-named-axes"]], "Introduction": [[1198, "introduction"], [1216, "introduction"]], "Introduction to JAX primitives": [[1236, "introduction-to-jax-primitives"]], "Introduction to debugging": [[1232, "introduction-to-debugging"]], "Introduction to pjit": [[1138, "introduction-to-pjit"]], "Introduction to sharded computation": [[1244, "introduction-to-sharded-computation"]], "Investigating a regression": [[1128, "investigating-a-regression"]], "Is JAX faster than NumPy?": [[1122, "is-jax-faster-than-numpy"]], "Is my data replicated? Or partitioned? Where is it?": [[1214, "is-my-data-replicated-or-partitioned-where-is-it"]], "Iterative development": [[1187, "iterative-development"]], "JAX 101": [[1235, "jax-101"]], "JAX 201": [[1235, "jax-201"]], "JAX 301": [[1235, "jax-301"]], "JAX Array": [[1170, "jax-array"]], "JAX As Accelerated NumPy": [[1130, "jax-as-accelerated-numpy"]], "JAX Enhancement Proposals (JEPs)": [[1197, "jax-enhancement-proposals-jeps"]], "JAX Errors": [[1121, "jax-errors"]], "JAX Frequently Asked Questions (FAQ)": [[1122, "jax-frequently-asked-questions-faq"]], "JAX Glossary of Terms": [[1123, "jax-glossary-of-terms"]], "JAX Internals": [[1103, null]], "JAX Internals: primitives": [[1236, "jax-internals-primitives"]], "JAX PRNG": [[1199, "jax-prng"]], "JAX PRNG Design": [[1191, "jax-prng-design"]], "JAX Quickstart": [[1210, "jax-quickstart"]], "JAX Totally Hidden from Users": [[1109, "jax-totally-hidden-from-users"]], "JAX Type Promotion: jax.lax": [[1195, "jax-type-promotion-jax-lax"]], "JAX Type Promotion: jax.numpy": [[1195, "jax-type-promotion-jax-numpy"]], "JAX Typing Best Practices": [[1179, "jax-typing-best-practices"]], "JAX arrays (jax.Array)": [[1239, "jax-arrays-jax-array"]], "JAX as NumPy": [[1242, "jax-as-numpy"]], "JAX core machinery": [[1107, "jax-core-machinery"]], "JAX debug.breakpoint for pdb-like debugging": [[1232, "jax-debug-breakpoint-for-pdb-like-debugging"]], "JAX debug.callback for more control during debugging": [[1232, "jax-debug-callback-for-more-control-during-debugging"]], "JAX debug.print for high-level": [[1232, "jax-debug-print-for-high-level"]], "JAX debugging flags": [[1115, "jax-debugging-flags"]], "JAX first transformation: grad": [[1130, "jax-first-transformation-grad"]], "JAX internals: The jaxpr language": [[1237, "jax-internals-the-jaxpr-language"]], "JAX nightly installation": [[1127, "jax-nightly-installation"]], "JAX pull request checklist": [[1112, "jax-pull-request-checklist"]], "JAX tutorials": [[1235, "jax-tutorials"]], "JAX type annotation roadmap": [[1185, "jax-type-annotation-roadmap"]], "JAX vs. NumPy": [[1212, "jax-vs-numpy"]], "JAX: High-Performance Array Computing": [[1126, "jax-high-performance-array-computing"]], "JEP 18137: Scope of JAX NumPy & SciPy Wrappers": [[1189, "jep-18137-scope-of-jax-numpy-scipy-wrappers"]], "JEP 9263: Typed keys & pluggable RNGs": [[1194, "jep-9263-typed-keys-pluggable-rngs"]], "JIT": [[1202, "jit"]], "JIT and caching": [[1238, "jit-and-caching"]], "JIT compiling a function": [[1131, "jit-compiling-a-function"], [1238, "jit-compiling-a-function"]], "JIT mechanics: tracing and static variables": [[1212, "jit-mechanics-tracing-and-static-variables"]], "JIT of batching": [[1202, "jit-of-batching"], [1236, "jit-of-batching"]], "JIT of forward differentiation": [[1202, "jit-of-forward-differentiation"], [1236, "jit-of-forward-differentiation"]], "JIT of reverse differentiation": [[1202, "jit-of-reverse-differentiation"], [1236, "jit-of-reverse-differentiation"]], "JVPs in JAX code": [[1205, "jvps-in-jax-code"], [1227, "jvps-in-jax-code"]], "JVPs in math": [[1205, "jvps-in-math"], [1227, "jvps-in-math"]], "Jacobian-Matrix and Matrix-Jacobian products": [[1205, "jacobian-matrix-and-matrix-jacobian-products"], [1227, "jacobian-matrix-and-matrix-jacobian-products"]], "Jacobian-Vector products (JVPs, a.k.a. forward-mode autodiff)": [[1227, "jacobian-vector-products-jvps-a-k-a-forward-mode-autodiff"]], "Jacobian-Vector products (JVPs, aka forward-mode autodiff)": [[1205, "jacobian-vector-products-jvps-aka-forward-mode-autodiff"]], "Jacobians and Hessians using jacfwd and jacrev": [[1205, "jacobians-and-hessians-using-jacfwd-and-jacrev"]], "Jacobians and Hessians using jax.jacfwd and jax.jacrev": [[1227, "jacobians-and-hessians-using-jax-jacfwd-and-jax-jacrev"]], "Jax and Jaxlib versioning": [[1196, "jax-and-jaxlib-versioning"]], "Jaxpr data structures": [[1107, "jaxpr-data-structures"]], "Jaxpr tracer": [[1204, "jaxpr-tracer"]], "Jaxprs": [[1239, "jaxprs"]], "Just In Time Compilation with JAX": [[1131, "just-in-time-compilation-with-jax"]], "Just-in-time compilation": [[1238, "just-in-time-compilation"]], "Just-in-time compilation (jit)": [[1129, "just-in-time-compilation-jit"]], "Just-in-time compilation with jax.jit()": [[1242, "just-in-time-compilation-with-jax-jit"]], "Key Concepts": [[1239, "key-concepts"]], "Key Creation & Manipulation": [[1173, "key-creation-manipulation"]], "Key arithmetic": [[1194, "key-arithmetic"]], "Key buffer indexing": [[1194, "key-buffer-indexing"]], "Key concept: data sharding": [[1244, "key-concept-data-sharding"]], "Key paths": [[1135, "key-paths"]], "Key reuse": [[1194, "key-reuse"]], "Lack of sequential equivalence": [[1243, "lack-of-sequential-equivalence"]], "Launching JAX processes": [[1198, "launching-jax-processes"]], "Let\u2019s put it together": [[0, "let-s-put-it-together"]], "Let\u2019s test it": [[0, "let-s-test-it"]], "Let\u2019s test it again": [[0, "let-s-test-it-again"]], "Let\u2019s test it on multiple devices": [[0, "let-s-test-it-on-multiple-devices"]], "Let\u2019s think step by step": [[1206, "let-s-think-step-by-step"], [1234, "let-s-think-step-by-step"]], "Level 1: Annotations as documentation": [[1185, "level-1-annotations-as-documentation"]], "Level 2: Annotations for intelligent autocomplete": [[1185, "level-2-annotations-for-intelligent-autocomplete"]], "Level 3: Annotations for static type-checking": [[1185, "level-3-annotations-for-static-type-checking"]], "Limitations": [[1114, "limitations"], [1115, "limitations"], [1115, "id3"], [1117, "limitations"], [1117, "id3"]], "Linear algebra operators (jax.lax.linalg)": [[1166, "module-jax.lax.linalg"]], "Linting": [[1119, "linting"]], "Linting and Type-checking": [[1112, "linting-and-type-checking"]], "List of Functions": [[1164, "list-of-functions"], [1177, "list-of-functions"], [1178, "list-of-functions"]], "List of Members": [[1179, "list-of-members"]], "Local filesystem": [[1222, "local-filesystem"]], "Local vs. global devices": [[1198, "local-vs-global-devices"]], "Low-level details and debugging": [[1152, "low-level-details-and-debugging"]], "Lowering Pallas": [[1216, "lowering-pallas"]], "Lowering Pallas to Mosaic for TPU": [[1216, "lowering-pallas-to-mosaic-for-tpu"]], "Lowering Pallas to Triton for GPU": [[1216, "lowering-pallas-to-triton-for-gpu"]], "Lowering to MLIR custom call": [[0, "lowering-to-mlir-custom-call"]], "Lowering with static arguments": [[1104, "lowering-with-static-arguments"]], "Main problem descriptions": [[1190, "main-problem-descriptions"]], "Managing runtime tokens": [[1183, "managing-runtime-tokens"]], "Manual Vectorization": [[1132, "manual-vectorization"]], "Manual capture": [[1223, "manual-capture"]], "Manual capture via TensorBoard": [[1223, "manual-capture-via-tensorboard"]], "Manual parallelism with shard_map": [[1244, "manual-parallelism-with-shard-map"]], "Manual vectorization": [[1231, "manual-vectorization"]], "Manually batched": [[1213, "manually-batched"]], "Marking arguments as static": [[1238, "marking-arguments-as-static"]], "Matmul precision": [[1125, "matmul-precision"]], "Matrix multiplication": [[1219, "matrix-multiplication"]], "Matrix multiplies": [[1211, "matrix-multiplies"]], "Miscellaneous": [[1129, "miscellaneous"]], "Mistaking nodes for leaves": [[1135, "mistaking-nodes-for-leaves"]], "Mistaking pytree nodes for leaves": [[1247, "mistaking-pytree-nodes-for-leaves"]], "Mixed Promotion: Float and Complex": [[1195, "mixed-promotion-float-and-complex"]], "Mixed Promotion: Integer and Floating": [[1195, "mixed-promotion-integer-and-floating"]], "Mixed Promotion: Signed & Unsigned Integers": [[1195, "mixed-promotion-signed-unsigned-integers"]], "Modules": [[1160, "modules"]], "More Information": [[1135, "more-information"]], "More advanced autodiff": [[1205, "more-advanced-autodiff"]], "More control with jax.debug.callback": [[1117, "more-control-with-jax-debug-callback"]], "More examples of jax.debug.print": [[1117, "more-examples-of-jax-debug-print"]], "More features and details": [[1200, "more-features-and-details"], [1227, "more-features-and-details"]], "More flexible front end": [[1216, "more-flexible-front-end"]], "More realistic example user programs": [[1191, "more-realistic-example-user-programs"]], "Motivation": [[1137, "motivation"], [1183, "motivation"], [1186, "motivation"], [1188, "motivation"], [1194, "motivation"]], "Multi-process programming model": [[1198, "multi-process-programming-model"]], "Multicore TPU configurations": [[1219, "multicore-tpu-configurations"]], "Multihost Utils API Reference": [[1157, "multihost-utils-api-reference"]], "Multiple TensorBoard installs": [[1223, "multiple-tensorboard-installs"]], "Multiplying Matrices": [[1210, "multiplying-matrices"]], "NCCL flags": [[1125, "nccl-flags"]], "NVIDIA GPU": [[1127, "nvidia-gpu"]], "NVIDIA GPU Docker containers": [[1127, "nvidia-gpu-docker-containers"]], "Named axes and easy-to-revise parallelism with xmap": [[1214, "named-axes-and-easy-to-revise-parallelism-with-xmap"]], "Named axis propagation": [[1214, "named-axis-propagation"]], "NamedSharding gives a way to express shardings with names": [[1201, "namedsharding-gives-a-way-to-express-shardings-with-names"]], "Nesting jax.pmap and jax.vmap": [[1136, "nesting-jax-pmap-and-jax-vmap"]], "Neural networks": [[1211, "neural-networks"]], "New public type named jax.Array": [[1180, "new-public-type-named-jax-array"]], "Next Steps": [[1243, "next-steps"]], "Next steps": [[1227, "next-steps"], [1230, "next-steps"], [1232, "next-steps"]], "Nightly investigation.": [[1128, "nightly-investigation"]], "No compatibility policy": [[1187, "no-compatibility-policy"]], "Non-batched": [[1213, "non-batched"]], "Non-goals": [[1190, "non-goals"]], "Notable bug fixes": [[1110, "notable-bug-fixes"]], "Notebooks within the Sphinx build": [[1119, "notebooks-within-the-sphinx-build"]], "Notes": [[1215, "notes"]], "Notes for JAX library authors": [[1194, "notes-for-jax-library-authors"]], "Noteworthy properties and restrictions": [[1219, "noteworthy-properties-and-restrictions"]], "Nsight": [[1223, "nsight"]], "NumPy APIs": [[1189, "numpy-apis"]], "NumPy Type Promotion": [[1195, "numpy-type-promotion"]], "NumPy, lax & XLA: JAX API layering": [[1212, "numpy-lax-xla-jax-api-layering"]], "Numerical stability": [[1200, "numerical-stability"]], "Numerics and randomness": [[1105, "numerics-and-randomness"]], "Omnistaging": [[1193, "omnistaging"]], "On-the-fly (\u201cfinal style\u201d) and staged (\u201cinitial style\u201d) processing": [[1107, "on-the-fly-final-style-and-staged-initial-style-processing"]], "Operators": [[1166, "operators"]], "Optimize the ELBO using SGD": [[1213, "optimize-the-elbo-using-sgd"]], "Option 0: Leave integer/floating mixed precision undefined": [[1195, "option-0-leave-integer-floating-mixed-precision-undefined"]], "Option 1: Avoiding All Precision Loss": [[1195, "option-1-avoiding-all-precision-loss"]], "Option 1: Partial unification": [[1185, "option-1-partial-unification"]], "Option 2: Avoid most wider-than-necessary promotions": [[1195, "option-2-avoid-most-wider-than-necessary-promotions"]], "Option 2: Full unification via overrides": [[1185, "option-2-full-unification-via-overrides"]], "Option 3: Avoid all wider-than-necessary promotions": [[1195, "option-3-avoid-all-wider-than-necessary-promotions"]], "Option 3: Full unification via class hierarchy": [[1185, "option-3-full-unification-via-class-hierarchy"]], "Option 4: Partial unification via class hierarchy": [[1185, "option-4-partial-unification-via-class-hierarchy"]], "Ordering of printed results": [[1117, "ordering-of-printed-results"]], "Other Sparse Data Structures": [[1159, "other-sparse-data-structures"]], "Other functions": [[1168, "other-functions"]], "Other transformations": [[1216, "other-transformations"]], "Outputs should be strictly-typed": [[1185, "outputs-should-be-strictly-typed"]], "Overview": [[1183, "overview"], [1194, "overview"]], "PRNG dtypes": [[1194, "prng-dtypes"]], "PRNG keys": [[1173, "prng-keys"]], "Pallas Design": [[1216, "pallas-design"]], "Pallas Quickstart": [[1218, "pallas-quickstart"]], "Pallas TPU": [[1220, "pallas-tpu"]], "Pallas programming model": [[1218, "pallas-programming-model"]], "Pallas: Extending JAX for kernels": [[1216, "pallas-extending-jax-for-kernels"]], "Pallas: a JAX kernel language": [[1217, "pallas-a-jax-kernel-language"]], "Parallel Computation": [[1103, null]], "Parallel Evaluation in JAX": [[1136, "parallel-evaluation-in-jax"]], "Parallel computation": [[1240, "parallel-computation"]], "Parallel operators": [[1166, "parallel-operators"]], "Parallelism support": [[1214, "parallelism-support"]], "Parallelization (pmap)": [[1129, "parallelization-pmap"]], "Parameterizing a pipeline": [[1221, "parameterizing-a-pipeline"]], "Part 1: Transformations as interpreters: standard evaluation, jvp, and vmap": [[1107, "part-1-transformations-as-interpreters-standard-evaluation-jvp-and-vmap"]], "Part 2: Jaxprs": [[1107, "part-2-jaxprs"]], "Part 3: jit, simplified": [[1107, "part-3-jit-simplified"]], "Part 4: linearize and vjp (and grad!)": [[1107, "part-4-linearize-and-vjp-and-grad"]], "Part 5: the control flow primitives cond": [[1107, "part-5-the-control-flow-primitives-cond"]], "Partial solution \u201cP-sum\u201d: build the ability to express a psum into out_specs": [[1188, "partial-solution-p-sum-build-the-ability-to-express-a-psum-into-out-specs"]], "Patterns": [[1135, "patterns"]], "Per-example gradients": [[1133, "per-example-gradients"], [1227, "per-example-gradients"]], "Performance impacts": [[1117, "performance-impacts"]], "Persistent Compilation Cache": [[1222, "persistent-compilation-cache"]], "Pipelining and BlockSpecs": [[1221, "pipelining-and-blockspecs"]], "Pipelining in Pallas": [[1221, "pipelining-in-pallas"]], "Placing operands in SMEM": [[1219, "placing-operands-in-smem"]], "Platform Features": [[1217, null]], "Porting positional code to named code": [[1214, "porting-positional-code-to-named-code"]], "Possible module overview": [[1187, "possible-module-overview"]], "Practical notes": [[1206, "practical-notes"], [1234, "practical-notes"]], "Precision control": [[1219, "precision-control"]], "Preliminaries": [[1214, "preliminaries"]], "Primal evaluation rules": [[1202, "primal-evaluation-rules"], [1236, "primal-evaluation-rules"]], "Primer: Pipelining": [[1221, "primer-pipelining"]], "Printing in other transformations": [[1117, "printing-in-other-transformations"]], "Printing under jax.grad": [[1117, "printing-under-jax-grad"]], "Printing under jax.pmap": [[1117, "printing-under-jax-pmap"]], "Problem: efficient transpose of psum or all_gather depends on whether cotangents are invariant across devices": [[1188, "problem-efficient-transpose-of-psum-or-all-gather-depends-on-whether-cotangents-are-invariant-across-devices"]], "Profiling JAX programs": [[1223, "profiling-jax-programs"]], "Profiling and performance": [[1241, "profiling-and-performance"]], "Profiling on a remote machine": [[1223, "profiling-on-a-remote-machine"]], "Programmatic capture": [[1223, "programmatic-capture"]], "Progress": [[1194, "progress"]], "Properties of a Type Promotion Lattice": [[1195, "properties-of-a-type-promotion-lattice"]], "Pseudo Random Numbers in JAX": [[1134, "pseudo-random-numbers-in-jax"]], "Pseudorandom numbers": [[1243, "pseudorandom-numbers"]], "Public API: jax package": [[1129, "public-api-jax-package"]], "Purpose of type annotations": [[1185, "purpose-of-type-annotations"]], "Putting it together": [[1221, "putting-it-together"]], "PyTorch Type Promotion": [[1195, "pytorch-type-promotion"]], "Python and NumPy version support policy": [[1118, "python-and-numpy-version-support-policy"]], "Python debugging": [[1200, "python-debugging"]], "Pytrees": [[1224, "pytrees"], [1239, "pytrees"]], "Pytrees and JAX functions": [[1224, "pytrees-and-jax-functions"]], "Pytrees and JAX transformations": [[1247, "pytrees-and-jax-transformations"]], "Pytrees and flattening user functions\u2019 inputs and outputs": [[1107, "pytrees-and-flattening-user-functions-inputs-and-outputs"]], "Quickstart": [[1242, "quickstart"]], "RMS normalization": [[0, "rms-normalization"]], "RNGs and State": [[1199, "rngs-and-state"]], "Random Samplers": [[1173, "random-samplers"]], "Random numbers in JAX": [[1134, "random-numbers-in-jax"], [1243, "random-numbers-in-jax"]], "Random numbers in NumPy": [[1134, "random-numbers-in-numpy"], [1243, "random-numbers-in-numpy"]], "Rank promotion warning": [[1225, "rank-promotion-warning"]], "Rank-reducing vs rank-preserving maps": [[1211, "rank-reducing-vs-rank-preserving-maps"]], "Rank-reducing vs rank-preserving maps over array axes": [[1186, "rank-reducing-vs-rank-preserving-maps-over-array-axes"]], "Read more": [[1116, null]], "Reading from/writing into Refs": [[1216, "reading-from-writing-into-refs"]], "RecursionError: Recursively calling jit": [[1180, "recursionerror-recursively-calling-jit"]], "Reductions": [[1214, "reductions"], [1219, "reductions"]], "Reference types": [[1216, "reference-types"]], "Remote profiling": [[1223, "remote-profiling"]], "Reshapes": [[1219, "reshapes"]], "Restricted test suite": [[1112, "restricted-test-suite"]], "Reverse differentiation": [[1202, "reverse-differentiation"], [1236, "reverse-differentiation"]], "Run Time": [[1249, null]], "Running multi-process computations": [[1198, "running-multi-process-computations"]], "Running the tests": [[1119, "running-the-tests"]], "Runtime instance checks": [[1185, "runtime-instance-checks"]], "Runtime tokens vs. compiler tokens": [[1183, "runtime-tokens-vs-compiler-tokens"]], "Runtime value debugging in JAX": [[1116, "runtime-value-debugging-in-jax"]], "Runtime value debugging utilities": [[1140, "runtime-value-debugging-utilities"]], "SAME padding, 2,2 stride, no dilation": [[1207, "same-padding-2-2-stride-no-dilation"]], "SAME padding, no stride, no dilation": [[1207, "same-padding-no-stride-no-dilation"]], "SPMD multi-device parallelism with shard_map": [[1211, "spmd-multi-device-parallelism-with-shard-map"]], "SPMD pipeline parallelism (PP)": [[1211, "spmd-pipeline-parallelism-pp"]], "Safe PRNG key use": [[1194, "safe-prng-key-use"]], "Scan": [[1182, "scan"]], "SciPy APIs": [[1189, "scipy-apis"]], "Segment reduction operators": [[1171, "segment-reduction-operators"]], "Self-contained variational inference example": [[1213, "self-contained-variational-inference-example"]], "Semi-automated sharding with constraints": [[1244, "semi-automated-sharding-with-constraints"]], "Sequencing side-effects in JAX": [[1183, "sequencing-side-effects-in-jax"]], "Set up the (batched) log-joint function": [[1213, "set-up-the-batched-log-joint-function"]], "Setup": [[1227, "setup"]], "Shard the backward function with custom_partitioning": [[0, "shard-the-backward-function-with-custom-partitioning"]], "Shard the forward function with custom_partitioning": [[0, "shard-the-forward-function-with-custom-partitioning"]], "Sharding basics, and the PositionalSharding subclass": [[1201, "sharding-basics-and-the-positionalsharding-subclass"]], "Sharding debugging utilities": [[1140, "sharding-debugging-utilities"]], "Sharding describes how array values are laid out in memory across devices": [[1201, "sharding-describes-how-array-values-are-laid-out-in-memory-across-devices"]], "Sharding-related operators": [[1166, "sharding-related-operators"]], "Sharp bits": [[1117, "sharp-bits"], [1117, "id1"], [1201, "sharp-bits"]], "Side-effects": [[1193, "side-effects"]], "Significantly less Python overhead in some cases": [[1184, "significantly-less-python-overhead-in-some-cases"]], "Simple worked example: Linear Regression": [[1137, "simple-worked-example-linear-regression"], [1246, "simple-worked-example-linear-regression"]], "Single and Multi Computer Speedup Using Parallelization": [[1109, "single-and-multi-computer-speedup-using-parallelization"]], "Single-change commits and pull requests": [[1112, "single-change-commits-and-pull-requests"]], "Slightly less toy example": [[1193, "slightly-less-toy-example"]], "Slow down, start with the basics!": [[1186, "slow-down-start-with-the-basics"], [1211, "slow-down-start-with-the-basics"]], "Small numerical differences based on XLA optimizations": [[1193, "small-numerical-differences-based-on-xla-optimizations"]], "So, let\u2019s see a shard_map!": [[1211, "so-let-s-see-a-shard-map"]], "So, let\u2019s see shmap!": [[1186, "so-let-s-see-shmap"]], "Solution": [[1193, "solution"], [1193, "id4"]], "Solution idea": [[1190, "solution-idea"]], "Solutions": [[1188, "solutions"]], "Some more details": [[1183, "some-more-details"]], "Sparse API Reference": [[1159, "sparse-api-reference"]], "Sparsify transform": [[1159, "sparsify-transform"]], "Specifying in_axes": [[1136, "specifying-in-axes"]], "Starting with grad": [[1205, "starting-with-grad"]], "Stateful Computations": [[1246, "stateful-computations"]], "Stateful Computations in JAX": [[1137, "stateful-computations-in-jax"]], "Static type annotations": [[1185, "static-type-annotations"]], "Static vs Traced Operations": [[1212, "static-vs-traced-operations"]], "Stepping Back: Tables and Lattices": [[1195, "stepping-back-tables-and-lattices"]], "Steps": [[1128, "steps"]], "Stopping gradients": [[1133, "stopping-gradients"], [1227, "stopping-gradients"]], "Straight-through estimator using stop_gradient": [[1133, "straight-through-estimator-using-stop-gradient"], [1227, "straight-through-estimator-using-stop-gradient"]], "Strategy 1: JIT-compiled helper function": [[1122, "strategy-1-jit-compiled-helper-function"]], "Strategy 2: Marking self as static": [[1122, "strategy-2-marking-self-as-static"]], "Strategy 3: Making CustomClass a PyTree": [[1122, "strategy-3-making-customclass-a-pytree"]], "Strengths": [[1114, "strengths"], [1115, "strengths"], [1115, "id2"], [1117, "strengths"], [1117, "id2"]], "Strengths and limitations of jax.debug.breakpoint()": [[1117, "strengths-and-limitations-of-jax-debug-breakpoint"]], "Strengths and limitations of jax.debug.print": [[1117, "strengths-and-limitations-of-jax-debug-print"]], "Strengths and limitations of jax.experimental.checkify": [[1114, "strengths-and-limitations-of-jax-experimental-checkify"]], "Strengths and limitations of jax_debug_nans": [[1115, "strengths-and-limitations-of-jax-debug-nans"]], "Strengths and limitations of jax_disable_jit": [[1115, "strengths-and-limitations-of-jax-disable-jit"]], "Strict dtype promotion": [[1248, "strict-dtype-promotion"]], "Structured control flow primitives": [[1199, "structured-control-flow-primitives"]], "Subpackages": [[1129, "subpackages"]], "Summary": [[1199, "summary"]], "Supported data types": [[1219, "supported-data-types"]], "Supported operations": [[1219, "supported-operations"]], "Supported platforms": [[1127, "supported-platforms"]], "Syncing notebooks": [[1119, "syncing-notebooks"]], "TL;DR": [[1180, "tl-dr"], [1200, "tl-dr"], [1206, "tl-dr"]], "TL;DR example (with a more detailed explanation to follow)": [[1186, "tl-dr-example-with-a-more-detailed-explanation-to-follow"]], "TL;DR: Custom JVPs with jax.custom_jvp()": [[1227, "tl-dr-custom-jvps-with-jax-custom-jvp"]], "TL;DR: Custom VJPs with jax.custom_vjp": [[1227, "tl-dr-custom-vjps-with-jax-custom-vjp"]], "TPU Setup": [[1136, "tpu-setup"]], "TPU and its memory spaces": [[1221, "tpu-and-its-memory-spaces"]], "TPUs in Megacore configuration": [[1221, "tpus-in-megacore-configuration"]], "Taking derivatives with grad()": [[1210, "taking-derivatives-with-grad"]], "Taking derivatives with jax.grad()": [[1242, "taking-derivatives-with-jax-grad"]], "Taking gradients (part 2)": [[1227, "taking-gradients-part-2"]], "Taking it further": [[1137, "taking-it-further"], [1246, "taking-it-further"]], "Templated matmul": [[1216, "templated-matmul"]], "TensorBoard profiling": [[1223, "tensorboard-profiling"]], "Tensorflow Type Promotion": [[1195, "tensorflow-type-promotion"]], "Tensors with named axes": [[1214, "tensors-with-named-axes"]], "Test forward function": [[0, "test-forward-function"]], "Test the backward function": [[0, "test-the-backward-function"]], "Test the forward function": [[0, "test-the-forward-function"], [0, "id1"]], "The Autodiff Cookbook": [[1205, "the-autodiff-cookbook"]], "The Python flexibility problem": [[1190, "the-python-flexibility-problem"]], "The basics": [[1136, "the-basics"]], "The checkify transformation": [[1114, "the-checkify-transformation"]], "The concrete=True option is removed.": [[1184, "the-concrete-true-option-is-removed"]], "The implementation of jacfwd and jacrev": [[1205, "the-implementation-of-jacfwd-and-jacrev"]], "The implementation of jax.jacfwd and jax.jacrev": [[1227, "the-implementation-of-jax-jacfwd-and-jax-jacrev"]], "The solution: explicit state": [[1137, "the-solution-explicit-state"], [1246, "the-solution-explicit-state"]], "The vmap-removes-custom-jvp semantics problem": [[1190, "the-vmap-removes-custom-jvp-semantics-problem"]], "Three programming models and toy example programs": [[1191, "three-programming-models-and-toy-example-programs"]], "Throwing Python errors with JAX\u2019s debug flags": [[1116, "throwing-python-errors-with-jax-s-debug-flags"]], "To JIT or not to JIT": [[1212, "to-jit-or-not-to-jit"]], "Toy example": [[1193, "toy-example"]], "Toy examples": [[1211, "toy-examples"]], "Tracing": [[1239, "tracing"]], "Tracing and time profiling": [[1172, "tracing-and-time-profiling"]], "Tracking device invariance in avals (a.k.a. avals-with-names, revived)": [[1188, "tracking-device-invariance-in-avals-a-k-a-avals-with-names-revived"]], "Tradeoffs and alternatives": [[1191, "tradeoffs-and-alternatives"]], "Training Loop": [[1203, "training-loop"], [1209, "training-loop"]], "Training a Simple Neural Network, with PyTorch Data Loading": [[1203, "training-a-simple-neural-network-with-pytorch-data-loading"]], "Training a Simple Neural Network, with tensorflow/datasets Data Loading": [[1209, "training-a-simple-neural-network-with-tensorflow-datasets-data-loading"]], "Transfer guard": [[1226, "transfer-guard"]], "Transformation functions": [[1216, "transformation-functions"]], "Transformations": [[1239, "transformations"]], "Transforming Pallas": [[1216, "transforming-pallas"]], "Transposing pytrees with jax.tree.map and jax.tree.transpose": [[1247, "transposing-pytrees-with-jax-tree-map-and-jax-tree-transpose"]], "Transposing trees": [[1135, "transposing-trees"]], "Transposition": [[1202, "transposition"], [1219, "transposition"], [1236, "transposition"]], "Triggering XLA compile time bugs": [[1193, "triggering-xla-compile-time-bugs"]], "Troubleshooting": [[1223, "troubleshooting"]], "Tutorial: JAX 101": [[1139, "tutorial-jax-101"]], "Tutorials": [[1108, "tutorials"], [1139, null]], "Type Annotation Roadmap for JAX": [[1185, "type-annotation-roadmap-for-jax"]], "Type Promotion in JAX": [[1195, "type-promotion-in-jax"]], "Type Promotion within Categories": [[1195, "type-promotion-within-categories"]], "Type annotation challenges for JAX": [[1185, "type-annotation-challenges-for-jax"]], "Type annotations for PRNG Keys": [[1194, "type-annotations-for-prng-keys"]], "Type checking": [[1119, "type-checking"]], "Type promotion semantics": [[1248, "type-promotion-semantics"]], "Understanding Jaxprs": [[1182, "understanding-jaxprs"]], "Understanding how a JAX program is using GPU or TPU memory": [[1120, "understanding-how-a-jax-program-is-using-gpu-or-tpu-memory"]], "Unifying instance checks and annotation": [[1185, "unifying-instance-checks-and-annotation"]], "Unnecessary materialization": [[1117, "unnecessary-materialization"]], "Update documentation": [[1119, "update-documentation"]], "Update notebooks": [[1119, "update-notebooks"]], "Usage": [[1115, "usage"], [1115, "id1"], [1117, "usage"], [1222, "usage"]], "Usage with jax.lax.cond": [[1117, "usage-with-jax-lax-cond"]], "Use jax.custom_jvp to define forward-mode (and, indirectly, reverse-mode) rules": [[1200, "use-jax-custom-jvp-to-define-forward-mode-and-indirectly-reverse-mode-rules"], [1227, "use-jax-custom-jvp-to-define-forward-mode-and-indirectly-reverse-mode-rules"]], "Use jax.custom_vjp to define custom reverse-mode-only rules": [[1200, "use-jax-custom-vjp-to-define-custom-reverse-mode-only-rules"], [1227, "use-jax-custom-vjp-to-define-custom-reverse-mode-only-rules"]], "User Guides": [[1249, "user-guides"]], "User-customizable rematerialization policies": [[1184, "user-customizable-rematerialization-policies"]], "Using Bazel": [[1119, "using-bazel"]], "Using JAX in multi-host and multi-process environments": [[1198, "using-jax-in-multi-host-and-multi-process-environments"]], "Using a subset of JAX primitives in Pallas": [[1216, "using-a-subset-of-jax-primitives-in-pallas"]], "Using barrier_wait() to wait until all callbacks have executed": [[1152, "using-barrier-wait-to-wait-until-all-callbacks-have-executed"]], "Using call() to call a JAX function on another device, with reverse-mode autodiff support": [[1152, "using-call-to-call-a-jax-function-on-another-device-with-reverse-mode-autodiff-support"]], "Using call() to call a TensorFlow function, with reverse-mode autodiff support": [[1152, "using-call-to-call-a-tensorflow-function-with-reverse-mode-autodiff-support"]], "Using call() to call a host function and return results to device": [[1152, "using-call-to-call-a-host-function-and-return-results-to-device"]], "Using existing JAX primitives": [[1236, "using-existing-jax-primitives"]], "Using existing primitives": [[1202, "using-existing-primitives"]], "Using id_tap() to call a Python function on the host, with no returned values": [[1152, "using-id-tap-to-call-a-python-function-on-the-host-with-no-returned-values"]], "Using jax.numpy for shape computations": [[1193, "using-jax-numpy-for-shape-computations"]], "Using jit() to speed up functions": [[1210, "using-jit-to-speed-up-functions"]], "Using pytest": [[1119, "using-pytest"]], "Utility and loss functions": [[1203, "utility-and-loss-functions"], [1209, "utility-and-loss-functions"]], "VALID padding, no stride, lhs=input dilation  ~ Transposed Convolution": [[1207, "valid-padding-no-stride-lhs-input-dilation-transposed-convolution"]], "VALID padding, no stride, no dilation": [[1207, "valid-padding-no-stride-no-dilation"]], "VALID padding, no stride, rhs kernel dilation ~ Atrous convolution (excessive to illustrate)": [[1207, "valid-padding-no-stride-rhs-kernel-dilation-atrous-convolution-excessive-to-illustrate"]], "VJPs in JAX code": [[1205, "vjps-in-jax-code"], [1227, "vjps-in-jax-code"]], "VJPs in math": [[1205, "vjps-in-math"], [1227, "vjps-in-math"]], "Value and Grad": [[1130, "value-and-grad"]], "Vector-Jacobian products (VJPs, a.k.a. reverse-mode autodiff)": [[1227, "vector-jacobian-products-vjps-a-k-a-reverse-mode-autodiff"]], "Vector-Jacobian products (VJPs, aka reverse-mode autodiff)": [[1205, "vector-jacobian-products-vjps-aka-reverse-mode-autodiff"]], "Vector-valued gradients with VJPs": [[1205, "vector-valued-gradients-with-vjps"], [1227, "vector-valued-gradients-with-vjps"]], "Vectorization (vmap)": [[1129, "vectorization-vmap"]], "Vectorized batching with vmap": [[1107, "vectorized-batching-with-vmap"]], "Viewing program traces with Perfetto": [[1223, "viewing-program-traces-with-perfetto"]], "Viewing the pytree definition of an object": [[1224, "viewing-the-pytree-definition-of-an-object"]], "Ways to contribute": [[1112, "ways-to-contribute"]], "Weakly-typed values in JAX": [[1248, "weakly-typed-values-in-jax"]], "What are the possible issues after the upgrade?": [[1184, "what-are-the-possible-issues-after-the-upgrade"]], "What does this mean for users?": [[1194, "what-does-this-mean-for-users"]], "What happens when you use jit": [[1236, "what-happens-when-you-use-jit"]], "What is JAX doing?": [[1204, "what-is-jax-doing"]], "What is a TPU?": [[1219, "what-is-a-tpu"]], "What is a pytree?": [[1135, "what-is-a-pytree"], [1224, "what-is-a-pytree"], [1247, "what-is-a-pytree"]], "What is covered?": [[1105, "what-is-covered"]], "What is not covered?": [[1105, "what-is-not-covered"]], "What is \u201comnistaging\u201d and why is it useful?": [[1193, "what-is-omnistaging-and-why-is-it-useful"]], "What issues can arise when jax.Array is switched on?": [[1180, "what-issues-can-arise-when-jax-array-is-switched-on"]], "What issues can arise when omnistaging is switched on?": [[1193, "what-issues-can-arise-when-omnistaging-is-switched-on"]], "What to update": [[1192, "what-to-update"]], "What\u2019s going on?": [[1180, "whats-going-on"], [1184, "whats-going-on"], [1193, "what-s-going-on"]], "When explicit shardings disagree, JAX errors": [[1201, "when-explicit-shardings-disagree-jax-errors"]], "When should you use shmap and when should you use pjit?": [[1186, "when-should-you-use-shmap-and-when-should-you-use-pjit"]], "When to use JIT": [[1131, "when-to-use-jit"], [1238, "when-to-use-jit"]], "When to use \u201cdebug\u201d print?": [[1117, "when-to-use-debug-print"]], "When you should use a JEP": [[1197, "when-you-should-use-a-jep"]], "While": [[1182, "while"]], "Why Limit the Scope?": [[1189, "why-limit-the-scope"]], "Why are Jaxprs useful?": [[1204, "why-are-jaxprs-useful"]], "Why are gradients zero for functions based on sort order?": [[1122, "why-are-gradients-zero-for-functions-based-on-sort-order"]], "Why are jax and jaxlib separate packages?": [[1196, "why-are-jax-and-jaxlib-separate-packages"]], "Why are we doing this?": [[1184, "why-are-we-doing-this"]], "Why axis_resources and not a more direct mapping to hardware?": [[1214, "why-axis-resources-and-not-a-more-direct-mapping-to-hardware"]], "Why callbacks?": [[1208, "why-callbacks"], [1233, "why-callbacks"]], "Why can\u2019t we just JIT everything?": [[1131, "why-can-t-we-just-jit-everything"], [1238, "why-can-t-we-just-jit-everything"]], "Why create jax.Array?": [[1180, "why-create-jax-array"]], "Why do some CUDA libraries fail to load/initialize?": [[1122, "why-do-some-cuda-libraries-fail-to-load-initialize"]], "Why does JAX need checkify?": [[1114, "why-does-jax-need-checkify"]], "Why don\u2019t pmap or xmap already solve this?": [[1186, "why-don-t-pmap-or-xmap-already-solve-this"]], "Why pytrees?": [[1135, "why-pytrees"]], "Why type annotations?": [[1185, "why-type-annotations"]], "Why \u201cdebug\u201d print?": [[1117, "why-debug-print"]], "Working with Pytrees": [[1135, "working-with-pytrees"]], "Working with list / tuple / dict containers (and other pytrees)": [[1200, "working-with-list-tuple-dict-containers-and-other-pytrees"], [1227, "working-with-list-tuple-dict-containers-and-other-pytrees"]], "Working with pytrees": [[1247, "working-with-pytrees"]], "Write the log-joint function for the model": [[1213, "write-the-log-joint-function-for-the-model"]], "Writing TPU kernels with Pallas": [[1219, "writing-tpu-kernels-with-pallas"]], "Writing custom Jaxpr interpreters in JAX": [[1204, "writing-custom-jaxpr-interpreters-in-jax"]], "XLA Compilation rules": [[1202, "xla-compilation-rules"], [1236, "xla-compilation-rules"]], "XLA performance flags": [[1125, "xla-performance-flags"]], "XLA_call": [[1182, "xla-call"]], "XLA_pmap": [[1182, "xla-pmap"]], "Your first JAX training loop": [[1130, "your-first-jax-training-loop"]], "Your first interpreter: invert": [[1204, "your-first-interpreter-invert"]], "add": [[1216, "add"]], "all_gather": [[1211, "all-gather"]], "all_to_all": [[1211, "all-to-all"]], "checkify under JAX transformations.": [[1114, "checkify-under-jax-transformations"]], "cond": [[1199, "cond"]], "cond primitive (conditionals)": [[1237, "cond-primitive-conditionals"]], "core": [[1181, "module-jax.core"]], "custom_vjp and nondiff_argnums update guide": [[1192, "custom-vjp-and-nondiff-argnums-update-guide"]], "einsum": [[1214, "einsum"]], "fori_loop": [[1199, "fori-loop"]], "gpu_ops code listing": [[0, "gpu-ops-code-listing"]], "grad": [[1114, "grad"]], "grad-of-pallas_call": [[1216, "grad-of-pallas-call"]], "grid, a.k.a. kernels in a loop": [[1221, "grid-a-k-a-kernels-in-a-loop"]], "jax (0.1.77) (September 15 2020)": [[1110, "jax-0-1-77-september-15-2020"]], "jax (0.2.0) (September 23 2020)": [[1110, "jax-0-2-0-september-23-2020"]], "jax 0.1.58 (January 28, 2020)": [[1110, "jax-0-1-58-january-28-2020"]], "jax 0.1.59 (February 11, 2020)": [[1110, "jax-0-1-59-february-11-2020"]], "jax 0.1.60 (March 17, 2020)": [[1110, "jax-0-1-60-march-17-2020"]], "jax 0.1.61 (March 17, 2020)": [[1110, "jax-0-1-61-march-17-2020"]], "jax 0.1.62 (March 21, 2020)": [[1110, "jax-0-1-62-march-21-2020"]], "jax 0.1.63 (April 12, 2020)": [[1110, "jax-0-1-63-april-12-2020"]], "jax 0.1.64 (April 21, 2020)": [[1110, "jax-0-1-64-april-21-2020"]], "jax 0.1.65 (April 30, 2020)": [[1110, "jax-0-1-65-april-30-2020"]], "jax 0.1.66 (May 5, 2020)": [[1110, "jax-0-1-66-may-5-2020"]], "jax 0.1.67 (May 12, 2020)": [[1110, "jax-0-1-67-may-12-2020"]], "jax 0.1.68 (May 21, 2020)": [[1110, "jax-0-1-68-may-21-2020"]], "jax 0.1.69 (June 3, 2020)": [[1110, "jax-0-1-69-june-3-2020"]], "jax 0.1.70 (June 8, 2020)": [[1110, "jax-0-1-70-june-8-2020"]], "jax 0.1.71 (June 25, 2020)": [[1110, "jax-0-1-71-june-25-2020"]], "jax 0.1.72 (June 28, 2020)": [[1110, "jax-0-1-72-june-28-2020"]], "jax 0.1.73 (July 22, 2020)": [[1110, "jax-0-1-73-july-22-2020"]], "jax 0.1.74 (July 29, 2020)": [[1110, "jax-0-1-74-july-29-2020"]], "jax 0.1.75 (July 30, 2020)": [[1110, "jax-0-1-75-july-30-2020"]], "jax 0.1.76 (September 8, 2020)": [[1110, "jax-0-1-76-september-8-2020"]], "jax 0.2.1 (October 6 2020)": [[1110, "jax-0-2-1-october-6-2020"]], "jax 0.2.10 (March 5 2021)": [[1110, "jax-0-2-10-march-5-2021"]], "jax 0.2.11 (March 23 2021)": [[1110, "jax-0-2-11-march-23-2021"]], "jax 0.2.12 (April 1 2021)": [[1110, "jax-0-2-12-april-1-2021"]], "jax 0.2.13 (May 3 2021)": [[1110, "jax-0-2-13-may-3-2021"]], "jax 0.2.14 (June 10 2021)": [[1110, "jax-0-2-14-june-10-2021"]], "jax 0.2.15 (June 23 2021)": [[1110, "jax-0-2-15-june-23-2021"]], "jax 0.2.16 (June 23 2021)": [[1110, "jax-0-2-16-june-23-2021"]], "jax 0.2.17 (July 9 2021)": [[1110, "jax-0-2-17-july-9-2021"]], "jax 0.2.18 (July 21 2021)": [[1110, "jax-0-2-18-july-21-2021"]], "jax 0.2.19 (Aug 12, 2021)": [[1110, "jax-0-2-19-aug-12-2021"]], "jax 0.2.2 (October 13 2020)": [[1110, "jax-0-2-2-october-13-2020"]], "jax 0.2.20 (Sept 2, 2021)": [[1110, "jax-0-2-20-sept-2-2021"]], "jax 0.2.21 (Sept 23, 2021)": [[1110, "jax-0-2-21-sept-23-2021"]], "jax 0.2.22 (Oct 12, 2021)": [[1110, "jax-0-2-22-oct-12-2021"]], "jax 0.2.24 (Oct 19, 2021)": [[1110, "jax-0-2-24-oct-19-2021"]], "jax 0.2.25 (Nov 10, 2021)": [[1110, "jax-0-2-25-nov-10-2021"]], "jax 0.2.26 (Dec 8, 2021)": [[1110, "jax-0-2-26-dec-8-2021"]], "jax 0.2.27 (Jan 18 2022)": [[1110, "jax-0-2-27-jan-18-2022"]], "jax 0.2.28 (Feb 1, 2022)": [[1110, "jax-0-2-28-feb-1-2022"]], "jax 0.2.3 (October 14 2020)": [[1110, "jax-0-2-3-october-14-2020"]], "jax 0.2.4 (October 19 2020)": [[1110, "jax-0-2-4-october-19-2020"]], "jax 0.2.5 (October 27 2020)": [[1110, "jax-0-2-5-october-27-2020"]], "jax 0.2.6 (Nov 18 2020)": [[1110, "jax-0-2-6-nov-18-2020"]], "jax 0.2.7 (Dec 4 2020)": [[1110, "jax-0-2-7-dec-4-2020"]], "jax 0.2.8 (January 12 2021)": [[1110, "jax-0-2-8-january-12-2021"]], "jax 0.2.9 (January 26 2021)": [[1110, "jax-0-2-9-january-26-2021"]], "jax 0.3.0 (Feb 10, 2022)": [[1110, "jax-0-3-0-feb-10-2022"]], "jax 0.3.1 (Feb 18, 2022)": [[1110, "jax-0-3-1-feb-18-2022"]], "jax 0.3.10 (May 3, 2022)": [[1110, "jax-0-3-10-may-3-2022"]], "jax 0.3.11 (May 15, 2022)": [[1110, "jax-0-3-11-may-15-2022"]], "jax 0.3.12 (May 15, 2022)": [[1110, "jax-0-3-12-may-15-2022"]], "jax 0.3.13 (May 16, 2022)": [[1110, "jax-0-3-13-may-16-2022"]], "jax 0.3.14 (June 27, 2022)": [[1110, "jax-0-3-14-june-27-2022"]], "jax 0.3.15 (July 22, 2022)": [[1110, "jax-0-3-15-july-22-2022"]], "jax 0.3.16": [[1110, "jax-0-3-16"]], "jax 0.3.17 (Aug 31, 2022)": [[1110, "jax-0-3-17-aug-31-2022"]], "jax 0.3.18 (Sep 26, 2022)": [[1110, "jax-0-3-18-sep-26-2022"]], "jax 0.3.19 (Sep 27, 2022)": [[1110, "jax-0-3-19-sep-27-2022"]], "jax 0.3.2 (March 16, 2022)": [[1110, "jax-0-3-2-march-16-2022"]], "jax 0.3.20 (Sep 28, 2022)": [[1110, "jax-0-3-20-sep-28-2022"]], "jax 0.3.21 (Sep 30, 2022)": [[1110, "jax-0-3-21-sep-30-2022"]], "jax 0.3.22 (Oct 11, 2022)": [[1110, "jax-0-3-22-oct-11-2022"]], "jax 0.3.23 (Oct 12, 2022)": [[1110, "jax-0-3-23-oct-12-2022"]], "jax 0.3.24 (Nov 4, 2022)": [[1110, "jax-0-3-24-nov-4-2022"]], "jax 0.3.25 (Nov 15, 2022)": [[1110, "jax-0-3-25-nov-15-2022"]], "jax 0.3.3 (March 17, 2022)": [[1110, "jax-0-3-3-march-17-2022"]], "jax 0.3.4 (March 18, 2022)": [[1110, "jax-0-3-4-march-18-2022"]], "jax 0.3.5 (April 7, 2022)": [[1110, "jax-0-3-5-april-7-2022"]], "jax 0.3.6 (April 12, 2022)": [[1110, "jax-0-3-6-april-12-2022"]], "jax 0.3.7 (April 15, 2022)": [[1110, "jax-0-3-7-april-15-2022"]], "jax 0.3.8 (April 29 2022)": [[1110, "jax-0-3-8-april-29-2022"]], "jax 0.3.9 (May 2, 2022)": [[1110, "jax-0-3-9-may-2-2022"]], "jax 0.4.0 (Dec 12, 2022)": [[1110, "jax-0-4-0-dec-12-2022"]], "jax 0.4.1 (Dec 13, 2022)": [[1110, "jax-0-4-1-dec-13-2022"]], "jax 0.4.10 (May 11, 2023)": [[1110, "jax-0-4-10-may-11-2023"]], "jax 0.4.11 (May 31, 2023)": [[1110, "jax-0-4-11-may-31-2023"]], "jax 0.4.12 (June 8, 2023)": [[1110, "jax-0-4-12-june-8-2023"]], "jax 0.4.13 (June 22, 2023)": [[1110, "jax-0-4-13-june-22-2023"]], "jax 0.4.14 (July 27, 2023)": [[1110, "jax-0-4-14-july-27-2023"]], "jax 0.4.16 (Sept 18, 2023)": [[1110, "jax-0-4-16-sept-18-2023"]], "jax 0.4.17 (Oct 3, 2023)": [[1110, "jax-0-4-17-oct-3-2023"]], "jax 0.4.18 (Oct 6, 2023)": [[1110, "jax-0-4-18-oct-6-2023"]], "jax 0.4.19 (Oct 19, 2023)": [[1110, "jax-0-4-19-oct-19-2023"]], "jax 0.4.2 (Jan 24, 2023)": [[1110, "jax-0-4-2-jan-24-2023"]], "jax 0.4.20 (Nov 2, 2023)": [[1110, "jax-0-4-20-nov-2-2023"]], "jax 0.4.21 (Dec 4 2023)": [[1110, "jax-0-4-21-dec-4-2023"]], "jax 0.4.22 (Dec 13, 2023)": [[1110, "jax-0-4-22-dec-13-2023"]], "jax 0.4.23 (Dec 13, 2023)": [[1110, "jax-0-4-23-dec-13-2023"]], "jax 0.4.24 (Feb 6, 2024)": [[1110, "jax-0-4-24-feb-6-2024"]], "jax 0.4.25 (Feb 26, 2024)": [[1110, "jax-0-4-25-feb-26-2024"]], "jax 0.4.26 (April 3, 2024)": [[1110, "jax-0-4-26-april-3-2024"]], "jax 0.4.27": [[1110, "jax-0-4-27"]], "jax 0.4.3 (Feb 8, 2023)": [[1110, "jax-0-4-3-feb-8-2023"]], "jax 0.4.4 (Feb 16, 2023)": [[1110, "jax-0-4-4-feb-16-2023"]], "jax 0.4.5 (Mar 2, 2023)": [[1110, "jax-0-4-5-mar-2-2023"]], "jax 0.4.6 (Mar 9, 2023)": [[1110, "jax-0-4-6-mar-9-2023"]], "jax 0.4.7 (March 27, 2023)": [[1110, "jax-0-4-7-march-27-2023"]], "jax 0.4.8 (March 29, 2023)": [[1110, "jax-0-4-8-march-29-2023"]], "jax 0.4.9 (May 9, 2023)": [[1110, "jax-0-4-9-may-9-2023"]], "jax.Array": [[1, "jax-array"]], "jax.Array (jax.Array)": [[1129, "jax-array-jax-array"]], "jax.Array migration": [[1180, "jax-array-migration"]], "jax.Device": [[2, "jax-device"]], "jax.ShapeDtypeStruct": [[3, "jax-shapedtypestruct"]], "jax.block_until_ready": [[4, "jax-block-until-ready"]], "jax.check_tracer_leaks": [[5, "jax-check-tracer-leaks"]], "jax.checking_leaks": [[6, "jax-checking-leaks"]], "jax.checkpoint": [[7, "jax-checkpoint"]], "jax.checkpoint fundamentals": [[1234, "jax-checkpoint-fundamentals"]], "jax.clear_caches": [[8, "jax-clear-caches"]], "jax.closure_convert": [[9, "jax-closure-convert"]], "jax.config": [[10, "jax-config"]], "jax.core.ClosedJaxpr": [[11, "jax-core-closedjaxpr"], [1237, "jax-core-closedjaxpr"]], "jax.core.Jaxpr": [[12, "jax-core-jaxpr"]], "jax.custom_gradient": [[13, "jax-custom-gradient"]], "jax.custom_jvp": [[14, "jax-custom-jvp"]], "jax.custom_jvp with nondiff_argnums": [[1200, "jax-custom-jvp-with-nondiff-argnums"], [1227, "jax-custom-jvp-with-nondiff-argnums"]], "jax.custom_vjp": [[15, "jax-custom-vjp"]], "jax.custom_vjp with nondiff_argnums": [[1200, "jax-custom-vjp-with-nondiff-argnums"], [1227, "jax-custom-vjp-with-nondiff-argnums"]], "jax.debug module": [[1140, "module-jax.debug"]], "jax.debug.breakpoint": [[16, "jax-debug-breakpoint"]], "jax.debug.callback": [[17, "jax-debug-callback"]], "jax.debug.inspect_array_sharding": [[18, "jax-debug-inspect-array-sharding"]], "jax.debug.print": [[19, "jax-debug-print"]], "jax.debug.print and jax.debug.breakpoint": [[1117, "jax-debug-print-and-jax-debug-breakpoint"]], "jax.debug.visualize_array_sharding": [[20, "jax-debug-visualize-array-sharding"]], "jax.debug.visualize_sharding": [[21, "jax-debug-visualize-sharding"]], "jax.debug_infs": [[22, "jax-debug-infs"]], "jax.debug_nans": [[23, "jax-debug-nans"]], "jax.default_backend": [[24, "jax-default-backend"]], "jax.default_device": [[25, "jax-default-device"]], "jax.default_matmul_precision": [[26, "jax-default-matmul-precision"]], "jax.default_prng_impl": [[27, "jax-default-prng-impl"]], "jax.device_count": [[28, "jax-device-count"]], "jax.device_get": [[29, "jax-device-get"]], "jax.device_put": [[30, "jax-device-put"]], "jax.device_put_replicated": [[31, "jax-device-put-replicated"]], "jax.device_put_sharded": [[32, "jax-device-put-sharded"]], "jax.devices": [[33, "jax-devices"]], "jax.disable_jit": [[34, "jax-disable-jit"]], "jax.distributed module": [[1141, "module-jax.distributed"]], "jax.distributed.initialize": [[35, "jax-distributed-initialize"]], "jax.distributed.shutdown": [[36, "jax-distributed-shutdown"]], "jax.dlpack module": [[1142, "module-jax.dlpack"]], "jax.dlpack.from_dlpack": [[37, "jax-dlpack-from-dlpack"]], "jax.dlpack.to_dlpack": [[38, "jax-dlpack-to-dlpack"]], "jax.dtypes module": [[1143, "module-jax.dtypes"]], "jax.dtypes.bfloat16": [[39, "jax-dtypes-bfloat16"]], "jax.dtypes.canonicalize_dtype": [[40, "jax-dtypes-canonicalize-dtype"]], "jax.dtypes.float0": [[41, "jax-dtypes-float0"]], "jax.dtypes.issubdtype": [[42, "jax-dtypes-issubdtype"]], "jax.dtypes.prng_key": [[43, "jax-dtypes-prng-key"]], "jax.dtypes.result_type": [[44, "jax-dtypes-result-type"]], "jax.dtypes.scalar_type_of": [[45, "jax-dtypes-scalar-type-of"]], "jax.enable_checks": [[46, "jax-enable-checks"]], "jax.enable_custom_prng": [[47, "jax-enable-custom-prng"]], "jax.enable_custom_vjp_by_custom_transpose": [[48, "jax-enable-custom-vjp-by-custom-transpose"]], "jax.ensure_compile_time_eval": [[49, "jax-ensure-compile-time-eval"]], "jax.eval_shape": [[50, "jax-eval-shape"]], "jax.example_libraries module": [[1144, "jax-example-libraries-module"]], "jax.example_libraries.optimizers module": [[1145, "module-jax.example_libraries.optimizers"]], "jax.example_libraries.stax module": [[1146, "module-jax.example_libraries.stax"]], "jax.experimental module": [[1147, "jax-experimental-module"]], "jax.experimental.array_api module": [[1148, "module-jax.experimental.array_api"]], "jax.experimental.checkify module": [[1149, "module-jax.experimental.checkify"]], "jax.experimental.checkify.Error": [[51, "jax-experimental-checkify-error"]], "jax.experimental.checkify.JaxRuntimeError": [[52, "jax-experimental-checkify-jaxruntimeerror"]], "jax.experimental.checkify.all_checks": [[53, "jax-experimental-checkify-all-checks"]], "jax.experimental.checkify.automatic_checks": [[54, "jax-experimental-checkify-automatic-checks"]], "jax.experimental.checkify.check": [[55, "jax-experimental-checkify-check"]], "jax.experimental.checkify.check_error": [[56, "jax-experimental-checkify-check-error"]], "jax.experimental.checkify.checkify": [[57, "jax-experimental-checkify-checkify"]], "jax.experimental.checkify.div_checks": [[58, "jax-experimental-checkify-div-checks"]], "jax.experimental.checkify.float_checks": [[59, "jax-experimental-checkify-float-checks"]], "jax.experimental.checkify.index_checks": [[60, "jax-experimental-checkify-index-checks"]], "jax.experimental.checkify.nan_checks": [[61, "jax-experimental-checkify-nan-checks"]], "jax.experimental.checkify.user_checks": [[62, "jax-experimental-checkify-user-checks"]], "jax.experimental.compilation_cache module": [[1150, "jax-experimental-compilation-cache-module"]], "jax.experimental.custom_partitioning module": [[1151, "module-jax.experimental.custom_partitioning"]], "jax.experimental.disable_x64": [[63, "jax-experimental-disable-x64"]], "jax.experimental.enable_x64": [[64, "jax-experimental-enable-x64"]], "jax.experimental.host_callback module": [[1152, "module-jax.experimental.host_callback"]], "jax.experimental.host_callback.CallbackException": [[65, "jax-experimental-host-callback-callbackexception"]], "jax.experimental.host_callback.barrier_wait": [[66, "jax-experimental-host-callback-barrier-wait"]], "jax.experimental.host_callback.call": [[67, "jax-experimental-host-callback-call"]], "jax.experimental.host_callback.id_print": [[68, "jax-experimental-host-callback-id-print"]], "jax.experimental.host_callback.id_tap": [[69, "jax-experimental-host-callback-id-tap"]], "jax.experimental.io_callback": [[70, "jax-experimental-io-callback"]], "jax.experimental.jet module": [[1153, "module-jax.experimental.jet"]], "jax.experimental.key_reuse module": [[1154, "module-jax.experimental.key_reuse"]], "jax.experimental.maps module": [[1155, "module-jax.experimental.maps"]], "jax.experimental.maps.xmap": [[71, "jax-experimental-maps-xmap"]], "jax.experimental.mesh_utils module": [[1156, "module-jax.experimental.mesh_utils"]], "jax.experimental.mesh_utils.create_device_mesh": [[72, "jax-experimental-mesh-utils-create-device-mesh"]], "jax.experimental.mesh_utils.create_hybrid_device_mesh": [[73, "jax-experimental-mesh-utils-create-hybrid-device-mesh"]], "jax.experimental.multihost_utils module": [[1157, "module-jax.experimental.multihost_utils"]], "jax.experimental.multihost_utils.assert_equal": [[74, "jax-experimental-multihost-utils-assert-equal"]], "jax.experimental.multihost_utils.broadcast_one_to_all": [[75, "jax-experimental-multihost-utils-broadcast-one-to-all"]], "jax.experimental.multihost_utils.global_array_to_host_local_array": [[76, "jax-experimental-multihost-utils-global-array-to-host-local-array"]], "jax.experimental.multihost_utils.host_local_array_to_global_array": [[77, "jax-experimental-multihost-utils-host-local-array-to-global-array"]], "jax.experimental.multihost_utils.process_allgather": [[78, "jax-experimental-multihost-utils-process-allgather"]], "jax.experimental.multihost_utils.sync_global_devices": [[79, "jax-experimental-multihost-utils-sync-global-devices"]], "jax.experimental.pjit module": [[1158, "module-jax.experimental.pjit"]], "jax.experimental.sparse module": [[1159, "module-jax.experimental.sparse"]], "jax.experimental.sparse.BCOO": [[80, "jax-experimental-sparse-bcoo"]], "jax.experimental.sparse.BCSR": [[81, "jax-experimental-sparse-bcsr"]], "jax.experimental.sparse.COO": [[82, "jax-experimental-sparse-coo"]], "jax.experimental.sparse.CSC": [[83, "jax-experimental-sparse-csc"]], "jax.experimental.sparse.CSR": [[84, "jax-experimental-sparse-csr"]], "jax.experimental.sparse.JAXSparse": [[85, "jax-experimental-sparse-jaxsparse"]], "jax.experimental.sparse.bcoo_broadcast_in_dim": [[86, "jax-experimental-sparse-bcoo-broadcast-in-dim"]], "jax.experimental.sparse.bcoo_concatenate": [[87, "jax-experimental-sparse-bcoo-concatenate"]], "jax.experimental.sparse.bcoo_dot_general": [[88, "jax-experimental-sparse-bcoo-dot-general"]], "jax.experimental.sparse.bcoo_dot_general_sampled": [[89, "jax-experimental-sparse-bcoo-dot-general-sampled"]], "jax.experimental.sparse.bcoo_dynamic_slice": [[90, "jax-experimental-sparse-bcoo-dynamic-slice"]], "jax.experimental.sparse.bcoo_extract": [[91, "jax-experimental-sparse-bcoo-extract"]], "jax.experimental.sparse.bcoo_fromdense": [[92, "jax-experimental-sparse-bcoo-fromdense"]], "jax.experimental.sparse.bcoo_gather": [[93, "jax-experimental-sparse-bcoo-gather"]], "jax.experimental.sparse.bcoo_multiply_dense": [[94, "jax-experimental-sparse-bcoo-multiply-dense"]], "jax.experimental.sparse.bcoo_multiply_sparse": [[95, "jax-experimental-sparse-bcoo-multiply-sparse"]], "jax.experimental.sparse.bcoo_reduce_sum": [[96, "jax-experimental-sparse-bcoo-reduce-sum"]], "jax.experimental.sparse.bcoo_reshape": [[97, "jax-experimental-sparse-bcoo-reshape"]], "jax.experimental.sparse.bcoo_slice": [[98, "jax-experimental-sparse-bcoo-slice"]], "jax.experimental.sparse.bcoo_sort_indices": [[99, "jax-experimental-sparse-bcoo-sort-indices"]], "jax.experimental.sparse.bcoo_squeeze": [[100, "jax-experimental-sparse-bcoo-squeeze"]], "jax.experimental.sparse.bcoo_sum_duplicates": [[101, "jax-experimental-sparse-bcoo-sum-duplicates"]], "jax.experimental.sparse.bcoo_todense": [[102, "jax-experimental-sparse-bcoo-todense"]], "jax.experimental.sparse.bcoo_transpose": [[103, "jax-experimental-sparse-bcoo-transpose"]], "jax.experimental.sparse.bcoo_update_layout": [[104, "jax-experimental-sparse-bcoo-update-layout"]], "jax.experimental.sparse.bcsr_dot_general": [[105, "jax-experimental-sparse-bcsr-dot-general"]], "jax.experimental.sparse.bcsr_extract": [[106, "jax-experimental-sparse-bcsr-extract"]], "jax.experimental.sparse.bcsr_fromdense": [[107, "jax-experimental-sparse-bcsr-fromdense"]], "jax.experimental.sparse.bcsr_todense": [[108, "jax-experimental-sparse-bcsr-todense"]], "jax.experimental.sparse.coo_fromdense": [[109, "jax-experimental-sparse-coo-fromdense"]], "jax.experimental.sparse.coo_matmat": [[110, "jax-experimental-sparse-coo-matmat"]], "jax.experimental.sparse.coo_matvec": [[111, "jax-experimental-sparse-coo-matvec"]], "jax.experimental.sparse.coo_todense": [[112, "jax-experimental-sparse-coo-todense"]], "jax.experimental.sparse.csr_fromdense": [[113, "jax-experimental-sparse-csr-fromdense"]], "jax.experimental.sparse.csr_matmat": [[114, "jax-experimental-sparse-csr-matmat"]], "jax.experimental.sparse.csr_matvec": [[115, "jax-experimental-sparse-csr-matvec"]], "jax.experimental.sparse.csr_todense": [[116, "jax-experimental-sparse-csr-todense"]], "jax.experimental.sparse.empty": [[117, "jax-experimental-sparse-empty"]], "jax.experimental.sparse.eye": [[118, "jax-experimental-sparse-eye"]], "jax.experimental.sparse.grad": [[119, "jax-experimental-sparse-grad"]], "jax.experimental.sparse.linalg": [[1159, "module-jax.experimental.sparse.linalg"]], "jax.experimental.sparse.linalg.lobpcg_standard": [[120, "jax-experimental-sparse-linalg-lobpcg-standard"]], "jax.experimental.sparse.linalg.spsolve": [[121, "jax-experimental-sparse-linalg-spsolve"]], "jax.experimental.sparse.random_bcoo": [[122, "jax-experimental-sparse-random-bcoo"]], "jax.experimental.sparse.sparsify": [[123, "jax-experimental-sparse-sparsify"]], "jax.experimental.sparse.todense": [[124, "jax-experimental-sparse-todense"]], "jax.experimental.sparse.value_and_grad": [[125, "jax-experimental-sparse-value-and-grad"]], "jax.extend module": [[1160, "module-jax.extend"]], "jax.extend.core": [[1187, "jax-extend-core"]], "jax.extend.interpreters": [[1187, "jax-extend-interpreters"]], "jax.extend.linear_util module": [[1161, "module-jax.extend.linear_util"]], "jax.extend.linear_util.StoreException": [[126, "jax-extend-linear-util-storeexception"]], "jax.extend.linear_util.WrappedFun": [[127, "jax-extend-linear-util-wrappedfun"]], "jax.extend.linear_util.cache": [[128, "jax-extend-linear-util-cache"]], "jax.extend.linear_util.merge_linear_aux": [[129, "jax-extend-linear-util-merge-linear-aux"]], "jax.extend.linear_util.transformation": [[130, "jax-extend-linear-util-transformation"]], "jax.extend.linear_util.transformation_with_aux": [[131, "jax-extend-linear-util-transformation-with-aux"]], "jax.extend.linear_util.wrap_init": [[132, "jax-extend-linear-util-wrap-init"]], "jax.extend.mlir module": [[1162, "module-jax.extend.mlir"]], "jax.extend.mlir.dialects": [[133, "module-jax.extend.mlir.dialects"]], "jax.extend.mlir.ir": [[134, "module-jax.extend.mlir.ir"]], "jax.extend.mlir.passmanager": [[135, "module-jax.extend.mlir.passmanager"]], "jax.extend.random": [[1187, "jax-extend-random"]], "jax.extend.random module": [[1163, "module-jax.extend.random"]], "jax.extend.random.define_prng_impl": [[136, "jax-extend-random-define-prng-impl"]], "jax.extend.random.rbg_prng_impl": [[137, "jax-extend-random-rbg-prng-impl"]], "jax.extend.random.seed_with_impl": [[138, "jax-extend-random-seed-with-impl"]], "jax.extend.random.threefry2x32_p": [[139, "jax-extend-random-threefry2x32-p"]], "jax.extend.random.threefry_2x32": [[140, "jax-extend-random-threefry-2x32"]], "jax.extend.random.threefry_prng_impl": [[141, "jax-extend-random-threefry-prng-impl"]], "jax.extend.random.unsafe_rbg_prng_impl": [[142, "jax-extend-random-unsafe-rbg-prng-impl"]], "jax.extend.sharding": [[1187, "jax-extend-sharding"]], "jax.extend: a module for extensions": [[1187, "jax-extend-a-module-for-extensions"]], "jax.flatten_util module": [[1164, "module-jax.flatten_util"]], "jax.flatten_util.ravel_pytree": [[143, "jax-flatten-util-ravel-pytree"]], "jax.grad": [[144, "jax-grad"]], "jax.hessian": [[145, "jax-hessian"]], "jax.image module": [[1165, "module-jax.image"]], "jax.image.resize": [[146, "jax-image-resize"]], "jax.image.scale_and_translate": [[147, "jax-image-scale-and-translate"]], "jax.jacfwd": [[148, "jax-jacfwd"]], "jax.jacrev": [[149, "jax-jacrev"]], "jax.jit": [[150, "jax-jit"]], "jax.jvp": [[151, "jax-jvp"]], "jax.lax module": [[1166, "module-jax.lax"]], "jax.lax.abs": [[152, "jax-lax-abs"]], "jax.lax.acos": [[153, "jax-lax-acos"]], "jax.lax.acosh": [[154, "jax-lax-acosh"]], "jax.lax.add": [[155, "jax-lax-add"]], "jax.lax.after_all": [[156, "jax-lax-after-all"]], "jax.lax.all_gather": [[157, "jax-lax-all-gather"]], "jax.lax.all_to_all": [[158, "jax-lax-all-to-all"]], "jax.lax.approx_max_k": [[159, "jax-lax-approx-max-k"]], "jax.lax.approx_min_k": [[160, "jax-lax-approx-min-k"]], "jax.lax.argmax": [[161, "jax-lax-argmax"]], "jax.lax.argmin": [[162, "jax-lax-argmin"]], "jax.lax.asin": [[163, "jax-lax-asin"]], "jax.lax.asinh": [[164, "jax-lax-asinh"]], "jax.lax.associative_scan": [[165, "jax-lax-associative-scan"]], "jax.lax.atan": [[166, "jax-lax-atan"]], "jax.lax.atan2": [[167, "jax-lax-atan2"]], "jax.lax.atanh": [[168, "jax-lax-atanh"]], "jax.lax.axis_index": [[169, "jax-lax-axis-index"]], "jax.lax.batch_matmul": [[170, "jax-lax-batch-matmul"]], "jax.lax.bessel_i0e": [[171, "jax-lax-bessel-i0e"]], "jax.lax.bessel_i1e": [[172, "jax-lax-bessel-i1e"]], "jax.lax.betainc": [[173, "jax-lax-betainc"]], "jax.lax.bitcast_convert_type": [[174, "jax-lax-bitcast-convert-type"]], "jax.lax.bitwise_and": [[175, "jax-lax-bitwise-and"]], "jax.lax.bitwise_not": [[176, "jax-lax-bitwise-not"]], "jax.lax.bitwise_or": [[177, "jax-lax-bitwise-or"]], "jax.lax.bitwise_xor": [[178, "jax-lax-bitwise-xor"]], "jax.lax.broadcast": [[179, "jax-lax-broadcast"]], "jax.lax.broadcast_in_dim": [[180, "jax-lax-broadcast-in-dim"]], "jax.lax.broadcast_shapes": [[181, "jax-lax-broadcast-shapes"]], "jax.lax.broadcast_to_rank": [[182, "jax-lax-broadcast-to-rank"]], "jax.lax.broadcasted_iota": [[183, "jax-lax-broadcasted-iota"]], "jax.lax.cbrt": [[184, "jax-lax-cbrt"]], "jax.lax.ceil": [[185, "jax-lax-ceil"]], "jax.lax.clamp": [[186, "jax-lax-clamp"]], "jax.lax.clz": [[187, "jax-lax-clz"]], "jax.lax.collapse": [[188, "jax-lax-collapse"]], "jax.lax.complex": [[189, "jax-lax-complex"]], "jax.lax.concatenate": [[190, "jax-lax-concatenate"]], "jax.lax.cond": [[191, "jax-lax-cond"]], "jax.lax.conj": [[192, "jax-lax-conj"]], "jax.lax.conv": [[193, "jax-lax-conv"]], "jax.lax.conv_dimension_numbers": [[194, "jax-lax-conv-dimension-numbers"]], "jax.lax.conv_general_dilated": [[195, "jax-lax-conv-general-dilated"]], "jax.lax.conv_general_dilated_local": [[196, "jax-lax-conv-general-dilated-local"]], "jax.lax.conv_general_dilated_patches": [[197, "jax-lax-conv-general-dilated-patches"]], "jax.lax.conv_transpose": [[198, "jax-lax-conv-transpose"]], "jax.lax.conv_with_general_padding": [[199, "jax-lax-conv-with-general-padding"]], "jax.lax.convert_element_type": [[200, "jax-lax-convert-element-type"]], "jax.lax.cos": [[201, "jax-lax-cos"]], "jax.lax.cosh": [[202, "jax-lax-cosh"]], "jax.lax.cumlogsumexp": [[203, "jax-lax-cumlogsumexp"]], "jax.lax.cummax": [[204, "jax-lax-cummax"]], "jax.lax.cummin": [[205, "jax-lax-cummin"]], "jax.lax.cumprod": [[206, "jax-lax-cumprod"]], "jax.lax.cumsum": [[207, "jax-lax-cumsum"]], "jax.lax.custom_linear_solve": [[208, "jax-lax-custom-linear-solve"]], "jax.lax.custom_root": [[209, "jax-lax-custom-root"]], "jax.lax.digamma": [[210, "jax-lax-digamma"]], "jax.lax.div": [[211, "jax-lax-div"]], "jax.lax.dot": [[212, "jax-lax-dot"]], "jax.lax.dot_general": [[213, "jax-lax-dot-general"]], "jax.lax.dynamic_index_in_dim": [[214, "jax-lax-dynamic-index-in-dim"]], "jax.lax.dynamic_slice": [[215, "jax-lax-dynamic-slice"]], "jax.lax.dynamic_slice_in_dim": [[216, "jax-lax-dynamic-slice-in-dim"]], "jax.lax.dynamic_update_index_in_dim": [[217, "jax-lax-dynamic-update-index-in-dim"]], "jax.lax.dynamic_update_slice": [[218, "jax-lax-dynamic-update-slice"]], "jax.lax.dynamic_update_slice_in_dim": [[219, "jax-lax-dynamic-update-slice-in-dim"]], "jax.lax.eq": [[220, "jax-lax-eq"]], "jax.lax.erf": [[221, "jax-lax-erf"]], "jax.lax.erf_inv": [[222, "jax-lax-erf-inv"]], "jax.lax.erfc": [[223, "jax-lax-erfc"]], "jax.lax.exp": [[224, "jax-lax-exp"]], "jax.lax.expand_dims": [[225, "jax-lax-expand-dims"]], "jax.lax.expm1": [[226, "jax-lax-expm1"]], "jax.lax.fft": [[227, "jax-lax-fft"]], "jax.lax.floor": [[228, "jax-lax-floor"]], "jax.lax.fori_loop": [[229, "jax-lax-fori-loop"]], "jax.lax.full": [[230, "jax-lax-full"]], "jax.lax.full_like": [[231, "jax-lax-full-like"]], "jax.lax.gather": [[232, "jax-lax-gather"]], "jax.lax.ge": [[233, "jax-lax-ge"]], "jax.lax.gt": [[234, "jax-lax-gt"]], "jax.lax.igamma": [[235, "jax-lax-igamma"]], "jax.lax.igammac": [[236, "jax-lax-igammac"]], "jax.lax.imag": [[237, "jax-lax-imag"]], "jax.lax.index_in_dim": [[238, "jax-lax-index-in-dim"]], "jax.lax.index_take": [[239, "jax-lax-index-take"]], "jax.lax.integer_pow": [[240, "jax-lax-integer-pow"]], "jax.lax.iota": [[241, "jax-lax-iota"]], "jax.lax.is_finite": [[242, "jax-lax-is-finite"]], "jax.lax.le": [[243, "jax-lax-le"]], "jax.lax.lgamma": [[244, "jax-lax-lgamma"]], "jax.lax.linalg.cholesky": [[245, "jax-lax-linalg-cholesky"]], "jax.lax.linalg.eig": [[246, "jax-lax-linalg-eig"]], "jax.lax.linalg.eigh": [[247, "jax-lax-linalg-eigh"]], "jax.lax.linalg.hessenberg": [[248, "jax-lax-linalg-hessenberg"]], "jax.lax.linalg.householder_product": [[249, "jax-lax-linalg-householder-product"]], "jax.lax.linalg.lu": [[250, "jax-lax-linalg-lu"]], "jax.lax.linalg.qdwh": [[251, "jax-lax-linalg-qdwh"]], "jax.lax.linalg.qr": [[252, "jax-lax-linalg-qr"]], "jax.lax.linalg.schur": [[253, "jax-lax-linalg-schur"]], "jax.lax.linalg.svd": [[254, "jax-lax-linalg-svd"]], "jax.lax.linalg.triangular_solve": [[255, "jax-lax-linalg-triangular-solve"]], "jax.lax.linalg.tridiagonal": [[256, "jax-lax-linalg-tridiagonal"]], "jax.lax.linalg.tridiagonal_solve": [[257, "jax-lax-linalg-tridiagonal-solve"]], "jax.lax.log": [[258, "jax-lax-log"]], "jax.lax.log1p": [[259, "jax-lax-log1p"]], "jax.lax.logistic": [[260, "jax-lax-logistic"]], "jax.lax.lt": [[261, "jax-lax-lt"]], "jax.lax.map": [[262, "jax-lax-map"]], "jax.lax.max": [[263, "jax-lax-max"]], "jax.lax.min": [[264, "jax-lax-min"]], "jax.lax.mul": [[265, "jax-lax-mul"]], "jax.lax.ne": [[266, "jax-lax-ne"]], "jax.lax.neg": [[267, "jax-lax-neg"]], "jax.lax.nextafter": [[268, "jax-lax-nextafter"]], "jax.lax.pad": [[269, "jax-lax-pad"]], "jax.lax.pdot": [[270, "jax-lax-pdot"]], "jax.lax.pmax": [[271, "jax-lax-pmax"]], "jax.lax.pmean": [[272, "jax-lax-pmean"]], "jax.lax.pmin": [[273, "jax-lax-pmin"]], "jax.lax.polygamma": [[274, "jax-lax-polygamma"]], "jax.lax.population_count": [[275, "jax-lax-population-count"]], "jax.lax.pow": [[276, "jax-lax-pow"]], "jax.lax.ppermute": [[277, "jax-lax-ppermute"]], "jax.lax.pshuffle": [[278, "jax-lax-pshuffle"]], "jax.lax.psum": [[279, "jax-lax-psum"]], "jax.lax.psum_scatter": [[280, "jax-lax-psum-scatter"]], "jax.lax.pswapaxes": [[281, "jax-lax-pswapaxes"]], "jax.lax.random_gamma_grad": [[282, "jax-lax-random-gamma-grad"]], "jax.lax.real": [[283, "jax-lax-real"]], "jax.lax.reciprocal": [[284, "jax-lax-reciprocal"]], "jax.lax.reduce": [[285, "jax-lax-reduce"]], "jax.lax.reduce_precision": [[286, "jax-lax-reduce-precision"]], "jax.lax.reduce_window": [[287, "jax-lax-reduce-window"]], "jax.lax.rem": [[288, "jax-lax-rem"]], "jax.lax.reshape": [[289, "jax-lax-reshape"]], "jax.lax.rev": [[290, "jax-lax-rev"]], "jax.lax.rng_bit_generator": [[291, "jax-lax-rng-bit-generator"]], "jax.lax.rng_uniform": [[292, "jax-lax-rng-uniform"]], "jax.lax.round": [[293, "jax-lax-round"]], "jax.lax.rsqrt": [[294, "jax-lax-rsqrt"]], "jax.lax.scan": [[295, "jax-lax-scan"]], "jax.lax.scatter": [[296, "jax-lax-scatter"]], "jax.lax.scatter_add": [[297, "jax-lax-scatter-add"]], "jax.lax.scatter_apply": [[298, "jax-lax-scatter-apply"]], "jax.lax.scatter_max": [[299, "jax-lax-scatter-max"]], "jax.lax.scatter_min": [[300, "jax-lax-scatter-min"]], "jax.lax.scatter_mul": [[301, "jax-lax-scatter-mul"]], "jax.lax.select": [[302, "jax-lax-select"]], "jax.lax.select_n": [[303, "jax-lax-select-n"]], "jax.lax.shift_left": [[304, "jax-lax-shift-left"]], "jax.lax.shift_right_arithmetic": [[305, "jax-lax-shift-right-arithmetic"]], "jax.lax.shift_right_logical": [[306, "jax-lax-shift-right-logical"]], "jax.lax.sign": [[307, "jax-lax-sign"]], "jax.lax.sin": [[308, "jax-lax-sin"]], "jax.lax.sinh": [[309, "jax-lax-sinh"]], "jax.lax.slice": [[310, "jax-lax-slice"]], "jax.lax.slice_in_dim": [[311, "jax-lax-slice-in-dim"]], "jax.lax.sort": [[312, "jax-lax-sort"]], "jax.lax.sort_key_val": [[313, "jax-lax-sort-key-val"]], "jax.lax.sqrt": [[314, "jax-lax-sqrt"]], "jax.lax.square": [[315, "jax-lax-square"]], "jax.lax.squeeze": [[316, "jax-lax-squeeze"]], "jax.lax.stop_gradient": [[317, "jax-lax-stop-gradient"]], "jax.lax.sub": [[318, "jax-lax-sub"]], "jax.lax.switch": [[319, "jax-lax-switch"]], "jax.lax.tan": [[320, "jax-lax-tan"]], "jax.lax.tanh": [[321, "jax-lax-tanh"]], "jax.lax.tie_in": [[322, "jax-lax-tie-in"]], "jax.lax.top_k": [[323, "jax-lax-top-k"]], "jax.lax.transpose": [[324, "jax-lax-transpose"]], "jax.lax.while_loop": [[325, "jax-lax-while-loop"]], "jax.lax.with_sharding_constraint": [[326, "jax-lax-with-sharding-constraint"]], "jax.lax.zeros_like_array": [[327, "jax-lax-zeros-like-array"]], "jax.lax.zeta": [[328, "jax-lax-zeta"]], "jax.lib module": [[1167, "jax-lib-module"]], "jax.lib.xla_bridge": [[1167, "jax-lib-xla-bridge"]], "jax.lib.xla_bridge.default_backend": [[329, "jax-lib-xla-bridge-default-backend"]], "jax.lib.xla_bridge.get_backend": [[330, "jax-lib-xla-bridge-get-backend"]], "jax.lib.xla_bridge.get_compile_options": [[331, "jax-lib-xla-bridge-get-compile-options"]], "jax.lib.xla_client": [[1167, "jax-lib-xla-client"]], "jax.linear_transpose": [[332, "jax-linear-transpose"]], "jax.linearize": [[333, "jax-linearize"]], "jax.live_arrays": [[334, "jax-live-arrays"]], "jax.local_device_count": [[335, "jax-local-device-count"]], "jax.local_devices": [[336, "jax-local-devices"]], "jax.log_compiles": [[337, "jax-log-compiles"]], "jax.make_array_from_callback": [[338, "jax-make-array-from-callback"]], "jax.make_array_from_single_device_arrays": [[339, "jax-make-array-from-single-device-arrays"]], "jax.make_jaxpr": [[340, "jax-make-jaxpr"]], "jax.named_call": [[341, "jax-named-call"]], "jax.named_scope": [[342, "jax-named-scope"]], "jax.nn module": [[1168, "jax-nn-module"]], "jax.nn.celu": [[343, "jax-nn-celu"]], "jax.nn.elu": [[344, "jax-nn-elu"]], "jax.nn.gelu": [[345, "jax-nn-gelu"]], "jax.nn.glu": [[346, "jax-nn-glu"]], "jax.nn.hard_sigmoid": [[347, "jax-nn-hard-sigmoid"]], "jax.nn.hard_silu": [[348, "jax-nn-hard-silu"]], "jax.nn.hard_swish": [[349, "jax-nn-hard-swish"]], "jax.nn.hard_tanh": [[350, "jax-nn-hard-tanh"]], "jax.nn.initializers module": [[1169, "module-jax.nn.initializers"]], "jax.nn.initializers.constant": [[351, "jax-nn-initializers-constant"]], "jax.nn.initializers.delta_orthogonal": [[352, "jax-nn-initializers-delta-orthogonal"]], "jax.nn.initializers.glorot_normal": [[353, "jax-nn-initializers-glorot-normal"]], "jax.nn.initializers.glorot_uniform": [[354, "jax-nn-initializers-glorot-uniform"]], "jax.nn.initializers.he_normal": [[355, "jax-nn-initializers-he-normal"]], "jax.nn.initializers.he_uniform": [[356, "jax-nn-initializers-he-uniform"]], "jax.nn.initializers.lecun_normal": [[357, "jax-nn-initializers-lecun-normal"]], "jax.nn.initializers.lecun_uniform": [[358, "jax-nn-initializers-lecun-uniform"]], "jax.nn.initializers.normal": [[359, "jax-nn-initializers-normal"]], "jax.nn.initializers.ones": [[360, "jax-nn-initializers-ones"]], "jax.nn.initializers.orthogonal": [[361, "jax-nn-initializers-orthogonal"]], "jax.nn.initializers.truncated_normal": [[362, "jax-nn-initializers-truncated-normal"]], "jax.nn.initializers.uniform": [[363, "jax-nn-initializers-uniform"]], "jax.nn.initializers.variance_scaling": [[364, "jax-nn-initializers-variance-scaling"]], "jax.nn.initializers.zeros": [[365, "jax-nn-initializers-zeros"]], "jax.nn.leaky_relu": [[366, "jax-nn-leaky-relu"]], "jax.nn.log_sigmoid": [[367, "jax-nn-log-sigmoid"]], "jax.nn.log_softmax": [[368, "jax-nn-log-softmax"]], "jax.nn.logsumexp": [[369, "jax-nn-logsumexp"]], "jax.nn.mish": [[370, "jax-nn-mish"]], "jax.nn.one_hot": [[371, "jax-nn-one-hot"]], "jax.nn.relu": [[372, "jax-nn-relu"]], "jax.nn.relu6": [[373, "jax-nn-relu6"]], "jax.nn.selu": [[374, "jax-nn-selu"]], "jax.nn.sigmoid": [[375, "jax-nn-sigmoid"]], "jax.nn.silu": [[376, "jax-nn-silu"]], "jax.nn.soft_sign": [[377, "jax-nn-soft-sign"]], "jax.nn.softmax": [[378, "jax-nn-softmax"]], "jax.nn.softplus": [[379, "jax-nn-softplus"]], "jax.nn.sparse_plus": [[380, "jax-nn-sparse-plus"]], "jax.nn.squareplus": [[381, "jax-nn-squareplus"]], "jax.nn.standardize": [[382, "jax-nn-standardize"]], "jax.nn.swish": [[383, "jax-nn-swish"]], "jax.numpy module": [[1170, "module-jax.numpy"]], "jax.numpy.ComplexWarning": [[384, "jax-numpy-complexwarning"]], "jax.numpy.abs": [[385, "jax-numpy-abs"]], "jax.numpy.absolute": [[386, "jax-numpy-absolute"]], "jax.numpy.acos": [[387, "jax-numpy-acos"]], "jax.numpy.acosh": [[388, "jax-numpy-acosh"]], "jax.numpy.add": [[389, "jax-numpy-add"]], "jax.numpy.all": [[390, "jax-numpy-all"]], "jax.numpy.allclose": [[391, "jax-numpy-allclose"]], "jax.numpy.amax": [[392, "jax-numpy-amax"]], "jax.numpy.amin": [[393, "jax-numpy-amin"]], "jax.numpy.angle": [[394, "jax-numpy-angle"]], "jax.numpy.any": [[395, "jax-numpy-any"]], "jax.numpy.append": [[396, "jax-numpy-append"]], "jax.numpy.apply_along_axis": [[397, "jax-numpy-apply-along-axis"]], "jax.numpy.apply_over_axes": [[398, "jax-numpy-apply-over-axes"]], "jax.numpy.arange": [[399, "jax-numpy-arange"]], "jax.numpy.arccos": [[400, "jax-numpy-arccos"]], "jax.numpy.arccosh": [[401, "jax-numpy-arccosh"]], "jax.numpy.arcsin": [[402, "jax-numpy-arcsin"]], "jax.numpy.arcsinh": [[403, "jax-numpy-arcsinh"]], "jax.numpy.arctan": [[404, "jax-numpy-arctan"]], "jax.numpy.arctan2": [[405, "jax-numpy-arctan2"]], "jax.numpy.arctanh": [[406, "jax-numpy-arctanh"]], "jax.numpy.argmax": [[407, "jax-numpy-argmax"]], "jax.numpy.argmin": [[408, "jax-numpy-argmin"]], "jax.numpy.argpartition": [[409, "jax-numpy-argpartition"]], "jax.numpy.argsort": [[410, "jax-numpy-argsort"]], "jax.numpy.argwhere": [[411, "jax-numpy-argwhere"]], "jax.numpy.around": [[412, "jax-numpy-around"]], "jax.numpy.array": [[413, "jax-numpy-array"]], "jax.numpy.array_equal": [[414, "jax-numpy-array-equal"]], "jax.numpy.array_equiv": [[415, "jax-numpy-array-equiv"]], "jax.numpy.array_repr": [[416, "jax-numpy-array-repr"]], "jax.numpy.array_split": [[417, "jax-numpy-array-split"]], "jax.numpy.array_str": [[418, "jax-numpy-array-str"]], "jax.numpy.asarray": [[419, "jax-numpy-asarray"]], "jax.numpy.asin": [[420, "jax-numpy-asin"]], "jax.numpy.asinh": [[421, "jax-numpy-asinh"]], "jax.numpy.astype": [[422, "jax-numpy-astype"]], "jax.numpy.atan": [[423, "jax-numpy-atan"]], "jax.numpy.atan2": [[424, "jax-numpy-atan2"]], "jax.numpy.atanh": [[425, "jax-numpy-atanh"]], "jax.numpy.atleast_1d": [[426, "jax-numpy-atleast-1d"]], "jax.numpy.atleast_2d": [[427, "jax-numpy-atleast-2d"]], "jax.numpy.atleast_3d": [[428, "jax-numpy-atleast-3d"]], "jax.numpy.average": [[429, "jax-numpy-average"]], "jax.numpy.bartlett": [[430, "jax-numpy-bartlett"]], "jax.numpy.bincount": [[431, "jax-numpy-bincount"]], "jax.numpy.bitwise_and": [[432, "jax-numpy-bitwise-and"]], "jax.numpy.bitwise_count": [[433, "jax-numpy-bitwise-count"]], "jax.numpy.bitwise_invert": [[434, "jax-numpy-bitwise-invert"]], "jax.numpy.bitwise_left_shift": [[435, "jax-numpy-bitwise-left-shift"]], "jax.numpy.bitwise_not": [[436, "jax-numpy-bitwise-not"]], "jax.numpy.bitwise_or": [[437, "jax-numpy-bitwise-or"]], "jax.numpy.bitwise_right_shift": [[438, "jax-numpy-bitwise-right-shift"]], "jax.numpy.bitwise_xor": [[439, "jax-numpy-bitwise-xor"]], "jax.numpy.blackman": [[440, "jax-numpy-blackman"]], "jax.numpy.block": [[441, "jax-numpy-block"]], "jax.numpy.bool_": [[442, "jax-numpy-bool"]], "jax.numpy.broadcast_arrays": [[443, "jax-numpy-broadcast-arrays"]], "jax.numpy.broadcast_shapes": [[444, "jax-numpy-broadcast-shapes"]], "jax.numpy.broadcast_to": [[445, "jax-numpy-broadcast-to"]], "jax.numpy.c_": [[446, "jax-numpy-c"]], "jax.numpy.can_cast": [[447, "jax-numpy-can-cast"]], "jax.numpy.cbrt": [[448, "jax-numpy-cbrt"]], "jax.numpy.cdouble": [[449, "jax-numpy-cdouble"]], "jax.numpy.ceil": [[450, "jax-numpy-ceil"]], "jax.numpy.character": [[451, "jax-numpy-character"]], "jax.numpy.choose": [[452, "jax-numpy-choose"]], "jax.numpy.clip": [[453, "jax-numpy-clip"]], "jax.numpy.column_stack": [[454, "jax-numpy-column-stack"]], "jax.numpy.complex128": [[455, "jax-numpy-complex128"]], "jax.numpy.complex64": [[456, "jax-numpy-complex64"]], "jax.numpy.complex_": [[457, "jax-numpy-complex"]], "jax.numpy.complexfloating": [[458, "jax-numpy-complexfloating"]], "jax.numpy.compress": [[459, "jax-numpy-compress"]], "jax.numpy.concat": [[460, "jax-numpy-concat"]], "jax.numpy.concatenate": [[461, "jax-numpy-concatenate"]], "jax.numpy.conj": [[462, "jax-numpy-conj"]], "jax.numpy.conjugate": [[463, "jax-numpy-conjugate"]], "jax.numpy.convolve": [[464, "jax-numpy-convolve"]], "jax.numpy.copy": [[465, "jax-numpy-copy"]], "jax.numpy.copysign": [[466, "jax-numpy-copysign"]], "jax.numpy.corrcoef": [[467, "jax-numpy-corrcoef"]], "jax.numpy.correlate": [[468, "jax-numpy-correlate"]], "jax.numpy.cos": [[469, "jax-numpy-cos"]], "jax.numpy.cosh": [[470, "jax-numpy-cosh"]], "jax.numpy.count_nonzero": [[471, "jax-numpy-count-nonzero"]], "jax.numpy.cov": [[472, "jax-numpy-cov"]], "jax.numpy.cross": [[473, "jax-numpy-cross"]], "jax.numpy.csingle": [[474, "jax-numpy-csingle"]], "jax.numpy.cumprod": [[475, "jax-numpy-cumprod"]], "jax.numpy.cumsum": [[476, "jax-numpy-cumsum"]], "jax.numpy.cumulative_sum": [[477, "jax-numpy-cumulative-sum"]], "jax.numpy.deg2rad": [[478, "jax-numpy-deg2rad"]], "jax.numpy.degrees": [[479, "jax-numpy-degrees"]], "jax.numpy.delete": [[480, "jax-numpy-delete"]], "jax.numpy.diag": [[481, "jax-numpy-diag"]], "jax.numpy.diag_indices": [[482, "jax-numpy-diag-indices"]], "jax.numpy.diag_indices_from": [[483, "jax-numpy-diag-indices-from"]], "jax.numpy.diagflat": [[484, "jax-numpy-diagflat"]], "jax.numpy.diagonal": [[485, "jax-numpy-diagonal"]], "jax.numpy.diff": [[486, "jax-numpy-diff"]], "jax.numpy.digitize": [[487, "jax-numpy-digitize"]], "jax.numpy.divide": [[488, "jax-numpy-divide"]], "jax.numpy.divmod": [[489, "jax-numpy-divmod"]], "jax.numpy.dot": [[490, "jax-numpy-dot"]], "jax.numpy.double": [[491, "jax-numpy-double"]], "jax.numpy.dsplit": [[492, "jax-numpy-dsplit"]], "jax.numpy.dstack": [[493, "jax-numpy-dstack"]], "jax.numpy.dtype": [[494, "jax-numpy-dtype"]], "jax.numpy.ediff1d": [[495, "jax-numpy-ediff1d"]], "jax.numpy.einsum": [[496, "jax-numpy-einsum"]], "jax.numpy.einsum_path": [[497, "jax-numpy-einsum-path"]], "jax.numpy.empty": [[498, "jax-numpy-empty"]], "jax.numpy.empty_like": [[499, "jax-numpy-empty-like"]], "jax.numpy.equal": [[500, "jax-numpy-equal"]], "jax.numpy.exp": [[501, "jax-numpy-exp"]], "jax.numpy.exp2": [[502, "jax-numpy-exp2"]], "jax.numpy.expand_dims": [[503, "jax-numpy-expand-dims"]], "jax.numpy.expm1": [[504, "jax-numpy-expm1"]], "jax.numpy.extract": [[505, "jax-numpy-extract"]], "jax.numpy.eye": [[506, "jax-numpy-eye"]], "jax.numpy.fabs": [[507, "jax-numpy-fabs"]], "jax.numpy.fft": [[1170, "module-jax.numpy.fft"]], "jax.numpy.fft.fft": [[508, "jax-numpy-fft-fft"]], "jax.numpy.fft.fft2": [[509, "jax-numpy-fft-fft2"]], "jax.numpy.fft.fftfreq": [[510, "jax-numpy-fft-fftfreq"]], "jax.numpy.fft.fftn": [[511, "jax-numpy-fft-fftn"]], "jax.numpy.fft.fftshift": [[512, "jax-numpy-fft-fftshift"]], "jax.numpy.fft.hfft": [[513, "jax-numpy-fft-hfft"]], "jax.numpy.fft.ifft": [[514, "jax-numpy-fft-ifft"]], "jax.numpy.fft.ifft2": [[515, "jax-numpy-fft-ifft2"]], "jax.numpy.fft.ifftn": [[516, "jax-numpy-fft-ifftn"]], "jax.numpy.fft.ifftshift": [[517, "jax-numpy-fft-ifftshift"]], "jax.numpy.fft.ihfft": [[518, "jax-numpy-fft-ihfft"]], "jax.numpy.fft.irfft": [[519, "jax-numpy-fft-irfft"]], "jax.numpy.fft.irfft2": [[520, "jax-numpy-fft-irfft2"]], "jax.numpy.fft.irfftn": [[521, "jax-numpy-fft-irfftn"]], "jax.numpy.fft.rfft": [[522, "jax-numpy-fft-rfft"]], "jax.numpy.fft.rfft2": [[523, "jax-numpy-fft-rfft2"]], "jax.numpy.fft.rfftfreq": [[524, "jax-numpy-fft-rfftfreq"]], "jax.numpy.fft.rfftn": [[525, "jax-numpy-fft-rfftn"]], "jax.numpy.fill_diagonal": [[526, "jax-numpy-fill-diagonal"]], "jax.numpy.finfo": [[527, "jax-numpy-finfo"]], "jax.numpy.fix": [[528, "jax-numpy-fix"]], "jax.numpy.flatnonzero": [[529, "jax-numpy-flatnonzero"]], "jax.numpy.flexible": [[530, "jax-numpy-flexible"]], "jax.numpy.flip": [[531, "jax-numpy-flip"]], "jax.numpy.fliplr": [[532, "jax-numpy-fliplr"]], "jax.numpy.flipud": [[533, "jax-numpy-flipud"]], "jax.numpy.float16": [[534, "jax-numpy-float16"]], "jax.numpy.float32": [[535, "jax-numpy-float32"]], "jax.numpy.float64": [[536, "jax-numpy-float64"]], "jax.numpy.float_": [[537, "jax-numpy-float"]], "jax.numpy.float_power": [[538, "jax-numpy-float-power"]], "jax.numpy.floating": [[539, "jax-numpy-floating"]], "jax.numpy.floor": [[540, "jax-numpy-floor"]], "jax.numpy.floor_divide": [[541, "jax-numpy-floor-divide"]], "jax.numpy.fmax": [[542, "jax-numpy-fmax"]], "jax.numpy.fmin": [[543, "jax-numpy-fmin"]], "jax.numpy.fmod": [[544, "jax-numpy-fmod"]], "jax.numpy.frexp": [[545, "jax-numpy-frexp"]], "jax.numpy.from_dlpack": [[546, "jax-numpy-from-dlpack"]], "jax.numpy.frombuffer": [[547, "jax-numpy-frombuffer"]], "jax.numpy.fromfile": [[548, "jax-numpy-fromfile"]], "jax.numpy.fromfunction": [[549, "jax-numpy-fromfunction"]], "jax.numpy.fromiter": [[550, "jax-numpy-fromiter"]], "jax.numpy.frompyfunc": [[551, "jax-numpy-frompyfunc"]], "jax.numpy.fromstring": [[552, "jax-numpy-fromstring"]], "jax.numpy.full": [[553, "jax-numpy-full"]], "jax.numpy.full_like": [[554, "jax-numpy-full-like"]], "jax.numpy.gcd": [[555, "jax-numpy-gcd"]], "jax.numpy.generic": [[556, "jax-numpy-generic"]], "jax.numpy.geomspace": [[557, "jax-numpy-geomspace"]], "jax.numpy.get_printoptions": [[558, "jax-numpy-get-printoptions"]], "jax.numpy.gradient": [[559, "jax-numpy-gradient"]], "jax.numpy.greater": [[560, "jax-numpy-greater"]], "jax.numpy.greater_equal": [[561, "jax-numpy-greater-equal"]], "jax.numpy.hamming": [[562, "jax-numpy-hamming"]], "jax.numpy.hanning": [[563, "jax-numpy-hanning"]], "jax.numpy.heaviside": [[564, "jax-numpy-heaviside"]], "jax.numpy.histogram": [[565, "jax-numpy-histogram"]], "jax.numpy.histogram2d": [[566, "jax-numpy-histogram2d"]], "jax.numpy.histogram_bin_edges": [[567, "jax-numpy-histogram-bin-edges"]], "jax.numpy.histogramdd": [[568, "jax-numpy-histogramdd"]], "jax.numpy.hsplit": [[569, "jax-numpy-hsplit"]], "jax.numpy.hstack": [[570, "jax-numpy-hstack"]], "jax.numpy.hypot": [[571, "jax-numpy-hypot"]], "jax.numpy.i0": [[572, "jax-numpy-i0"]], "jax.numpy.identity": [[573, "jax-numpy-identity"]], "jax.numpy.iinfo": [[574, "jax-numpy-iinfo"]], "jax.numpy.imag": [[575, "jax-numpy-imag"]], "jax.numpy.index_exp": [[576, "jax-numpy-index-exp"]], "jax.numpy.indices": [[577, "jax-numpy-indices"]], "jax.numpy.inexact": [[578, "jax-numpy-inexact"]], "jax.numpy.inner": [[579, "jax-numpy-inner"]], "jax.numpy.insert": [[580, "jax-numpy-insert"]], "jax.numpy.int16": [[581, "jax-numpy-int16"]], "jax.numpy.int32": [[582, "jax-numpy-int32"]], "jax.numpy.int64": [[583, "jax-numpy-int64"]], "jax.numpy.int8": [[584, "jax-numpy-int8"]], "jax.numpy.int_": [[585, "jax-numpy-int"]], "jax.numpy.integer": [[586, "jax-numpy-integer"]], "jax.numpy.interp": [[587, "jax-numpy-interp"]], "jax.numpy.intersect1d": [[588, "jax-numpy-intersect1d"]], "jax.numpy.invert": [[589, "jax-numpy-invert"]], "jax.numpy.isclose": [[590, "jax-numpy-isclose"]], "jax.numpy.iscomplex": [[591, "jax-numpy-iscomplex"]], "jax.numpy.iscomplexobj": [[592, "jax-numpy-iscomplexobj"]], "jax.numpy.isdtype": [[593, "jax-numpy-isdtype"]], "jax.numpy.isfinite": [[594, "jax-numpy-isfinite"]], "jax.numpy.isin": [[595, "jax-numpy-isin"]], "jax.numpy.isinf": [[596, "jax-numpy-isinf"]], "jax.numpy.isnan": [[597, "jax-numpy-isnan"]], "jax.numpy.isneginf": [[598, "jax-numpy-isneginf"]], "jax.numpy.isposinf": [[599, "jax-numpy-isposinf"]], "jax.numpy.isreal": [[600, "jax-numpy-isreal"]], "jax.numpy.isrealobj": [[601, "jax-numpy-isrealobj"]], "jax.numpy.isscalar": [[602, "jax-numpy-isscalar"]], "jax.numpy.issubdtype": [[603, "jax-numpy-issubdtype"]], "jax.numpy.iterable": [[604, "jax-numpy-iterable"]], "jax.numpy.ix_": [[605, "jax-numpy-ix"]], "jax.numpy.kaiser": [[606, "jax-numpy-kaiser"]], "jax.numpy.kron": [[607, "jax-numpy-kron"]], "jax.numpy.lcm": [[608, "jax-numpy-lcm"]], "jax.numpy.ldexp": [[609, "jax-numpy-ldexp"]], "jax.numpy.left_shift": [[610, "jax-numpy-left-shift"]], "jax.numpy.less": [[611, "jax-numpy-less"]], "jax.numpy.less_equal": [[612, "jax-numpy-less-equal"]], "jax.numpy.lexsort": [[613, "jax-numpy-lexsort"]], "jax.numpy.linalg": [[1170, "module-jax.numpy.linalg"]], "jax.numpy.linalg.cholesky": [[614, "jax-numpy-linalg-cholesky"]], "jax.numpy.linalg.cond": [[615, "jax-numpy-linalg-cond"]], "jax.numpy.linalg.cross": [[616, "jax-numpy-linalg-cross"]], "jax.numpy.linalg.det": [[617, "jax-numpy-linalg-det"]], "jax.numpy.linalg.diagonal": [[618, "jax-numpy-linalg-diagonal"]], "jax.numpy.linalg.eig": [[619, "jax-numpy-linalg-eig"]], "jax.numpy.linalg.eigh": [[620, "jax-numpy-linalg-eigh"]], "jax.numpy.linalg.eigvals": [[621, "jax-numpy-linalg-eigvals"]], "jax.numpy.linalg.eigvalsh": [[622, "jax-numpy-linalg-eigvalsh"]], "jax.numpy.linalg.inv": [[623, "jax-numpy-linalg-inv"]], "jax.numpy.linalg.lstsq": [[624, "jax-numpy-linalg-lstsq"]], "jax.numpy.linalg.matmul": [[625, "jax-numpy-linalg-matmul"]], "jax.numpy.linalg.matrix_norm": [[626, "jax-numpy-linalg-matrix-norm"]], "jax.numpy.linalg.matrix_power": [[627, "jax-numpy-linalg-matrix-power"]], "jax.numpy.linalg.matrix_rank": [[628, "jax-numpy-linalg-matrix-rank"]], "jax.numpy.linalg.matrix_transpose": [[629, "jax-numpy-linalg-matrix-transpose"]], "jax.numpy.linalg.multi_dot": [[630, "jax-numpy-linalg-multi-dot"]], "jax.numpy.linalg.norm": [[631, "jax-numpy-linalg-norm"]], "jax.numpy.linalg.outer": [[632, "jax-numpy-linalg-outer"]], "jax.numpy.linalg.pinv": [[633, "jax-numpy-linalg-pinv"]], "jax.numpy.linalg.qr": [[634, "jax-numpy-linalg-qr"]], "jax.numpy.linalg.slogdet": [[635, "jax-numpy-linalg-slogdet"]], "jax.numpy.linalg.solve": [[636, "jax-numpy-linalg-solve"]], "jax.numpy.linalg.svd": [[637, "jax-numpy-linalg-svd"]], "jax.numpy.linalg.svdvals": [[638, "jax-numpy-linalg-svdvals"]], "jax.numpy.linalg.tensordot": [[639, "jax-numpy-linalg-tensordot"]], "jax.numpy.linalg.tensorinv": [[640, "jax-numpy-linalg-tensorinv"]], "jax.numpy.linalg.tensorsolve": [[641, "jax-numpy-linalg-tensorsolve"]], "jax.numpy.linalg.vecdot": [[642, "jax-numpy-linalg-vecdot"]], "jax.numpy.linalg.vector_norm": [[643, "jax-numpy-linalg-vector-norm"]], "jax.numpy.linspace": [[644, "jax-numpy-linspace"]], "jax.numpy.load": [[645, "jax-numpy-load"]], "jax.numpy.log": [[646, "jax-numpy-log"]], "jax.numpy.log10": [[647, "jax-numpy-log10"]], "jax.numpy.log1p": [[648, "jax-numpy-log1p"]], "jax.numpy.log2": [[649, "jax-numpy-log2"]], "jax.numpy.logaddexp": [[650, "jax-numpy-logaddexp"]], "jax.numpy.logaddexp2": [[651, "jax-numpy-logaddexp2"]], "jax.numpy.logical_and": [[652, "jax-numpy-logical-and"]], "jax.numpy.logical_not": [[653, "jax-numpy-logical-not"]], "jax.numpy.logical_or": [[654, "jax-numpy-logical-or"]], "jax.numpy.logical_xor": [[655, "jax-numpy-logical-xor"]], "jax.numpy.logspace": [[656, "jax-numpy-logspace"]], "jax.numpy.mask_indices": [[657, "jax-numpy-mask-indices"]], "jax.numpy.matmul": [[658, "jax-numpy-matmul"]], "jax.numpy.matrix_transpose": [[659, "jax-numpy-matrix-transpose"]], "jax.numpy.max": [[660, "jax-numpy-max"]], "jax.numpy.maximum": [[661, "jax-numpy-maximum"]], "jax.numpy.mean": [[662, "jax-numpy-mean"]], "jax.numpy.median": [[663, "jax-numpy-median"]], "jax.numpy.meshgrid": [[664, "jax-numpy-meshgrid"]], "jax.numpy.mgrid": [[665, "jax-numpy-mgrid"]], "jax.numpy.min": [[666, "jax-numpy-min"]], "jax.numpy.minimum": [[667, "jax-numpy-minimum"]], "jax.numpy.mod": [[668, "jax-numpy-mod"]], "jax.numpy.modf": [[669, "jax-numpy-modf"]], "jax.numpy.moveaxis": [[670, "jax-numpy-moveaxis"]], "jax.numpy.multiply": [[671, "jax-numpy-multiply"]], "jax.numpy.nan_to_num": [[672, "jax-numpy-nan-to-num"]], "jax.numpy.nanargmax": [[673, "jax-numpy-nanargmax"]], "jax.numpy.nanargmin": [[674, "jax-numpy-nanargmin"]], "jax.numpy.nancumprod": [[675, "jax-numpy-nancumprod"]], "jax.numpy.nancumsum": [[676, "jax-numpy-nancumsum"]], "jax.numpy.nanmax": [[677, "jax-numpy-nanmax"]], "jax.numpy.nanmean": [[678, "jax-numpy-nanmean"]], "jax.numpy.nanmedian": [[679, "jax-numpy-nanmedian"]], "jax.numpy.nanmin": [[680, "jax-numpy-nanmin"]], "jax.numpy.nanpercentile": [[681, "jax-numpy-nanpercentile"]], "jax.numpy.nanprod": [[682, "jax-numpy-nanprod"]], "jax.numpy.nanquantile": [[683, "jax-numpy-nanquantile"]], "jax.numpy.nanstd": [[684, "jax-numpy-nanstd"]], "jax.numpy.nansum": [[685, "jax-numpy-nansum"]], "jax.numpy.nanvar": [[686, "jax-numpy-nanvar"]], "jax.numpy.ndarray": [[687, "jax-numpy-ndarray"]], "jax.numpy.ndarray.at": [[688, "jax-numpy-ndarray-at"]], "jax.numpy.ndim": [[689, "jax-numpy-ndim"]], "jax.numpy.negative": [[690, "jax-numpy-negative"]], "jax.numpy.nextafter": [[691, "jax-numpy-nextafter"]], "jax.numpy.nonzero": [[692, "jax-numpy-nonzero"]], "jax.numpy.not_equal": [[693, "jax-numpy-not-equal"]], "jax.numpy.number": [[694, "jax-numpy-number"]], "jax.numpy.object_": [[695, "jax-numpy-object"]], "jax.numpy.ogrid": [[696, "jax-numpy-ogrid"]], "jax.numpy.ones": [[697, "jax-numpy-ones"]], "jax.numpy.ones_like": [[698, "jax-numpy-ones-like"]], "jax.numpy.outer": [[699, "jax-numpy-outer"]], "jax.numpy.packbits": [[700, "jax-numpy-packbits"]], "jax.numpy.pad": [[701, "jax-numpy-pad"]], "jax.numpy.partition": [[702, "jax-numpy-partition"]], "jax.numpy.percentile": [[703, "jax-numpy-percentile"]], "jax.numpy.permute_dims": [[704, "jax-numpy-permute-dims"]], "jax.numpy.piecewise": [[705, "jax-numpy-piecewise"]], "jax.numpy.place": [[706, "jax-numpy-place"]], "jax.numpy.poly": [[707, "jax-numpy-poly"]], "jax.numpy.polyadd": [[708, "jax-numpy-polyadd"]], "jax.numpy.polyder": [[709, "jax-numpy-polyder"]], "jax.numpy.polydiv": [[710, "jax-numpy-polydiv"]], "jax.numpy.polyfit": [[711, "jax-numpy-polyfit"]], "jax.numpy.polyint": [[712, "jax-numpy-polyint"]], "jax.numpy.polymul": [[713, "jax-numpy-polymul"]], "jax.numpy.polysub": [[714, "jax-numpy-polysub"]], "jax.numpy.polyval": [[715, "jax-numpy-polyval"]], "jax.numpy.positive": [[716, "jax-numpy-positive"]], "jax.numpy.pow": [[717, "jax-numpy-pow"]], "jax.numpy.power": [[718, "jax-numpy-power"]], "jax.numpy.printoptions": [[719, "jax-numpy-printoptions"]], "jax.numpy.prod": [[720, "jax-numpy-prod"]], "jax.numpy.promote_types": [[721, "jax-numpy-promote-types"]], "jax.numpy.ptp": [[722, "jax-numpy-ptp"]], "jax.numpy.put": [[723, "jax-numpy-put"]], "jax.numpy.quantile": [[724, "jax-numpy-quantile"]], "jax.numpy.r_": [[725, "jax-numpy-r"]], "jax.numpy.rad2deg": [[726, "jax-numpy-rad2deg"]], "jax.numpy.radians": [[727, "jax-numpy-radians"]], "jax.numpy.ravel": [[728, "jax-numpy-ravel"]], "jax.numpy.ravel_multi_index": [[729, "jax-numpy-ravel-multi-index"]], "jax.numpy.real": [[730, "jax-numpy-real"]], "jax.numpy.reciprocal": [[731, "jax-numpy-reciprocal"]], "jax.numpy.remainder": [[732, "jax-numpy-remainder"]], "jax.numpy.repeat": [[733, "jax-numpy-repeat"]], "jax.numpy.reshape": [[734, "jax-numpy-reshape"]], "jax.numpy.resize": [[735, "jax-numpy-resize"]], "jax.numpy.result_type": [[736, "jax-numpy-result-type"]], "jax.numpy.right_shift": [[737, "jax-numpy-right-shift"]], "jax.numpy.rint": [[738, "jax-numpy-rint"]], "jax.numpy.roll": [[739, "jax-numpy-roll"]], "jax.numpy.rollaxis": [[740, "jax-numpy-rollaxis"]], "jax.numpy.roots": [[741, "jax-numpy-roots"]], "jax.numpy.rot90": [[742, "jax-numpy-rot90"]], "jax.numpy.round": [[743, "jax-numpy-round"]], "jax.numpy.round_": [[744, "jax-numpy-round"]], "jax.numpy.s_": [[745, "jax-numpy-s"]], "jax.numpy.save": [[746, "jax-numpy-save"]], "jax.numpy.savez": [[747, "jax-numpy-savez"]], "jax.numpy.searchsorted": [[748, "jax-numpy-searchsorted"]], "jax.numpy.select": [[749, "jax-numpy-select"]], "jax.numpy.set_printoptions": [[750, "jax-numpy-set-printoptions"]], "jax.numpy.setdiff1d": [[751, "jax-numpy-setdiff1d"]], "jax.numpy.setxor1d": [[752, "jax-numpy-setxor1d"]], "jax.numpy.shape": [[753, "jax-numpy-shape"]], "jax.numpy.sign": [[754, "jax-numpy-sign"]], "jax.numpy.signbit": [[755, "jax-numpy-signbit"]], "jax.numpy.signedinteger": [[756, "jax-numpy-signedinteger"]], "jax.numpy.sin": [[757, "jax-numpy-sin"]], "jax.numpy.sinc": [[758, "jax-numpy-sinc"]], "jax.numpy.single": [[759, "jax-numpy-single"]], "jax.numpy.sinh": [[760, "jax-numpy-sinh"]], "jax.numpy.size": [[761, "jax-numpy-size"]], "jax.numpy.sort": [[762, "jax-numpy-sort"]], "jax.numpy.sort_complex": [[763, "jax-numpy-sort-complex"]], "jax.numpy.split": [[764, "jax-numpy-split"]], "jax.numpy.sqrt": [[765, "jax-numpy-sqrt"]], "jax.numpy.square": [[766, "jax-numpy-square"]], "jax.numpy.squeeze": [[767, "jax-numpy-squeeze"]], "jax.numpy.stack": [[768, "jax-numpy-stack"]], "jax.numpy.std": [[769, "jax-numpy-std"]], "jax.numpy.subtract": [[770, "jax-numpy-subtract"]], "jax.numpy.sum": [[771, "jax-numpy-sum"]], "jax.numpy.swapaxes": [[772, "jax-numpy-swapaxes"]], "jax.numpy.take": [[773, "jax-numpy-take"]], "jax.numpy.take_along_axis": [[774, "jax-numpy-take-along-axis"]], "jax.numpy.tan": [[775, "jax-numpy-tan"]], "jax.numpy.tanh": [[776, "jax-numpy-tanh"]], "jax.numpy.tensordot": [[777, "jax-numpy-tensordot"]], "jax.numpy.tile": [[778, "jax-numpy-tile"]], "jax.numpy.trace": [[779, "jax-numpy-trace"]], "jax.numpy.transpose": [[780, "jax-numpy-transpose"]], "jax.numpy.trapezoid": [[781, "jax-numpy-trapezoid"]], "jax.numpy.tri": [[782, "jax-numpy-tri"]], "jax.numpy.tril": [[783, "jax-numpy-tril"]], "jax.numpy.tril_indices": [[784, "jax-numpy-tril-indices"]], "jax.numpy.tril_indices_from": [[785, "jax-numpy-tril-indices-from"]], "jax.numpy.trim_zeros": [[786, "jax-numpy-trim-zeros"]], "jax.numpy.triu": [[787, "jax-numpy-triu"]], "jax.numpy.triu_indices": [[788, "jax-numpy-triu-indices"]], "jax.numpy.triu_indices_from": [[789, "jax-numpy-triu-indices-from"]], "jax.numpy.true_divide": [[790, "jax-numpy-true-divide"]], "jax.numpy.trunc": [[791, "jax-numpy-trunc"]], "jax.numpy.ufunc": [[792, "jax-numpy-ufunc"]], "jax.numpy.uint": [[793, "jax-numpy-uint"]], "jax.numpy.uint16": [[794, "jax-numpy-uint16"]], "jax.numpy.uint32": [[795, "jax-numpy-uint32"]], "jax.numpy.uint64": [[796, "jax-numpy-uint64"]], "jax.numpy.uint8": [[797, "jax-numpy-uint8"]], "jax.numpy.union1d": [[798, "jax-numpy-union1d"]], "jax.numpy.unique": [[799, "jax-numpy-unique"]], "jax.numpy.unique_all": [[800, "jax-numpy-unique-all"]], "jax.numpy.unique_counts": [[801, "jax-numpy-unique-counts"]], "jax.numpy.unique_inverse": [[802, "jax-numpy-unique-inverse"]], "jax.numpy.unique_values": [[803, "jax-numpy-unique-values"]], "jax.numpy.unpackbits": [[804, "jax-numpy-unpackbits"]], "jax.numpy.unravel_index": [[805, "jax-numpy-unravel-index"]], "jax.numpy.unsignedinteger": [[806, "jax-numpy-unsignedinteger"]], "jax.numpy.unstack": [[807, "jax-numpy-unstack"]], "jax.numpy.unwrap": [[808, "jax-numpy-unwrap"]], "jax.numpy.vander": [[809, "jax-numpy-vander"]], "jax.numpy.var": [[810, "jax-numpy-var"]], "jax.numpy.vdot": [[811, "jax-numpy-vdot"]], "jax.numpy.vecdot": [[812, "jax-numpy-vecdot"]], "jax.numpy.vectorize": [[813, "jax-numpy-vectorize"]], "jax.numpy.vsplit": [[814, "jax-numpy-vsplit"]], "jax.numpy.vstack": [[815, "jax-numpy-vstack"]], "jax.numpy.where": [[816, "jax-numpy-where"]], "jax.numpy.zeros": [[817, "jax-numpy-zeros"]], "jax.numpy.zeros_like": [[818, "jax-numpy-zeros-like"]], "jax.numpy_rank_promotion": [[819, "jax-numpy-rank-promotion"]], "jax.ops module": [[1171, "module-jax.ops"]], "jax.ops.segment_max": [[820, "jax-ops-segment-max"]], "jax.ops.segment_min": [[821, "jax-ops-segment-min"]], "jax.ops.segment_prod": [[822, "jax-ops-segment-prod"]], "jax.ops.segment_sum": [[823, "jax-ops-segment-sum"]], "jax.pmap": [[824, "jax-pmap"]], "jax.print_environment_info": [[825, "jax-print-environment-info"]], "jax.process_count": [[826, "jax-process-count"]], "jax.process_index": [[827, "jax-process-index"]], "jax.profiler module": [[1172, "module-jax.profiler"]], "jax.profiler.StepTraceAnnotation": [[828, "jax-profiler-steptraceannotation"]], "jax.profiler.TraceAnnotation": [[829, "jax-profiler-traceannotation"]], "jax.profiler.annotate_function": [[830, "jax-profiler-annotate-function"]], "jax.profiler.device_memory_profile": [[831, "jax-profiler-device-memory-profile"]], "jax.profiler.save_device_memory_profile": [[832, "jax-profiler-save-device-memory-profile"]], "jax.profiler.start_server": [[833, "jax-profiler-start-server"]], "jax.profiler.start_trace": [[834, "jax-profiler-start-trace"]], "jax.profiler.stop_trace": [[835, "jax-profiler-stop-trace"]], "jax.profiler.trace": [[836, "jax-profiler-trace"]], "jax.pure_callback": [[837, "jax-pure-callback"]], "jax.random module": [[1173, "module-jax.random"]], "jax.random.PRNGKey": [[838, "jax-random-prngkey"]], "jax.random.ball": [[839, "jax-random-ball"]], "jax.random.bernoulli": [[840, "jax-random-bernoulli"]], "jax.random.beta": [[841, "jax-random-beta"]], "jax.random.binomial": [[842, "jax-random-binomial"]], "jax.random.bits": [[843, "jax-random-bits"]], "jax.random.categorical": [[844, "jax-random-categorical"]], "jax.random.cauchy": [[845, "jax-random-cauchy"]], "jax.random.chisquare": [[846, "jax-random-chisquare"]], "jax.random.choice": [[847, "jax-random-choice"]], "jax.random.clone": [[848, "jax-random-clone"]], "jax.random.dirichlet": [[849, "jax-random-dirichlet"]], "jax.random.double_sided_maxwell": [[850, "jax-random-double-sided-maxwell"]], "jax.random.exponential": [[851, "jax-random-exponential"]], "jax.random.f": [[852, "jax-random-f"]], "jax.random.fold_in": [[853, "jax-random-fold-in"]], "jax.random.gamma": [[854, "jax-random-gamma"]], "jax.random.generalized_normal": [[855, "jax-random-generalized-normal"]], "jax.random.geometric": [[856, "jax-random-geometric"]], "jax.random.gumbel": [[857, "jax-random-gumbel"]], "jax.random.key": [[858, "jax-random-key"]], "jax.random.key_data": [[859, "jax-random-key-data"]], "jax.random.laplace": [[860, "jax-random-laplace"]], "jax.random.loggamma": [[861, "jax-random-loggamma"]], "jax.random.logistic": [[862, "jax-random-logistic"]], "jax.random.lognormal": [[863, "jax-random-lognormal"]], "jax.random.maxwell": [[864, "jax-random-maxwell"]], "jax.random.multivariate_normal": [[865, "jax-random-multivariate-normal"]], "jax.random.normal": [[866, "jax-random-normal"]], "jax.random.orthogonal": [[867, "jax-random-orthogonal"]], "jax.random.pareto": [[868, "jax-random-pareto"]], "jax.random.permutation": [[869, "jax-random-permutation"]], "jax.random.poisson": [[870, "jax-random-poisson"]], "jax.random.rademacher": [[871, "jax-random-rademacher"]], "jax.random.randint": [[872, "jax-random-randint"]], "jax.random.rayleigh": [[873, "jax-random-rayleigh"]], "jax.random.split": [[874, "jax-random-split"]], "jax.random.t": [[875, "jax-random-t"]], "jax.random.triangular": [[876, "jax-random-triangular"]], "jax.random.truncated_normal": [[877, "jax-random-truncated-normal"]], "jax.random.uniform": [[878, "jax-random-uniform"]], "jax.random.wald": [[879, "jax-random-wald"]], "jax.random.weibull_min": [[880, "jax-random-weibull-min"]], "jax.random.wrap_key_data": [[881, "jax-random-wrap-key-data"]], "jax.remat / jax.checkpoint changes: what you need to know": [[1184, "jax-remat-jax-checkpoint-changes-what-you-need-to-know"]], "jax.scipy module": [[1174, "jax-scipy-module"]], "jax.scipy.fft": [[1174, "module-jax.scipy.fft"]], "jax.scipy.fft.dct": [[882, "jax-scipy-fft-dct"]], "jax.scipy.fft.dctn": [[883, "jax-scipy-fft-dctn"]], "jax.scipy.fft.idct": [[884, "jax-scipy-fft-idct"]], "jax.scipy.fft.idctn": [[885, "jax-scipy-fft-idctn"]], "jax.scipy.integrate": [[1174, "module-jax.scipy.integrate"]], "jax.scipy.integrate.trapezoid": [[886, "jax-scipy-integrate-trapezoid"]], "jax.scipy.linalg": [[1174, "module-jax.scipy.linalg"]], "jax.scipy.linalg.block_diag": [[887, "jax-scipy-linalg-block-diag"]], "jax.scipy.linalg.cho_factor": [[888, "jax-scipy-linalg-cho-factor"]], "jax.scipy.linalg.cho_solve": [[889, "jax-scipy-linalg-cho-solve"]], "jax.scipy.linalg.cholesky": [[890, "jax-scipy-linalg-cholesky"]], "jax.scipy.linalg.det": [[891, "jax-scipy-linalg-det"]], "jax.scipy.linalg.eigh": [[892, "jax-scipy-linalg-eigh"]], "jax.scipy.linalg.eigh_tridiagonal": [[893, "jax-scipy-linalg-eigh-tridiagonal"]], "jax.scipy.linalg.expm": [[894, "jax-scipy-linalg-expm"]], "jax.scipy.linalg.expm_frechet": [[895, "jax-scipy-linalg-expm-frechet"]], "jax.scipy.linalg.funm": [[896, "jax-scipy-linalg-funm"]], "jax.scipy.linalg.hessenberg": [[897, "jax-scipy-linalg-hessenberg"]], "jax.scipy.linalg.hilbert": [[898, "jax-scipy-linalg-hilbert"]], "jax.scipy.linalg.inv": [[899, "jax-scipy-linalg-inv"]], "jax.scipy.linalg.lu": [[900, "jax-scipy-linalg-lu"]], "jax.scipy.linalg.lu_factor": [[901, "jax-scipy-linalg-lu-factor"]], "jax.scipy.linalg.lu_solve": [[902, "jax-scipy-linalg-lu-solve"]], "jax.scipy.linalg.polar": [[903, "jax-scipy-linalg-polar"]], "jax.scipy.linalg.qr": [[904, "jax-scipy-linalg-qr"]], "jax.scipy.linalg.rsf2csf": [[905, "jax-scipy-linalg-rsf2csf"]], "jax.scipy.linalg.schur": [[906, "jax-scipy-linalg-schur"]], "jax.scipy.linalg.solve": [[907, "jax-scipy-linalg-solve"]], "jax.scipy.linalg.solve_triangular": [[908, "jax-scipy-linalg-solve-triangular"]], "jax.scipy.linalg.sqrtm": [[909, "jax-scipy-linalg-sqrtm"]], "jax.scipy.linalg.svd": [[910, "jax-scipy-linalg-svd"]], "jax.scipy.linalg.toeplitz": [[911, "jax-scipy-linalg-toeplitz"]], "jax.scipy.ndimage": [[1174, "module-jax.scipy.ndimage"]], "jax.scipy.ndimage.map_coordinates": [[912, "jax-scipy-ndimage-map-coordinates"]], "jax.scipy.optimize": [[1174, "module-jax.scipy.optimize"]], "jax.scipy.optimize.OptimizeResults": [[913, "jax-scipy-optimize-optimizeresults"]], "jax.scipy.optimize.minimize": [[914, "jax-scipy-optimize-minimize"]], "jax.scipy.signal": [[1174, "module-jax.scipy.signal"]], "jax.scipy.signal.convolve": [[915, "jax-scipy-signal-convolve"]], "jax.scipy.signal.convolve2d": [[916, "jax-scipy-signal-convolve2d"]], "jax.scipy.signal.correlate": [[917, "jax-scipy-signal-correlate"]], "jax.scipy.signal.correlate2d": [[918, "jax-scipy-signal-correlate2d"]], "jax.scipy.signal.csd": [[919, "jax-scipy-signal-csd"]], "jax.scipy.signal.fftconvolve": [[920, "jax-scipy-signal-fftconvolve"]], "jax.scipy.signal.istft": [[921, "jax-scipy-signal-istft"]], "jax.scipy.signal.stft": [[922, "jax-scipy-signal-stft"]], "jax.scipy.signal.welch": [[923, "jax-scipy-signal-welch"]], "jax.scipy.sparse.linalg": [[1174, "module-jax.scipy.sparse.linalg"]], "jax.scipy.sparse.linalg.bicgstab": [[924, "jax-scipy-sparse-linalg-bicgstab"]], "jax.scipy.sparse.linalg.cg": [[925, "jax-scipy-sparse-linalg-cg"]], "jax.scipy.sparse.linalg.gmres": [[926, "jax-scipy-sparse-linalg-gmres"]], "jax.scipy.spatial.transform": [[1174, "module-jax.scipy.spatial.transform"]], "jax.scipy.spatial.transform.Rotation": [[927, "jax-scipy-spatial-transform-rotation"]], "jax.scipy.spatial.transform.Slerp": [[928, "jax-scipy-spatial-transform-slerp"]], "jax.scipy.special": [[1174, "module-jax.scipy.special"]], "jax.scipy.special.bernoulli": [[929, "jax-scipy-special-bernoulli"]], "jax.scipy.special.beta": [[930, "jax-scipy-special-beta"]], "jax.scipy.special.betainc": [[931, "jax-scipy-special-betainc"]], "jax.scipy.special.betaln": [[932, "jax-scipy-special-betaln"]], "jax.scipy.special.digamma": [[933, "jax-scipy-special-digamma"]], "jax.scipy.special.entr": [[934, "jax-scipy-special-entr"]], "jax.scipy.special.erf": [[935, "jax-scipy-special-erf"]], "jax.scipy.special.erfc": [[936, "jax-scipy-special-erfc"]], "jax.scipy.special.erfinv": [[937, "jax-scipy-special-erfinv"]], "jax.scipy.special.exp1": [[938, "jax-scipy-special-exp1"]], "jax.scipy.special.expi": [[939, "jax-scipy-special-expi"]], "jax.scipy.special.expit": [[940, "jax-scipy-special-expit"]], "jax.scipy.special.expn": [[941, "jax-scipy-special-expn"]], "jax.scipy.special.factorial": [[942, "jax-scipy-special-factorial"]], "jax.scipy.special.gamma": [[943, "jax-scipy-special-gamma"]], "jax.scipy.special.gammainc": [[944, "jax-scipy-special-gammainc"]], "jax.scipy.special.gammaincc": [[945, "jax-scipy-special-gammaincc"]], "jax.scipy.special.gammaln": [[946, "jax-scipy-special-gammaln"]], "jax.scipy.special.hyp1f1": [[947, "jax-scipy-special-hyp1f1"]], "jax.scipy.special.i0": [[948, "jax-scipy-special-i0"]], "jax.scipy.special.i0e": [[949, "jax-scipy-special-i0e"]], "jax.scipy.special.i1": [[950, "jax-scipy-special-i1"]], "jax.scipy.special.i1e": [[951, "jax-scipy-special-i1e"]], "jax.scipy.special.kl_div": [[952, "jax-scipy-special-kl-div"]], "jax.scipy.special.log_ndtr": [[953, "jax-scipy-special-log-ndtr"]], "jax.scipy.special.logit": [[954, "jax-scipy-special-logit"]], "jax.scipy.special.logsumexp": [[955, "jax-scipy-special-logsumexp"]], "jax.scipy.special.lpmn": [[956, "jax-scipy-special-lpmn"]], "jax.scipy.special.lpmn_values": [[957, "jax-scipy-special-lpmn-values"]], "jax.scipy.special.multigammaln": [[958, "jax-scipy-special-multigammaln"]], "jax.scipy.special.ndtr": [[959, "jax-scipy-special-ndtr"]], "jax.scipy.special.ndtri": [[960, "jax-scipy-special-ndtri"]], "jax.scipy.special.poch": [[961, "jax-scipy-special-poch"]], "jax.scipy.special.polygamma": [[962, "jax-scipy-special-polygamma"]], "jax.scipy.special.rel_entr": [[963, "jax-scipy-special-rel-entr"]], "jax.scipy.special.spence": [[964, "jax-scipy-special-spence"]], "jax.scipy.special.sph_harm": [[965, "jax-scipy-special-sph-harm"]], "jax.scipy.special.xlog1py": [[966, "jax-scipy-special-xlog1py"]], "jax.scipy.special.xlogy": [[967, "jax-scipy-special-xlogy"]], "jax.scipy.special.zeta": [[968, "jax-scipy-special-zeta"]], "jax.scipy.stats": [[1174, "module-jax.scipy.stats"]], "jax.scipy.stats.bernoulli": [[1174, "module-jax.scipy.stats.bernoulli"]], "jax.scipy.stats.bernoulli.cdf": [[969, "jax-scipy-stats-bernoulli-cdf"]], "jax.scipy.stats.bernoulli.logpmf": [[970, "jax-scipy-stats-bernoulli-logpmf"]], "jax.scipy.stats.bernoulli.pmf": [[971, "jax-scipy-stats-bernoulli-pmf"]], "jax.scipy.stats.bernoulli.ppf": [[972, "jax-scipy-stats-bernoulli-ppf"]], "jax.scipy.stats.beta": [[1174, "module-jax.scipy.stats.beta"]], "jax.scipy.stats.beta.cdf": [[973, "jax-scipy-stats-beta-cdf"]], "jax.scipy.stats.beta.logcdf": [[974, "jax-scipy-stats-beta-logcdf"]], "jax.scipy.stats.beta.logpdf": [[975, "jax-scipy-stats-beta-logpdf"]], "jax.scipy.stats.beta.logsf": [[976, "jax-scipy-stats-beta-logsf"]], "jax.scipy.stats.beta.pdf": [[977, "jax-scipy-stats-beta-pdf"]], "jax.scipy.stats.beta.sf": [[978, "jax-scipy-stats-beta-sf"]], "jax.scipy.stats.betabinom": [[1174, "module-jax.scipy.stats.betabinom"]], "jax.scipy.stats.betabinom.logpmf": [[979, "jax-scipy-stats-betabinom-logpmf"]], "jax.scipy.stats.betabinom.pmf": [[980, "jax-scipy-stats-betabinom-pmf"]], "jax.scipy.stats.binom": [[1174, "module-jax.scipy.stats.binom"]], "jax.scipy.stats.binom.logpmf": [[981, "jax-scipy-stats-binom-logpmf"]], "jax.scipy.stats.binom.pmf": [[982, "jax-scipy-stats-binom-pmf"]], "jax.scipy.stats.cauchy": [[1174, "module-jax.scipy.stats.cauchy"]], "jax.scipy.stats.cauchy.cdf": [[983, "jax-scipy-stats-cauchy-cdf"]], "jax.scipy.stats.cauchy.isf": [[984, "jax-scipy-stats-cauchy-isf"]], "jax.scipy.stats.cauchy.logcdf": [[985, "jax-scipy-stats-cauchy-logcdf"]], "jax.scipy.stats.cauchy.logpdf": [[986, "jax-scipy-stats-cauchy-logpdf"]], "jax.scipy.stats.cauchy.logsf": [[987, "jax-scipy-stats-cauchy-logsf"]], "jax.scipy.stats.cauchy.pdf": [[988, "jax-scipy-stats-cauchy-pdf"]], "jax.scipy.stats.cauchy.ppf": [[989, "jax-scipy-stats-cauchy-ppf"]], "jax.scipy.stats.cauchy.sf": [[990, "jax-scipy-stats-cauchy-sf"]], "jax.scipy.stats.chi2": [[1174, "module-jax.scipy.stats.chi2"]], "jax.scipy.stats.chi2.cdf": [[991, "jax-scipy-stats-chi2-cdf"]], "jax.scipy.stats.chi2.logcdf": [[992, "jax-scipy-stats-chi2-logcdf"]], "jax.scipy.stats.chi2.logpdf": [[993, "jax-scipy-stats-chi2-logpdf"]], "jax.scipy.stats.chi2.logsf": [[994, "jax-scipy-stats-chi2-logsf"]], "jax.scipy.stats.chi2.pdf": [[995, "jax-scipy-stats-chi2-pdf"]], "jax.scipy.stats.chi2.sf": [[996, "jax-scipy-stats-chi2-sf"]], "jax.scipy.stats.dirichlet": [[1174, "module-jax.scipy.stats.dirichlet"]], "jax.scipy.stats.dirichlet.logpdf": [[997, "jax-scipy-stats-dirichlet-logpdf"]], "jax.scipy.stats.dirichlet.pdf": [[998, "jax-scipy-stats-dirichlet-pdf"]], "jax.scipy.stats.expon": [[1174, "module-jax.scipy.stats.expon"]], "jax.scipy.stats.expon.logpdf": [[999, "jax-scipy-stats-expon-logpdf"]], "jax.scipy.stats.expon.pdf": [[1000, "jax-scipy-stats-expon-pdf"]], "jax.scipy.stats.gamma": [[1174, "module-jax.scipy.stats.gamma"]], "jax.scipy.stats.gamma.cdf": [[1001, "jax-scipy-stats-gamma-cdf"]], "jax.scipy.stats.gamma.logcdf": [[1002, "jax-scipy-stats-gamma-logcdf"]], "jax.scipy.stats.gamma.logpdf": [[1003, "jax-scipy-stats-gamma-logpdf"]], "jax.scipy.stats.gamma.logsf": [[1004, "jax-scipy-stats-gamma-logsf"]], "jax.scipy.stats.gamma.pdf": [[1005, "jax-scipy-stats-gamma-pdf"]], "jax.scipy.stats.gamma.sf": [[1006, "jax-scipy-stats-gamma-sf"]], "jax.scipy.stats.gaussian_kde": [[1007, "jax-scipy-stats-gaussian-kde"], [1174, "jax-scipy-stats-gaussian-kde"]], "jax.scipy.stats.gaussian_kde.evaluate": [[1008, "jax-scipy-stats-gaussian-kde-evaluate"]], "jax.scipy.stats.gaussian_kde.integrate_box_1d": [[1009, "jax-scipy-stats-gaussian-kde-integrate-box-1d"]], "jax.scipy.stats.gaussian_kde.integrate_gaussian": [[1010, "jax-scipy-stats-gaussian-kde-integrate-gaussian"]], "jax.scipy.stats.gaussian_kde.integrate_kde": [[1011, "jax-scipy-stats-gaussian-kde-integrate-kde"]], "jax.scipy.stats.gaussian_kde.logpdf": [[1012, "jax-scipy-stats-gaussian-kde-logpdf"]], "jax.scipy.stats.gaussian_kde.pdf": [[1013, "jax-scipy-stats-gaussian-kde-pdf"]], "jax.scipy.stats.gaussian_kde.resample": [[1014, "jax-scipy-stats-gaussian-kde-resample"]], "jax.scipy.stats.gennorm": [[1174, "module-jax.scipy.stats.gennorm"]], "jax.scipy.stats.gennorm.cdf": [[1015, "jax-scipy-stats-gennorm-cdf"]], "jax.scipy.stats.gennorm.logpdf": [[1016, "jax-scipy-stats-gennorm-logpdf"]], "jax.scipy.stats.gennorm.pdf": [[1017, "jax-scipy-stats-gennorm-pdf"]], "jax.scipy.stats.geom": [[1174, "module-jax.scipy.stats.geom"]], "jax.scipy.stats.geom.logpmf": [[1018, "jax-scipy-stats-geom-logpmf"]], "jax.scipy.stats.geom.pmf": [[1019, "jax-scipy-stats-geom-pmf"]], "jax.scipy.stats.laplace": [[1174, "module-jax.scipy.stats.laplace"]], "jax.scipy.stats.laplace.cdf": [[1020, "jax-scipy-stats-laplace-cdf"]], "jax.scipy.stats.laplace.logpdf": [[1021, "jax-scipy-stats-laplace-logpdf"]], "jax.scipy.stats.laplace.pdf": [[1022, "jax-scipy-stats-laplace-pdf"]], "jax.scipy.stats.logistic": [[1174, "module-jax.scipy.stats.logistic"]], "jax.scipy.stats.logistic.cdf": [[1023, "jax-scipy-stats-logistic-cdf"]], "jax.scipy.stats.logistic.isf": [[1024, "jax-scipy-stats-logistic-isf"]], "jax.scipy.stats.logistic.logpdf": [[1025, "jax-scipy-stats-logistic-logpdf"]], "jax.scipy.stats.logistic.pdf": [[1026, "jax-scipy-stats-logistic-pdf"]], "jax.scipy.stats.logistic.ppf": [[1027, "jax-scipy-stats-logistic-ppf"]], "jax.scipy.stats.logistic.sf": [[1028, "jax-scipy-stats-logistic-sf"]], "jax.scipy.stats.mode": [[1029, "jax-scipy-stats-mode"]], "jax.scipy.stats.multinomial": [[1174, "module-jax.scipy.stats.multinomial"]], "jax.scipy.stats.multinomial.logpmf": [[1030, "jax-scipy-stats-multinomial-logpmf"]], "jax.scipy.stats.multinomial.pmf": [[1031, "jax-scipy-stats-multinomial-pmf"]], "jax.scipy.stats.multivariate_normal": [[1174, "module-jax.scipy.stats.multivariate_normal"]], "jax.scipy.stats.multivariate_normal.logpdf": [[1032, "jax-scipy-stats-multivariate-normal-logpdf"]], "jax.scipy.stats.multivariate_normal.pdf": [[1033, "jax-scipy-stats-multivariate-normal-pdf"]], "jax.scipy.stats.nbinom": [[1174, "module-jax.scipy.stats.nbinom"]], "jax.scipy.stats.nbinom.logpmf": [[1034, "jax-scipy-stats-nbinom-logpmf"]], "jax.scipy.stats.nbinom.pmf": [[1035, "jax-scipy-stats-nbinom-pmf"]], "jax.scipy.stats.norm": [[1174, "module-jax.scipy.stats.norm"]], "jax.scipy.stats.norm.cdf": [[1036, "jax-scipy-stats-norm-cdf"]], "jax.scipy.stats.norm.isf": [[1037, "jax-scipy-stats-norm-isf"]], "jax.scipy.stats.norm.logcdf": [[1038, "jax-scipy-stats-norm-logcdf"]], "jax.scipy.stats.norm.logpdf": [[1039, "jax-scipy-stats-norm-logpdf"]], "jax.scipy.stats.norm.logsf": [[1040, "jax-scipy-stats-norm-logsf"]], "jax.scipy.stats.norm.pdf": [[1041, "jax-scipy-stats-norm-pdf"]], "jax.scipy.stats.norm.ppf": [[1042, "jax-scipy-stats-norm-ppf"]], "jax.scipy.stats.norm.sf": [[1043, "jax-scipy-stats-norm-sf"]], "jax.scipy.stats.pareto": [[1174, "module-jax.scipy.stats.pareto"]], "jax.scipy.stats.pareto.logpdf": [[1044, "jax-scipy-stats-pareto-logpdf"]], "jax.scipy.stats.pareto.pdf": [[1045, "jax-scipy-stats-pareto-pdf"]], "jax.scipy.stats.poisson": [[1174, "module-jax.scipy.stats.poisson"]], "jax.scipy.stats.poisson.logpmf": [[1046, "jax-scipy-stats-poisson-logpmf"]], "jax.scipy.stats.poisson.pmf": [[1047, "jax-scipy-stats-poisson-pmf"]], "jax.scipy.stats.rankdata": [[1048, "jax-scipy-stats-rankdata"]], "jax.scipy.stats.sem": [[1049, "jax-scipy-stats-sem"]], "jax.scipy.stats.t": [[1174, "module-jax.scipy.stats.t"]], "jax.scipy.stats.t.logpdf": [[1050, "jax-scipy-stats-t-logpdf"]], "jax.scipy.stats.t.pdf": [[1051, "jax-scipy-stats-t-pdf"]], "jax.scipy.stats.truncnorm": [[1174, "module-jax.scipy.stats.truncnorm"]], "jax.scipy.stats.truncnorm.cdf": [[1052, "jax-scipy-stats-truncnorm-cdf"]], "jax.scipy.stats.truncnorm.logcdf": [[1053, "jax-scipy-stats-truncnorm-logcdf"]], "jax.scipy.stats.truncnorm.logpdf": [[1054, "jax-scipy-stats-truncnorm-logpdf"]], "jax.scipy.stats.truncnorm.logsf": [[1055, "jax-scipy-stats-truncnorm-logsf"]], "jax.scipy.stats.truncnorm.pdf": [[1056, "jax-scipy-stats-truncnorm-pdf"]], "jax.scipy.stats.truncnorm.sf": [[1057, "jax-scipy-stats-truncnorm-sf"]], "jax.scipy.stats.uniform": [[1174, "module-jax.scipy.stats.uniform"]], "jax.scipy.stats.uniform.cdf": [[1058, "jax-scipy-stats-uniform-cdf"]], "jax.scipy.stats.uniform.logpdf": [[1059, "jax-scipy-stats-uniform-logpdf"]], "jax.scipy.stats.uniform.pdf": [[1060, "jax-scipy-stats-uniform-pdf"]], "jax.scipy.stats.uniform.ppf": [[1061, "jax-scipy-stats-uniform-ppf"]], "jax.scipy.stats.vonmises": [[1174, "module-jax.scipy.stats.vonmises"]], "jax.scipy.stats.vonmises.logpdf": [[1062, "jax-scipy-stats-vonmises-logpdf"]], "jax.scipy.stats.vonmises.pdf": [[1063, "jax-scipy-stats-vonmises-pdf"]], "jax.scipy.stats.wrapcauchy": [[1174, "module-jax.scipy.stats.wrapcauchy"]], "jax.scipy.stats.wrapcauchy.logpdf": [[1064, "jax-scipy-stats-wrapcauchy-logpdf"]], "jax.scipy.stats.wrapcauchy.pdf": [[1065, "jax-scipy-stats-wrapcauchy-pdf"]], "jax.sharding module": [[1175, "module-jax.sharding"]], "jax.stages module": [[1176, "module-jax.stages"]], "jax.transfer_guard": [[1066, "jax-transfer-guard"]], "jax.tree module": [[1177, "module-jax.tree"]], "jax.tree.all": [[1067, "jax-tree-all"]], "jax.tree.flatten": [[1068, "jax-tree-flatten"]], "jax.tree.leaves": [[1069, "jax-tree-leaves"]], "jax.tree.map": [[1070, "jax-tree-map"]], "jax.tree.reduce": [[1071, "jax-tree-reduce"]], "jax.tree.structure": [[1072, "jax-tree-structure"]], "jax.tree.transpose": [[1073, "jax-tree-transpose"]], "jax.tree.unflatten": [[1074, "jax-tree-unflatten"]], "jax.tree_util module": [[1178, "module-jax.tree_util"]], "jax.tree_util.Partial": [[1075, "jax-tree-util-partial"]], "jax.tree_util.all_leaves": [[1076, "jax-tree-util-all-leaves"]], "jax.tree_util.build_tree": [[1077, "jax-tree-util-build-tree"]], "jax.tree_util.keystr": [[1078, "jax-tree-util-keystr"]], "jax.tree_util.register_pytree_node": [[1079, "jax-tree-util-register-pytree-node"]], "jax.tree_util.register_pytree_node_class": [[1080, "jax-tree-util-register-pytree-node-class"]], "jax.tree_util.register_pytree_with_keys": [[1081, "jax-tree-util-register-pytree-with-keys"]], "jax.tree_util.register_pytree_with_keys_class": [[1082, "jax-tree-util-register-pytree-with-keys-class"]], "jax.tree_util.tree_all": [[1083, "jax-tree-util-tree-all"]], "jax.tree_util.tree_flatten": [[1084, "jax-tree-util-tree-flatten"]], "jax.tree_util.tree_flatten_with_path": [[1085, "jax-tree-util-tree-flatten-with-path"]], "jax.tree_util.tree_leaves": [[1086, "jax-tree-util-tree-leaves"]], "jax.tree_util.tree_leaves_with_path": [[1087, "jax-tree-util-tree-leaves-with-path"]], "jax.tree_util.tree_map": [[1088, "jax-tree-util-tree-map"]], "jax.tree_util.tree_map_with_path": [[1089, "jax-tree-util-tree-map-with-path"]], "jax.tree_util.tree_reduce": [[1090, "jax-tree-util-tree-reduce"]], "jax.tree_util.tree_structure": [[1091, "jax-tree-util-tree-structure"]], "jax.tree_util.tree_transpose": [[1092, "jax-tree-util-tree-transpose"]], "jax.tree_util.tree_unflatten": [[1093, "jax-tree-util-tree-unflatten"]], "jax.tree_util.treedef_children": [[1094, "jax-tree-util-treedef-children"]], "jax.tree_util.treedef_is_leaf": [[1095, "jax-tree-util-treedef-is-leaf"]], "jax.tree_util.treedef_tuple": [[1096, "jax-tree-util-treedef-tuple"]], "jax.typing module": [[1179, "module-jax.typing"]], "jax.typing.ArrayLike": [[1097, "jax-typing-arraylike"]], "jax.typing.DTypeLike": [[1098, "jax-typing-dtypelike"]], "jax.value_and_grad": [[1099, "jax-value-and-grad"]], "jax.vjp": [[1100, "jax-vjp"]], "jax.vmap": [[1101, "jax-vmap"]], "jax.xla_computation": [[1102, "jax-xla-computation"]], "jax_debug_nans configuration option and context manager": [[1115, "jax-debug-nans-configuration-option-and-context-manager"]], "jax_disable_jit configuration option and context manager": [[1115, "jax-disable-jit-configuration-option-and-context-manager"]], "jaxlib 0.1.38 (January 29, 2020)": [[1110, "jaxlib-0-1-38-january-29-2020"]], "jaxlib 0.1.39 (February 11, 2020)": [[1110, "jaxlib-0-1-39-february-11-2020"]], "jaxlib 0.1.40 (March 4, 2020)": [[1110, "jaxlib-0-1-40-march-4-2020"]], "jaxlib 0.1.42 (March 19, 2020)": [[1110, "jaxlib-0-1-42-march-19-2020"]], "jaxlib 0.1.43 (March 31, 2020)": [[1110, "jaxlib-0-1-43-march-31-2020"]], "jaxlib 0.1.44 (April 16, 2020)": [[1110, "jaxlib-0-1-44-april-16-2020"]], "jaxlib 0.1.45 (April 21, 2020)": [[1110, "jaxlib-0-1-45-april-21-2020"]], "jaxlib 0.1.46 (May 5, 2020)": [[1110, "jaxlib-0-1-46-may-5-2020"]], "jaxlib 0.1.47 (May 8, 2020)": [[1110, "jaxlib-0-1-47-may-8-2020"]], "jaxlib 0.1.48 (June 12, 2020)": [[1110, "jaxlib-0-1-48-june-12-2020"]], "jaxlib 0.1.49 (June 19, 2020)": [[1110, "jaxlib-0-1-49-june-19-2020"]], "jaxlib 0.1.50 (June 25, 2020)": [[1110, "jaxlib-0-1-50-june-25-2020"]], "jaxlib 0.1.51 (July 2, 2020)": [[1110, "jaxlib-0-1-51-july-2-2020"]], "jaxlib 0.1.52 (July 22, 2020)": [[1110, "jaxlib-0-1-52-july-22-2020"]], "jaxlib 0.1.55 (September 8, 2020)": [[1110, "jaxlib-0-1-55-september-8-2020"]], "jaxlib 0.1.56 (October 14, 2020)": [[1110, "jaxlib-0-1-56-october-14-2020"]], "jaxlib 0.1.57 (November 12 2020)": [[1110, "jaxlib-0-1-57-november-12-2020"]], "jaxlib 0.1.58 (January 12ish 2021)": [[1110, "jaxlib-0-1-58-january-12ish-2021"]], "jaxlib 0.1.59 (January 15 2021)": [[1110, "jaxlib-0-1-59-january-15-2021"]], "jaxlib 0.1.60 (February 3 2021)": [[1110, "jaxlib-0-1-60-february-3-2021"]], "jaxlib 0.1.61 (February 12 2021)": [[1110, "jaxlib-0-1-61-february-12-2021"]], "jaxlib 0.1.62 (March 9 2021)": [[1110, "jaxlib-0-1-62-march-9-2021"]], "jaxlib 0.1.63 (March 17 2021)": [[1110, "jaxlib-0-1-63-march-17-2021"]], "jaxlib 0.1.64 (March 18 2021)": [[1110, "jaxlib-0-1-64-march-18-2021"]], "jaxlib 0.1.65 (April 7 2021)": [[1110, "jaxlib-0-1-65-april-7-2021"]], "jaxlib 0.1.66 (May 11 2021)": [[1110, "jaxlib-0-1-66-may-11-2021"]], "jaxlib 0.1.67 (May 17 2021)": [[1110, "jaxlib-0-1-67-may-17-2021"]], "jaxlib 0.1.68 (June 23 2021)": [[1110, "jaxlib-0-1-68-june-23-2021"]], "jaxlib 0.1.69 (July 9 2021)": [[1110, "jaxlib-0-1-69-july-9-2021"]], "jaxlib 0.1.70 (Aug 9, 2021)": [[1110, "jaxlib-0-1-70-aug-9-2021"]], "jaxlib 0.1.71 (Sep 1, 2021)": [[1110, "jaxlib-0-1-71-sep-1-2021"]], "jaxlib 0.1.72 (Oct 12, 2021)": [[1110, "jaxlib-0-1-72-oct-12-2021"]], "jaxlib 0.1.73 (Oct 18, 2021)": [[1110, "jaxlib-0-1-73-oct-18-2021"]], "jaxlib 0.1.74 (Nov 17, 2021)": [[1110, "jaxlib-0-1-74-nov-17-2021"]], "jaxlib 0.1.75 (Dec 8, 2021)": [[1110, "jaxlib-0-1-75-dec-8-2021"]], "jaxlib 0.1.76 (Jan 27, 2022)": [[1110, "jaxlib-0-1-76-jan-27-2022"]], "jaxlib 0.3.0 (Feb 10, 2022)": [[1110, "jaxlib-0-3-0-feb-10-2022"]], "jaxlib 0.3.10 (May 3, 2022)": [[1110, "jaxlib-0-3-10-may-3-2022"]], "jaxlib 0.3.14 (June 27, 2022)": [[1110, "jaxlib-0-3-14-june-27-2022"]], "jaxlib 0.3.15 (July 22, 2022)": [[1110, "jaxlib-0-3-15-july-22-2022"]], "jaxlib 0.3.2 (March 16, 2022)": [[1110, "jaxlib-0-3-2-march-16-2022"]], "jaxlib 0.3.20 (Sep 28, 2022)": [[1110, "jaxlib-0-3-20-sep-28-2022"]], "jaxlib 0.3.22 (Oct 11, 2022)": [[1110, "jaxlib-0-3-22-oct-11-2022"]], "jaxlib 0.3.24 (Nov 4, 2022)": [[1110, "jaxlib-0-3-24-nov-4-2022"]], "jaxlib 0.3.25 (Nov 15, 2022)": [[1110, "jaxlib-0-3-25-nov-15-2022"]], "jaxlib 0.3.5 (April 7, 2022)": [[1110, "jaxlib-0-3-5-april-7-2022"]], "jaxlib 0.3.7 (April 15, 2022)": [[1110, "jaxlib-0-3-7-april-15-2022"]], "jaxlib 0.4.0 (Dec 12, 2022)": [[1110, "jaxlib-0-4-0-dec-12-2022"]], "jaxlib 0.4.1 (Dec 13, 2022)": [[1110, "jaxlib-0-4-1-dec-13-2022"]], "jaxlib 0.4.10 (May 11, 2023)": [[1110, "jaxlib-0-4-10-may-11-2023"]], "jaxlib 0.4.11 (May 31, 2023)": [[1110, "jaxlib-0-4-11-may-31-2023"]], "jaxlib 0.4.12 (June 8, 2023)": [[1110, "jaxlib-0-4-12-june-8-2023"]], "jaxlib 0.4.13 (June 22, 2023)": [[1110, "jaxlib-0-4-13-june-22-2023"]], "jaxlib 0.4.14 (July 27, 2023)": [[1110, "jaxlib-0-4-14-july-27-2023"]], "jaxlib 0.4.16 (Sept 18, 2023)": [[1110, "jaxlib-0-4-16-sept-18-2023"]], "jaxlib 0.4.17 (Oct 3, 2023)": [[1110, "jaxlib-0-4-17-oct-3-2023"]], "jaxlib 0.4.18 (Oct 6, 2023)": [[1110, "jaxlib-0-4-18-oct-6-2023"]], "jaxlib 0.4.19 (Oct 19, 2023)": [[1110, "jaxlib-0-4-19-oct-19-2023"]], "jaxlib 0.4.2 (Jan 24, 2023)": [[1110, "jaxlib-0-4-2-jan-24-2023"]], "jaxlib 0.4.20 (Nov 2, 2023)": [[1110, "jaxlib-0-4-20-nov-2-2023"]], "jaxlib 0.4.21 (Dec 4 2023)": [[1110, "jaxlib-0-4-21-dec-4-2023"]], "jaxlib 0.4.22 (Dec 13, 2023)": [[1110, "jaxlib-0-4-22-dec-13-2023"]], "jaxlib 0.4.23 (Dec 13, 2023)": [[1110, "jaxlib-0-4-23-dec-13-2023"]], "jaxlib 0.4.24 (Feb 6, 2024)": [[1110, "jaxlib-0-4-24-feb-6-2024"]], "jaxlib 0.4.25 (Feb 26, 2024)": [[1110, "jaxlib-0-4-25-feb-26-2024"]], "jaxlib 0.4.26 (April 3, 2024)": [[1110, "jaxlib-0-4-26-april-3-2024"]], "jaxlib 0.4.27": [[1110, "jaxlib-0-4-27"]], "jaxlib 0.4.3 (Feb 8, 2023)": [[1110, "jaxlib-0-4-3-feb-8-2023"]], "jaxlib 0.4.4 (Feb 16, 2023)": [[1110, "jaxlib-0-4-4-feb-16-2023"]], "jaxlib 0.4.6 (Mar 9, 2023)": [[1110, "jaxlib-0-4-6-mar-9-2023"]], "jaxlib 0.4.7 (March 27, 2023)": [[1110, "jaxlib-0-4-7-march-27-2023"]], "jaxlib 0.4.9 (May 9, 2023)": [[1110, "jaxlib-0-4-9-may-9-2023"]], "jit": [[1114, "jit"]], "jit changes the behavior of my function": [[1122, "jit-changes-the-behavior-of-my-function"]], "jit changes the exact numerics of outputs": [[1122, "jit-changes-the-exact-numerics-of-outputs"]], "jit decorated function is very slow to compile": [[1122, "jit-decorated-function-is-very-slow-to-compile"]], "lax.conv and lax.conv_with_general_padding": [[1207, "lax-conv-and-lax-conv-with-general-padding"]], "linearize": [[1107, "linearize"]], "live_buffers replaced with live_arrays": [[1180, "live-buffers-replaced-with-live-arrays"]], "pallas.load and pallas.store": [[1216, "pallas-load-and-pallas-store"]], "pallas.program_id and pallas.num_programs": [[1216, "pallas-program-id-and-pallas-num-programs"]], "pip installation: Apple ARM-based Silicon GPUs": [[1127, "pip-installation-apple-arm-based-silicon-gpus"]], "pip installation: CPU": [[1127, "pip-installation-cpu"]], "pip installation: Google Cloud TPU": [[1127, "pip-installation-google-cloud-tpu"]], "pip installation: NVIDIA GPU (CUDA, installed locally, harder)": [[1127, "pip-installation-nvidia-gpu-cuda-installed-locally-harder"]], "pip installation: NVIDIA GPU (CUDA, installed via pip, easier)": [[1127, "pip-installation-nvidia-gpu-cuda-installed-via-pip-easier"]], "pjit": [[1114, "pjit"]], "pmap and jit": [[1136, "pmap-and-jit"]], "ppermute": [[1211, "ppermute"]], "psum": [[1211, "psum"]], "psum_scatter": [[1211, "psum-scatter"]], "python control flow + JIT": [[1199, "python-control-flow-jit"]], "scan primitive": [[1237, "scan-primitive"]], "shmap (shard_map) for simple per-device code": [[1186, "shmap-shard-map-for-simple-per-device-code"]], "tl;dr": [[1193, "tl-dr"]], "vjp and grad": [[1107, "vjp-and-grad"]], "vmap-of-pallas_call": [[1216, "vmap-of-pallas-call"]], "vmap/pmap": [[1114, "vmap-pmap"]], "while primitive": [[1237, "while-primitive"]], "while_loop": [[1199, "while-loop"]], "\u2705 numpy namespace": [[1189, "numpy-namespace"]], "\u2705 numpy.linalg & numpy.fft": [[1189, "numpy-linalg-numpy-fft"]], "\u2705 scipy.fft": [[1189, "scipy-fft"]], "\u2705 scipy.linalg": [[1189, "scipy-linalg"]], "\u2705 scipy.special": [[1189, "scipy-special"]], "\u2705 scipy.stats": [[1189, "scipy-stats"]], "\u2714 python control_flow + autodiff \u2714": [[1199, "python-control-flow-autodiff"]], "\u274c numpy.ma & numpy.polynomial": [[1189, "numpy-ma-numpy-polynomial"]], "\u274c numpy.random": [[1189, "numpy-random"]], "\u274c numpy.testing": [[1189, "numpy-testing"]], "\u274c scipy.cluster": [[1189, "scipy-cluster"]], "\u274c scipy.constants": [[1189, "scipy-constants"]], "\u274c scipy.datasets": [[1189, "scipy-datasets"]], "\u274c scipy.integrate": [[1189, "scipy-integrate"]], "\u274c scipy.interpolate": [[1189, "scipy-interpolate"]], "\u274c scipy.io": [[1189, "scipy-io"]], "\u274c scipy.ndimage": [[1189, "scipy-ndimage"]], "\u274c scipy.odr": [[1189, "scipy-odr"]], "\u274c scipy.optimize": [[1189, "scipy-optimize"]], "\u274c scipy.spatial": [[1189, "scipy-spatial"]], "\ud83d\udd2a Control Flow": [[1199, "control-flow"]], "\ud83d\udd2a Double (64bit) precision": [[1199, "double-64bit-precision"]], "\ud83d\udd2a Dynamic Shapes": [[1199, "dynamic-shapes"]], "\ud83d\udd2a In-Place Updates": [[1199, "in-place-updates"]], "\ud83d\udd2a JAX - The Sharp Bits \ud83d\udd2a": [[1199, "jax-the-sharp-bits"]], "\ud83d\udd2a Miscellaneous Divergences from NumPy": [[1199, "miscellaneous-divergences-from-numpy"]], "\ud83d\udd2a NaNs": [[1199, "nans"]], "\ud83d\udd2a Non-array inputs: NumPy vs. JAX": [[1199, "non-array-inputs-numpy-vs-jax"]], "\ud83d\udd2a Out-of-Bounds Indexing": [[1199, "out-of-bounds-indexing"]], "\ud83d\udd2a Pure functions": [[1199, "pure-functions"]], "\ud83d\udd2a Random Numbers": [[1199, "random-numbers"]], "\ud83d\udfe1 scipy.signal": [[1189, "scipy-signal"]], "\ud83d\udfe1 scipy.sparse": [[1189, "scipy-sparse"]]}, "docnames": ["Custom_Operation_for_GPUs", "_autosummary/jax.Array", "_autosummary/jax.Device", "_autosummary/jax.ShapeDtypeStruct", "_autosummary/jax.block_until_ready", "_autosummary/jax.check_tracer_leaks", "_autosummary/jax.checking_leaks", "_autosummary/jax.checkpoint", "_autosummary/jax.clear_caches", "_autosummary/jax.closure_convert", "_autosummary/jax.config", "_autosummary/jax.core.ClosedJaxpr", "_autosummary/jax.core.Jaxpr", "_autosummary/jax.custom_gradient", "_autosummary/jax.custom_jvp", "_autosummary/jax.custom_vjp", "_autosummary/jax.debug.breakpoint", "_autosummary/jax.debug.callback", "_autosummary/jax.debug.inspect_array_sharding", "_autosummary/jax.debug.print", "_autosummary/jax.debug.visualize_array_sharding", "_autosummary/jax.debug.visualize_sharding", "_autosummary/jax.debug_infs", "_autosummary/jax.debug_nans", "_autosummary/jax.default_backend", "_autosummary/jax.default_device", "_autosummary/jax.default_matmul_precision", "_autosummary/jax.default_prng_impl", "_autosummary/jax.device_count", "_autosummary/jax.device_get", "_autosummary/jax.device_put", "_autosummary/jax.device_put_replicated", "_autosummary/jax.device_put_sharded", "_autosummary/jax.devices", "_autosummary/jax.disable_jit", "_autosummary/jax.distributed.initialize", "_autosummary/jax.distributed.shutdown", "_autosummary/jax.dlpack.from_dlpack", "_autosummary/jax.dlpack.to_dlpack", "_autosummary/jax.dtypes.bfloat16", "_autosummary/jax.dtypes.canonicalize_dtype", "_autosummary/jax.dtypes.float0", "_autosummary/jax.dtypes.issubdtype", "_autosummary/jax.dtypes.prng_key", "_autosummary/jax.dtypes.result_type", "_autosummary/jax.dtypes.scalar_type_of", "_autosummary/jax.enable_checks", "_autosummary/jax.enable_custom_prng", "_autosummary/jax.enable_custom_vjp_by_custom_transpose", "_autosummary/jax.ensure_compile_time_eval", "_autosummary/jax.eval_shape", "_autosummary/jax.experimental.checkify.Error", "_autosummary/jax.experimental.checkify.JaxRuntimeError", "_autosummary/jax.experimental.checkify.all_checks", "_autosummary/jax.experimental.checkify.automatic_checks", "_autosummary/jax.experimental.checkify.check", "_autosummary/jax.experimental.checkify.check_error", "_autosummary/jax.experimental.checkify.checkify", "_autosummary/jax.experimental.checkify.div_checks", "_autosummary/jax.experimental.checkify.float_checks", "_autosummary/jax.experimental.checkify.index_checks", "_autosummary/jax.experimental.checkify.nan_checks", "_autosummary/jax.experimental.checkify.user_checks", "_autosummary/jax.experimental.disable_x64", "_autosummary/jax.experimental.enable_x64", "_autosummary/jax.experimental.host_callback.CallbackException", "_autosummary/jax.experimental.host_callback.barrier_wait", "_autosummary/jax.experimental.host_callback.call", "_autosummary/jax.experimental.host_callback.id_print", "_autosummary/jax.experimental.host_callback.id_tap", "_autosummary/jax.experimental.io_callback", "_autosummary/jax.experimental.maps.xmap", "_autosummary/jax.experimental.mesh_utils.create_device_mesh", "_autosummary/jax.experimental.mesh_utils.create_hybrid_device_mesh", "_autosummary/jax.experimental.multihost_utils.assert_equal", "_autosummary/jax.experimental.multihost_utils.broadcast_one_to_all", "_autosummary/jax.experimental.multihost_utils.global_array_to_host_local_array", "_autosummary/jax.experimental.multihost_utils.host_local_array_to_global_array", "_autosummary/jax.experimental.multihost_utils.process_allgather", "_autosummary/jax.experimental.multihost_utils.sync_global_devices", "_autosummary/jax.experimental.sparse.BCOO", "_autosummary/jax.experimental.sparse.BCSR", "_autosummary/jax.experimental.sparse.COO", "_autosummary/jax.experimental.sparse.CSC", "_autosummary/jax.experimental.sparse.CSR", "_autosummary/jax.experimental.sparse.JAXSparse", "_autosummary/jax.experimental.sparse.bcoo_broadcast_in_dim", "_autosummary/jax.experimental.sparse.bcoo_concatenate", "_autosummary/jax.experimental.sparse.bcoo_dot_general", "_autosummary/jax.experimental.sparse.bcoo_dot_general_sampled", "_autosummary/jax.experimental.sparse.bcoo_dynamic_slice", "_autosummary/jax.experimental.sparse.bcoo_extract", "_autosummary/jax.experimental.sparse.bcoo_fromdense", "_autosummary/jax.experimental.sparse.bcoo_gather", "_autosummary/jax.experimental.sparse.bcoo_multiply_dense", "_autosummary/jax.experimental.sparse.bcoo_multiply_sparse", "_autosummary/jax.experimental.sparse.bcoo_reduce_sum", "_autosummary/jax.experimental.sparse.bcoo_reshape", "_autosummary/jax.experimental.sparse.bcoo_slice", "_autosummary/jax.experimental.sparse.bcoo_sort_indices", "_autosummary/jax.experimental.sparse.bcoo_squeeze", "_autosummary/jax.experimental.sparse.bcoo_sum_duplicates", "_autosummary/jax.experimental.sparse.bcoo_todense", "_autosummary/jax.experimental.sparse.bcoo_transpose", "_autosummary/jax.experimental.sparse.bcoo_update_layout", "_autosummary/jax.experimental.sparse.bcsr_dot_general", "_autosummary/jax.experimental.sparse.bcsr_extract", "_autosummary/jax.experimental.sparse.bcsr_fromdense", "_autosummary/jax.experimental.sparse.bcsr_todense", "_autosummary/jax.experimental.sparse.coo_fromdense", "_autosummary/jax.experimental.sparse.coo_matmat", "_autosummary/jax.experimental.sparse.coo_matvec", "_autosummary/jax.experimental.sparse.coo_todense", "_autosummary/jax.experimental.sparse.csr_fromdense", "_autosummary/jax.experimental.sparse.csr_matmat", "_autosummary/jax.experimental.sparse.csr_matvec", "_autosummary/jax.experimental.sparse.csr_todense", "_autosummary/jax.experimental.sparse.empty", "_autosummary/jax.experimental.sparse.eye", "_autosummary/jax.experimental.sparse.grad", "_autosummary/jax.experimental.sparse.linalg.lobpcg_standard", "_autosummary/jax.experimental.sparse.linalg.spsolve", "_autosummary/jax.experimental.sparse.random_bcoo", "_autosummary/jax.experimental.sparse.sparsify", "_autosummary/jax.experimental.sparse.todense", "_autosummary/jax.experimental.sparse.value_and_grad", "_autosummary/jax.extend.linear_util.StoreException", "_autosummary/jax.extend.linear_util.WrappedFun", "_autosummary/jax.extend.linear_util.cache", "_autosummary/jax.extend.linear_util.merge_linear_aux", "_autosummary/jax.extend.linear_util.transformation", "_autosummary/jax.extend.linear_util.transformation_with_aux", "_autosummary/jax.extend.linear_util.wrap_init", "_autosummary/jax.extend.mlir.dialects", "_autosummary/jax.extend.mlir.ir", "_autosummary/jax.extend.mlir.passmanager", "_autosummary/jax.extend.random.define_prng_impl", "_autosummary/jax.extend.random.rbg_prng_impl", "_autosummary/jax.extend.random.seed_with_impl", "_autosummary/jax.extend.random.threefry2x32_p", "_autosummary/jax.extend.random.threefry_2x32", "_autosummary/jax.extend.random.threefry_prng_impl", "_autosummary/jax.extend.random.unsafe_rbg_prng_impl", "_autosummary/jax.flatten_util.ravel_pytree", "_autosummary/jax.grad", "_autosummary/jax.hessian", "_autosummary/jax.image.resize", "_autosummary/jax.image.scale_and_translate", "_autosummary/jax.jacfwd", "_autosummary/jax.jacrev", "_autosummary/jax.jit", "_autosummary/jax.jvp", "_autosummary/jax.lax.abs", "_autosummary/jax.lax.acos", "_autosummary/jax.lax.acosh", "_autosummary/jax.lax.add", "_autosummary/jax.lax.after_all", "_autosummary/jax.lax.all_gather", "_autosummary/jax.lax.all_to_all", "_autosummary/jax.lax.approx_max_k", "_autosummary/jax.lax.approx_min_k", "_autosummary/jax.lax.argmax", "_autosummary/jax.lax.argmin", "_autosummary/jax.lax.asin", "_autosummary/jax.lax.asinh", "_autosummary/jax.lax.associative_scan", "_autosummary/jax.lax.atan", "_autosummary/jax.lax.atan2", "_autosummary/jax.lax.atanh", "_autosummary/jax.lax.axis_index", "_autosummary/jax.lax.batch_matmul", "_autosummary/jax.lax.bessel_i0e", "_autosummary/jax.lax.bessel_i1e", "_autosummary/jax.lax.betainc", "_autosummary/jax.lax.bitcast_convert_type", "_autosummary/jax.lax.bitwise_and", "_autosummary/jax.lax.bitwise_not", "_autosummary/jax.lax.bitwise_or", "_autosummary/jax.lax.bitwise_xor", "_autosummary/jax.lax.broadcast", "_autosummary/jax.lax.broadcast_in_dim", "_autosummary/jax.lax.broadcast_shapes", "_autosummary/jax.lax.broadcast_to_rank", "_autosummary/jax.lax.broadcasted_iota", "_autosummary/jax.lax.cbrt", "_autosummary/jax.lax.ceil", "_autosummary/jax.lax.clamp", "_autosummary/jax.lax.clz", "_autosummary/jax.lax.collapse", "_autosummary/jax.lax.complex", "_autosummary/jax.lax.concatenate", "_autosummary/jax.lax.cond", "_autosummary/jax.lax.conj", "_autosummary/jax.lax.conv", "_autosummary/jax.lax.conv_dimension_numbers", "_autosummary/jax.lax.conv_general_dilated", "_autosummary/jax.lax.conv_general_dilated_local", "_autosummary/jax.lax.conv_general_dilated_patches", "_autosummary/jax.lax.conv_transpose", "_autosummary/jax.lax.conv_with_general_padding", "_autosummary/jax.lax.convert_element_type", "_autosummary/jax.lax.cos", "_autosummary/jax.lax.cosh", "_autosummary/jax.lax.cumlogsumexp", "_autosummary/jax.lax.cummax", "_autosummary/jax.lax.cummin", "_autosummary/jax.lax.cumprod", "_autosummary/jax.lax.cumsum", "_autosummary/jax.lax.custom_linear_solve", "_autosummary/jax.lax.custom_root", "_autosummary/jax.lax.digamma", "_autosummary/jax.lax.div", "_autosummary/jax.lax.dot", "_autosummary/jax.lax.dot_general", "_autosummary/jax.lax.dynamic_index_in_dim", "_autosummary/jax.lax.dynamic_slice", "_autosummary/jax.lax.dynamic_slice_in_dim", "_autosummary/jax.lax.dynamic_update_index_in_dim", "_autosummary/jax.lax.dynamic_update_slice", "_autosummary/jax.lax.dynamic_update_slice_in_dim", "_autosummary/jax.lax.eq", "_autosummary/jax.lax.erf", "_autosummary/jax.lax.erf_inv", "_autosummary/jax.lax.erfc", "_autosummary/jax.lax.exp", "_autosummary/jax.lax.expand_dims", "_autosummary/jax.lax.expm1", "_autosummary/jax.lax.fft", "_autosummary/jax.lax.floor", "_autosummary/jax.lax.fori_loop", "_autosummary/jax.lax.full", "_autosummary/jax.lax.full_like", "_autosummary/jax.lax.gather", "_autosummary/jax.lax.ge", "_autosummary/jax.lax.gt", "_autosummary/jax.lax.igamma", "_autosummary/jax.lax.igammac", "_autosummary/jax.lax.imag", "_autosummary/jax.lax.index_in_dim", "_autosummary/jax.lax.index_take", "_autosummary/jax.lax.integer_pow", "_autosummary/jax.lax.iota", "_autosummary/jax.lax.is_finite", "_autosummary/jax.lax.le", "_autosummary/jax.lax.lgamma", "_autosummary/jax.lax.linalg.cholesky", "_autosummary/jax.lax.linalg.eig", "_autosummary/jax.lax.linalg.eigh", "_autosummary/jax.lax.linalg.hessenberg", "_autosummary/jax.lax.linalg.householder_product", "_autosummary/jax.lax.linalg.lu", "_autosummary/jax.lax.linalg.qdwh", "_autosummary/jax.lax.linalg.qr", "_autosummary/jax.lax.linalg.schur", "_autosummary/jax.lax.linalg.svd", "_autosummary/jax.lax.linalg.triangular_solve", "_autosummary/jax.lax.linalg.tridiagonal", "_autosummary/jax.lax.linalg.tridiagonal_solve", "_autosummary/jax.lax.log", "_autosummary/jax.lax.log1p", "_autosummary/jax.lax.logistic", "_autosummary/jax.lax.lt", "_autosummary/jax.lax.map", "_autosummary/jax.lax.max", "_autosummary/jax.lax.min", "_autosummary/jax.lax.mul", "_autosummary/jax.lax.ne", "_autosummary/jax.lax.neg", "_autosummary/jax.lax.nextafter", "_autosummary/jax.lax.pad", "_autosummary/jax.lax.pdot", "_autosummary/jax.lax.pmax", "_autosummary/jax.lax.pmean", "_autosummary/jax.lax.pmin", "_autosummary/jax.lax.polygamma", "_autosummary/jax.lax.population_count", "_autosummary/jax.lax.pow", "_autosummary/jax.lax.ppermute", "_autosummary/jax.lax.pshuffle", "_autosummary/jax.lax.psum", "_autosummary/jax.lax.psum_scatter", "_autosummary/jax.lax.pswapaxes", "_autosummary/jax.lax.random_gamma_grad", "_autosummary/jax.lax.real", "_autosummary/jax.lax.reciprocal", "_autosummary/jax.lax.reduce", "_autosummary/jax.lax.reduce_precision", "_autosummary/jax.lax.reduce_window", "_autosummary/jax.lax.rem", "_autosummary/jax.lax.reshape", "_autosummary/jax.lax.rev", "_autosummary/jax.lax.rng_bit_generator", "_autosummary/jax.lax.rng_uniform", "_autosummary/jax.lax.round", "_autosummary/jax.lax.rsqrt", "_autosummary/jax.lax.scan", "_autosummary/jax.lax.scatter", "_autosummary/jax.lax.scatter_add", "_autosummary/jax.lax.scatter_apply", "_autosummary/jax.lax.scatter_max", "_autosummary/jax.lax.scatter_min", "_autosummary/jax.lax.scatter_mul", "_autosummary/jax.lax.select", "_autosummary/jax.lax.select_n", "_autosummary/jax.lax.shift_left", "_autosummary/jax.lax.shift_right_arithmetic", "_autosummary/jax.lax.shift_right_logical", "_autosummary/jax.lax.sign", "_autosummary/jax.lax.sin", "_autosummary/jax.lax.sinh", "_autosummary/jax.lax.slice", "_autosummary/jax.lax.slice_in_dim", "_autosummary/jax.lax.sort", "_autosummary/jax.lax.sort_key_val", "_autosummary/jax.lax.sqrt", "_autosummary/jax.lax.square", "_autosummary/jax.lax.squeeze", "_autosummary/jax.lax.stop_gradient", "_autosummary/jax.lax.sub", "_autosummary/jax.lax.switch", "_autosummary/jax.lax.tan", "_autosummary/jax.lax.tanh", "_autosummary/jax.lax.tie_in", "_autosummary/jax.lax.top_k", "_autosummary/jax.lax.transpose", "_autosummary/jax.lax.while_loop", "_autosummary/jax.lax.with_sharding_constraint", "_autosummary/jax.lax.zeros_like_array", "_autosummary/jax.lax.zeta", "_autosummary/jax.lib.xla_bridge.default_backend", "_autosummary/jax.lib.xla_bridge.get_backend", "_autosummary/jax.lib.xla_bridge.get_compile_options", "_autosummary/jax.linear_transpose", "_autosummary/jax.linearize", "_autosummary/jax.live_arrays", "_autosummary/jax.local_device_count", "_autosummary/jax.local_devices", "_autosummary/jax.log_compiles", "_autosummary/jax.make_array_from_callback", "_autosummary/jax.make_array_from_single_device_arrays", "_autosummary/jax.make_jaxpr", "_autosummary/jax.named_call", "_autosummary/jax.named_scope", "_autosummary/jax.nn.celu", "_autosummary/jax.nn.elu", "_autosummary/jax.nn.gelu", "_autosummary/jax.nn.glu", "_autosummary/jax.nn.hard_sigmoid", "_autosummary/jax.nn.hard_silu", "_autosummary/jax.nn.hard_swish", "_autosummary/jax.nn.hard_tanh", "_autosummary/jax.nn.initializers.constant", "_autosummary/jax.nn.initializers.delta_orthogonal", "_autosummary/jax.nn.initializers.glorot_normal", "_autosummary/jax.nn.initializers.glorot_uniform", "_autosummary/jax.nn.initializers.he_normal", "_autosummary/jax.nn.initializers.he_uniform", "_autosummary/jax.nn.initializers.lecun_normal", "_autosummary/jax.nn.initializers.lecun_uniform", "_autosummary/jax.nn.initializers.normal", "_autosummary/jax.nn.initializers.ones", "_autosummary/jax.nn.initializers.orthogonal", "_autosummary/jax.nn.initializers.truncated_normal", "_autosummary/jax.nn.initializers.uniform", "_autosummary/jax.nn.initializers.variance_scaling", "_autosummary/jax.nn.initializers.zeros", "_autosummary/jax.nn.leaky_relu", "_autosummary/jax.nn.log_sigmoid", "_autosummary/jax.nn.log_softmax", "_autosummary/jax.nn.logsumexp", "_autosummary/jax.nn.mish", "_autosummary/jax.nn.one_hot", "_autosummary/jax.nn.relu", "_autosummary/jax.nn.relu6", "_autosummary/jax.nn.selu", "_autosummary/jax.nn.sigmoid", "_autosummary/jax.nn.silu", "_autosummary/jax.nn.soft_sign", "_autosummary/jax.nn.softmax", "_autosummary/jax.nn.softplus", "_autosummary/jax.nn.sparse_plus", "_autosummary/jax.nn.squareplus", "_autosummary/jax.nn.standardize", "_autosummary/jax.nn.swish", "_autosummary/jax.numpy.ComplexWarning", "_autosummary/jax.numpy.abs", "_autosummary/jax.numpy.absolute", "_autosummary/jax.numpy.acos", "_autosummary/jax.numpy.acosh", "_autosummary/jax.numpy.add", "_autosummary/jax.numpy.all", "_autosummary/jax.numpy.allclose", "_autosummary/jax.numpy.amax", "_autosummary/jax.numpy.amin", "_autosummary/jax.numpy.angle", "_autosummary/jax.numpy.any", "_autosummary/jax.numpy.append", "_autosummary/jax.numpy.apply_along_axis", "_autosummary/jax.numpy.apply_over_axes", "_autosummary/jax.numpy.arange", "_autosummary/jax.numpy.arccos", "_autosummary/jax.numpy.arccosh", "_autosummary/jax.numpy.arcsin", "_autosummary/jax.numpy.arcsinh", "_autosummary/jax.numpy.arctan", "_autosummary/jax.numpy.arctan2", "_autosummary/jax.numpy.arctanh", "_autosummary/jax.numpy.argmax", "_autosummary/jax.numpy.argmin", "_autosummary/jax.numpy.argpartition", "_autosummary/jax.numpy.argsort", "_autosummary/jax.numpy.argwhere", "_autosummary/jax.numpy.around", "_autosummary/jax.numpy.array", "_autosummary/jax.numpy.array_equal", "_autosummary/jax.numpy.array_equiv", "_autosummary/jax.numpy.array_repr", "_autosummary/jax.numpy.array_split", "_autosummary/jax.numpy.array_str", "_autosummary/jax.numpy.asarray", "_autosummary/jax.numpy.asin", "_autosummary/jax.numpy.asinh", "_autosummary/jax.numpy.astype", "_autosummary/jax.numpy.atan", "_autosummary/jax.numpy.atan2", "_autosummary/jax.numpy.atanh", "_autosummary/jax.numpy.atleast_1d", "_autosummary/jax.numpy.atleast_2d", "_autosummary/jax.numpy.atleast_3d", "_autosummary/jax.numpy.average", "_autosummary/jax.numpy.bartlett", "_autosummary/jax.numpy.bincount", "_autosummary/jax.numpy.bitwise_and", "_autosummary/jax.numpy.bitwise_count", "_autosummary/jax.numpy.bitwise_invert", "_autosummary/jax.numpy.bitwise_left_shift", "_autosummary/jax.numpy.bitwise_not", "_autosummary/jax.numpy.bitwise_or", "_autosummary/jax.numpy.bitwise_right_shift", "_autosummary/jax.numpy.bitwise_xor", "_autosummary/jax.numpy.blackman", "_autosummary/jax.numpy.block", "_autosummary/jax.numpy.bool_", "_autosummary/jax.numpy.broadcast_arrays", "_autosummary/jax.numpy.broadcast_shapes", "_autosummary/jax.numpy.broadcast_to", "_autosummary/jax.numpy.c_", "_autosummary/jax.numpy.can_cast", "_autosummary/jax.numpy.cbrt", "_autosummary/jax.numpy.cdouble", "_autosummary/jax.numpy.ceil", "_autosummary/jax.numpy.character", "_autosummary/jax.numpy.choose", "_autosummary/jax.numpy.clip", "_autosummary/jax.numpy.column_stack", "_autosummary/jax.numpy.complex128", "_autosummary/jax.numpy.complex64", "_autosummary/jax.numpy.complex_", "_autosummary/jax.numpy.complexfloating", "_autosummary/jax.numpy.compress", "_autosummary/jax.numpy.concat", "_autosummary/jax.numpy.concatenate", "_autosummary/jax.numpy.conj", "_autosummary/jax.numpy.conjugate", "_autosummary/jax.numpy.convolve", "_autosummary/jax.numpy.copy", "_autosummary/jax.numpy.copysign", "_autosummary/jax.numpy.corrcoef", "_autosummary/jax.numpy.correlate", "_autosummary/jax.numpy.cos", "_autosummary/jax.numpy.cosh", "_autosummary/jax.numpy.count_nonzero", "_autosummary/jax.numpy.cov", "_autosummary/jax.numpy.cross", "_autosummary/jax.numpy.csingle", "_autosummary/jax.numpy.cumprod", "_autosummary/jax.numpy.cumsum", "_autosummary/jax.numpy.cumulative_sum", "_autosummary/jax.numpy.deg2rad", "_autosummary/jax.numpy.degrees", "_autosummary/jax.numpy.delete", "_autosummary/jax.numpy.diag", "_autosummary/jax.numpy.diag_indices", "_autosummary/jax.numpy.diag_indices_from", "_autosummary/jax.numpy.diagflat", "_autosummary/jax.numpy.diagonal", "_autosummary/jax.numpy.diff", "_autosummary/jax.numpy.digitize", "_autosummary/jax.numpy.divide", "_autosummary/jax.numpy.divmod", "_autosummary/jax.numpy.dot", "_autosummary/jax.numpy.double", "_autosummary/jax.numpy.dsplit", "_autosummary/jax.numpy.dstack", "_autosummary/jax.numpy.dtype", "_autosummary/jax.numpy.ediff1d", "_autosummary/jax.numpy.einsum", "_autosummary/jax.numpy.einsum_path", "_autosummary/jax.numpy.empty", "_autosummary/jax.numpy.empty_like", "_autosummary/jax.numpy.equal", "_autosummary/jax.numpy.exp", "_autosummary/jax.numpy.exp2", "_autosummary/jax.numpy.expand_dims", "_autosummary/jax.numpy.expm1", "_autosummary/jax.numpy.extract", "_autosummary/jax.numpy.eye", "_autosummary/jax.numpy.fabs", "_autosummary/jax.numpy.fft.fft", "_autosummary/jax.numpy.fft.fft2", "_autosummary/jax.numpy.fft.fftfreq", "_autosummary/jax.numpy.fft.fftn", "_autosummary/jax.numpy.fft.fftshift", "_autosummary/jax.numpy.fft.hfft", "_autosummary/jax.numpy.fft.ifft", "_autosummary/jax.numpy.fft.ifft2", "_autosummary/jax.numpy.fft.ifftn", "_autosummary/jax.numpy.fft.ifftshift", "_autosummary/jax.numpy.fft.ihfft", "_autosummary/jax.numpy.fft.irfft", "_autosummary/jax.numpy.fft.irfft2", "_autosummary/jax.numpy.fft.irfftn", "_autosummary/jax.numpy.fft.rfft", "_autosummary/jax.numpy.fft.rfft2", "_autosummary/jax.numpy.fft.rfftfreq", "_autosummary/jax.numpy.fft.rfftn", "_autosummary/jax.numpy.fill_diagonal", "_autosummary/jax.numpy.finfo", "_autosummary/jax.numpy.fix", "_autosummary/jax.numpy.flatnonzero", "_autosummary/jax.numpy.flexible", "_autosummary/jax.numpy.flip", "_autosummary/jax.numpy.fliplr", "_autosummary/jax.numpy.flipud", "_autosummary/jax.numpy.float16", "_autosummary/jax.numpy.float32", "_autosummary/jax.numpy.float64", "_autosummary/jax.numpy.float_", "_autosummary/jax.numpy.float_power", "_autosummary/jax.numpy.floating", "_autosummary/jax.numpy.floor", "_autosummary/jax.numpy.floor_divide", "_autosummary/jax.numpy.fmax", "_autosummary/jax.numpy.fmin", "_autosummary/jax.numpy.fmod", "_autosummary/jax.numpy.frexp", "_autosummary/jax.numpy.from_dlpack", "_autosummary/jax.numpy.frombuffer", "_autosummary/jax.numpy.fromfile", "_autosummary/jax.numpy.fromfunction", "_autosummary/jax.numpy.fromiter", "_autosummary/jax.numpy.frompyfunc", "_autosummary/jax.numpy.fromstring", "_autosummary/jax.numpy.full", "_autosummary/jax.numpy.full_like", "_autosummary/jax.numpy.gcd", "_autosummary/jax.numpy.generic", "_autosummary/jax.numpy.geomspace", "_autosummary/jax.numpy.get_printoptions", "_autosummary/jax.numpy.gradient", "_autosummary/jax.numpy.greater", "_autosummary/jax.numpy.greater_equal", "_autosummary/jax.numpy.hamming", "_autosummary/jax.numpy.hanning", "_autosummary/jax.numpy.heaviside", "_autosummary/jax.numpy.histogram", "_autosummary/jax.numpy.histogram2d", "_autosummary/jax.numpy.histogram_bin_edges", "_autosummary/jax.numpy.histogramdd", "_autosummary/jax.numpy.hsplit", "_autosummary/jax.numpy.hstack", "_autosummary/jax.numpy.hypot", "_autosummary/jax.numpy.i0", "_autosummary/jax.numpy.identity", "_autosummary/jax.numpy.iinfo", "_autosummary/jax.numpy.imag", "_autosummary/jax.numpy.index_exp", "_autosummary/jax.numpy.indices", "_autosummary/jax.numpy.inexact", "_autosummary/jax.numpy.inner", "_autosummary/jax.numpy.insert", "_autosummary/jax.numpy.int16", "_autosummary/jax.numpy.int32", "_autosummary/jax.numpy.int64", "_autosummary/jax.numpy.int8", "_autosummary/jax.numpy.int_", "_autosummary/jax.numpy.integer", "_autosummary/jax.numpy.interp", "_autosummary/jax.numpy.intersect1d", "_autosummary/jax.numpy.invert", "_autosummary/jax.numpy.isclose", "_autosummary/jax.numpy.iscomplex", "_autosummary/jax.numpy.iscomplexobj", "_autosummary/jax.numpy.isdtype", "_autosummary/jax.numpy.isfinite", "_autosummary/jax.numpy.isin", "_autosummary/jax.numpy.isinf", "_autosummary/jax.numpy.isnan", "_autosummary/jax.numpy.isneginf", "_autosummary/jax.numpy.isposinf", "_autosummary/jax.numpy.isreal", "_autosummary/jax.numpy.isrealobj", "_autosummary/jax.numpy.isscalar", "_autosummary/jax.numpy.issubdtype", "_autosummary/jax.numpy.iterable", "_autosummary/jax.numpy.ix_", "_autosummary/jax.numpy.kaiser", "_autosummary/jax.numpy.kron", "_autosummary/jax.numpy.lcm", "_autosummary/jax.numpy.ldexp", "_autosummary/jax.numpy.left_shift", "_autosummary/jax.numpy.less", "_autosummary/jax.numpy.less_equal", "_autosummary/jax.numpy.lexsort", "_autosummary/jax.numpy.linalg.cholesky", "_autosummary/jax.numpy.linalg.cond", "_autosummary/jax.numpy.linalg.cross", "_autosummary/jax.numpy.linalg.det", "_autosummary/jax.numpy.linalg.diagonal", "_autosummary/jax.numpy.linalg.eig", "_autosummary/jax.numpy.linalg.eigh", "_autosummary/jax.numpy.linalg.eigvals", "_autosummary/jax.numpy.linalg.eigvalsh", "_autosummary/jax.numpy.linalg.inv", "_autosummary/jax.numpy.linalg.lstsq", "_autosummary/jax.numpy.linalg.matmul", "_autosummary/jax.numpy.linalg.matrix_norm", "_autosummary/jax.numpy.linalg.matrix_power", "_autosummary/jax.numpy.linalg.matrix_rank", "_autosummary/jax.numpy.linalg.matrix_transpose", "_autosummary/jax.numpy.linalg.multi_dot", "_autosummary/jax.numpy.linalg.norm", "_autosummary/jax.numpy.linalg.outer", "_autosummary/jax.numpy.linalg.pinv", "_autosummary/jax.numpy.linalg.qr", "_autosummary/jax.numpy.linalg.slogdet", "_autosummary/jax.numpy.linalg.solve", "_autosummary/jax.numpy.linalg.svd", "_autosummary/jax.numpy.linalg.svdvals", "_autosummary/jax.numpy.linalg.tensordot", "_autosummary/jax.numpy.linalg.tensorinv", "_autosummary/jax.numpy.linalg.tensorsolve", "_autosummary/jax.numpy.linalg.vecdot", "_autosummary/jax.numpy.linalg.vector_norm", "_autosummary/jax.numpy.linspace", "_autosummary/jax.numpy.load", "_autosummary/jax.numpy.log", "_autosummary/jax.numpy.log10", "_autosummary/jax.numpy.log1p", "_autosummary/jax.numpy.log2", "_autosummary/jax.numpy.logaddexp", "_autosummary/jax.numpy.logaddexp2", "_autosummary/jax.numpy.logical_and", "_autosummary/jax.numpy.logical_not", "_autosummary/jax.numpy.logical_or", "_autosummary/jax.numpy.logical_xor", "_autosummary/jax.numpy.logspace", "_autosummary/jax.numpy.mask_indices", "_autosummary/jax.numpy.matmul", "_autosummary/jax.numpy.matrix_transpose", "_autosummary/jax.numpy.max", "_autosummary/jax.numpy.maximum", "_autosummary/jax.numpy.mean", "_autosummary/jax.numpy.median", "_autosummary/jax.numpy.meshgrid", "_autosummary/jax.numpy.mgrid", "_autosummary/jax.numpy.min", "_autosummary/jax.numpy.minimum", "_autosummary/jax.numpy.mod", "_autosummary/jax.numpy.modf", "_autosummary/jax.numpy.moveaxis", "_autosummary/jax.numpy.multiply", "_autosummary/jax.numpy.nan_to_num", "_autosummary/jax.numpy.nanargmax", "_autosummary/jax.numpy.nanargmin", "_autosummary/jax.numpy.nancumprod", "_autosummary/jax.numpy.nancumsum", "_autosummary/jax.numpy.nanmax", "_autosummary/jax.numpy.nanmean", "_autosummary/jax.numpy.nanmedian", "_autosummary/jax.numpy.nanmin", "_autosummary/jax.numpy.nanpercentile", "_autosummary/jax.numpy.nanprod", "_autosummary/jax.numpy.nanquantile", "_autosummary/jax.numpy.nanstd", "_autosummary/jax.numpy.nansum", "_autosummary/jax.numpy.nanvar", "_autosummary/jax.numpy.ndarray", "_autosummary/jax.numpy.ndarray.at", "_autosummary/jax.numpy.ndim", "_autosummary/jax.numpy.negative", "_autosummary/jax.numpy.nextafter", "_autosummary/jax.numpy.nonzero", "_autosummary/jax.numpy.not_equal", "_autosummary/jax.numpy.number", "_autosummary/jax.numpy.object_", "_autosummary/jax.numpy.ogrid", "_autosummary/jax.numpy.ones", "_autosummary/jax.numpy.ones_like", "_autosummary/jax.numpy.outer", "_autosummary/jax.numpy.packbits", "_autosummary/jax.numpy.pad", "_autosummary/jax.numpy.partition", "_autosummary/jax.numpy.percentile", "_autosummary/jax.numpy.permute_dims", "_autosummary/jax.numpy.piecewise", "_autosummary/jax.numpy.place", "_autosummary/jax.numpy.poly", "_autosummary/jax.numpy.polyadd", "_autosummary/jax.numpy.polyder", "_autosummary/jax.numpy.polydiv", "_autosummary/jax.numpy.polyfit", "_autosummary/jax.numpy.polyint", "_autosummary/jax.numpy.polymul", "_autosummary/jax.numpy.polysub", "_autosummary/jax.numpy.polyval", "_autosummary/jax.numpy.positive", "_autosummary/jax.numpy.pow", "_autosummary/jax.numpy.power", "_autosummary/jax.numpy.printoptions", "_autosummary/jax.numpy.prod", "_autosummary/jax.numpy.promote_types", "_autosummary/jax.numpy.ptp", "_autosummary/jax.numpy.put", "_autosummary/jax.numpy.quantile", "_autosummary/jax.numpy.r_", "_autosummary/jax.numpy.rad2deg", "_autosummary/jax.numpy.radians", "_autosummary/jax.numpy.ravel", "_autosummary/jax.numpy.ravel_multi_index", "_autosummary/jax.numpy.real", "_autosummary/jax.numpy.reciprocal", "_autosummary/jax.numpy.remainder", "_autosummary/jax.numpy.repeat", "_autosummary/jax.numpy.reshape", "_autosummary/jax.numpy.resize", "_autosummary/jax.numpy.result_type", "_autosummary/jax.numpy.right_shift", "_autosummary/jax.numpy.rint", "_autosummary/jax.numpy.roll", "_autosummary/jax.numpy.rollaxis", "_autosummary/jax.numpy.roots", "_autosummary/jax.numpy.rot90", "_autosummary/jax.numpy.round", "_autosummary/jax.numpy.round_", "_autosummary/jax.numpy.s_", "_autosummary/jax.numpy.save", "_autosummary/jax.numpy.savez", "_autosummary/jax.numpy.searchsorted", "_autosummary/jax.numpy.select", "_autosummary/jax.numpy.set_printoptions", "_autosummary/jax.numpy.setdiff1d", "_autosummary/jax.numpy.setxor1d", "_autosummary/jax.numpy.shape", "_autosummary/jax.numpy.sign", "_autosummary/jax.numpy.signbit", "_autosummary/jax.numpy.signedinteger", "_autosummary/jax.numpy.sin", "_autosummary/jax.numpy.sinc", "_autosummary/jax.numpy.single", "_autosummary/jax.numpy.sinh", "_autosummary/jax.numpy.size", "_autosummary/jax.numpy.sort", "_autosummary/jax.numpy.sort_complex", "_autosummary/jax.numpy.split", "_autosummary/jax.numpy.sqrt", "_autosummary/jax.numpy.square", "_autosummary/jax.numpy.squeeze", "_autosummary/jax.numpy.stack", "_autosummary/jax.numpy.std", "_autosummary/jax.numpy.subtract", "_autosummary/jax.numpy.sum", "_autosummary/jax.numpy.swapaxes", "_autosummary/jax.numpy.take", "_autosummary/jax.numpy.take_along_axis", "_autosummary/jax.numpy.tan", "_autosummary/jax.numpy.tanh", "_autosummary/jax.numpy.tensordot", "_autosummary/jax.numpy.tile", "_autosummary/jax.numpy.trace", "_autosummary/jax.numpy.transpose", "_autosummary/jax.numpy.trapezoid", "_autosummary/jax.numpy.tri", "_autosummary/jax.numpy.tril", "_autosummary/jax.numpy.tril_indices", "_autosummary/jax.numpy.tril_indices_from", "_autosummary/jax.numpy.trim_zeros", "_autosummary/jax.numpy.triu", "_autosummary/jax.numpy.triu_indices", "_autosummary/jax.numpy.triu_indices_from", "_autosummary/jax.numpy.true_divide", "_autosummary/jax.numpy.trunc", "_autosummary/jax.numpy.ufunc", "_autosummary/jax.numpy.uint", "_autosummary/jax.numpy.uint16", "_autosummary/jax.numpy.uint32", "_autosummary/jax.numpy.uint64", "_autosummary/jax.numpy.uint8", "_autosummary/jax.numpy.union1d", "_autosummary/jax.numpy.unique", "_autosummary/jax.numpy.unique_all", "_autosummary/jax.numpy.unique_counts", "_autosummary/jax.numpy.unique_inverse", "_autosummary/jax.numpy.unique_values", "_autosummary/jax.numpy.unpackbits", "_autosummary/jax.numpy.unravel_index", "_autosummary/jax.numpy.unsignedinteger", "_autosummary/jax.numpy.unstack", "_autosummary/jax.numpy.unwrap", "_autosummary/jax.numpy.vander", "_autosummary/jax.numpy.var", "_autosummary/jax.numpy.vdot", "_autosummary/jax.numpy.vecdot", "_autosummary/jax.numpy.vectorize", "_autosummary/jax.numpy.vsplit", "_autosummary/jax.numpy.vstack", "_autosummary/jax.numpy.where", "_autosummary/jax.numpy.zeros", "_autosummary/jax.numpy.zeros_like", "_autosummary/jax.numpy_rank_promotion", "_autosummary/jax.ops.segment_max", "_autosummary/jax.ops.segment_min", "_autosummary/jax.ops.segment_prod", "_autosummary/jax.ops.segment_sum", "_autosummary/jax.pmap", "_autosummary/jax.print_environment_info", "_autosummary/jax.process_count", "_autosummary/jax.process_index", "_autosummary/jax.profiler.StepTraceAnnotation", "_autosummary/jax.profiler.TraceAnnotation", "_autosummary/jax.profiler.annotate_function", "_autosummary/jax.profiler.device_memory_profile", "_autosummary/jax.profiler.save_device_memory_profile", "_autosummary/jax.profiler.start_server", "_autosummary/jax.profiler.start_trace", "_autosummary/jax.profiler.stop_trace", "_autosummary/jax.profiler.trace", "_autosummary/jax.pure_callback", "_autosummary/jax.random.PRNGKey", "_autosummary/jax.random.ball", "_autosummary/jax.random.bernoulli", "_autosummary/jax.random.beta", "_autosummary/jax.random.binomial", "_autosummary/jax.random.bits", "_autosummary/jax.random.categorical", "_autosummary/jax.random.cauchy", "_autosummary/jax.random.chisquare", "_autosummary/jax.random.choice", "_autosummary/jax.random.clone", "_autosummary/jax.random.dirichlet", "_autosummary/jax.random.double_sided_maxwell", "_autosummary/jax.random.exponential", "_autosummary/jax.random.f", "_autosummary/jax.random.fold_in", "_autosummary/jax.random.gamma", "_autosummary/jax.random.generalized_normal", "_autosummary/jax.random.geometric", "_autosummary/jax.random.gumbel", "_autosummary/jax.random.key", "_autosummary/jax.random.key_data", "_autosummary/jax.random.laplace", "_autosummary/jax.random.loggamma", "_autosummary/jax.random.logistic", "_autosummary/jax.random.lognormal", "_autosummary/jax.random.maxwell", "_autosummary/jax.random.multivariate_normal", "_autosummary/jax.random.normal", "_autosummary/jax.random.orthogonal", "_autosummary/jax.random.pareto", "_autosummary/jax.random.permutation", "_autosummary/jax.random.poisson", "_autosummary/jax.random.rademacher", "_autosummary/jax.random.randint", "_autosummary/jax.random.rayleigh", "_autosummary/jax.random.split", "_autosummary/jax.random.t", "_autosummary/jax.random.triangular", "_autosummary/jax.random.truncated_normal", "_autosummary/jax.random.uniform", "_autosummary/jax.random.wald", "_autosummary/jax.random.weibull_min", "_autosummary/jax.random.wrap_key_data", "_autosummary/jax.scipy.fft.dct", "_autosummary/jax.scipy.fft.dctn", "_autosummary/jax.scipy.fft.idct", "_autosummary/jax.scipy.fft.idctn", "_autosummary/jax.scipy.integrate.trapezoid", "_autosummary/jax.scipy.linalg.block_diag", "_autosummary/jax.scipy.linalg.cho_factor", "_autosummary/jax.scipy.linalg.cho_solve", "_autosummary/jax.scipy.linalg.cholesky", "_autosummary/jax.scipy.linalg.det", "_autosummary/jax.scipy.linalg.eigh", "_autosummary/jax.scipy.linalg.eigh_tridiagonal", "_autosummary/jax.scipy.linalg.expm", "_autosummary/jax.scipy.linalg.expm_frechet", "_autosummary/jax.scipy.linalg.funm", "_autosummary/jax.scipy.linalg.hessenberg", "_autosummary/jax.scipy.linalg.hilbert", "_autosummary/jax.scipy.linalg.inv", "_autosummary/jax.scipy.linalg.lu", "_autosummary/jax.scipy.linalg.lu_factor", "_autosummary/jax.scipy.linalg.lu_solve", "_autosummary/jax.scipy.linalg.polar", "_autosummary/jax.scipy.linalg.qr", "_autosummary/jax.scipy.linalg.rsf2csf", "_autosummary/jax.scipy.linalg.schur", "_autosummary/jax.scipy.linalg.solve", "_autosummary/jax.scipy.linalg.solve_triangular", "_autosummary/jax.scipy.linalg.sqrtm", "_autosummary/jax.scipy.linalg.svd", "_autosummary/jax.scipy.linalg.toeplitz", "_autosummary/jax.scipy.ndimage.map_coordinates", "_autosummary/jax.scipy.optimize.OptimizeResults", "_autosummary/jax.scipy.optimize.minimize", "_autosummary/jax.scipy.signal.convolve", "_autosummary/jax.scipy.signal.convolve2d", "_autosummary/jax.scipy.signal.correlate", "_autosummary/jax.scipy.signal.correlate2d", "_autosummary/jax.scipy.signal.csd", "_autosummary/jax.scipy.signal.fftconvolve", "_autosummary/jax.scipy.signal.istft", "_autosummary/jax.scipy.signal.stft", "_autosummary/jax.scipy.signal.welch", "_autosummary/jax.scipy.sparse.linalg.bicgstab", "_autosummary/jax.scipy.sparse.linalg.cg", "_autosummary/jax.scipy.sparse.linalg.gmres", "_autosummary/jax.scipy.spatial.transform.Rotation", "_autosummary/jax.scipy.spatial.transform.Slerp", "_autosummary/jax.scipy.special.bernoulli", "_autosummary/jax.scipy.special.beta", "_autosummary/jax.scipy.special.betainc", "_autosummary/jax.scipy.special.betaln", "_autosummary/jax.scipy.special.digamma", "_autosummary/jax.scipy.special.entr", "_autosummary/jax.scipy.special.erf", "_autosummary/jax.scipy.special.erfc", "_autosummary/jax.scipy.special.erfinv", "_autosummary/jax.scipy.special.exp1", "_autosummary/jax.scipy.special.expi", "_autosummary/jax.scipy.special.expit", "_autosummary/jax.scipy.special.expn", "_autosummary/jax.scipy.special.factorial", "_autosummary/jax.scipy.special.gamma", "_autosummary/jax.scipy.special.gammainc", "_autosummary/jax.scipy.special.gammaincc", "_autosummary/jax.scipy.special.gammaln", "_autosummary/jax.scipy.special.hyp1f1", "_autosummary/jax.scipy.special.i0", "_autosummary/jax.scipy.special.i0e", "_autosummary/jax.scipy.special.i1", "_autosummary/jax.scipy.special.i1e", "_autosummary/jax.scipy.special.kl_div", "_autosummary/jax.scipy.special.log_ndtr", "_autosummary/jax.scipy.special.logit", "_autosummary/jax.scipy.special.logsumexp", "_autosummary/jax.scipy.special.lpmn", "_autosummary/jax.scipy.special.lpmn_values", "_autosummary/jax.scipy.special.multigammaln", "_autosummary/jax.scipy.special.ndtr", "_autosummary/jax.scipy.special.ndtri", "_autosummary/jax.scipy.special.poch", "_autosummary/jax.scipy.special.polygamma", "_autosummary/jax.scipy.special.rel_entr", "_autosummary/jax.scipy.special.spence", "_autosummary/jax.scipy.special.sph_harm", "_autosummary/jax.scipy.special.xlog1py", "_autosummary/jax.scipy.special.xlogy", "_autosummary/jax.scipy.special.zeta", "_autosummary/jax.scipy.stats.bernoulli.cdf", "_autosummary/jax.scipy.stats.bernoulli.logpmf", "_autosummary/jax.scipy.stats.bernoulli.pmf", "_autosummary/jax.scipy.stats.bernoulli.ppf", "_autosummary/jax.scipy.stats.beta.cdf", "_autosummary/jax.scipy.stats.beta.logcdf", "_autosummary/jax.scipy.stats.beta.logpdf", "_autosummary/jax.scipy.stats.beta.logsf", "_autosummary/jax.scipy.stats.beta.pdf", "_autosummary/jax.scipy.stats.beta.sf", "_autosummary/jax.scipy.stats.betabinom.logpmf", "_autosummary/jax.scipy.stats.betabinom.pmf", "_autosummary/jax.scipy.stats.binom.logpmf", "_autosummary/jax.scipy.stats.binom.pmf", "_autosummary/jax.scipy.stats.cauchy.cdf", "_autosummary/jax.scipy.stats.cauchy.isf", "_autosummary/jax.scipy.stats.cauchy.logcdf", "_autosummary/jax.scipy.stats.cauchy.logpdf", "_autosummary/jax.scipy.stats.cauchy.logsf", "_autosummary/jax.scipy.stats.cauchy.pdf", "_autosummary/jax.scipy.stats.cauchy.ppf", "_autosummary/jax.scipy.stats.cauchy.sf", "_autosummary/jax.scipy.stats.chi2.cdf", "_autosummary/jax.scipy.stats.chi2.logcdf", "_autosummary/jax.scipy.stats.chi2.logpdf", "_autosummary/jax.scipy.stats.chi2.logsf", "_autosummary/jax.scipy.stats.chi2.pdf", "_autosummary/jax.scipy.stats.chi2.sf", "_autosummary/jax.scipy.stats.dirichlet.logpdf", "_autosummary/jax.scipy.stats.dirichlet.pdf", "_autosummary/jax.scipy.stats.expon.logpdf", "_autosummary/jax.scipy.stats.expon.pdf", "_autosummary/jax.scipy.stats.gamma.cdf", "_autosummary/jax.scipy.stats.gamma.logcdf", "_autosummary/jax.scipy.stats.gamma.logpdf", "_autosummary/jax.scipy.stats.gamma.logsf", "_autosummary/jax.scipy.stats.gamma.pdf", "_autosummary/jax.scipy.stats.gamma.sf", "_autosummary/jax.scipy.stats.gaussian_kde", "_autosummary/jax.scipy.stats.gaussian_kde.evaluate", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_box_1d", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_gaussian", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_kde", "_autosummary/jax.scipy.stats.gaussian_kde.logpdf", "_autosummary/jax.scipy.stats.gaussian_kde.pdf", "_autosummary/jax.scipy.stats.gaussian_kde.resample", "_autosummary/jax.scipy.stats.gennorm.cdf", "_autosummary/jax.scipy.stats.gennorm.logpdf", "_autosummary/jax.scipy.stats.gennorm.pdf", "_autosummary/jax.scipy.stats.geom.logpmf", "_autosummary/jax.scipy.stats.geom.pmf", "_autosummary/jax.scipy.stats.laplace.cdf", "_autosummary/jax.scipy.stats.laplace.logpdf", "_autosummary/jax.scipy.stats.laplace.pdf", "_autosummary/jax.scipy.stats.logistic.cdf", "_autosummary/jax.scipy.stats.logistic.isf", "_autosummary/jax.scipy.stats.logistic.logpdf", "_autosummary/jax.scipy.stats.logistic.pdf", "_autosummary/jax.scipy.stats.logistic.ppf", "_autosummary/jax.scipy.stats.logistic.sf", "_autosummary/jax.scipy.stats.mode", "_autosummary/jax.scipy.stats.multinomial.logpmf", "_autosummary/jax.scipy.stats.multinomial.pmf", "_autosummary/jax.scipy.stats.multivariate_normal.logpdf", "_autosummary/jax.scipy.stats.multivariate_normal.pdf", "_autosummary/jax.scipy.stats.nbinom.logpmf", "_autosummary/jax.scipy.stats.nbinom.pmf", "_autosummary/jax.scipy.stats.norm.cdf", "_autosummary/jax.scipy.stats.norm.isf", "_autosummary/jax.scipy.stats.norm.logcdf", "_autosummary/jax.scipy.stats.norm.logpdf", "_autosummary/jax.scipy.stats.norm.logsf", "_autosummary/jax.scipy.stats.norm.pdf", "_autosummary/jax.scipy.stats.norm.ppf", "_autosummary/jax.scipy.stats.norm.sf", "_autosummary/jax.scipy.stats.pareto.logpdf", "_autosummary/jax.scipy.stats.pareto.pdf", "_autosummary/jax.scipy.stats.poisson.logpmf", "_autosummary/jax.scipy.stats.poisson.pmf", "_autosummary/jax.scipy.stats.rankdata", "_autosummary/jax.scipy.stats.sem", "_autosummary/jax.scipy.stats.t.logpdf", "_autosummary/jax.scipy.stats.t.pdf", "_autosummary/jax.scipy.stats.truncnorm.cdf", "_autosummary/jax.scipy.stats.truncnorm.logcdf", "_autosummary/jax.scipy.stats.truncnorm.logpdf", "_autosummary/jax.scipy.stats.truncnorm.logsf", "_autosummary/jax.scipy.stats.truncnorm.pdf", "_autosummary/jax.scipy.stats.truncnorm.sf", "_autosummary/jax.scipy.stats.uniform.cdf", "_autosummary/jax.scipy.stats.uniform.logpdf", "_autosummary/jax.scipy.stats.uniform.pdf", "_autosummary/jax.scipy.stats.uniform.ppf", "_autosummary/jax.scipy.stats.vonmises.logpdf", "_autosummary/jax.scipy.stats.vonmises.pdf", "_autosummary/jax.scipy.stats.wrapcauchy.logpdf", "_autosummary/jax.scipy.stats.wrapcauchy.pdf", "_autosummary/jax.transfer_guard", "_autosummary/jax.tree.all", "_autosummary/jax.tree.flatten", "_autosummary/jax.tree.leaves", "_autosummary/jax.tree.map", "_autosummary/jax.tree.reduce", "_autosummary/jax.tree.structure", "_autosummary/jax.tree.transpose", "_autosummary/jax.tree.unflatten", "_autosummary/jax.tree_util.Partial", "_autosummary/jax.tree_util.all_leaves", "_autosummary/jax.tree_util.build_tree", "_autosummary/jax.tree_util.keystr", "_autosummary/jax.tree_util.register_pytree_node", "_autosummary/jax.tree_util.register_pytree_node_class", "_autosummary/jax.tree_util.register_pytree_with_keys", "_autosummary/jax.tree_util.register_pytree_with_keys_class", "_autosummary/jax.tree_util.tree_all", "_autosummary/jax.tree_util.tree_flatten", "_autosummary/jax.tree_util.tree_flatten_with_path", "_autosummary/jax.tree_util.tree_leaves", "_autosummary/jax.tree_util.tree_leaves_with_path", "_autosummary/jax.tree_util.tree_map", "_autosummary/jax.tree_util.tree_map_with_path", "_autosummary/jax.tree_util.tree_reduce", "_autosummary/jax.tree_util.tree_structure", "_autosummary/jax.tree_util.tree_transpose", "_autosummary/jax.tree_util.tree_unflatten", "_autosummary/jax.tree_util.treedef_children", "_autosummary/jax.tree_util.treedef_is_leaf", "_autosummary/jax.tree_util.treedef_tuple", "_autosummary/jax.typing.ArrayLike", "_autosummary/jax.typing.DTypeLike", "_autosummary/jax.value_and_grad", "_autosummary/jax.vjp", "_autosummary/jax.vmap", "_autosummary/jax.xla_computation", "advanced_guide", "aot", "api_compatibility", "async_dispatch", "autodidax", "beginner_guide", "building_on_jax", "changelog", "concurrency", "contributing", "contributor_guide", "debugging/checkify_guide", "debugging/flags", "debugging/index", "debugging/print_breakpoint", "deprecation", "developer", "device_memory_profiling", "errors", "faq", "glossary", "gpu_memory_allocation", "gpu_performance_tips", "index", "installation", "investigating_a_regression", "jax", "jax-101/01-jax-basics", "jax-101/02-jitting", "jax-101/03-vectorization", "jax-101/04-advanced-autodiff", "jax-101/05-random-numbers", "jax-101/05.1-pytrees", "jax-101/06-parallelism", "jax-101/07-state", "jax-101/08-pjit", "jax-101/index", "jax.debug", "jax.distributed", "jax.dlpack", "jax.dtypes", "jax.example_libraries", "jax.example_libraries.optimizers", "jax.example_libraries.stax", "jax.experimental", "jax.experimental.array_api", "jax.experimental.checkify", "jax.experimental.compilation_cache", "jax.experimental.custom_partitioning", "jax.experimental.host_callback", "jax.experimental.jet", "jax.experimental.key_reuse", "jax.experimental.maps", "jax.experimental.mesh_utils", "jax.experimental.multihost_utils", "jax.experimental.pjit", "jax.experimental.sparse", "jax.extend", "jax.extend.linear_util", "jax.extend.mlir", "jax.extend.random", "jax.flatten_util", "jax.image", "jax.lax", "jax.lib", "jax.nn", "jax.nn.initializers", "jax.numpy", "jax.ops", "jax.profiler", "jax.random", "jax.scipy", "jax.sharding", "jax.stages", "jax.tree", "jax.tree_util", "jax.typing", "jax_array_migration", "jax_internal_api", "jaxpr", "jep/10657-sequencing-effects", "jep/11830-new-remat-checkpoint", "jep/12049-type-annotations", "jep/14273-shard-map", "jep/15856-jex", "jep/17111-shmap-transpose", "jep/18137-numpy-scipy-scope", "jep/2026-custom-derivatives", "jep/263-prng", "jep/4008-custom-vjp-update", "jep/4410-omnistaging", "jep/9263-typed-keys", "jep/9407-type-promotion", "jep/9419-jax-versioning", "jep/index", "multi_process", "notebooks/Common_Gotchas_in_JAX", "notebooks/Custom_derivative_rules_for_Python_code", "notebooks/Distributed_arrays_and_automatic_parallelization", "notebooks/How_JAX_primitives_work", "notebooks/Neural_Network_and_Data_Loading", "notebooks/Writing_custom_interpreters_in_Jax", "notebooks/autodiff_cookbook", "notebooks/autodiff_remat", "notebooks/convolutions", "notebooks/external_callbacks", "notebooks/neural_network_with_tfds_data", "notebooks/quickstart", "notebooks/shard_map", "notebooks/thinking_in_jax", "notebooks/vmapped_log_probs", "notebooks/xmap_tutorial", "notes", "pallas/design", "pallas/index", "pallas/quickstart", "pallas/tpu/details", "pallas/tpu/index", "pallas/tpu/pipelining", "persistent_compilation_cache", "profiling", "pytrees", "rank_promotion_warning", "transfer_guard", "tutorials/advanced-autodiff", "tutorials/advanced-compilation", "tutorials/advanced-debugging", "tutorials/automatic-differentiation", "tutorials/automatic-vectorization", "tutorials/debugging", "tutorials/external-callbacks", "tutorials/gradient-checkpointing", "tutorials/index", "tutorials/jax-primitives", "tutorials/jaxpr", "tutorials/jit-compilation", "tutorials/key-concepts", "tutorials/parallelism", "tutorials/profiling-and-performance", "tutorials/quickstart", "tutorials/random-numbers", "tutorials/sharded-computation", "tutorials/simple-neural-network", "tutorials/stateful-computations", "tutorials/working-with-pytrees", "type_promotion", "user_guides"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["Custom_Operation_for_GPUs.md", "_autosummary/jax.Array.rst", "_autosummary/jax.Device.rst", "_autosummary/jax.ShapeDtypeStruct.rst", "_autosummary/jax.block_until_ready.rst", "_autosummary/jax.check_tracer_leaks.rst", "_autosummary/jax.checking_leaks.rst", "_autosummary/jax.checkpoint.rst", "_autosummary/jax.clear_caches.rst", "_autosummary/jax.closure_convert.rst", "_autosummary/jax.config.rst", "_autosummary/jax.core.ClosedJaxpr.rst", "_autosummary/jax.core.Jaxpr.rst", "_autosummary/jax.custom_gradient.rst", "_autosummary/jax.custom_jvp.rst", "_autosummary/jax.custom_vjp.rst", "_autosummary/jax.debug.breakpoint.rst", "_autosummary/jax.debug.callback.rst", "_autosummary/jax.debug.inspect_array_sharding.rst", "_autosummary/jax.debug.print.rst", "_autosummary/jax.debug.visualize_array_sharding.rst", "_autosummary/jax.debug.visualize_sharding.rst", "_autosummary/jax.debug_infs.rst", "_autosummary/jax.debug_nans.rst", "_autosummary/jax.default_backend.rst", "_autosummary/jax.default_device.rst", "_autosummary/jax.default_matmul_precision.rst", "_autosummary/jax.default_prng_impl.rst", "_autosummary/jax.device_count.rst", "_autosummary/jax.device_get.rst", "_autosummary/jax.device_put.rst", "_autosummary/jax.device_put_replicated.rst", "_autosummary/jax.device_put_sharded.rst", "_autosummary/jax.devices.rst", "_autosummary/jax.disable_jit.rst", "_autosummary/jax.distributed.initialize.rst", "_autosummary/jax.distributed.shutdown.rst", "_autosummary/jax.dlpack.from_dlpack.rst", "_autosummary/jax.dlpack.to_dlpack.rst", "_autosummary/jax.dtypes.bfloat16.rst", "_autosummary/jax.dtypes.canonicalize_dtype.rst", "_autosummary/jax.dtypes.float0.rst", "_autosummary/jax.dtypes.issubdtype.rst", "_autosummary/jax.dtypes.prng_key.rst", "_autosummary/jax.dtypes.result_type.rst", "_autosummary/jax.dtypes.scalar_type_of.rst", "_autosummary/jax.enable_checks.rst", "_autosummary/jax.enable_custom_prng.rst", "_autosummary/jax.enable_custom_vjp_by_custom_transpose.rst", "_autosummary/jax.ensure_compile_time_eval.rst", "_autosummary/jax.eval_shape.rst", "_autosummary/jax.experimental.checkify.Error.rst", "_autosummary/jax.experimental.checkify.JaxRuntimeError.rst", "_autosummary/jax.experimental.checkify.all_checks.rst", "_autosummary/jax.experimental.checkify.automatic_checks.rst", "_autosummary/jax.experimental.checkify.check.rst", "_autosummary/jax.experimental.checkify.check_error.rst", "_autosummary/jax.experimental.checkify.checkify.rst", "_autosummary/jax.experimental.checkify.div_checks.rst", "_autosummary/jax.experimental.checkify.float_checks.rst", "_autosummary/jax.experimental.checkify.index_checks.rst", "_autosummary/jax.experimental.checkify.nan_checks.rst", "_autosummary/jax.experimental.checkify.user_checks.rst", "_autosummary/jax.experimental.disable_x64.rst", "_autosummary/jax.experimental.enable_x64.rst", "_autosummary/jax.experimental.host_callback.CallbackException.rst", "_autosummary/jax.experimental.host_callback.barrier_wait.rst", "_autosummary/jax.experimental.host_callback.call.rst", "_autosummary/jax.experimental.host_callback.id_print.rst", "_autosummary/jax.experimental.host_callback.id_tap.rst", "_autosummary/jax.experimental.io_callback.rst", "_autosummary/jax.experimental.maps.xmap.rst", "_autosummary/jax.experimental.mesh_utils.create_device_mesh.rst", "_autosummary/jax.experimental.mesh_utils.create_hybrid_device_mesh.rst", "_autosummary/jax.experimental.multihost_utils.assert_equal.rst", "_autosummary/jax.experimental.multihost_utils.broadcast_one_to_all.rst", "_autosummary/jax.experimental.multihost_utils.global_array_to_host_local_array.rst", "_autosummary/jax.experimental.multihost_utils.host_local_array_to_global_array.rst", "_autosummary/jax.experimental.multihost_utils.process_allgather.rst", "_autosummary/jax.experimental.multihost_utils.sync_global_devices.rst", "_autosummary/jax.experimental.sparse.BCOO.rst", "_autosummary/jax.experimental.sparse.BCSR.rst", "_autosummary/jax.experimental.sparse.COO.rst", "_autosummary/jax.experimental.sparse.CSC.rst", "_autosummary/jax.experimental.sparse.CSR.rst", "_autosummary/jax.experimental.sparse.JAXSparse.rst", "_autosummary/jax.experimental.sparse.bcoo_broadcast_in_dim.rst", "_autosummary/jax.experimental.sparse.bcoo_concatenate.rst", "_autosummary/jax.experimental.sparse.bcoo_dot_general.rst", "_autosummary/jax.experimental.sparse.bcoo_dot_general_sampled.rst", "_autosummary/jax.experimental.sparse.bcoo_dynamic_slice.rst", "_autosummary/jax.experimental.sparse.bcoo_extract.rst", "_autosummary/jax.experimental.sparse.bcoo_fromdense.rst", "_autosummary/jax.experimental.sparse.bcoo_gather.rst", "_autosummary/jax.experimental.sparse.bcoo_multiply_dense.rst", "_autosummary/jax.experimental.sparse.bcoo_multiply_sparse.rst", "_autosummary/jax.experimental.sparse.bcoo_reduce_sum.rst", "_autosummary/jax.experimental.sparse.bcoo_reshape.rst", "_autosummary/jax.experimental.sparse.bcoo_slice.rst", "_autosummary/jax.experimental.sparse.bcoo_sort_indices.rst", "_autosummary/jax.experimental.sparse.bcoo_squeeze.rst", "_autosummary/jax.experimental.sparse.bcoo_sum_duplicates.rst", "_autosummary/jax.experimental.sparse.bcoo_todense.rst", "_autosummary/jax.experimental.sparse.bcoo_transpose.rst", "_autosummary/jax.experimental.sparse.bcoo_update_layout.rst", "_autosummary/jax.experimental.sparse.bcsr_dot_general.rst", "_autosummary/jax.experimental.sparse.bcsr_extract.rst", "_autosummary/jax.experimental.sparse.bcsr_fromdense.rst", "_autosummary/jax.experimental.sparse.bcsr_todense.rst", "_autosummary/jax.experimental.sparse.coo_fromdense.rst", "_autosummary/jax.experimental.sparse.coo_matmat.rst", "_autosummary/jax.experimental.sparse.coo_matvec.rst", "_autosummary/jax.experimental.sparse.coo_todense.rst", "_autosummary/jax.experimental.sparse.csr_fromdense.rst", "_autosummary/jax.experimental.sparse.csr_matmat.rst", "_autosummary/jax.experimental.sparse.csr_matvec.rst", "_autosummary/jax.experimental.sparse.csr_todense.rst", "_autosummary/jax.experimental.sparse.empty.rst", "_autosummary/jax.experimental.sparse.eye.rst", "_autosummary/jax.experimental.sparse.grad.rst", "_autosummary/jax.experimental.sparse.linalg.lobpcg_standard.rst", "_autosummary/jax.experimental.sparse.linalg.spsolve.rst", "_autosummary/jax.experimental.sparse.random_bcoo.rst", "_autosummary/jax.experimental.sparse.sparsify.rst", "_autosummary/jax.experimental.sparse.todense.rst", "_autosummary/jax.experimental.sparse.value_and_grad.rst", "_autosummary/jax.extend.linear_util.StoreException.rst", "_autosummary/jax.extend.linear_util.WrappedFun.rst", "_autosummary/jax.extend.linear_util.cache.rst", "_autosummary/jax.extend.linear_util.merge_linear_aux.rst", "_autosummary/jax.extend.linear_util.transformation.rst", "_autosummary/jax.extend.linear_util.transformation_with_aux.rst", "_autosummary/jax.extend.linear_util.wrap_init.rst", "_autosummary/jax.extend.mlir.dialects.rst", "_autosummary/jax.extend.mlir.ir.rst", "_autosummary/jax.extend.mlir.passmanager.rst", "_autosummary/jax.extend.random.define_prng_impl.rst", "_autosummary/jax.extend.random.rbg_prng_impl.rst", "_autosummary/jax.extend.random.seed_with_impl.rst", "_autosummary/jax.extend.random.threefry2x32_p.rst", "_autosummary/jax.extend.random.threefry_2x32.rst", "_autosummary/jax.extend.random.threefry_prng_impl.rst", "_autosummary/jax.extend.random.unsafe_rbg_prng_impl.rst", "_autosummary/jax.flatten_util.ravel_pytree.rst", "_autosummary/jax.grad.rst", "_autosummary/jax.hessian.rst", "_autosummary/jax.image.resize.rst", "_autosummary/jax.image.scale_and_translate.rst", "_autosummary/jax.jacfwd.rst", "_autosummary/jax.jacrev.rst", "_autosummary/jax.jit.rst", "_autosummary/jax.jvp.rst", "_autosummary/jax.lax.abs.rst", "_autosummary/jax.lax.acos.rst", "_autosummary/jax.lax.acosh.rst", "_autosummary/jax.lax.add.rst", "_autosummary/jax.lax.after_all.rst", "_autosummary/jax.lax.all_gather.rst", "_autosummary/jax.lax.all_to_all.rst", "_autosummary/jax.lax.approx_max_k.rst", "_autosummary/jax.lax.approx_min_k.rst", "_autosummary/jax.lax.argmax.rst", "_autosummary/jax.lax.argmin.rst", "_autosummary/jax.lax.asin.rst", "_autosummary/jax.lax.asinh.rst", "_autosummary/jax.lax.associative_scan.rst", "_autosummary/jax.lax.atan.rst", "_autosummary/jax.lax.atan2.rst", "_autosummary/jax.lax.atanh.rst", "_autosummary/jax.lax.axis_index.rst", "_autosummary/jax.lax.batch_matmul.rst", "_autosummary/jax.lax.bessel_i0e.rst", "_autosummary/jax.lax.bessel_i1e.rst", "_autosummary/jax.lax.betainc.rst", "_autosummary/jax.lax.bitcast_convert_type.rst", "_autosummary/jax.lax.bitwise_and.rst", "_autosummary/jax.lax.bitwise_not.rst", "_autosummary/jax.lax.bitwise_or.rst", "_autosummary/jax.lax.bitwise_xor.rst", "_autosummary/jax.lax.broadcast.rst", "_autosummary/jax.lax.broadcast_in_dim.rst", "_autosummary/jax.lax.broadcast_shapes.rst", "_autosummary/jax.lax.broadcast_to_rank.rst", "_autosummary/jax.lax.broadcasted_iota.rst", "_autosummary/jax.lax.cbrt.rst", "_autosummary/jax.lax.ceil.rst", "_autosummary/jax.lax.clamp.rst", "_autosummary/jax.lax.clz.rst", "_autosummary/jax.lax.collapse.rst", "_autosummary/jax.lax.complex.rst", "_autosummary/jax.lax.concatenate.rst", "_autosummary/jax.lax.cond.rst", "_autosummary/jax.lax.conj.rst", "_autosummary/jax.lax.conv.rst", "_autosummary/jax.lax.conv_dimension_numbers.rst", "_autosummary/jax.lax.conv_general_dilated.rst", "_autosummary/jax.lax.conv_general_dilated_local.rst", "_autosummary/jax.lax.conv_general_dilated_patches.rst", "_autosummary/jax.lax.conv_transpose.rst", "_autosummary/jax.lax.conv_with_general_padding.rst", "_autosummary/jax.lax.convert_element_type.rst", "_autosummary/jax.lax.cos.rst", "_autosummary/jax.lax.cosh.rst", "_autosummary/jax.lax.cumlogsumexp.rst", "_autosummary/jax.lax.cummax.rst", "_autosummary/jax.lax.cummin.rst", "_autosummary/jax.lax.cumprod.rst", "_autosummary/jax.lax.cumsum.rst", "_autosummary/jax.lax.custom_linear_solve.rst", "_autosummary/jax.lax.custom_root.rst", "_autosummary/jax.lax.digamma.rst", "_autosummary/jax.lax.div.rst", "_autosummary/jax.lax.dot.rst", "_autosummary/jax.lax.dot_general.rst", "_autosummary/jax.lax.dynamic_index_in_dim.rst", "_autosummary/jax.lax.dynamic_slice.rst", "_autosummary/jax.lax.dynamic_slice_in_dim.rst", "_autosummary/jax.lax.dynamic_update_index_in_dim.rst", "_autosummary/jax.lax.dynamic_update_slice.rst", "_autosummary/jax.lax.dynamic_update_slice_in_dim.rst", "_autosummary/jax.lax.eq.rst", "_autosummary/jax.lax.erf.rst", "_autosummary/jax.lax.erf_inv.rst", "_autosummary/jax.lax.erfc.rst", "_autosummary/jax.lax.exp.rst", "_autosummary/jax.lax.expand_dims.rst", "_autosummary/jax.lax.expm1.rst", "_autosummary/jax.lax.fft.rst", "_autosummary/jax.lax.floor.rst", "_autosummary/jax.lax.fori_loop.rst", "_autosummary/jax.lax.full.rst", "_autosummary/jax.lax.full_like.rst", "_autosummary/jax.lax.gather.rst", "_autosummary/jax.lax.ge.rst", "_autosummary/jax.lax.gt.rst", "_autosummary/jax.lax.igamma.rst", "_autosummary/jax.lax.igammac.rst", "_autosummary/jax.lax.imag.rst", "_autosummary/jax.lax.index_in_dim.rst", "_autosummary/jax.lax.index_take.rst", "_autosummary/jax.lax.integer_pow.rst", "_autosummary/jax.lax.iota.rst", "_autosummary/jax.lax.is_finite.rst", "_autosummary/jax.lax.le.rst", "_autosummary/jax.lax.lgamma.rst", "_autosummary/jax.lax.linalg.cholesky.rst", "_autosummary/jax.lax.linalg.eig.rst", "_autosummary/jax.lax.linalg.eigh.rst", "_autosummary/jax.lax.linalg.hessenberg.rst", "_autosummary/jax.lax.linalg.householder_product.rst", "_autosummary/jax.lax.linalg.lu.rst", "_autosummary/jax.lax.linalg.qdwh.rst", "_autosummary/jax.lax.linalg.qr.rst", "_autosummary/jax.lax.linalg.schur.rst", "_autosummary/jax.lax.linalg.svd.rst", "_autosummary/jax.lax.linalg.triangular_solve.rst", "_autosummary/jax.lax.linalg.tridiagonal.rst", "_autosummary/jax.lax.linalg.tridiagonal_solve.rst", "_autosummary/jax.lax.log.rst", "_autosummary/jax.lax.log1p.rst", "_autosummary/jax.lax.logistic.rst", "_autosummary/jax.lax.lt.rst", "_autosummary/jax.lax.map.rst", "_autosummary/jax.lax.max.rst", "_autosummary/jax.lax.min.rst", "_autosummary/jax.lax.mul.rst", "_autosummary/jax.lax.ne.rst", "_autosummary/jax.lax.neg.rst", "_autosummary/jax.lax.nextafter.rst", "_autosummary/jax.lax.pad.rst", "_autosummary/jax.lax.pdot.rst", "_autosummary/jax.lax.pmax.rst", "_autosummary/jax.lax.pmean.rst", "_autosummary/jax.lax.pmin.rst", "_autosummary/jax.lax.polygamma.rst", "_autosummary/jax.lax.population_count.rst", "_autosummary/jax.lax.pow.rst", "_autosummary/jax.lax.ppermute.rst", "_autosummary/jax.lax.pshuffle.rst", "_autosummary/jax.lax.psum.rst", "_autosummary/jax.lax.psum_scatter.rst", "_autosummary/jax.lax.pswapaxes.rst", "_autosummary/jax.lax.random_gamma_grad.rst", "_autosummary/jax.lax.real.rst", "_autosummary/jax.lax.reciprocal.rst", "_autosummary/jax.lax.reduce.rst", "_autosummary/jax.lax.reduce_precision.rst", "_autosummary/jax.lax.reduce_window.rst", "_autosummary/jax.lax.rem.rst", "_autosummary/jax.lax.reshape.rst", "_autosummary/jax.lax.rev.rst", "_autosummary/jax.lax.rng_bit_generator.rst", "_autosummary/jax.lax.rng_uniform.rst", "_autosummary/jax.lax.round.rst", "_autosummary/jax.lax.rsqrt.rst", "_autosummary/jax.lax.scan.rst", "_autosummary/jax.lax.scatter.rst", "_autosummary/jax.lax.scatter_add.rst", "_autosummary/jax.lax.scatter_apply.rst", "_autosummary/jax.lax.scatter_max.rst", "_autosummary/jax.lax.scatter_min.rst", "_autosummary/jax.lax.scatter_mul.rst", "_autosummary/jax.lax.select.rst", "_autosummary/jax.lax.select_n.rst", "_autosummary/jax.lax.shift_left.rst", "_autosummary/jax.lax.shift_right_arithmetic.rst", "_autosummary/jax.lax.shift_right_logical.rst", "_autosummary/jax.lax.sign.rst", "_autosummary/jax.lax.sin.rst", "_autosummary/jax.lax.sinh.rst", "_autosummary/jax.lax.slice.rst", "_autosummary/jax.lax.slice_in_dim.rst", "_autosummary/jax.lax.sort.rst", "_autosummary/jax.lax.sort_key_val.rst", "_autosummary/jax.lax.sqrt.rst", "_autosummary/jax.lax.square.rst", "_autosummary/jax.lax.squeeze.rst", "_autosummary/jax.lax.stop_gradient.rst", "_autosummary/jax.lax.sub.rst", "_autosummary/jax.lax.switch.rst", "_autosummary/jax.lax.tan.rst", "_autosummary/jax.lax.tanh.rst", "_autosummary/jax.lax.tie_in.rst", "_autosummary/jax.lax.top_k.rst", "_autosummary/jax.lax.transpose.rst", "_autosummary/jax.lax.while_loop.rst", "_autosummary/jax.lax.with_sharding_constraint.rst", "_autosummary/jax.lax.zeros_like_array.rst", "_autosummary/jax.lax.zeta.rst", "_autosummary/jax.lib.xla_bridge.default_backend.rst", "_autosummary/jax.lib.xla_bridge.get_backend.rst", "_autosummary/jax.lib.xla_bridge.get_compile_options.rst", "_autosummary/jax.linear_transpose.rst", "_autosummary/jax.linearize.rst", "_autosummary/jax.live_arrays.rst", "_autosummary/jax.local_device_count.rst", "_autosummary/jax.local_devices.rst", "_autosummary/jax.log_compiles.rst", "_autosummary/jax.make_array_from_callback.rst", "_autosummary/jax.make_array_from_single_device_arrays.rst", "_autosummary/jax.make_jaxpr.rst", "_autosummary/jax.named_call.rst", "_autosummary/jax.named_scope.rst", "_autosummary/jax.nn.celu.rst", "_autosummary/jax.nn.elu.rst", "_autosummary/jax.nn.gelu.rst", "_autosummary/jax.nn.glu.rst", "_autosummary/jax.nn.hard_sigmoid.rst", "_autosummary/jax.nn.hard_silu.rst", "_autosummary/jax.nn.hard_swish.rst", "_autosummary/jax.nn.hard_tanh.rst", "_autosummary/jax.nn.initializers.constant.rst", "_autosummary/jax.nn.initializers.delta_orthogonal.rst", "_autosummary/jax.nn.initializers.glorot_normal.rst", "_autosummary/jax.nn.initializers.glorot_uniform.rst", "_autosummary/jax.nn.initializers.he_normal.rst", "_autosummary/jax.nn.initializers.he_uniform.rst", "_autosummary/jax.nn.initializers.lecun_normal.rst", "_autosummary/jax.nn.initializers.lecun_uniform.rst", "_autosummary/jax.nn.initializers.normal.rst", "_autosummary/jax.nn.initializers.ones.rst", "_autosummary/jax.nn.initializers.orthogonal.rst", "_autosummary/jax.nn.initializers.truncated_normal.rst", "_autosummary/jax.nn.initializers.uniform.rst", "_autosummary/jax.nn.initializers.variance_scaling.rst", "_autosummary/jax.nn.initializers.zeros.rst", "_autosummary/jax.nn.leaky_relu.rst", "_autosummary/jax.nn.log_sigmoid.rst", "_autosummary/jax.nn.log_softmax.rst", "_autosummary/jax.nn.logsumexp.rst", "_autosummary/jax.nn.mish.rst", "_autosummary/jax.nn.one_hot.rst", "_autosummary/jax.nn.relu.rst", "_autosummary/jax.nn.relu6.rst", "_autosummary/jax.nn.selu.rst", "_autosummary/jax.nn.sigmoid.rst", "_autosummary/jax.nn.silu.rst", "_autosummary/jax.nn.soft_sign.rst", "_autosummary/jax.nn.softmax.rst", "_autosummary/jax.nn.softplus.rst", "_autosummary/jax.nn.sparse_plus.rst", "_autosummary/jax.nn.squareplus.rst", "_autosummary/jax.nn.standardize.rst", "_autosummary/jax.nn.swish.rst", "_autosummary/jax.numpy.ComplexWarning.rst", "_autosummary/jax.numpy.abs.rst", "_autosummary/jax.numpy.absolute.rst", "_autosummary/jax.numpy.acos.rst", "_autosummary/jax.numpy.acosh.rst", "_autosummary/jax.numpy.add.rst", "_autosummary/jax.numpy.all.rst", "_autosummary/jax.numpy.allclose.rst", "_autosummary/jax.numpy.amax.rst", "_autosummary/jax.numpy.amin.rst", "_autosummary/jax.numpy.angle.rst", "_autosummary/jax.numpy.any.rst", "_autosummary/jax.numpy.append.rst", "_autosummary/jax.numpy.apply_along_axis.rst", "_autosummary/jax.numpy.apply_over_axes.rst", "_autosummary/jax.numpy.arange.rst", "_autosummary/jax.numpy.arccos.rst", "_autosummary/jax.numpy.arccosh.rst", "_autosummary/jax.numpy.arcsin.rst", "_autosummary/jax.numpy.arcsinh.rst", "_autosummary/jax.numpy.arctan.rst", "_autosummary/jax.numpy.arctan2.rst", "_autosummary/jax.numpy.arctanh.rst", "_autosummary/jax.numpy.argmax.rst", "_autosummary/jax.numpy.argmin.rst", "_autosummary/jax.numpy.argpartition.rst", "_autosummary/jax.numpy.argsort.rst", "_autosummary/jax.numpy.argwhere.rst", "_autosummary/jax.numpy.around.rst", "_autosummary/jax.numpy.array.rst", "_autosummary/jax.numpy.array_equal.rst", "_autosummary/jax.numpy.array_equiv.rst", "_autosummary/jax.numpy.array_repr.rst", "_autosummary/jax.numpy.array_split.rst", "_autosummary/jax.numpy.array_str.rst", "_autosummary/jax.numpy.asarray.rst", "_autosummary/jax.numpy.asin.rst", "_autosummary/jax.numpy.asinh.rst", "_autosummary/jax.numpy.astype.rst", "_autosummary/jax.numpy.atan.rst", "_autosummary/jax.numpy.atan2.rst", "_autosummary/jax.numpy.atanh.rst", "_autosummary/jax.numpy.atleast_1d.rst", "_autosummary/jax.numpy.atleast_2d.rst", "_autosummary/jax.numpy.atleast_3d.rst", "_autosummary/jax.numpy.average.rst", "_autosummary/jax.numpy.bartlett.rst", "_autosummary/jax.numpy.bincount.rst", "_autosummary/jax.numpy.bitwise_and.rst", "_autosummary/jax.numpy.bitwise_count.rst", "_autosummary/jax.numpy.bitwise_invert.rst", "_autosummary/jax.numpy.bitwise_left_shift.rst", "_autosummary/jax.numpy.bitwise_not.rst", "_autosummary/jax.numpy.bitwise_or.rst", "_autosummary/jax.numpy.bitwise_right_shift.rst", "_autosummary/jax.numpy.bitwise_xor.rst", "_autosummary/jax.numpy.blackman.rst", "_autosummary/jax.numpy.block.rst", "_autosummary/jax.numpy.bool_.rst", "_autosummary/jax.numpy.broadcast_arrays.rst", "_autosummary/jax.numpy.broadcast_shapes.rst", "_autosummary/jax.numpy.broadcast_to.rst", "_autosummary/jax.numpy.c_.rst", "_autosummary/jax.numpy.can_cast.rst", "_autosummary/jax.numpy.cbrt.rst", "_autosummary/jax.numpy.cdouble.rst", "_autosummary/jax.numpy.ceil.rst", "_autosummary/jax.numpy.character.rst", "_autosummary/jax.numpy.choose.rst", "_autosummary/jax.numpy.clip.rst", "_autosummary/jax.numpy.column_stack.rst", "_autosummary/jax.numpy.complex128.rst", "_autosummary/jax.numpy.complex64.rst", "_autosummary/jax.numpy.complex_.rst", "_autosummary/jax.numpy.complexfloating.rst", "_autosummary/jax.numpy.compress.rst", "_autosummary/jax.numpy.concat.rst", "_autosummary/jax.numpy.concatenate.rst", "_autosummary/jax.numpy.conj.rst", "_autosummary/jax.numpy.conjugate.rst", "_autosummary/jax.numpy.convolve.rst", "_autosummary/jax.numpy.copy.rst", "_autosummary/jax.numpy.copysign.rst", "_autosummary/jax.numpy.corrcoef.rst", "_autosummary/jax.numpy.correlate.rst", "_autosummary/jax.numpy.cos.rst", "_autosummary/jax.numpy.cosh.rst", "_autosummary/jax.numpy.count_nonzero.rst", "_autosummary/jax.numpy.cov.rst", "_autosummary/jax.numpy.cross.rst", "_autosummary/jax.numpy.csingle.rst", "_autosummary/jax.numpy.cumprod.rst", "_autosummary/jax.numpy.cumsum.rst", "_autosummary/jax.numpy.cumulative_sum.rst", "_autosummary/jax.numpy.deg2rad.rst", "_autosummary/jax.numpy.degrees.rst", "_autosummary/jax.numpy.delete.rst", "_autosummary/jax.numpy.diag.rst", "_autosummary/jax.numpy.diag_indices.rst", "_autosummary/jax.numpy.diag_indices_from.rst", "_autosummary/jax.numpy.diagflat.rst", "_autosummary/jax.numpy.diagonal.rst", "_autosummary/jax.numpy.diff.rst", "_autosummary/jax.numpy.digitize.rst", "_autosummary/jax.numpy.divide.rst", "_autosummary/jax.numpy.divmod.rst", "_autosummary/jax.numpy.dot.rst", "_autosummary/jax.numpy.double.rst", "_autosummary/jax.numpy.dsplit.rst", "_autosummary/jax.numpy.dstack.rst", "_autosummary/jax.numpy.dtype.rst", "_autosummary/jax.numpy.ediff1d.rst", "_autosummary/jax.numpy.einsum.rst", "_autosummary/jax.numpy.einsum_path.rst", "_autosummary/jax.numpy.empty.rst", "_autosummary/jax.numpy.empty_like.rst", "_autosummary/jax.numpy.equal.rst", "_autosummary/jax.numpy.exp.rst", "_autosummary/jax.numpy.exp2.rst", "_autosummary/jax.numpy.expand_dims.rst", "_autosummary/jax.numpy.expm1.rst", "_autosummary/jax.numpy.extract.rst", "_autosummary/jax.numpy.eye.rst", "_autosummary/jax.numpy.fabs.rst", "_autosummary/jax.numpy.fft.fft.rst", "_autosummary/jax.numpy.fft.fft2.rst", "_autosummary/jax.numpy.fft.fftfreq.rst", "_autosummary/jax.numpy.fft.fftn.rst", "_autosummary/jax.numpy.fft.fftshift.rst", "_autosummary/jax.numpy.fft.hfft.rst", "_autosummary/jax.numpy.fft.ifft.rst", "_autosummary/jax.numpy.fft.ifft2.rst", "_autosummary/jax.numpy.fft.ifftn.rst", "_autosummary/jax.numpy.fft.ifftshift.rst", "_autosummary/jax.numpy.fft.ihfft.rst", "_autosummary/jax.numpy.fft.irfft.rst", "_autosummary/jax.numpy.fft.irfft2.rst", "_autosummary/jax.numpy.fft.irfftn.rst", "_autosummary/jax.numpy.fft.rfft.rst", "_autosummary/jax.numpy.fft.rfft2.rst", "_autosummary/jax.numpy.fft.rfftfreq.rst", "_autosummary/jax.numpy.fft.rfftn.rst", "_autosummary/jax.numpy.fill_diagonal.rst", "_autosummary/jax.numpy.finfo.rst", "_autosummary/jax.numpy.fix.rst", "_autosummary/jax.numpy.flatnonzero.rst", "_autosummary/jax.numpy.flexible.rst", "_autosummary/jax.numpy.flip.rst", "_autosummary/jax.numpy.fliplr.rst", "_autosummary/jax.numpy.flipud.rst", "_autosummary/jax.numpy.float16.rst", "_autosummary/jax.numpy.float32.rst", "_autosummary/jax.numpy.float64.rst", "_autosummary/jax.numpy.float_.rst", "_autosummary/jax.numpy.float_power.rst", "_autosummary/jax.numpy.floating.rst", "_autosummary/jax.numpy.floor.rst", "_autosummary/jax.numpy.floor_divide.rst", "_autosummary/jax.numpy.fmax.rst", "_autosummary/jax.numpy.fmin.rst", "_autosummary/jax.numpy.fmod.rst", "_autosummary/jax.numpy.frexp.rst", "_autosummary/jax.numpy.from_dlpack.rst", "_autosummary/jax.numpy.frombuffer.rst", "_autosummary/jax.numpy.fromfile.rst", "_autosummary/jax.numpy.fromfunction.rst", "_autosummary/jax.numpy.fromiter.rst", "_autosummary/jax.numpy.frompyfunc.rst", "_autosummary/jax.numpy.fromstring.rst", "_autosummary/jax.numpy.full.rst", "_autosummary/jax.numpy.full_like.rst", "_autosummary/jax.numpy.gcd.rst", "_autosummary/jax.numpy.generic.rst", "_autosummary/jax.numpy.geomspace.rst", "_autosummary/jax.numpy.get_printoptions.rst", "_autosummary/jax.numpy.gradient.rst", "_autosummary/jax.numpy.greater.rst", "_autosummary/jax.numpy.greater_equal.rst", "_autosummary/jax.numpy.hamming.rst", "_autosummary/jax.numpy.hanning.rst", "_autosummary/jax.numpy.heaviside.rst", "_autosummary/jax.numpy.histogram.rst", "_autosummary/jax.numpy.histogram2d.rst", "_autosummary/jax.numpy.histogram_bin_edges.rst", "_autosummary/jax.numpy.histogramdd.rst", "_autosummary/jax.numpy.hsplit.rst", "_autosummary/jax.numpy.hstack.rst", "_autosummary/jax.numpy.hypot.rst", "_autosummary/jax.numpy.i0.rst", "_autosummary/jax.numpy.identity.rst", "_autosummary/jax.numpy.iinfo.rst", "_autosummary/jax.numpy.imag.rst", "_autosummary/jax.numpy.index_exp.rst", "_autosummary/jax.numpy.indices.rst", "_autosummary/jax.numpy.inexact.rst", "_autosummary/jax.numpy.inner.rst", "_autosummary/jax.numpy.insert.rst", "_autosummary/jax.numpy.int16.rst", "_autosummary/jax.numpy.int32.rst", "_autosummary/jax.numpy.int64.rst", "_autosummary/jax.numpy.int8.rst", "_autosummary/jax.numpy.int_.rst", "_autosummary/jax.numpy.integer.rst", "_autosummary/jax.numpy.interp.rst", "_autosummary/jax.numpy.intersect1d.rst", "_autosummary/jax.numpy.invert.rst", "_autosummary/jax.numpy.isclose.rst", "_autosummary/jax.numpy.iscomplex.rst", "_autosummary/jax.numpy.iscomplexobj.rst", "_autosummary/jax.numpy.isdtype.rst", "_autosummary/jax.numpy.isfinite.rst", "_autosummary/jax.numpy.isin.rst", "_autosummary/jax.numpy.isinf.rst", "_autosummary/jax.numpy.isnan.rst", "_autosummary/jax.numpy.isneginf.rst", "_autosummary/jax.numpy.isposinf.rst", "_autosummary/jax.numpy.isreal.rst", "_autosummary/jax.numpy.isrealobj.rst", "_autosummary/jax.numpy.isscalar.rst", "_autosummary/jax.numpy.issubdtype.rst", "_autosummary/jax.numpy.iterable.rst", "_autosummary/jax.numpy.ix_.rst", "_autosummary/jax.numpy.kaiser.rst", "_autosummary/jax.numpy.kron.rst", "_autosummary/jax.numpy.lcm.rst", "_autosummary/jax.numpy.ldexp.rst", "_autosummary/jax.numpy.left_shift.rst", "_autosummary/jax.numpy.less.rst", "_autosummary/jax.numpy.less_equal.rst", "_autosummary/jax.numpy.lexsort.rst", "_autosummary/jax.numpy.linalg.cholesky.rst", "_autosummary/jax.numpy.linalg.cond.rst", "_autosummary/jax.numpy.linalg.cross.rst", "_autosummary/jax.numpy.linalg.det.rst", "_autosummary/jax.numpy.linalg.diagonal.rst", "_autosummary/jax.numpy.linalg.eig.rst", "_autosummary/jax.numpy.linalg.eigh.rst", "_autosummary/jax.numpy.linalg.eigvals.rst", "_autosummary/jax.numpy.linalg.eigvalsh.rst", "_autosummary/jax.numpy.linalg.inv.rst", "_autosummary/jax.numpy.linalg.lstsq.rst", "_autosummary/jax.numpy.linalg.matmul.rst", "_autosummary/jax.numpy.linalg.matrix_norm.rst", "_autosummary/jax.numpy.linalg.matrix_power.rst", "_autosummary/jax.numpy.linalg.matrix_rank.rst", "_autosummary/jax.numpy.linalg.matrix_transpose.rst", "_autosummary/jax.numpy.linalg.multi_dot.rst", "_autosummary/jax.numpy.linalg.norm.rst", "_autosummary/jax.numpy.linalg.outer.rst", "_autosummary/jax.numpy.linalg.pinv.rst", "_autosummary/jax.numpy.linalg.qr.rst", "_autosummary/jax.numpy.linalg.slogdet.rst", "_autosummary/jax.numpy.linalg.solve.rst", "_autosummary/jax.numpy.linalg.svd.rst", "_autosummary/jax.numpy.linalg.svdvals.rst", "_autosummary/jax.numpy.linalg.tensordot.rst", "_autosummary/jax.numpy.linalg.tensorinv.rst", "_autosummary/jax.numpy.linalg.tensorsolve.rst", "_autosummary/jax.numpy.linalg.vecdot.rst", "_autosummary/jax.numpy.linalg.vector_norm.rst", "_autosummary/jax.numpy.linspace.rst", "_autosummary/jax.numpy.load.rst", "_autosummary/jax.numpy.log.rst", "_autosummary/jax.numpy.log10.rst", "_autosummary/jax.numpy.log1p.rst", "_autosummary/jax.numpy.log2.rst", "_autosummary/jax.numpy.logaddexp.rst", "_autosummary/jax.numpy.logaddexp2.rst", "_autosummary/jax.numpy.logical_and.rst", "_autosummary/jax.numpy.logical_not.rst", "_autosummary/jax.numpy.logical_or.rst", "_autosummary/jax.numpy.logical_xor.rst", "_autosummary/jax.numpy.logspace.rst", "_autosummary/jax.numpy.mask_indices.rst", "_autosummary/jax.numpy.matmul.rst", "_autosummary/jax.numpy.matrix_transpose.rst", "_autosummary/jax.numpy.max.rst", "_autosummary/jax.numpy.maximum.rst", "_autosummary/jax.numpy.mean.rst", "_autosummary/jax.numpy.median.rst", "_autosummary/jax.numpy.meshgrid.rst", "_autosummary/jax.numpy.mgrid.rst", "_autosummary/jax.numpy.min.rst", "_autosummary/jax.numpy.minimum.rst", "_autosummary/jax.numpy.mod.rst", "_autosummary/jax.numpy.modf.rst", "_autosummary/jax.numpy.moveaxis.rst", "_autosummary/jax.numpy.multiply.rst", "_autosummary/jax.numpy.nan_to_num.rst", "_autosummary/jax.numpy.nanargmax.rst", "_autosummary/jax.numpy.nanargmin.rst", "_autosummary/jax.numpy.nancumprod.rst", "_autosummary/jax.numpy.nancumsum.rst", "_autosummary/jax.numpy.nanmax.rst", "_autosummary/jax.numpy.nanmean.rst", "_autosummary/jax.numpy.nanmedian.rst", "_autosummary/jax.numpy.nanmin.rst", "_autosummary/jax.numpy.nanpercentile.rst", "_autosummary/jax.numpy.nanprod.rst", "_autosummary/jax.numpy.nanquantile.rst", "_autosummary/jax.numpy.nanstd.rst", "_autosummary/jax.numpy.nansum.rst", "_autosummary/jax.numpy.nanvar.rst", "_autosummary/jax.numpy.ndarray.rst", "_autosummary/jax.numpy.ndarray.at.rst", "_autosummary/jax.numpy.ndim.rst", "_autosummary/jax.numpy.negative.rst", "_autosummary/jax.numpy.nextafter.rst", "_autosummary/jax.numpy.nonzero.rst", "_autosummary/jax.numpy.not_equal.rst", "_autosummary/jax.numpy.number.rst", "_autosummary/jax.numpy.object_.rst", "_autosummary/jax.numpy.ogrid.rst", "_autosummary/jax.numpy.ones.rst", "_autosummary/jax.numpy.ones_like.rst", "_autosummary/jax.numpy.outer.rst", "_autosummary/jax.numpy.packbits.rst", "_autosummary/jax.numpy.pad.rst", "_autosummary/jax.numpy.partition.rst", "_autosummary/jax.numpy.percentile.rst", "_autosummary/jax.numpy.permute_dims.rst", "_autosummary/jax.numpy.piecewise.rst", "_autosummary/jax.numpy.place.rst", "_autosummary/jax.numpy.poly.rst", "_autosummary/jax.numpy.polyadd.rst", "_autosummary/jax.numpy.polyder.rst", "_autosummary/jax.numpy.polydiv.rst", "_autosummary/jax.numpy.polyfit.rst", "_autosummary/jax.numpy.polyint.rst", "_autosummary/jax.numpy.polymul.rst", "_autosummary/jax.numpy.polysub.rst", "_autosummary/jax.numpy.polyval.rst", "_autosummary/jax.numpy.positive.rst", "_autosummary/jax.numpy.pow.rst", "_autosummary/jax.numpy.power.rst", "_autosummary/jax.numpy.printoptions.rst", "_autosummary/jax.numpy.prod.rst", "_autosummary/jax.numpy.promote_types.rst", "_autosummary/jax.numpy.ptp.rst", "_autosummary/jax.numpy.put.rst", "_autosummary/jax.numpy.quantile.rst", "_autosummary/jax.numpy.r_.rst", "_autosummary/jax.numpy.rad2deg.rst", "_autosummary/jax.numpy.radians.rst", "_autosummary/jax.numpy.ravel.rst", "_autosummary/jax.numpy.ravel_multi_index.rst", "_autosummary/jax.numpy.real.rst", "_autosummary/jax.numpy.reciprocal.rst", "_autosummary/jax.numpy.remainder.rst", "_autosummary/jax.numpy.repeat.rst", "_autosummary/jax.numpy.reshape.rst", "_autosummary/jax.numpy.resize.rst", "_autosummary/jax.numpy.result_type.rst", "_autosummary/jax.numpy.right_shift.rst", "_autosummary/jax.numpy.rint.rst", "_autosummary/jax.numpy.roll.rst", "_autosummary/jax.numpy.rollaxis.rst", "_autosummary/jax.numpy.roots.rst", "_autosummary/jax.numpy.rot90.rst", "_autosummary/jax.numpy.round.rst", "_autosummary/jax.numpy.round_.rst", "_autosummary/jax.numpy.s_.rst", "_autosummary/jax.numpy.save.rst", "_autosummary/jax.numpy.savez.rst", "_autosummary/jax.numpy.searchsorted.rst", "_autosummary/jax.numpy.select.rst", "_autosummary/jax.numpy.set_printoptions.rst", "_autosummary/jax.numpy.setdiff1d.rst", "_autosummary/jax.numpy.setxor1d.rst", "_autosummary/jax.numpy.shape.rst", "_autosummary/jax.numpy.sign.rst", "_autosummary/jax.numpy.signbit.rst", "_autosummary/jax.numpy.signedinteger.rst", "_autosummary/jax.numpy.sin.rst", "_autosummary/jax.numpy.sinc.rst", "_autosummary/jax.numpy.single.rst", "_autosummary/jax.numpy.sinh.rst", "_autosummary/jax.numpy.size.rst", "_autosummary/jax.numpy.sort.rst", "_autosummary/jax.numpy.sort_complex.rst", "_autosummary/jax.numpy.split.rst", "_autosummary/jax.numpy.sqrt.rst", "_autosummary/jax.numpy.square.rst", "_autosummary/jax.numpy.squeeze.rst", "_autosummary/jax.numpy.stack.rst", "_autosummary/jax.numpy.std.rst", "_autosummary/jax.numpy.subtract.rst", "_autosummary/jax.numpy.sum.rst", "_autosummary/jax.numpy.swapaxes.rst", "_autosummary/jax.numpy.take.rst", "_autosummary/jax.numpy.take_along_axis.rst", "_autosummary/jax.numpy.tan.rst", "_autosummary/jax.numpy.tanh.rst", "_autosummary/jax.numpy.tensordot.rst", "_autosummary/jax.numpy.tile.rst", "_autosummary/jax.numpy.trace.rst", "_autosummary/jax.numpy.transpose.rst", "_autosummary/jax.numpy.trapezoid.rst", "_autosummary/jax.numpy.tri.rst", "_autosummary/jax.numpy.tril.rst", "_autosummary/jax.numpy.tril_indices.rst", "_autosummary/jax.numpy.tril_indices_from.rst", "_autosummary/jax.numpy.trim_zeros.rst", "_autosummary/jax.numpy.triu.rst", "_autosummary/jax.numpy.triu_indices.rst", "_autosummary/jax.numpy.triu_indices_from.rst", "_autosummary/jax.numpy.true_divide.rst", "_autosummary/jax.numpy.trunc.rst", "_autosummary/jax.numpy.ufunc.rst", "_autosummary/jax.numpy.uint.rst", "_autosummary/jax.numpy.uint16.rst", "_autosummary/jax.numpy.uint32.rst", "_autosummary/jax.numpy.uint64.rst", "_autosummary/jax.numpy.uint8.rst", "_autosummary/jax.numpy.union1d.rst", "_autosummary/jax.numpy.unique.rst", "_autosummary/jax.numpy.unique_all.rst", "_autosummary/jax.numpy.unique_counts.rst", "_autosummary/jax.numpy.unique_inverse.rst", "_autosummary/jax.numpy.unique_values.rst", "_autosummary/jax.numpy.unpackbits.rst", "_autosummary/jax.numpy.unravel_index.rst", "_autosummary/jax.numpy.unsignedinteger.rst", "_autosummary/jax.numpy.unstack.rst", "_autosummary/jax.numpy.unwrap.rst", "_autosummary/jax.numpy.vander.rst", "_autosummary/jax.numpy.var.rst", "_autosummary/jax.numpy.vdot.rst", "_autosummary/jax.numpy.vecdot.rst", "_autosummary/jax.numpy.vectorize.rst", "_autosummary/jax.numpy.vsplit.rst", "_autosummary/jax.numpy.vstack.rst", "_autosummary/jax.numpy.where.rst", "_autosummary/jax.numpy.zeros.rst", "_autosummary/jax.numpy.zeros_like.rst", "_autosummary/jax.numpy_rank_promotion.rst", "_autosummary/jax.ops.segment_max.rst", "_autosummary/jax.ops.segment_min.rst", "_autosummary/jax.ops.segment_prod.rst", "_autosummary/jax.ops.segment_sum.rst", "_autosummary/jax.pmap.rst", "_autosummary/jax.print_environment_info.rst", "_autosummary/jax.process_count.rst", "_autosummary/jax.process_index.rst", "_autosummary/jax.profiler.StepTraceAnnotation.rst", "_autosummary/jax.profiler.TraceAnnotation.rst", "_autosummary/jax.profiler.annotate_function.rst", "_autosummary/jax.profiler.device_memory_profile.rst", "_autosummary/jax.profiler.save_device_memory_profile.rst", "_autosummary/jax.profiler.start_server.rst", "_autosummary/jax.profiler.start_trace.rst", "_autosummary/jax.profiler.stop_trace.rst", "_autosummary/jax.profiler.trace.rst", "_autosummary/jax.pure_callback.rst", "_autosummary/jax.random.PRNGKey.rst", "_autosummary/jax.random.ball.rst", "_autosummary/jax.random.bernoulli.rst", "_autosummary/jax.random.beta.rst", "_autosummary/jax.random.binomial.rst", "_autosummary/jax.random.bits.rst", "_autosummary/jax.random.categorical.rst", "_autosummary/jax.random.cauchy.rst", "_autosummary/jax.random.chisquare.rst", "_autosummary/jax.random.choice.rst", "_autosummary/jax.random.clone.rst", "_autosummary/jax.random.dirichlet.rst", "_autosummary/jax.random.double_sided_maxwell.rst", "_autosummary/jax.random.exponential.rst", "_autosummary/jax.random.f.rst", "_autosummary/jax.random.fold_in.rst", "_autosummary/jax.random.gamma.rst", "_autosummary/jax.random.generalized_normal.rst", "_autosummary/jax.random.geometric.rst", "_autosummary/jax.random.gumbel.rst", "_autosummary/jax.random.key.rst", "_autosummary/jax.random.key_data.rst", "_autosummary/jax.random.laplace.rst", "_autosummary/jax.random.loggamma.rst", "_autosummary/jax.random.logistic.rst", "_autosummary/jax.random.lognormal.rst", "_autosummary/jax.random.maxwell.rst", "_autosummary/jax.random.multivariate_normal.rst", "_autosummary/jax.random.normal.rst", "_autosummary/jax.random.orthogonal.rst", "_autosummary/jax.random.pareto.rst", "_autosummary/jax.random.permutation.rst", "_autosummary/jax.random.poisson.rst", "_autosummary/jax.random.rademacher.rst", "_autosummary/jax.random.randint.rst", "_autosummary/jax.random.rayleigh.rst", "_autosummary/jax.random.split.rst", "_autosummary/jax.random.t.rst", "_autosummary/jax.random.triangular.rst", "_autosummary/jax.random.truncated_normal.rst", "_autosummary/jax.random.uniform.rst", "_autosummary/jax.random.wald.rst", "_autosummary/jax.random.weibull_min.rst", "_autosummary/jax.random.wrap_key_data.rst", "_autosummary/jax.scipy.fft.dct.rst", "_autosummary/jax.scipy.fft.dctn.rst", "_autosummary/jax.scipy.fft.idct.rst", "_autosummary/jax.scipy.fft.idctn.rst", "_autosummary/jax.scipy.integrate.trapezoid.rst", "_autosummary/jax.scipy.linalg.block_diag.rst", "_autosummary/jax.scipy.linalg.cho_factor.rst", "_autosummary/jax.scipy.linalg.cho_solve.rst", "_autosummary/jax.scipy.linalg.cholesky.rst", "_autosummary/jax.scipy.linalg.det.rst", "_autosummary/jax.scipy.linalg.eigh.rst", "_autosummary/jax.scipy.linalg.eigh_tridiagonal.rst", "_autosummary/jax.scipy.linalg.expm.rst", "_autosummary/jax.scipy.linalg.expm_frechet.rst", "_autosummary/jax.scipy.linalg.funm.rst", "_autosummary/jax.scipy.linalg.hessenberg.rst", "_autosummary/jax.scipy.linalg.hilbert.rst", "_autosummary/jax.scipy.linalg.inv.rst", "_autosummary/jax.scipy.linalg.lu.rst", "_autosummary/jax.scipy.linalg.lu_factor.rst", "_autosummary/jax.scipy.linalg.lu_solve.rst", "_autosummary/jax.scipy.linalg.polar.rst", "_autosummary/jax.scipy.linalg.qr.rst", "_autosummary/jax.scipy.linalg.rsf2csf.rst", "_autosummary/jax.scipy.linalg.schur.rst", "_autosummary/jax.scipy.linalg.solve.rst", "_autosummary/jax.scipy.linalg.solve_triangular.rst", "_autosummary/jax.scipy.linalg.sqrtm.rst", "_autosummary/jax.scipy.linalg.svd.rst", "_autosummary/jax.scipy.linalg.toeplitz.rst", "_autosummary/jax.scipy.ndimage.map_coordinates.rst", "_autosummary/jax.scipy.optimize.OptimizeResults.rst", "_autosummary/jax.scipy.optimize.minimize.rst", "_autosummary/jax.scipy.signal.convolve.rst", "_autosummary/jax.scipy.signal.convolve2d.rst", "_autosummary/jax.scipy.signal.correlate.rst", "_autosummary/jax.scipy.signal.correlate2d.rst", "_autosummary/jax.scipy.signal.csd.rst", "_autosummary/jax.scipy.signal.fftconvolve.rst", "_autosummary/jax.scipy.signal.istft.rst", "_autosummary/jax.scipy.signal.stft.rst", "_autosummary/jax.scipy.signal.welch.rst", "_autosummary/jax.scipy.sparse.linalg.bicgstab.rst", "_autosummary/jax.scipy.sparse.linalg.cg.rst", "_autosummary/jax.scipy.sparse.linalg.gmres.rst", "_autosummary/jax.scipy.spatial.transform.Rotation.rst", "_autosummary/jax.scipy.spatial.transform.Slerp.rst", "_autosummary/jax.scipy.special.bernoulli.rst", "_autosummary/jax.scipy.special.beta.rst", "_autosummary/jax.scipy.special.betainc.rst", "_autosummary/jax.scipy.special.betaln.rst", "_autosummary/jax.scipy.special.digamma.rst", "_autosummary/jax.scipy.special.entr.rst", "_autosummary/jax.scipy.special.erf.rst", "_autosummary/jax.scipy.special.erfc.rst", "_autosummary/jax.scipy.special.erfinv.rst", "_autosummary/jax.scipy.special.exp1.rst", "_autosummary/jax.scipy.special.expi.rst", "_autosummary/jax.scipy.special.expit.rst", "_autosummary/jax.scipy.special.expn.rst", "_autosummary/jax.scipy.special.factorial.rst", "_autosummary/jax.scipy.special.gamma.rst", "_autosummary/jax.scipy.special.gammainc.rst", "_autosummary/jax.scipy.special.gammaincc.rst", "_autosummary/jax.scipy.special.gammaln.rst", "_autosummary/jax.scipy.special.hyp1f1.rst", "_autosummary/jax.scipy.special.i0.rst", "_autosummary/jax.scipy.special.i0e.rst", "_autosummary/jax.scipy.special.i1.rst", "_autosummary/jax.scipy.special.i1e.rst", "_autosummary/jax.scipy.special.kl_div.rst", "_autosummary/jax.scipy.special.log_ndtr.rst", "_autosummary/jax.scipy.special.logit.rst", "_autosummary/jax.scipy.special.logsumexp.rst", "_autosummary/jax.scipy.special.lpmn.rst", "_autosummary/jax.scipy.special.lpmn_values.rst", "_autosummary/jax.scipy.special.multigammaln.rst", "_autosummary/jax.scipy.special.ndtr.rst", "_autosummary/jax.scipy.special.ndtri.rst", "_autosummary/jax.scipy.special.poch.rst", "_autosummary/jax.scipy.special.polygamma.rst", "_autosummary/jax.scipy.special.rel_entr.rst", "_autosummary/jax.scipy.special.spence.rst", "_autosummary/jax.scipy.special.sph_harm.rst", "_autosummary/jax.scipy.special.xlog1py.rst", "_autosummary/jax.scipy.special.xlogy.rst", "_autosummary/jax.scipy.special.zeta.rst", "_autosummary/jax.scipy.stats.bernoulli.cdf.rst", "_autosummary/jax.scipy.stats.bernoulli.logpmf.rst", "_autosummary/jax.scipy.stats.bernoulli.pmf.rst", "_autosummary/jax.scipy.stats.bernoulli.ppf.rst", "_autosummary/jax.scipy.stats.beta.cdf.rst", "_autosummary/jax.scipy.stats.beta.logcdf.rst", "_autosummary/jax.scipy.stats.beta.logpdf.rst", "_autosummary/jax.scipy.stats.beta.logsf.rst", "_autosummary/jax.scipy.stats.beta.pdf.rst", "_autosummary/jax.scipy.stats.beta.sf.rst", "_autosummary/jax.scipy.stats.betabinom.logpmf.rst", "_autosummary/jax.scipy.stats.betabinom.pmf.rst", "_autosummary/jax.scipy.stats.binom.logpmf.rst", "_autosummary/jax.scipy.stats.binom.pmf.rst", "_autosummary/jax.scipy.stats.cauchy.cdf.rst", "_autosummary/jax.scipy.stats.cauchy.isf.rst", "_autosummary/jax.scipy.stats.cauchy.logcdf.rst", "_autosummary/jax.scipy.stats.cauchy.logpdf.rst", "_autosummary/jax.scipy.stats.cauchy.logsf.rst", "_autosummary/jax.scipy.stats.cauchy.pdf.rst", "_autosummary/jax.scipy.stats.cauchy.ppf.rst", "_autosummary/jax.scipy.stats.cauchy.sf.rst", "_autosummary/jax.scipy.stats.chi2.cdf.rst", "_autosummary/jax.scipy.stats.chi2.logcdf.rst", "_autosummary/jax.scipy.stats.chi2.logpdf.rst", "_autosummary/jax.scipy.stats.chi2.logsf.rst", "_autosummary/jax.scipy.stats.chi2.pdf.rst", "_autosummary/jax.scipy.stats.chi2.sf.rst", "_autosummary/jax.scipy.stats.dirichlet.logpdf.rst", "_autosummary/jax.scipy.stats.dirichlet.pdf.rst", "_autosummary/jax.scipy.stats.expon.logpdf.rst", "_autosummary/jax.scipy.stats.expon.pdf.rst", "_autosummary/jax.scipy.stats.gamma.cdf.rst", "_autosummary/jax.scipy.stats.gamma.logcdf.rst", "_autosummary/jax.scipy.stats.gamma.logpdf.rst", "_autosummary/jax.scipy.stats.gamma.logsf.rst", "_autosummary/jax.scipy.stats.gamma.pdf.rst", "_autosummary/jax.scipy.stats.gamma.sf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.rst", "_autosummary/jax.scipy.stats.gaussian_kde.evaluate.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_box_1d.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_gaussian.rst", "_autosummary/jax.scipy.stats.gaussian_kde.integrate_kde.rst", "_autosummary/jax.scipy.stats.gaussian_kde.logpdf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.pdf.rst", "_autosummary/jax.scipy.stats.gaussian_kde.resample.rst", "_autosummary/jax.scipy.stats.gennorm.cdf.rst", "_autosummary/jax.scipy.stats.gennorm.logpdf.rst", "_autosummary/jax.scipy.stats.gennorm.pdf.rst", "_autosummary/jax.scipy.stats.geom.logpmf.rst", "_autosummary/jax.scipy.stats.geom.pmf.rst", "_autosummary/jax.scipy.stats.laplace.cdf.rst", "_autosummary/jax.scipy.stats.laplace.logpdf.rst", "_autosummary/jax.scipy.stats.laplace.pdf.rst", "_autosummary/jax.scipy.stats.logistic.cdf.rst", "_autosummary/jax.scipy.stats.logistic.isf.rst", "_autosummary/jax.scipy.stats.logistic.logpdf.rst", "_autosummary/jax.scipy.stats.logistic.pdf.rst", "_autosummary/jax.scipy.stats.logistic.ppf.rst", "_autosummary/jax.scipy.stats.logistic.sf.rst", "_autosummary/jax.scipy.stats.mode.rst", "_autosummary/jax.scipy.stats.multinomial.logpmf.rst", "_autosummary/jax.scipy.stats.multinomial.pmf.rst", "_autosummary/jax.scipy.stats.multivariate_normal.logpdf.rst", "_autosummary/jax.scipy.stats.multivariate_normal.pdf.rst", "_autosummary/jax.scipy.stats.nbinom.logpmf.rst", "_autosummary/jax.scipy.stats.nbinom.pmf.rst", "_autosummary/jax.scipy.stats.norm.cdf.rst", "_autosummary/jax.scipy.stats.norm.isf.rst", "_autosummary/jax.scipy.stats.norm.logcdf.rst", "_autosummary/jax.scipy.stats.norm.logpdf.rst", "_autosummary/jax.scipy.stats.norm.logsf.rst", "_autosummary/jax.scipy.stats.norm.pdf.rst", "_autosummary/jax.scipy.stats.norm.ppf.rst", "_autosummary/jax.scipy.stats.norm.sf.rst", "_autosummary/jax.scipy.stats.pareto.logpdf.rst", "_autosummary/jax.scipy.stats.pareto.pdf.rst", "_autosummary/jax.scipy.stats.poisson.logpmf.rst", "_autosummary/jax.scipy.stats.poisson.pmf.rst", "_autosummary/jax.scipy.stats.rankdata.rst", "_autosummary/jax.scipy.stats.sem.rst", "_autosummary/jax.scipy.stats.t.logpdf.rst", "_autosummary/jax.scipy.stats.t.pdf.rst", "_autosummary/jax.scipy.stats.truncnorm.cdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logcdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logpdf.rst", "_autosummary/jax.scipy.stats.truncnorm.logsf.rst", "_autosummary/jax.scipy.stats.truncnorm.pdf.rst", "_autosummary/jax.scipy.stats.truncnorm.sf.rst", "_autosummary/jax.scipy.stats.uniform.cdf.rst", "_autosummary/jax.scipy.stats.uniform.logpdf.rst", "_autosummary/jax.scipy.stats.uniform.pdf.rst", "_autosummary/jax.scipy.stats.uniform.ppf.rst", "_autosummary/jax.scipy.stats.vonmises.logpdf.rst", "_autosummary/jax.scipy.stats.vonmises.pdf.rst", "_autosummary/jax.scipy.stats.wrapcauchy.logpdf.rst", "_autosummary/jax.scipy.stats.wrapcauchy.pdf.rst", "_autosummary/jax.transfer_guard.rst", "_autosummary/jax.tree.all.rst", "_autosummary/jax.tree.flatten.rst", "_autosummary/jax.tree.leaves.rst", "_autosummary/jax.tree.map.rst", "_autosummary/jax.tree.reduce.rst", "_autosummary/jax.tree.structure.rst", "_autosummary/jax.tree.transpose.rst", "_autosummary/jax.tree.unflatten.rst", "_autosummary/jax.tree_util.Partial.rst", "_autosummary/jax.tree_util.all_leaves.rst", "_autosummary/jax.tree_util.build_tree.rst", "_autosummary/jax.tree_util.keystr.rst", "_autosummary/jax.tree_util.register_pytree_node.rst", "_autosummary/jax.tree_util.register_pytree_node_class.rst", "_autosummary/jax.tree_util.register_pytree_with_keys.rst", "_autosummary/jax.tree_util.register_pytree_with_keys_class.rst", "_autosummary/jax.tree_util.tree_all.rst", "_autosummary/jax.tree_util.tree_flatten.rst", "_autosummary/jax.tree_util.tree_flatten_with_path.rst", "_autosummary/jax.tree_util.tree_leaves.rst", "_autosummary/jax.tree_util.tree_leaves_with_path.rst", "_autosummary/jax.tree_util.tree_map.rst", "_autosummary/jax.tree_util.tree_map_with_path.rst", "_autosummary/jax.tree_util.tree_reduce.rst", "_autosummary/jax.tree_util.tree_structure.rst", "_autosummary/jax.tree_util.tree_transpose.rst", "_autosummary/jax.tree_util.tree_unflatten.rst", "_autosummary/jax.tree_util.treedef_children.rst", "_autosummary/jax.tree_util.treedef_is_leaf.rst", "_autosummary/jax.tree_util.treedef_tuple.rst", "_autosummary/jax.typing.ArrayLike.rst", "_autosummary/jax.typing.DTypeLike.rst", "_autosummary/jax.value_and_grad.rst", "_autosummary/jax.vjp.rst", "_autosummary/jax.vmap.rst", "_autosummary/jax.xla_computation.rst", "advanced_guide.rst", "aot.md", "api_compatibility.md", "async_dispatch.rst", "autodidax.ipynb", "beginner_guide.rst", "building_on_jax.md", "changelog.md", "concurrency.rst", "contributing.md", "contributor_guide.rst", "debugging/checkify_guide.md", "debugging/flags.md", "debugging/index.md", "debugging/print_breakpoint.md", "deprecation.md", "developer.md", "device_memory_profiling.md", "errors.rst", "faq.rst", "glossary.rst", "gpu_memory_allocation.rst", "gpu_performance_tips.md", "index.rst", "installation.md", "investigating_a_regression.md", "jax.rst", "jax-101/01-jax-basics.ipynb", "jax-101/02-jitting.ipynb", "jax-101/03-vectorization.ipynb", "jax-101/04-advanced-autodiff.ipynb", "jax-101/05-random-numbers.ipynb", "jax-101/05.1-pytrees.ipynb", "jax-101/06-parallelism.ipynb", "jax-101/07-state.ipynb", "jax-101/08-pjit.rst", "jax-101/index.rst", "jax.debug.rst", "jax.distributed.rst", "jax.dlpack.rst", "jax.dtypes.rst", "jax.example_libraries.rst", "jax.example_libraries.optimizers.rst", "jax.example_libraries.stax.rst", "jax.experimental.rst", "jax.experimental.array_api.rst", "jax.experimental.checkify.rst", "jax.experimental.compilation_cache.rst", "jax.experimental.custom_partitioning.rst", "jax.experimental.host_callback.rst", "jax.experimental.jet.rst", "jax.experimental.key_reuse.rst", "jax.experimental.maps.rst", "jax.experimental.mesh_utils.rst", "jax.experimental.multihost_utils.rst", "jax.experimental.pjit.rst", "jax.experimental.sparse.rst", "jax.extend.rst", "jax.extend.linear_util.rst", "jax.extend.mlir.rst", "jax.extend.random.rst", "jax.flatten_util.rst", "jax.image.rst", "jax.lax.rst", "jax.lib.rst", "jax.nn.rst", "jax.nn.initializers.rst", "jax.numpy.rst", "jax.ops.rst", "jax.profiler.rst", "jax.random.rst", "jax.scipy.rst", "jax.sharding.rst", "jax.stages.rst", "jax.tree.rst", "jax.tree_util.rst", "jax.typing.rst", "jax_array_migration.md", "jax_internal_api.rst", "jaxpr.rst", "jep/10657-sequencing-effects.md", "jep/11830-new-remat-checkpoint.md", "jep/12049-type-annotations.md", "jep/14273-shard-map.md", "jep/15856-jex.md", "jep/17111-shmap-transpose.md", "jep/18137-numpy-scipy-scope.md", "jep/2026-custom-derivatives.md", "jep/263-prng.md", "jep/4008-custom-vjp-update.md", "jep/4410-omnistaging.md", "jep/9263-typed-keys.md", "jep/9407-type-promotion.ipynb", "jep/9419-jax-versioning.md", "jep/index.rst", "multi_process.md", "notebooks/Common_Gotchas_in_JAX.ipynb", "notebooks/Custom_derivative_rules_for_Python_code.ipynb", "notebooks/Distributed_arrays_and_automatic_parallelization.ipynb", "notebooks/How_JAX_primitives_work.ipynb", "notebooks/Neural_Network_and_Data_Loading.ipynb", "notebooks/Writing_custom_interpreters_in_Jax.ipynb", "notebooks/autodiff_cookbook.ipynb", "notebooks/autodiff_remat.ipynb", "notebooks/convolutions.ipynb", "notebooks/external_callbacks.ipynb", "notebooks/neural_network_with_tfds_data.ipynb", "notebooks/quickstart.ipynb", "notebooks/shard_map.ipynb", "notebooks/thinking_in_jax.ipynb", "notebooks/vmapped_log_probs.ipynb", "notebooks/xmap_tutorial.ipynb", "notes.rst", "pallas/design.md", "pallas/index.rst", "pallas/quickstart.ipynb", "pallas/tpu/details.rst", "pallas/tpu/index.rst", "pallas/tpu/pipelining.ipynb", "persistent_compilation_cache.md", "profiling.md", "pytrees.md", "rank_promotion_warning.rst", "transfer_guard.rst", "tutorials/advanced-autodiff.md", "tutorials/advanced-compilation.md", "tutorials/advanced-debugging.md", "tutorials/automatic-differentiation.md", "tutorials/automatic-vectorization.md", "tutorials/debugging.md", "tutorials/external-callbacks.md", "tutorials/gradient-checkpointing.md", "tutorials/index.rst", "tutorials/jax-primitives.md", "tutorials/jaxpr.md", "tutorials/jit-compilation.md", "tutorials/key-concepts.md", "tutorials/parallelism.md", "tutorials/profiling-and-performance.md", "tutorials/quickstart.md", "tutorials/random-numbers.md", "tutorials/sharded-computation.ipynb", "tutorials/simple-neural-network.md", "tutorials/stateful-computations.md", "tutorials/working-with-pytrees.md", "type_promotion.rst", "user_guides.rst"], "indexentries": {"__call__() (jax.stages.compiled method)": [[1176, "jax.stages.Compiled.__call__", false]], "__call__() (jax.stages.wrapped method)": [[1176, "jax.stages.Wrapped.__call__", false]], "__init__() (jax.array method)": [[1, "jax.Array.__init__", false]], "__init__() (jax.core.closedjaxpr method)": [[11, "jax.core.ClosedJaxpr.__init__", false]], "__init__() (jax.core.jaxpr method)": [[12, "jax.core.Jaxpr.__init__", false]], "__init__() (jax.custom_jvp method)": [[14, "jax.custom_jvp.__init__", false]], "__init__() (jax.custom_vjp method)": [[15, "jax.custom_vjp.__init__", false]], "__init__() (jax.device method)": [[2, "jax.Device.__init__", false]], "__init__() (jax.dtypes.bfloat16 method)": [[39, "jax.dtypes.bfloat16.__init__", false]], "__init__() (jax.dtypes.prng_key method)": [[43, "jax.dtypes.prng_key.__init__", false]], "__init__() (jax.experimental.checkify.error method)": [[51, "jax.experimental.checkify.Error.__init__", false]], "__init__() (jax.experimental.sparse.bcoo method)": [[80, "jax.experimental.sparse.BCOO.__init__", false]], "__init__() (jax.experimental.sparse.bcsr method)": [[81, "jax.experimental.sparse.BCSR.__init__", false]], "__init__() (jax.experimental.sparse.coo method)": [[82, "jax.experimental.sparse.COO.__init__", false]], "__init__() (jax.experimental.sparse.csc method)": [[83, "jax.experimental.sparse.CSC.__init__", false]], "__init__() (jax.experimental.sparse.csr method)": [[84, "jax.experimental.sparse.CSR.__init__", false]], "__init__() (jax.experimental.sparse.jaxsparse method)": [[85, "jax.experimental.sparse.JAXSparse.__init__", false]], "__init__() (jax.extend.linear_util.wrappedfun method)": [[127, "jax.extend.linear_util.WrappedFun.__init__", false]], "__init__() (jax.numpy.bool_ method)": [[442, "jax.numpy.bool_.__init__", false]], "__init__() (jax.numpy.character method)": [[451, "jax.numpy.character.__init__", false]], "__init__() (jax.numpy.complex128 method)": [[455, "jax.numpy.complex128.__init__", false]], "__init__() (jax.numpy.complex64 method)": [[456, "jax.numpy.complex64.__init__", false]], "__init__() (jax.numpy.complexfloating method)": [[458, "jax.numpy.complexfloating.__init__", false]], "__init__() (jax.numpy.dtype method)": [[494, "jax.numpy.dtype.__init__", false]], "__init__() (jax.numpy.finfo method)": [[527, "jax.numpy.finfo.__init__", false]], "__init__() (jax.numpy.flexible method)": [[530, "jax.numpy.flexible.__init__", false]], "__init__() (jax.numpy.float16 method)": [[534, "jax.numpy.float16.__init__", false]], "__init__() (jax.numpy.float32 method)": [[535, "jax.numpy.float32.__init__", false]], "__init__() (jax.numpy.float64 method)": [[536, "jax.numpy.float64.__init__", false]], "__init__() (jax.numpy.floating method)": [[539, "jax.numpy.floating.__init__", false]], "__init__() (jax.numpy.generic method)": [[556, "jax.numpy.generic.__init__", false]], "__init__() (jax.numpy.iinfo method)": [[574, "jax.numpy.iinfo.__init__", false]], "__init__() (jax.numpy.inexact method)": [[578, "jax.numpy.inexact.__init__", false]], "__init__() (jax.numpy.int16 method)": [[581, "jax.numpy.int16.__init__", false]], "__init__() (jax.numpy.int32 method)": [[582, "jax.numpy.int32.__init__", false]], "__init__() (jax.numpy.int64 method)": [[583, "jax.numpy.int64.__init__", false]], "__init__() (jax.numpy.int8 method)": [[584, "jax.numpy.int8.__init__", false]], "__init__() (jax.numpy.integer method)": [[586, "jax.numpy.integer.__init__", false]], "__init__() (jax.numpy.number method)": [[694, "jax.numpy.number.__init__", false]], "__init__() (jax.numpy.object_ method)": [[695, "jax.numpy.object_.__init__", false]], "__init__() (jax.numpy.signedinteger method)": [[756, "jax.numpy.signedinteger.__init__", false]], "__init__() (jax.numpy.ufunc method)": [[792, "jax.numpy.ufunc.__init__", false]], "__init__() (jax.numpy.uint16 method)": [[794, "jax.numpy.uint16.__init__", false]], "__init__() (jax.numpy.uint32 method)": [[795, "jax.numpy.uint32.__init__", false]], "__init__() (jax.numpy.uint64 method)": [[796, "jax.numpy.uint64.__init__", false]], "__init__() (jax.numpy.uint8 method)": [[797, "jax.numpy.uint8.__init__", false]], "__init__() (jax.numpy.unsignedinteger method)": [[806, "jax.numpy.unsignedinteger.__init__", false]], "__init__() (jax.profiler.steptraceannotation method)": [[828, "jax.profiler.StepTraceAnnotation.__init__", false]], "__init__() (jax.profiler.traceannotation method)": [[829, "jax.profiler.TraceAnnotation.__init__", false]], "__init__() (jax.scipy.optimize.optimizeresults method)": [[913, "jax.scipy.optimize.OptimizeResults.__init__", false]], "__init__() (jax.scipy.spatial.transform.rotation method)": [[927, "jax.scipy.spatial.transform.Rotation.__init__", false]], "__init__() (jax.scipy.spatial.transform.slerp method)": [[928, "jax.scipy.spatial.transform.Slerp.__init__", false]], "__init__() (jax.scipy.stats.gaussian_kde method)": [[1007, "jax.scipy.stats.gaussian_kde.__init__", false]], "__init__() (jax.shapedtypestruct method)": [[3, "jax.ShapeDtypeStruct.__init__", false]], "__init__() (jax.tree_util.partial method)": [[1075, "jax.tree_util.Partial.__init__", false]], "abs() (in module jax.lax)": [[152, "jax.lax.abs", false]], "abs() (in module jax.numpy)": [[385, "jax.numpy.abs", false]], "absolute() (in module jax.numpy)": [[386, "jax.numpy.absolute", false]], "acos() (in module jax.lax)": [[153, "jax.lax.acos", false]], "acos() (in module jax.numpy)": [[387, "jax.numpy.acos", false]], "acosh() (in module jax.lax)": [[154, "jax.lax.acosh", false]], "acosh() (in module jax.numpy)": [[388, "jax.numpy.acosh", false]], "adagrad() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.adagrad", false]], "adam() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.adam", false]], "adamax() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.adamax", false]], "add() (in module jax.lax)": [[155, "jax.lax.add", false]], "add() (in module jax.numpy)": [[389, "jax.numpy.add", false]], "addressable_devices (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.addressable_devices", false]], "addressable_devices (jax.sharding.sharding property)": [[1175, "jax.sharding.Sharding.addressable_devices", false]], "addressable_devices_indices_map() (jax.sharding.sharding method)": [[1175, "jax.sharding.Sharding.addressable_devices_indices_map", false]], "after_all() (in module jax.lax)": [[156, "jax.lax.after_all", false]], "all() (in module jax.numpy)": [[390, "jax.numpy.all", false]], "all() (in module jax.tree)": [[1067, "jax.tree.all", false]], "all_checks (in module jax.experimental.checkify)": [[53, "jax.experimental.checkify.all_checks", false]], "all_gather() (in module jax.lax)": [[157, "jax.lax.all_gather", false]], "all_leaves() (in module jax.tree_util)": [[1076, "jax.tree_util.all_leaves", false]], "all_to_all() (in module jax.lax)": [[158, "jax.lax.all_to_all", false]], "allclose() (in module jax.numpy)": [[391, "jax.numpy.allclose", false]], "amax() (in module jax.numpy)": [[392, "jax.numpy.amax", false]], "amin() (in module jax.numpy)": [[393, "jax.numpy.amin", false]], "angle() (in module jax.numpy)": [[394, "jax.numpy.angle", false]], "annotate_function() (in module jax.profiler)": [[830, "jax.profiler.annotate_function", false]], "any() (in module jax.numpy)": [[395, "jax.numpy.any", false]], "append() (in module jax.numpy)": [[396, "jax.numpy.append", false]], "apply_along_axis() (in module jax.numpy)": [[397, "jax.numpy.apply_along_axis", false]], "apply_over_axes() (in module jax.numpy)": [[398, "jax.numpy.apply_over_axes", false]], "approx_max_k() (in module jax.lax)": [[159, "jax.lax.approx_max_k", false]], "approx_min_k() (in module jax.lax)": [[160, "jax.lax.approx_min_k", false]], "arange() (in module jax.numpy)": [[399, "jax.numpy.arange", false]], "arccos() (in module jax.numpy)": [[400, "jax.numpy.arccos", false]], "arccosh() (in module jax.numpy)": [[401, "jax.numpy.arccosh", false]], "arcsin() (in module jax.numpy)": [[402, "jax.numpy.arcsin", false]], "arcsinh() (in module jax.numpy)": [[403, "jax.numpy.arcsinh", false]], "arctan() (in module jax.numpy)": [[404, "jax.numpy.arctan", false]], "arctan2() (in module jax.numpy)": [[405, "jax.numpy.arctan2", false]], "arctanh() (in module jax.numpy)": [[406, "jax.numpy.arctanh", false]], "argmax() (in module jax.lax)": [[161, "jax.lax.argmax", false]], "argmax() (in module jax.numpy)": [[407, "jax.numpy.argmax", false]], "argmin() (in module jax.lax)": [[162, "jax.lax.argmin", false]], "argmin() (in module jax.numpy)": [[408, "jax.numpy.argmin", false]], "argpartition() (in module jax.numpy)": [[409, "jax.numpy.argpartition", false]], "argsort() (in module jax.numpy)": [[410, "jax.numpy.argsort", false]], "argwhere() (in module jax.numpy)": [[411, "jax.numpy.argwhere", false]], "around() (in module jax.numpy)": [[412, "jax.numpy.around", false]], "array": [[1123, "term-Array", true]], "array (class in jax)": [[1, "jax.Array", false]], "array() (in module jax.numpy)": [[413, "jax.numpy.array", false]], "array_equal() (in module jax.numpy)": [[414, "jax.numpy.array_equal", false]], "array_equiv() (in module jax.numpy)": [[415, "jax.numpy.array_equiv", false]], "array_repr() (in module jax.numpy)": [[416, "jax.numpy.array_repr", false]], "array_split() (in module jax.numpy)": [[417, "jax.numpy.array_split", false]], "array_str() (in module jax.numpy)": [[418, "jax.numpy.array_str", false]], "arraylike (in module jax.typing)": [[1097, "jax.typing.ArrayLike", false]], "as_text() (jax.stages.compiled method)": [[1176, "jax.stages.Compiled.as_text", false]], "as_text() (jax.stages.lowered method)": [[1176, "jax.stages.Lowered.as_text", false]], "asarray() (in module jax.numpy)": [[419, "jax.numpy.asarray", false]], "asin() (in module jax.lax)": [[163, "jax.lax.asin", false]], "asin() (in module jax.numpy)": [[420, "jax.numpy.asin", false]], "asinh() (in module jax.lax)": [[164, "jax.lax.asinh", false]], "asinh() (in module jax.numpy)": [[421, "jax.numpy.asinh", false]], "assert_equal() (in module jax.experimental.multihost_utils)": [[74, "jax.experimental.multihost_utils.assert_equal", false]], "associative_scan() (in module jax.lax)": [[165, "jax.lax.associative_scan", false]], "astype() (in module jax.numpy)": [[422, "jax.numpy.astype", false]], "at (jax.numpy.ndarray property)": [[688, "jax.numpy.ndarray.at", false]], "atan() (in module jax.lax)": [[166, "jax.lax.atan", false]], "atan() (in module jax.numpy)": [[423, "jax.numpy.atan", false]], "atan2() (in module jax.lax)": [[167, "jax.lax.atan2", false]], "atan2() (in module jax.numpy)": [[424, "jax.numpy.atan2", false]], "atanh() (in module jax.lax)": [[168, "jax.lax.atanh", false]], "atanh() (in module jax.numpy)": [[425, "jax.numpy.atanh", false]], "atleast_1d() (in module jax.numpy)": [[426, "jax.numpy.atleast_1d", false]], "atleast_2d() (in module jax.numpy)": [[427, "jax.numpy.atleast_2d", false]], "atleast_3d() (in module jax.numpy)": [[428, "jax.numpy.atleast_3d", false]], "automatic_checks (in module jax.experimental.checkify)": [[54, "jax.experimental.checkify.automatic_checks", false]], "average() (in module jax.numpy)": [[429, "jax.numpy.average", false]], "avgpool() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.AvgPool", false]], "axis_index() (in module jax.lax)": [[169, "jax.lax.axis_index", false]], "ball() (in module jax.random)": [[839, "jax.random.ball", false]], "barrier_wait() (in module jax.experimental.host_callback)": [[66, "jax.experimental.host_callback.barrier_wait", false]], "bartlett() (in module jax.numpy)": [[430, "jax.numpy.bartlett", false]], "batch_matmul() (in module jax.lax)": [[170, "jax.lax.batch_matmul", false]], "batchnorm() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.BatchNorm", false]], "bcoo (class in jax.experimental.sparse)": [[80, "jax.experimental.sparse.BCOO", false]], "bcoo_broadcast_in_dim() (in module jax.experimental.sparse)": [[86, "jax.experimental.sparse.bcoo_broadcast_in_dim", false]], "bcoo_concatenate() (in module jax.experimental.sparse)": [[87, "jax.experimental.sparse.bcoo_concatenate", false]], "bcoo_dot_general() (in module jax.experimental.sparse)": [[88, "jax.experimental.sparse.bcoo_dot_general", false]], "bcoo_dot_general_sampled() (in module jax.experimental.sparse)": [[89, "jax.experimental.sparse.bcoo_dot_general_sampled", false]], "bcoo_dynamic_slice() (in module jax.experimental.sparse)": [[90, "jax.experimental.sparse.bcoo_dynamic_slice", false]], "bcoo_extract() (in module jax.experimental.sparse)": [[91, "jax.experimental.sparse.bcoo_extract", false]], "bcoo_fromdense() (in module jax.experimental.sparse)": [[92, "jax.experimental.sparse.bcoo_fromdense", false]], "bcoo_gather() (in module jax.experimental.sparse)": [[93, "jax.experimental.sparse.bcoo_gather", false]], "bcoo_multiply_dense() (in module jax.experimental.sparse)": [[94, "jax.experimental.sparse.bcoo_multiply_dense", false]], "bcoo_multiply_sparse() (in module jax.experimental.sparse)": [[95, "jax.experimental.sparse.bcoo_multiply_sparse", false]], "bcoo_reduce_sum() (in module jax.experimental.sparse)": [[96, "jax.experimental.sparse.bcoo_reduce_sum", false]], "bcoo_reshape() (in module jax.experimental.sparse)": [[97, "jax.experimental.sparse.bcoo_reshape", false]], "bcoo_slice() (in module jax.experimental.sparse)": [[98, "jax.experimental.sparse.bcoo_slice", false]], "bcoo_sort_indices() (in module jax.experimental.sparse)": [[99, "jax.experimental.sparse.bcoo_sort_indices", false]], "bcoo_squeeze() (in module jax.experimental.sparse)": [[100, "jax.experimental.sparse.bcoo_squeeze", false]], "bcoo_sum_duplicates() (in module jax.experimental.sparse)": [[101, "jax.experimental.sparse.bcoo_sum_duplicates", false]], "bcoo_todense() (in module jax.experimental.sparse)": [[102, "jax.experimental.sparse.bcoo_todense", false]], "bcoo_transpose() (in module jax.experimental.sparse)": [[103, "jax.experimental.sparse.bcoo_transpose", false]], "bcoo_update_layout() (in module jax.experimental.sparse)": [[104, "jax.experimental.sparse.bcoo_update_layout", false]], "bcsr (class in jax.experimental.sparse)": [[81, "jax.experimental.sparse.BCSR", false]], "bcsr_dot_general() (in module jax.experimental.sparse)": [[105, "jax.experimental.sparse.bcsr_dot_general", false]], "bcsr_extract() (in module jax.experimental.sparse)": [[106, "jax.experimental.sparse.bcsr_extract", false]], "bcsr_fromdense() (in module jax.experimental.sparse)": [[107, "jax.experimental.sparse.bcsr_fromdense", false]], "bcsr_todense() (in module jax.experimental.sparse)": [[108, "jax.experimental.sparse.bcsr_todense", false]], "bernoulli() (in module jax.random)": [[840, "jax.random.bernoulli", false]], "bernoulli() (in module jax.scipy.special)": [[929, "jax.scipy.special.bernoulli", false]], "bessel_i0e() (in module jax.lax)": [[171, "jax.lax.bessel_i0e", false]], "bessel_i1e() (in module jax.lax)": [[172, "jax.lax.bessel_i1e", false]], "beta() (in module jax.random)": [[841, "jax.random.beta", false]], "beta() (in module jax.scipy.special)": [[930, "jax.scipy.special.beta", false]], "betainc() (in module jax.lax)": [[173, "jax.lax.betainc", false]], "betainc() (in module jax.scipy.special)": [[931, "jax.scipy.special.betainc", false]], "betaln() (in module jax.scipy.special)": [[932, "jax.scipy.special.betaln", false]], "bfloat16 (class in jax.dtypes)": [[39, "jax.dtypes.bfloat16", false]], "bicgstab() (in module jax.scipy.sparse.linalg)": [[924, "jax.scipy.sparse.linalg.bicgstab", false]], "bincount() (in module jax.numpy)": [[431, "jax.numpy.bincount", false]], "binomial() (in module jax.random)": [[842, "jax.random.binomial", false]], "bitcast_convert_type() (in module jax.lax)": [[174, "jax.lax.bitcast_convert_type", false]], "bits (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.bits", false]], "bits() (in module jax.random)": [[843, "jax.random.bits", false]], "bitwise_and() (in module jax.lax)": [[175, "jax.lax.bitwise_and", false]], "bitwise_and() (in module jax.numpy)": [[432, "jax.numpy.bitwise_and", false]], "bitwise_count() (in module jax.numpy)": [[433, "jax.numpy.bitwise_count", false]], "bitwise_invert() (in module jax.numpy)": [[434, "jax.numpy.bitwise_invert", false]], "bitwise_left_shift() (in module jax.numpy)": [[435, "jax.numpy.bitwise_left_shift", false]], "bitwise_not() (in module jax.lax)": [[176, "jax.lax.bitwise_not", false]], "bitwise_not() (in module jax.numpy)": [[436, "jax.numpy.bitwise_not", false]], "bitwise_or() (in module jax.lax)": [[177, "jax.lax.bitwise_or", false]], "bitwise_or() (in module jax.numpy)": [[437, "jax.numpy.bitwise_or", false]], "bitwise_right_shift() (in module jax.numpy)": [[438, "jax.numpy.bitwise_right_shift", false]], "bitwise_xor() (in module jax.lax)": [[178, "jax.lax.bitwise_xor", false]], "bitwise_xor() (in module jax.numpy)": [[439, "jax.numpy.bitwise_xor", false]], "blackman() (in module jax.numpy)": [[440, "jax.numpy.blackman", false]], "block() (in module jax.numpy)": [[441, "jax.numpy.block", false]], "block_diag() (in module jax.scipy.linalg)": [[887, "jax.scipy.linalg.block_diag", false]], "block_until_ready() (in module jax)": [[4, "jax.block_until_ready", false]], "bool_ (class in jax.numpy)": [[442, "jax.numpy.bool_", false]], "breakpoint() (in module jax.debug)": [[16, "jax.debug.breakpoint", false]], "broadcast() (in module jax.lax)": [[179, "jax.lax.broadcast", false]], "broadcast_arrays() (in module jax.numpy)": [[443, "jax.numpy.broadcast_arrays", false]], "broadcast_in_dim() (in module jax.lax)": [[180, "jax.lax.broadcast_in_dim", false]], "broadcast_one_to_all() (in module jax.experimental.multihost_utils)": [[75, "jax.experimental.multihost_utils.broadcast_one_to_all", false]], "broadcast_shapes() (in module jax.lax)": [[181, "jax.lax.broadcast_shapes", false]], "broadcast_shapes() (in module jax.numpy)": [[444, "jax.numpy.broadcast_shapes", false]], "broadcast_to() (in module jax.numpy)": [[445, "jax.numpy.broadcast_to", false]], "broadcast_to_rank() (in module jax.lax)": [[182, "jax.lax.broadcast_to_rank", false]], "broadcasted_iota() (in module jax.lax)": [[183, "jax.lax.broadcasted_iota", false]], "build_tree() (in module jax.tree_util)": [[1077, "jax.tree_util.build_tree", false]], "c_ (in module jax.numpy)": [[446, "jax.numpy.c_", false]], "cache() (in module jax.extend.linear_util)": [[128, "jax.extend.linear_util.cache", false]], "call() (in module jax.experimental.host_callback)": [[67, "jax.experimental.host_callback.call", false]], "callback() (in module jax.debug)": [[17, "jax.debug.callback", false]], "callbackexception": [[65, "jax.experimental.host_callback.CallbackException", false]], "can_cast() (in module jax.numpy)": [[447, "jax.numpy.can_cast", false]], "canonicalize_dtype() (in module jax.dtypes)": [[40, "jax.dtypes.canonicalize_dtype", false]], "categorical() (in module jax.random)": [[844, "jax.random.categorical", false]], "cauchy() (in module jax.random)": [[845, "jax.random.cauchy", false]], "cbrt() (in module jax.lax)": [[184, "jax.lax.cbrt", false]], "cbrt() (in module jax.numpy)": [[448, "jax.numpy.cbrt", false]], "cdf() (in module jax.scipy.stats.bernoulli)": [[969, "jax.scipy.stats.bernoulli.cdf", false]], "cdf() (in module jax.scipy.stats.beta)": [[973, "jax.scipy.stats.beta.cdf", false]], "cdf() (in module jax.scipy.stats.cauchy)": [[983, "jax.scipy.stats.cauchy.cdf", false]], "cdf() (in module jax.scipy.stats.chi2)": [[991, "jax.scipy.stats.chi2.cdf", false]], "cdf() (in module jax.scipy.stats.gamma)": [[1001, "jax.scipy.stats.gamma.cdf", false]], "cdf() (in module jax.scipy.stats.gennorm)": [[1015, "jax.scipy.stats.gennorm.cdf", false]], "cdf() (in module jax.scipy.stats.laplace)": [[1020, "jax.scipy.stats.laplace.cdf", false]], "cdf() (in module jax.scipy.stats.logistic)": [[1023, "jax.scipy.stats.logistic.cdf", false]], "cdf() (in module jax.scipy.stats.norm)": [[1036, "jax.scipy.stats.norm.cdf", false]], "cdf() (in module jax.scipy.stats.truncnorm)": [[1052, "jax.scipy.stats.truncnorm.cdf", false]], "cdf() (in module jax.scipy.stats.uniform)": [[1058, "jax.scipy.stats.uniform.cdf", false]], "cdouble (in module jax.numpy)": [[449, "jax.numpy.cdouble", false]], "ceil() (in module jax.lax)": [[185, "jax.lax.ceil", false]], "ceil() (in module jax.numpy)": [[450, "jax.numpy.ceil", false]], "celu() (in module jax.nn)": [[343, "jax.nn.celu", false]], "cg() (in module jax.scipy.sparse.linalg)": [[925, "jax.scipy.sparse.linalg.cg", false]], "character (class in jax.numpy)": [[451, "jax.numpy.character", false]], "check() (in module jax.experimental.checkify)": [[55, "jax.experimental.checkify.check", false]], "check_error() (in module jax.experimental.checkify)": [[56, "jax.experimental.checkify.check_error", false]], "check_tracer_leaks (in module jax)": [[5, "jax.check_tracer_leaks", false]], "checkify() (in module jax.experimental.checkify)": [[57, "jax.experimental.checkify.checkify", false]], "checking_leaks (in module jax)": [[6, "jax.checking_leaks", false]], "checkpoint() (in module jax)": [[7, "jax.checkpoint", false]], "chisquare() (in module jax.random)": [[846, "jax.random.chisquare", false]], "cho_factor() (in module jax.scipy.linalg)": [[888, "jax.scipy.linalg.cho_factor", false]], "cho_solve() (in module jax.scipy.linalg)": [[889, "jax.scipy.linalg.cho_solve", false]], "choice() (in module jax.random)": [[847, "jax.random.choice", false]], "cholesky() (in module jax.lax.linalg)": [[245, "jax.lax.linalg.cholesky", false]], "cholesky() (in module jax.numpy.linalg)": [[614, "jax.numpy.linalg.cholesky", false]], "cholesky() (in module jax.scipy.linalg)": [[890, "jax.scipy.linalg.cholesky", false]], "choose() (in module jax.numpy)": [[452, "jax.numpy.choose", false]], "clamp() (in module jax.lax)": [[186, "jax.lax.clamp", false]], "clear_caches() (in module jax)": [[8, "jax.clear_caches", false]], "clip() (in module jax.numpy)": [[453, "jax.numpy.clip", false]], "clip_grads() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.clip_grads", false]], "clone() (in module jax.random)": [[848, "jax.random.clone", false]], "closedjaxpr (class in jax.core)": [[11, "jax.core.ClosedJaxpr", false]], "closure_convert() (in module jax)": [[9, "jax.closure_convert", false]], "clz() (in module jax.lax)": [[187, "jax.lax.clz", false]], "collapse() (in module jax.lax)": [[188, "jax.lax.collapse", false]], "column_stack() (in module jax.numpy)": [[454, "jax.numpy.column_stack", false]], "compile() (jax.stages.lowered method)": [[1176, "jax.stages.Lowered.compile", false]], "compiled (class in jax.stages)": [[1176, "jax.stages.Compiled", false]], "compiler_ir() (jax.stages.lowered method)": [[1176, "jax.stages.Lowered.compiler_ir", false]], "complex() (in module jax.lax)": [[189, "jax.lax.complex", false]], "complex128 (class in jax.numpy)": [[455, "jax.numpy.complex128", false]], "complex64 (class in jax.numpy)": [[456, "jax.numpy.complex64", false]], "complex_ (in module jax.numpy)": [[457, "jax.numpy.complex_", false]], "complexfloating (class in jax.numpy)": [[458, "jax.numpy.complexfloating", false]], "complexwarning": [[384, "jax.numpy.ComplexWarning", false]], "compress() (in module jax.numpy)": [[459, "jax.numpy.compress", false]], "concat() (in module jax.numpy)": [[460, "jax.numpy.concat", false]], "concatenate() (in module jax.lax)": [[190, "jax.lax.concatenate", false]], "concatenate() (in module jax.numpy)": [[461, "jax.numpy.concatenate", false]], "concretizationtypeerror (class in jax.errors)": [[1121, "jax.errors.ConcretizationTypeError", false]], "cond() (in module jax.lax)": [[191, "jax.lax.cond", false]], "cond() (in module jax.numpy.linalg)": [[615, "jax.numpy.linalg.cond", false]], "config (in module jax)": [[10, "jax.config", false]], "conj() (in module jax.lax)": [[192, "jax.lax.conj", false]], "conj() (in module jax.numpy)": [[462, "jax.numpy.conj", false]], "conjugate() (in module jax.numpy)": [[463, "jax.numpy.conjugate", false]], "constant() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.constant", false]], "constant() (in module jax.nn.initializers)": [[351, "jax.nn.initializers.constant", false]], "conv() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.Conv", false]], "conv() (in module jax.lax)": [[193, "jax.lax.conv", false]], "conv1dtranspose() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.Conv1DTranspose", false]], "conv_dimension_numbers() (in module jax.lax)": [[194, "jax.lax.conv_dimension_numbers", false]], "conv_general_dilated() (in module jax.lax)": [[195, "jax.lax.conv_general_dilated", false]], "conv_general_dilated_local() (in module jax.lax)": [[196, "jax.lax.conv_general_dilated_local", false]], "conv_general_dilated_patches() (in module jax.lax)": [[197, "jax.lax.conv_general_dilated_patches", false]], "conv_transpose() (in module jax.lax)": [[198, "jax.lax.conv_transpose", false]], "conv_with_general_padding() (in module jax.lax)": [[199, "jax.lax.conv_with_general_padding", false]], "convdimensionnumbers (class in jax.lax)": [[1166, "jax.lax.ConvDimensionNumbers", false]], "convert_element_type() (in module jax.lax)": [[200, "jax.lax.convert_element_type", false]], "convgeneraldilateddimensionnumbers (in module jax.lax)": [[1166, "jax.lax.ConvGeneralDilatedDimensionNumbers", false]], "convolve() (in module jax.numpy)": [[464, "jax.numpy.convolve", false]], "convolve() (in module jax.scipy.signal)": [[915, "jax.scipy.signal.convolve", false]], "convolve2d() (in module jax.scipy.signal)": [[916, "jax.scipy.signal.convolve2d", false]], "convtranspose() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.ConvTranspose", false]], "coo (class in jax.experimental.sparse)": [[82, "jax.experimental.sparse.COO", false]], "coo_fromdense() (in module jax.experimental.sparse)": [[109, "jax.experimental.sparse.coo_fromdense", false]], "coo_matmat() (in module jax.experimental.sparse)": [[110, "jax.experimental.sparse.coo_matmat", false]], "coo_matvec() (in module jax.experimental.sparse)": [[111, "jax.experimental.sparse.coo_matvec", false]], "coo_todense() (in module jax.experimental.sparse)": [[112, "jax.experimental.sparse.coo_todense", false]], "copy() (in module jax.numpy)": [[465, "jax.numpy.copy", false]], "copysign() (in module jax.numpy)": [[466, "jax.numpy.copysign", false]], "corrcoef() (in module jax.numpy)": [[467, "jax.numpy.corrcoef", false]], "correlate() (in module jax.numpy)": [[468, "jax.numpy.correlate", false]], "correlate() (in module jax.scipy.signal)": [[917, "jax.scipy.signal.correlate", false]], "correlate2d() (in module jax.scipy.signal)": [[918, "jax.scipy.signal.correlate2d", false]], "cos() (in module jax.lax)": [[201, "jax.lax.cos", false]], "cos() (in module jax.numpy)": [[469, "jax.numpy.cos", false]], "cosh() (in module jax.lax)": [[202, "jax.lax.cosh", false]], "cosh() (in module jax.numpy)": [[470, "jax.numpy.cosh", false]], "cost_analysis() (jax.stages.compiled method)": [[1176, "jax.stages.Compiled.cost_analysis", false]], "cost_analysis() (jax.stages.lowered method)": [[1176, "jax.stages.Lowered.cost_analysis", false]], "count_nonzero() (in module jax.numpy)": [[471, "jax.numpy.count_nonzero", false]], "cov() (in module jax.numpy)": [[472, "jax.numpy.cov", false]], "cpu": [[1123, "term-CPU", true]], "create_device_mesh() (in module jax.experimental.mesh_utils)": [[72, "jax.experimental.mesh_utils.create_device_mesh", false]], "create_hybrid_device_mesh() (in module jax.experimental.mesh_utils)": [[73, "jax.experimental.mesh_utils.create_hybrid_device_mesh", false]], "cross() (in module jax.numpy)": [[473, "jax.numpy.cross", false]], "cross() (in module jax.numpy.linalg)": [[616, "jax.numpy.linalg.cross", false]], "csc (class in jax.experimental.sparse)": [[83, "jax.experimental.sparse.CSC", false]], "csd() (in module jax.scipy.signal)": [[919, "jax.scipy.signal.csd", false]], "csingle (in module jax.numpy)": [[474, "jax.numpy.csingle", false]], "csr (class in jax.experimental.sparse)": [[84, "jax.experimental.sparse.CSR", false]], "csr_fromdense() (in module jax.experimental.sparse)": [[113, "jax.experimental.sparse.csr_fromdense", false]], "csr_matmat() (in module jax.experimental.sparse)": [[114, "jax.experimental.sparse.csr_matmat", false]], "csr_matvec() (in module jax.experimental.sparse)": [[115, "jax.experimental.sparse.csr_matvec", false]], "csr_todense() (in module jax.experimental.sparse)": [[116, "jax.experimental.sparse.csr_todense", false]], "cumlogsumexp() (in module jax.lax)": [[203, "jax.lax.cumlogsumexp", false]], "cummax() (in module jax.lax)": [[204, "jax.lax.cummax", false]], "cummin() (in module jax.lax)": [[205, "jax.lax.cummin", false]], "cumprod() (in module jax.lax)": [[206, "jax.lax.cumprod", false]], "cumprod() (in module jax.numpy)": [[475, "jax.numpy.cumprod", false]], "cumsum() (in module jax.lax)": [[207, "jax.lax.cumsum", false]], "cumsum() (in module jax.numpy)": [[476, "jax.numpy.cumsum", false]], "cumulative_sum() (in module jax.numpy)": [[477, "jax.numpy.cumulative_sum", false]], "custom_gradient() (in module jax)": [[13, "jax.custom_gradient", false]], "custom_jvp (class in jax)": [[14, "jax.custom_jvp", false]], "custom_linear_solve() (in module jax.lax)": [[208, "jax.lax.custom_linear_solve", false]], "custom_partitioning() (in module jax.experimental.custom_partitioning)": [[1151, "jax.experimental.custom_partitioning.custom_partitioning", false]], "custom_root() (in module jax.lax)": [[209, "jax.lax.custom_root", false]], "custom_vjp (class in jax)": [[15, "jax.custom_vjp", false]], "data (jax.experimental.sparse.bcoo attribute)": [[80, "jax.experimental.sparse.BCOO.data", false]], "dct() (in module jax.scipy.fft)": [[882, "jax.scipy.fft.dct", false]], "dctn() (in module jax.scipy.fft)": [[883, "jax.scipy.fft.dctn", false]], "debug_infs (in module jax)": [[22, "jax.debug_infs", false]], "debug_nans (in module jax)": [[23, "jax.debug_nans", false]], "default() (jax.sharding.pmapsharding class method)": [[1175, "jax.sharding.PmapSharding.default", false]], "default_backend() (in module jax)": [[24, "jax.default_backend", false]], "default_backend() (in module jax.lib.xla_bridge)": [[329, "jax.lib.xla_bridge.default_backend", false]], "default_device (in module jax)": [[25, "jax.default_device", false]], "default_matmul_precision (in module jax)": [[26, "jax.default_matmul_precision", false]], "default_prng_impl (in module jax)": [[27, "jax.default_prng_impl", false]], "define_prng_impl() (in module jax.extend.random)": [[136, "jax.extend.random.define_prng_impl", false]], "deg2rad() (in module jax.numpy)": [[478, "jax.numpy.deg2rad", false]], "degrees() (in module jax.numpy)": [[479, "jax.numpy.degrees", false]], "delete() (in module jax.numpy)": [[480, "jax.numpy.delete", false]], "delta_orthogonal() (in module jax.nn.initializers)": [[352, "jax.nn.initializers.delta_orthogonal", false]], "dense() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.Dense", false]], "det (in module jax.numpy.linalg)": [[617, "jax.numpy.linalg.det", false]], "det() (in module jax.scipy.linalg)": [[891, "jax.scipy.linalg.det", false]], "device": [[1123, "term-Device", true]], "device (class in jax)": [[2, "jax.Device", false]], "device_count() (in module jax)": [[28, "jax.device_count", false]], "device_get() (in module jax)": [[29, "jax.device_get", false]], "device_memory_profile() (in module jax.profiler)": [[831, "jax.profiler.device_memory_profile", false]], "device_put() (in module jax)": [[30, "jax.device_put", false]], "device_put_replicated() (in module jax)": [[31, "jax.device_put_replicated", false]], "device_put_sharded() (in module jax)": [[32, "jax.device_put_sharded", false]], "device_set (jax.sharding.gspmdsharding property)": [[1175, "jax.sharding.GSPMDSharding.device_set", false]], "device_set (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.device_set", false]], "device_set (jax.sharding.pmapsharding property)": [[1175, "jax.sharding.PmapSharding.device_set", false]], "device_set (jax.sharding.positionalsharding property)": [[1175, "jax.sharding.PositionalSharding.device_set", false]], "device_set (jax.sharding.sharding property)": [[1175, "jax.sharding.Sharding.device_set", false]], "device_set (jax.sharding.singledevicesharding property)": [[1175, "jax.sharding.SingleDeviceSharding.device_set", false]], "devices (jax.sharding.pmapsharding property)": [[1175, "jax.sharding.PmapSharding.devices", false]], "devices() (in module jax)": [[33, "jax.devices", false]], "devices_indices_map() (jax.sharding.gspmdsharding method)": [[1175, "jax.sharding.GSPMDSharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.pmapsharding method)": [[1175, "jax.sharding.PmapSharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.sharding method)": [[1175, "jax.sharding.Sharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.singledevicesharding method)": [[1175, "jax.sharding.SingleDeviceSharding.devices_indices_map", false]], "devices_indices_map() (jax.sharding.xlacompatiblesharding method)": [[1175, "jax.sharding.XLACompatibleSharding.devices_indices_map", false]], "diag() (in module jax.numpy)": [[481, "jax.numpy.diag", false]], "diag_indices() (in module jax.numpy)": [[482, "jax.numpy.diag_indices", false]], "diag_indices_from() (in module jax.numpy)": [[483, "jax.numpy.diag_indices_from", false]], "diagflat() (in module jax.numpy)": [[484, "jax.numpy.diagflat", false]], "diagonal() (in module jax.numpy)": [[485, "jax.numpy.diagonal", false]], "diagonal() (in module jax.numpy.linalg)": [[618, "jax.numpy.linalg.diagonal", false]], "diff() (in module jax.numpy)": [[486, "jax.numpy.diff", false]], "digamma() (in module jax.lax)": [[210, "jax.lax.digamma", false]], "digamma() (in module jax.scipy.special)": [[933, "jax.scipy.special.digamma", false]], "digitize() (in module jax.numpy)": [[487, "jax.numpy.digitize", false]], "dirichlet() (in module jax.random)": [[849, "jax.random.dirichlet", false]], "disable_jit() (in module jax)": [[34, "jax.disable_jit", false]], "disable_x64() (in module jax.experimental)": [[63, "jax.experimental.disable_x64", false]], "div() (in module jax.lax)": [[211, "jax.lax.div", false]], "div_checks (in module jax.experimental.checkify)": [[58, "jax.experimental.checkify.div_checks", false]], "divide() (in module jax.numpy)": [[488, "jax.numpy.divide", false]], "divmod() (in module jax.numpy)": [[489, "jax.numpy.divmod", false]], "dot() (in module jax.lax)": [[212, "jax.lax.dot", false]], "dot() (in module jax.numpy)": [[490, "jax.numpy.dot", false]], "dot_general() (in module jax.lax)": [[213, "jax.lax.dot_general", false]], "double (in module jax.numpy)": [[491, "jax.numpy.double", false]], "double_sided_maxwell() (in module jax.random)": [[850, "jax.random.double_sided_maxwell", false]], "dropout() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.Dropout", false]], "dsplit() (in module jax.numpy)": [[492, "jax.numpy.dsplit", false]], "dstack() (in module jax.numpy)": [[493, "jax.numpy.dstack", false]], "dtype (class in jax.numpy)": [[494, "jax.numpy.dtype", false]], "dtype (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.dtype", false]], "dtypelike (in module jax.typing)": [[1098, "jax.typing.DTypeLike", false]], "dynamic_index_in_dim() (in module jax.lax)": [[214, "jax.lax.dynamic_index_in_dim", false]], "dynamic_slice() (in module jax.lax)": [[215, "jax.lax.dynamic_slice", false]], "dynamic_slice_in_dim() (in module jax.lax)": [[216, "jax.lax.dynamic_slice_in_dim", false]], "dynamic_update_index_in_dim() (in module jax.lax)": [[217, "jax.lax.dynamic_update_index_in_dim", false]], "dynamic_update_slice() (in module jax.lax)": [[218, "jax.lax.dynamic_update_slice", false]], "dynamic_update_slice_in_dim() (in module jax.lax)": [[219, "jax.lax.dynamic_update_slice_in_dim", false]], "ediff1d() (in module jax.numpy)": [[495, "jax.numpy.ediff1d", false]], "eig() (in module jax.lax.linalg)": [[246, "jax.lax.linalg.eig", false]], "eig() (in module jax.numpy.linalg)": [[619, "jax.numpy.linalg.eig", false]], "eigh() (in module jax.lax.linalg)": [[247, "jax.lax.linalg.eigh", false]], "eigh() (in module jax.numpy.linalg)": [[620, "jax.numpy.linalg.eigh", false]], "eigh() (in module jax.scipy.linalg)": [[892, "jax.scipy.linalg.eigh", false]], "eigh_tridiagonal() (in module jax.scipy.linalg)": [[893, "jax.scipy.linalg.eigh_tridiagonal", false]], "eigvals() (in module jax.numpy.linalg)": [[621, "jax.numpy.linalg.eigvals", false]], "eigvalsh() (in module jax.numpy.linalg)": [[622, "jax.numpy.linalg.eigvalsh", false]], "einsum() (in module jax.numpy)": [[496, "jax.numpy.einsum", false]], "einsum_path() (in module jax.numpy)": [[497, "jax.numpy.einsum_path", false]], "elementwise() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.elementwise", false]], "elu() (in module jax.nn)": [[344, "jax.nn.elu", false]], "empty() (in module jax.experimental.sparse)": [[117, "jax.experimental.sparse.empty", false]], "empty() (in module jax.numpy)": [[498, "jax.numpy.empty", false]], "empty_like() (in module jax.numpy)": [[499, "jax.numpy.empty_like", false]], "enable_checks (in module jax)": [[46, "jax.enable_checks", false]], "enable_custom_prng (in module jax)": [[47, "jax.enable_custom_prng", false]], "enable_custom_vjp_by_custom_transpose (in module jax)": [[48, "jax.enable_custom_vjp_by_custom_transpose", false]], "enable_x64() (in module jax.experimental)": [[64, "jax.experimental.enable_x64", false]], "ensure_compile_time_eval() (in module jax)": [[49, "jax.ensure_compile_time_eval", false]], "entr() (in module jax.scipy.special)": [[934, "jax.scipy.special.entr", false]], "eps (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.eps", false]], "epsneg (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.epsneg", false]], "eq() (in module jax.lax)": [[220, "jax.lax.eq", false]], "equal() (in module jax.numpy)": [[500, "jax.numpy.equal", false]], "erf() (in module jax.lax)": [[221, "jax.lax.erf", false]], "erf() (in module jax.scipy.special)": [[935, "jax.scipy.special.erf", false]], "erf_inv() (in module jax.lax)": [[222, "jax.lax.erf_inv", false]], "erfc() (in module jax.lax)": [[223, "jax.lax.erfc", false]], "erfc() (in module jax.scipy.special)": [[936, "jax.scipy.special.erfc", false]], "erfinv() (in module jax.scipy.special)": [[937, "jax.scipy.special.erfinv", false]], "error (class in jax.experimental.checkify)": [[51, "jax.experimental.checkify.Error", false]], "eval_shape() (in module jax)": [[50, "jax.eval_shape", false]], "evaluate() (jax.scipy.stats.gaussian_kde method)": [[1008, "jax.scipy.stats.gaussian_kde.evaluate", false]], "exp() (in module jax.lax)": [[224, "jax.lax.exp", false]], "exp() (in module jax.numpy)": [[501, "jax.numpy.exp", false]], "exp1() (in module jax.scipy.special)": [[938, "jax.scipy.special.exp1", false]], "exp2() (in module jax.numpy)": [[502, "jax.numpy.exp2", false]], "expand_dims() (in module jax.lax)": [[225, "jax.lax.expand_dims", false]], "expand_dims() (in module jax.numpy)": [[503, "jax.numpy.expand_dims", false]], "expi (in module jax.scipy.special)": [[939, "jax.scipy.special.expi", false]], "expit() (in module jax.scipy.special)": [[940, "jax.scipy.special.expit", false]], "expm() (in module jax.scipy.linalg)": [[894, "jax.scipy.linalg.expm", false]], "expm1() (in module jax.lax)": [[226, "jax.lax.expm1", false]], "expm1() (in module jax.numpy)": [[504, "jax.numpy.expm1", false]], "expm_frechet() (in module jax.scipy.linalg)": [[895, "jax.scipy.linalg.expm_frechet", false]], "expn (in module jax.scipy.special)": [[941, "jax.scipy.special.expn", false]], "exponential() (in module jax.random)": [[851, "jax.random.exponential", false]], "exponential_decay() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.exponential_decay", false]], "extract() (in module jax.numpy)": [[505, "jax.numpy.extract", false]], "eye() (in module jax.experimental.sparse)": [[118, "jax.experimental.sparse.eye", false]], "eye() (in module jax.numpy)": [[506, "jax.numpy.eye", false]], "f() (in module jax.random)": [[852, "jax.random.f", false]], "fabs() (in module jax.numpy)": [[507, "jax.numpy.fabs", false]], "factorial() (in module jax.scipy.special)": [[942, "jax.scipy.special.factorial", false]], "faninconcat() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.FanInConcat", false]], "fanout() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.FanOut", false]], "fft() (in module jax.lax)": [[227, "jax.lax.fft", false]], "fft() (in module jax.numpy.fft)": [[508, "jax.numpy.fft.fft", false]], "fft2() (in module jax.numpy.fft)": [[509, "jax.numpy.fft.fft2", false]], "fftconvolve() (in module jax.scipy.signal)": [[920, "jax.scipy.signal.fftconvolve", false]], "fftfreq() (in module jax.numpy.fft)": [[510, "jax.numpy.fft.fftfreq", false]], "fftn() (in module jax.numpy.fft)": [[511, "jax.numpy.fft.fftn", false]], "fftshift() (in module jax.numpy.fft)": [[512, "jax.numpy.fft.fftshift", false]], "fill_diagonal() (in module jax.numpy)": [[526, "jax.numpy.fill_diagonal", false]], "finfo (class in jax.numpy)": [[527, "jax.numpy.finfo", false]], "fix() (in module jax.numpy)": [[528, "jax.numpy.fix", false]], "flatnonzero() (in module jax.numpy)": [[529, "jax.numpy.flatnonzero", false]], "flatten() (in module jax.tree)": [[1068, "jax.tree.flatten", false]], "flexible (class in jax.numpy)": [[530, "jax.numpy.flexible", false]], "flip() (in module jax.numpy)": [[531, "jax.numpy.flip", false]], "fliplr() (in module jax.numpy)": [[532, "jax.numpy.fliplr", false]], "flipud() (in module jax.numpy)": [[533, "jax.numpy.flipud", false]], "float0 (in module jax.dtypes)": [[41, "jax.dtypes.float0", false]], "float16 (class in jax.numpy)": [[534, "jax.numpy.float16", false]], "float32 (class in jax.numpy)": [[535, "jax.numpy.float32", false]], "float64 (class in jax.numpy)": [[536, "jax.numpy.float64", false]], "float_ (in module jax.numpy)": [[537, "jax.numpy.float_", false]], "float_checks (in module jax.experimental.checkify)": [[59, "jax.experimental.checkify.float_checks", false]], "float_power() (in module jax.numpy)": [[538, "jax.numpy.float_power", false]], "floating (class in jax.numpy)": [[539, "jax.numpy.floating", false]], "floor() (in module jax.lax)": [[228, "jax.lax.floor", false]], "floor() (in module jax.numpy)": [[540, "jax.numpy.floor", false]], "floor_divide() (in module jax.numpy)": [[541, "jax.numpy.floor_divide", false]], "fmax() (in module jax.numpy)": [[542, "jax.numpy.fmax", false]], "fmin() (in module jax.numpy)": [[543, "jax.numpy.fmin", false]], "fmod() (in module jax.numpy)": [[544, "jax.numpy.fmod", false]], "fold_in() (in module jax.random)": [[853, "jax.random.fold_in", false]], "fori_loop() (in module jax.lax)": [[229, "jax.lax.fori_loop", false]], "forward-mode autodiff": [[1123, "term-forward-mode-autodiff", true]], "frexp() (in module jax.numpy)": [[545, "jax.numpy.frexp", false]], "from_dlpack() (in module jax.dlpack)": [[37, "jax.dlpack.from_dlpack", false]], "from_dlpack() (in module jax.numpy)": [[546, "jax.numpy.from_dlpack", false]], "frombuffer() (in module jax.numpy)": [[547, "jax.numpy.frombuffer", false]], "fromfile() (in module jax.numpy)": [[548, "jax.numpy.fromfile", false]], "fromfunction() (in module jax.numpy)": [[549, "jax.numpy.fromfunction", false]], "fromiter() (in module jax.numpy)": [[550, "jax.numpy.fromiter", false]], "frompyfunc() (in module jax.numpy)": [[551, "jax.numpy.frompyfunc", false]], "fromstring() (in module jax.numpy)": [[552, "jax.numpy.fromstring", false]], "full() (in module jax.lax)": [[230, "jax.lax.full", false]], "full() (in module jax.numpy)": [[553, "jax.numpy.full", false]], "full_like() (in module jax.lax)": [[231, "jax.lax.full_like", false]], "full_like() (in module jax.numpy)": [[554, "jax.numpy.full_like", false]], "functional programming": [[1123, "term-functional-programming", true]], "funm() (in module jax.scipy.linalg)": [[896, "jax.scipy.linalg.funm", false]], "gamma() (in module jax.random)": [[854, "jax.random.gamma", false]], "gamma() (in module jax.scipy.special)": [[943, "jax.scipy.special.gamma", false]], "gammainc() (in module jax.scipy.special)": [[944, "jax.scipy.special.gammainc", false]], "gammaincc() (in module jax.scipy.special)": [[945, "jax.scipy.special.gammaincc", false]], "gammaln() (in module jax.scipy.special)": [[946, "jax.scipy.special.gammaln", false]], "gather() (in module jax.lax)": [[232, "jax.lax.gather", false]], "gatherdimensionnumbers (class in jax.lax)": [[1166, "jax.lax.GatherDimensionNumbers", false]], "gatherscattermode (class in jax.lax)": [[1166, "jax.lax.GatherScatterMode", false]], "gaussian_kde (class in jax.scipy.stats)": [[1007, "jax.scipy.stats.gaussian_kde", false]], "gcd() (in module jax.numpy)": [[555, "jax.numpy.gcd", false]], "ge() (in module jax.lax)": [[233, "jax.lax.ge", false]], "gelu() (in module jax.nn)": [[345, "jax.nn.gelu", false]], "generalconv() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.GeneralConv", false]], "generalconvtranspose() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.GeneralConvTranspose", false]], "generalized_normal() (in module jax.random)": [[855, "jax.random.generalized_normal", false]], "generic (class in jax.numpy)": [[556, "jax.numpy.generic", false]], "geometric() (in module jax.random)": [[856, "jax.random.geometric", false]], "geomspace() (in module jax.numpy)": [[557, "jax.numpy.geomspace", false]], "get_backend() (in module jax.lib.xla_bridge)": [[330, "jax.lib.xla_bridge.get_backend", false]], "get_compile_options() (in module jax.lib.xla_bridge)": [[331, "jax.lib.xla_bridge.get_compile_options", false]], "get_printoptions() (in module jax.numpy)": [[558, "jax.numpy.get_printoptions", false]], "global_array_to_host_local_array() (in module jax.experimental.multihost_utils)": [[76, "jax.experimental.multihost_utils.global_array_to_host_local_array", false]], "glorot_normal() (in module jax.nn.initializers)": [[353, "jax.nn.initializers.glorot_normal", false]], "glorot_uniform() (in module jax.nn.initializers)": [[354, "jax.nn.initializers.glorot_uniform", false]], "glu() (in module jax.nn)": [[346, "jax.nn.glu", false]], "gmres() (in module jax.scipy.sparse.linalg)": [[926, "jax.scipy.sparse.linalg.gmres", false]], "gpu": [[1123, "term-GPU", true]], "grad() (in module jax)": [[144, "jax.grad", false]], "grad() (in module jax.experimental.sparse)": [[119, "jax.experimental.sparse.grad", false]], "gradient() (in module jax.numpy)": [[559, "jax.numpy.gradient", false]], "greater() (in module jax.numpy)": [[560, "jax.numpy.greater", false]], "greater_equal() (in module jax.numpy)": [[561, "jax.numpy.greater_equal", false]], "gspmdsharding (class in jax.sharding)": [[1175, "jax.sharding.GSPMDSharding", false]], "gt() (in module jax.lax)": [[234, "jax.lax.gt", false]], "gumbel() (in module jax.random)": [[857, "jax.random.gumbel", false]], "hamming() (in module jax.numpy)": [[562, "jax.numpy.hamming", false]], "hanning() (in module jax.numpy)": [[563, "jax.numpy.hanning", false]], "hard_sigmoid() (in module jax.nn)": [[347, "jax.nn.hard_sigmoid", false]], "hard_silu() (in module jax.nn)": [[348, "jax.nn.hard_silu", false]], "hard_swish() (in module jax.nn)": [[349, "jax.nn.hard_swish", false]], "hard_tanh() (in module jax.nn)": [[350, "jax.nn.hard_tanh", false]], "he_normal() (in module jax.nn.initializers)": [[355, "jax.nn.initializers.he_normal", false]], "he_uniform() (in module jax.nn.initializers)": [[356, "jax.nn.initializers.he_uniform", false]], "heaviside() (in module jax.numpy)": [[564, "jax.numpy.heaviside", false]], "hessenberg() (in module jax.lax.linalg)": [[248, "jax.lax.linalg.hessenberg", false]], "hessenberg() (in module jax.scipy.linalg)": [[897, "jax.scipy.linalg.hessenberg", false]], "hessian() (in module jax)": [[145, "jax.hessian", false]], "hfft() (in module jax.numpy.fft)": [[513, "jax.numpy.fft.hfft", false]], "hilbert() (in module jax.scipy.linalg)": [[898, "jax.scipy.linalg.hilbert", false]], "histogram() (in module jax.numpy)": [[565, "jax.numpy.histogram", false]], "histogram2d() (in module jax.numpy)": [[566, "jax.numpy.histogram2d", false]], "histogram_bin_edges() (in module jax.numpy)": [[567, "jax.numpy.histogram_bin_edges", false]], "histogramdd() (in module jax.numpy)": [[568, "jax.numpy.histogramdd", false]], "host_local_array_to_global_array() (in module jax.experimental.multihost_utils)": [[77, "jax.experimental.multihost_utils.host_local_array_to_global_array", false]], "householder_product() (in module jax.lax.linalg)": [[249, "jax.lax.linalg.householder_product", false]], "hsplit() (in module jax.numpy)": [[569, "jax.numpy.hsplit", false]], "hstack() (in module jax.numpy)": [[570, "jax.numpy.hstack", false]], "hyp1f1 (in module jax.scipy.special)": [[947, "jax.scipy.special.hyp1f1", false]], "hypot() (in module jax.numpy)": [[571, "jax.numpy.hypot", false]], "i0 (in module jax.numpy)": [[572, "jax.numpy.i0", false]], "i0() (in module jax.scipy.special)": [[948, "jax.scipy.special.i0", false]], "i0e() (in module jax.scipy.special)": [[949, "jax.scipy.special.i0e", false]], "i1() (in module jax.scipy.special)": [[950, "jax.scipy.special.i1", false]], "i1e() (in module jax.scipy.special)": [[951, "jax.scipy.special.i1e", false]], "id_print() (in module jax.experimental.host_callback)": [[68, "jax.experimental.host_callback.id_print", false]], "id_tap() (in module jax.experimental.host_callback)": [[69, "jax.experimental.host_callback.id_tap", false]], "idct() (in module jax.scipy.fft)": [[884, "jax.scipy.fft.idct", false]], "idctn() (in module jax.scipy.fft)": [[885, "jax.scipy.fft.idctn", false]], "identity() (in module jax.numpy)": [[573, "jax.numpy.identity", false]], "iexp (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.iexp", false]], "ifft() (in module jax.numpy.fft)": [[514, "jax.numpy.fft.ifft", false]], "ifft2() (in module jax.numpy.fft)": [[515, "jax.numpy.fft.ifft2", false]], "ifftn() (in module jax.numpy.fft)": [[516, "jax.numpy.fft.ifftn", false]], "ifftshift() (in module jax.numpy.fft)": [[517, "jax.numpy.fft.ifftshift", false]], "igamma() (in module jax.lax)": [[235, "jax.lax.igamma", false]], "igammac() (in module jax.lax)": [[236, "jax.lax.igammac", false]], "ihfft() (in module jax.numpy.fft)": [[518, "jax.numpy.fft.ihfft", false]], "iinfo (class in jax.numpy)": [[574, "jax.numpy.iinfo", false]], "imag() (in module jax.lax)": [[237, "jax.lax.imag", false]], "imag() (in module jax.numpy)": [[575, "jax.numpy.imag", false]], "in_tree (jax.stages.compiled property)": [[1176, "jax.stages.Compiled.in_tree", false]], "in_tree (jax.stages.lowered property)": [[1176, "jax.stages.Lowered.in_tree", false]], "index_checks (in module jax.experimental.checkify)": [[60, "jax.experimental.checkify.index_checks", false]], "index_exp (in module jax.numpy)": [[576, "jax.numpy.index_exp", false]], "index_in_dim() (in module jax.lax)": [[238, "jax.lax.index_in_dim", false]], "index_take() (in module jax.lax)": [[239, "jax.lax.index_take", false]], "indices (jax.experimental.sparse.bcoo attribute)": [[80, "jax.experimental.sparse.BCOO.indices", false]], "indices() (in module jax.numpy)": [[577, "jax.numpy.indices", false]], "inexact (class in jax.numpy)": [[578, "jax.numpy.inexact", false]], "init_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1145, "jax.example_libraries.optimizers.Optimizer.init_fn", false]], "initialize() (in module jax.distributed)": [[35, "jax.distributed.initialize", false]], "initialize_cache() (in module jax.experimental.compilation_cache.compilation_cache)": [[1150, "jax.experimental.compilation_cache.compilation_cache.initialize_cache", false]], "inner() (in module jax.numpy)": [[579, "jax.numpy.inner", false]], "insert() (in module jax.numpy)": [[580, "jax.numpy.insert", false]], "inspect_array_sharding() (in module jax.debug)": [[18, "jax.debug.inspect_array_sharding", false]], "int16 (class in jax.numpy)": [[581, "jax.numpy.int16", false]], "int32 (class in jax.numpy)": [[582, "jax.numpy.int32", false]], "int64 (class in jax.numpy)": [[583, "jax.numpy.int64", false]], "int8 (class in jax.numpy)": [[584, "jax.numpy.int8", false]], "int_ (in module jax.numpy)": [[585, "jax.numpy.int_", false]], "integer (class in jax.numpy)": [[586, "jax.numpy.integer", false]], "integer_pow() (in module jax.lax)": [[240, "jax.lax.integer_pow", false]], "integrate_box_1d() (jax.scipy.stats.gaussian_kde method)": [[1009, "jax.scipy.stats.gaussian_kde.integrate_box_1d", false]], "integrate_gaussian() (jax.scipy.stats.gaussian_kde method)": [[1010, "jax.scipy.stats.gaussian_kde.integrate_gaussian", false]], "integrate_kde() (jax.scipy.stats.gaussian_kde method)": [[1011, "jax.scipy.stats.gaussian_kde.integrate_kde", false]], "interp() (in module jax.numpy)": [[587, "jax.numpy.interp", false]], "intersect1d() (in module jax.numpy)": [[588, "jax.numpy.intersect1d", false]], "inv() (in module jax.numpy.linalg)": [[623, "jax.numpy.linalg.inv", false]], "inv() (in module jax.scipy.linalg)": [[899, "jax.scipy.linalg.inv", false]], "inverse_time_decay() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.inverse_time_decay", false]], "invert() (in module jax.numpy)": [[589, "jax.numpy.invert", false]], "io_callback() (in module jax.experimental)": [[70, "jax.experimental.io_callback", false]], "iota() (in module jax.lax)": [[241, "jax.lax.iota", false]], "irfft() (in module jax.numpy.fft)": [[519, "jax.numpy.fft.irfft", false]], "irfft2() (in module jax.numpy.fft)": [[520, "jax.numpy.fft.irfft2", false]], "irfftn() (in module jax.numpy.fft)": [[521, "jax.numpy.fft.irfftn", false]], "is_equivalent_to() (jax.sharding.pmapsharding method)": [[1175, "jax.sharding.PmapSharding.is_equivalent_to", false]], "is_equivalent_to() (jax.sharding.sharding method)": [[1175, "jax.sharding.Sharding.is_equivalent_to", false]], "is_equivalent_to() (jax.sharding.xlacompatiblesharding method)": [[1175, "jax.sharding.XLACompatibleSharding.is_equivalent_to", false]], "is_finite() (in module jax.lax)": [[242, "jax.lax.is_finite", false]], "is_fully_addressable (jax.sharding.gspmdsharding property)": [[1175, "jax.sharding.GSPMDSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.pmapsharding property)": [[1175, "jax.sharding.PmapSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.positionalsharding property)": [[1175, "jax.sharding.PositionalSharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.sharding property)": [[1175, "jax.sharding.Sharding.is_fully_addressable", false]], "is_fully_addressable (jax.sharding.singledevicesharding property)": [[1175, "jax.sharding.SingleDeviceSharding.is_fully_addressable", false]], "is_fully_replicated (jax.sharding.gspmdsharding property)": [[1175, "jax.sharding.GSPMDSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.pmapsharding property)": [[1175, "jax.sharding.PmapSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.positionalsharding property)": [[1175, "jax.sharding.PositionalSharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.sharding property)": [[1175, "jax.sharding.Sharding.is_fully_replicated", false]], "is_fully_replicated (jax.sharding.singledevicesharding property)": [[1175, "jax.sharding.SingleDeviceSharding.is_fully_replicated", false]], "is_initialized() (in module jax.experimental.compilation_cache.compilation_cache)": [[1150, "jax.experimental.compilation_cache.compilation_cache.is_initialized", false]], "isclose() (in module jax.numpy)": [[590, "jax.numpy.isclose", false]], "iscomplex() (in module jax.numpy)": [[591, "jax.numpy.iscomplex", false]], "iscomplexobj() (in module jax.numpy)": [[592, "jax.numpy.iscomplexobj", false]], "isdtype() (in module jax.numpy)": [[593, "jax.numpy.isdtype", false]], "isf() (in module jax.scipy.stats.cauchy)": [[984, "jax.scipy.stats.cauchy.isf", false]], "isf() (in module jax.scipy.stats.logistic)": [[1024, "jax.scipy.stats.logistic.isf", false]], "isf() (in module jax.scipy.stats.norm)": [[1037, "jax.scipy.stats.norm.isf", false]], "isfinite() (in module jax.numpy)": [[594, "jax.numpy.isfinite", false]], "isin() (in module jax.numpy)": [[595, "jax.numpy.isin", false]], "isinf() (in module jax.numpy)": [[596, "jax.numpy.isinf", false]], "isnan() (in module jax.numpy)": [[597, "jax.numpy.isnan", false]], "isneginf() (in module jax.numpy)": [[598, "jax.numpy.isneginf", false]], "isposinf() (in module jax.numpy)": [[599, "jax.numpy.isposinf", false]], "isreal() (in module jax.numpy)": [[600, "jax.numpy.isreal", false]], "isrealobj() (in module jax.numpy)": [[601, "jax.numpy.isrealobj", false]], "isscalar() (in module jax.numpy)": [[602, "jax.numpy.isscalar", false]], "issubdtype() (in module jax.dtypes)": [[42, "jax.dtypes.issubdtype", false]], "issubdtype() (in module jax.numpy)": [[603, "jax.numpy.issubdtype", false]], "istft() (in module jax.scipy.signal)": [[921, "jax.scipy.signal.istft", false]], "iterable() (in module jax.numpy)": [[604, "jax.numpy.iterable", false]], "ix_() (in module jax.numpy)": [[605, "jax.numpy.ix_", false]], "jacfwd() (in module jax)": [[148, "jax.jacfwd", false]], "jacrev() (in module jax)": [[149, "jax.jacrev", false]], "jax.core": [[1181, "module-jax.core", false]], "jax.debug": [[1140, "module-jax.debug", false]], "jax.distributed": [[1141, "module-jax.distributed", false]], "jax.dlpack": [[1142, "module-jax.dlpack", false]], "jax.dtypes": [[1143, "module-jax.dtypes", false]], "jax.example_libraries": [[1144, "module-jax.example_libraries", false]], "jax.example_libraries.optimizers": [[1145, "module-jax.example_libraries.optimizers", false]], "jax.example_libraries.stax": [[1146, "module-jax.example_libraries.stax", false]], "jax.experimental.array_api": [[1148, "module-jax.experimental.array_api", false]], "jax.experimental.checkify": [[1149, "module-jax.experimental.checkify", false]], "jax.experimental.compilation_cache.compilation_cache": [[1150, "module-jax.experimental.compilation_cache.compilation_cache", false]], "jax.experimental.custom_partitioning": [[1151, "module-jax.experimental.custom_partitioning", false]], "jax.experimental.host_callback": [[1152, "module-jax.experimental.host_callback", false]], "jax.experimental.jet": [[1153, "module-jax.experimental.jet", false]], "jax.experimental.key_reuse": [[1154, "module-jax.experimental.key_reuse", false]], "jax.experimental.maps": [[1155, "module-jax.experimental.maps", false]], "jax.experimental.mesh_utils": [[1156, "module-jax.experimental.mesh_utils", false]], "jax.experimental.multihost_utils": [[1157, "module-jax.experimental.multihost_utils", false]], "jax.experimental.pjit": [[1158, "module-jax.experimental.pjit", false]], "jax.experimental.sparse": [[1159, "module-jax.experimental.sparse", false]], "jax.experimental.sparse.linalg": [[1159, "module-jax.experimental.sparse.linalg", false]], "jax.extend": [[1160, "module-jax.extend", false]], "jax.extend.linear_util": [[1161, "module-jax.extend.linear_util", false]], "jax.extend.mlir": [[1162, "module-jax.extend.mlir", false]], "jax.extend.mlir.dialects": [[133, "module-jax.extend.mlir.dialects", false]], "jax.extend.mlir.ir": [[134, "module-jax.extend.mlir.ir", false]], "jax.extend.mlir.passmanager": [[135, "module-jax.extend.mlir.passmanager", false]], "jax.extend.random": [[1163, "module-jax.extend.random", false]], "jax.flatten_util": [[1164, "module-jax.flatten_util", false]], "jax.image": [[1165, "module-jax.image", false]], "jax.lax": [[1166, "module-jax.lax", false]], "jax.lax.linalg": [[1166, "module-jax.lax.linalg", false]], "jax.nn": [[1168, "module-jax.nn", false]], "jax.nn.initializers": [[1169, "module-jax.nn.initializers", false]], "jax.numpy": [[1170, "module-jax.numpy", false]], "jax.numpy.fft": [[1170, "module-jax.numpy.fft", false]], "jax.numpy.linalg": [[1170, "module-jax.numpy.linalg", false]], "jax.ops": [[1171, "module-jax.ops", false]], "jax.profiler": [[1172, "module-jax.profiler", false]], "jax.random": [[1173, "module-jax.random", false]], "jax.scipy.fft": [[1174, "module-jax.scipy.fft", false]], "jax.scipy.integrate": [[1174, "module-jax.scipy.integrate", false]], "jax.scipy.linalg": [[1174, "module-jax.scipy.linalg", false]], "jax.scipy.ndimage": [[1174, "module-jax.scipy.ndimage", false]], "jax.scipy.optimize": [[1174, "module-jax.scipy.optimize", false]], "jax.scipy.signal": [[1174, "module-jax.scipy.signal", false]], "jax.scipy.sparse.linalg": [[1174, "module-jax.scipy.sparse.linalg", false]], "jax.scipy.spatial.transform": [[1174, "module-jax.scipy.spatial.transform", false]], "jax.scipy.special": [[1174, "module-jax.scipy.special", false]], "jax.scipy.stats": [[1174, "module-jax.scipy.stats", false]], "jax.scipy.stats.bernoulli": [[1174, "module-jax.scipy.stats.bernoulli", false]], "jax.scipy.stats.beta": [[1174, "module-jax.scipy.stats.beta", false]], "jax.scipy.stats.betabinom": [[1174, "module-jax.scipy.stats.betabinom", false]], "jax.scipy.stats.binom": [[1174, "module-jax.scipy.stats.binom", false]], "jax.scipy.stats.cauchy": [[1174, "module-jax.scipy.stats.cauchy", false]], "jax.scipy.stats.chi2": [[1174, "module-jax.scipy.stats.chi2", false]], "jax.scipy.stats.dirichlet": [[1174, "module-jax.scipy.stats.dirichlet", false]], "jax.scipy.stats.expon": [[1174, "module-jax.scipy.stats.expon", false]], "jax.scipy.stats.gamma": [[1174, "module-jax.scipy.stats.gamma", false]], "jax.scipy.stats.gennorm": [[1174, "module-jax.scipy.stats.gennorm", false]], "jax.scipy.stats.geom": [[1174, "module-jax.scipy.stats.geom", false]], "jax.scipy.stats.laplace": [[1174, "module-jax.scipy.stats.laplace", false]], "jax.scipy.stats.logistic": [[1174, "module-jax.scipy.stats.logistic", false]], "jax.scipy.stats.multinomial": [[1174, "module-jax.scipy.stats.multinomial", false]], "jax.scipy.stats.multivariate_normal": [[1174, "module-jax.scipy.stats.multivariate_normal", false]], "jax.scipy.stats.nbinom": [[1174, "module-jax.scipy.stats.nbinom", false]], "jax.scipy.stats.norm": [[1174, "module-jax.scipy.stats.norm", false]], "jax.scipy.stats.pareto": [[1174, "module-jax.scipy.stats.pareto", false]], "jax.scipy.stats.poisson": [[1174, "module-jax.scipy.stats.poisson", false]], "jax.scipy.stats.t": [[1174, "module-jax.scipy.stats.t", false]], "jax.scipy.stats.truncnorm": [[1174, "module-jax.scipy.stats.truncnorm", false]], "jax.scipy.stats.uniform": [[1174, "module-jax.scipy.stats.uniform", false]], "jax.scipy.stats.vonmises": [[1174, "module-jax.scipy.stats.vonmises", false]], "jax.scipy.stats.wrapcauchy": [[1174, "module-jax.scipy.stats.wrapcauchy", false]], "jax.sharding": [[1175, "module-jax.sharding", false]], "jax.stages": [[1176, "module-jax.stages", false]], "jax.tree": [[1177, "module-jax.tree", false]], "jax.tree_util": [[1178, "module-jax.tree_util", false]], "jax.typing": [[1179, "module-jax.typing", false]], "jaxpr": [[1123, "term-jaxpr", true]], "jaxpr (class in jax.core)": [[12, "jax.core.Jaxpr", false]], "jaxruntimeerror": [[52, "jax.experimental.checkify.JaxRuntimeError", false]], "jaxsparse (class in jax.experimental.sparse)": [[85, "jax.experimental.sparse.JAXSparse", false]], "jet() (in module jax.experimental.jet)": [[1153, "jax.experimental.jet.jet", false]], "jit": [[1123, "term-JIT", true]], "jit() (in module jax)": [[150, "jax.jit", false]], "joinpoint (class in jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.JoinPoint", false]], "jvp": [[1123, "term-JVP", true]], "jvp() (in module jax)": [[151, "jax.jvp", false]], "kaiser() (in module jax.numpy)": [[606, "jax.numpy.kaiser", false]], "key() (in module jax.random)": [[858, "jax.random.key", false]], "key_data() (in module jax.random)": [[859, "jax.random.key_data", false]], "keyreuseerror (class in jax.errors)": [[1121, "jax.errors.KeyReuseError", false]], "keystr() (in module jax.tree_util)": [[1078, "jax.tree_util.keystr", false]], "kl_div() (in module jax.scipy.special)": [[952, "jax.scipy.special.kl_div", false]], "kron() (in module jax.numpy)": [[607, "jax.numpy.kron", false]], "l2_norm() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.l2_norm", false]], "laplace() (in module jax.random)": [[860, "jax.random.laplace", false]], "lcm() (in module jax.numpy)": [[608, "jax.numpy.lcm", false]], "ldexp() (in module jax.numpy)": [[609, "jax.numpy.ldexp", false]], "le() (in module jax.lax)": [[243, "jax.lax.le", false]], "leaky_relu() (in module jax.nn)": [[366, "jax.nn.leaky_relu", false]], "leaves() (in module jax.tree)": [[1069, "jax.tree.leaves", false]], "lecun_normal() (in module jax.nn.initializers)": [[357, "jax.nn.initializers.lecun_normal", false]], "lecun_uniform() (in module jax.nn.initializers)": [[358, "jax.nn.initializers.lecun_uniform", false]], "left_shift() (in module jax.numpy)": [[610, "jax.numpy.left_shift", false]], "less() (in module jax.numpy)": [[611, "jax.numpy.less", false]], "less_equal() (in module jax.numpy)": [[612, "jax.numpy.less_equal", false]], "lexsort() (in module jax.numpy)": [[613, "jax.numpy.lexsort", false]], "lgamma() (in module jax.lax)": [[244, "jax.lax.lgamma", false]], "linear_transpose() (in module jax)": [[332, "jax.linear_transpose", false]], "linearize() (in module jax)": [[333, "jax.linearize", false]], "linspace() (in module jax.numpy)": [[644, "jax.numpy.linspace", false]], "live_arrays() (in module jax)": [[334, "jax.live_arrays", false]], "load() (in module jax.numpy)": [[645, "jax.numpy.load", false]], "lobpcg_standard() (in module jax.experimental.sparse.linalg)": [[120, "jax.experimental.sparse.linalg.lobpcg_standard", false]], "local_device_count() (in module jax)": [[335, "jax.local_device_count", false]], "local_devices() (in module jax)": [[336, "jax.local_devices", false]], "log() (in module jax.lax)": [[258, "jax.lax.log", false]], "log() (in module jax.numpy)": [[646, "jax.numpy.log", false]], "log10() (in module jax.numpy)": [[647, "jax.numpy.log10", false]], "log1p() (in module jax.lax)": [[259, "jax.lax.log1p", false]], "log1p() (in module jax.numpy)": [[648, "jax.numpy.log1p", false]], "log2() (in module jax.numpy)": [[649, "jax.numpy.log2", false]], "log_compiles (in module jax)": [[337, "jax.log_compiles", false]], "log_ndtr (in module jax.scipy.special)": [[953, "jax.scipy.special.log_ndtr", false]], "log_sigmoid() (in module jax.nn)": [[367, "jax.nn.log_sigmoid", false]], "log_softmax() (in module jax.nn)": [[368, "jax.nn.log_softmax", false]], "logaddexp (in module jax.numpy)": [[650, "jax.numpy.logaddexp", false]], "logaddexp2 (in module jax.numpy)": [[651, "jax.numpy.logaddexp2", false]], "logcdf() (in module jax.scipy.stats.beta)": [[974, "jax.scipy.stats.beta.logcdf", false]], "logcdf() (in module jax.scipy.stats.cauchy)": [[985, "jax.scipy.stats.cauchy.logcdf", false]], "logcdf() (in module jax.scipy.stats.chi2)": [[992, "jax.scipy.stats.chi2.logcdf", false]], "logcdf() (in module jax.scipy.stats.gamma)": [[1002, "jax.scipy.stats.gamma.logcdf", false]], "logcdf() (in module jax.scipy.stats.norm)": [[1038, "jax.scipy.stats.norm.logcdf", false]], "logcdf() (in module jax.scipy.stats.truncnorm)": [[1053, "jax.scipy.stats.truncnorm.logcdf", false]], "loggamma() (in module jax.random)": [[861, "jax.random.loggamma", false]], "logical_and() (in module jax.numpy)": [[652, "jax.numpy.logical_and", false]], "logical_not() (in module jax.numpy)": [[653, "jax.numpy.logical_not", false]], "logical_or() (in module jax.numpy)": [[654, "jax.numpy.logical_or", false]], "logical_xor() (in module jax.numpy)": [[655, "jax.numpy.logical_xor", false]], "logistic() (in module jax.lax)": [[260, "jax.lax.logistic", false]], "logistic() (in module jax.random)": [[862, "jax.random.logistic", false]], "logit (in module jax.scipy.special)": [[954, "jax.scipy.special.logit", false]], "lognormal() (in module jax.random)": [[863, "jax.random.lognormal", false]], "logpdf() (in module jax.scipy.stats.beta)": [[975, "jax.scipy.stats.beta.logpdf", false]], "logpdf() (in module jax.scipy.stats.cauchy)": [[986, "jax.scipy.stats.cauchy.logpdf", false]], "logpdf() (in module jax.scipy.stats.chi2)": [[993, "jax.scipy.stats.chi2.logpdf", false]], "logpdf() (in module jax.scipy.stats.dirichlet)": [[997, "jax.scipy.stats.dirichlet.logpdf", false]], "logpdf() (in module jax.scipy.stats.expon)": [[999, "jax.scipy.stats.expon.logpdf", false]], "logpdf() (in module jax.scipy.stats.gamma)": [[1003, "jax.scipy.stats.gamma.logpdf", false]], "logpdf() (in module jax.scipy.stats.gennorm)": [[1016, "jax.scipy.stats.gennorm.logpdf", false]], "logpdf() (in module jax.scipy.stats.laplace)": [[1021, "jax.scipy.stats.laplace.logpdf", false]], "logpdf() (in module jax.scipy.stats.logistic)": [[1025, "jax.scipy.stats.logistic.logpdf", false]], "logpdf() (in module jax.scipy.stats.multivariate_normal)": [[1032, "jax.scipy.stats.multivariate_normal.logpdf", false]], "logpdf() (in module jax.scipy.stats.norm)": [[1039, "jax.scipy.stats.norm.logpdf", false]], "logpdf() (in module jax.scipy.stats.pareto)": [[1044, "jax.scipy.stats.pareto.logpdf", false]], "logpdf() (in module jax.scipy.stats.t)": [[1050, "jax.scipy.stats.t.logpdf", false]], "logpdf() (in module jax.scipy.stats.truncnorm)": [[1054, "jax.scipy.stats.truncnorm.logpdf", false]], "logpdf() (in module jax.scipy.stats.uniform)": [[1059, "jax.scipy.stats.uniform.logpdf", false]], "logpdf() (in module jax.scipy.stats.vonmises)": [[1062, "jax.scipy.stats.vonmises.logpdf", false]], "logpdf() (in module jax.scipy.stats.wrapcauchy)": [[1064, "jax.scipy.stats.wrapcauchy.logpdf", false]], "logpdf() (jax.scipy.stats.gaussian_kde method)": [[1012, "jax.scipy.stats.gaussian_kde.logpdf", false]], "logpmf() (in module jax.scipy.stats.bernoulli)": [[970, "jax.scipy.stats.bernoulli.logpmf", false]], "logpmf() (in module jax.scipy.stats.betabinom)": [[979, "jax.scipy.stats.betabinom.logpmf", false]], "logpmf() (in module jax.scipy.stats.binom)": [[981, "jax.scipy.stats.binom.logpmf", false]], "logpmf() (in module jax.scipy.stats.geom)": [[1018, "jax.scipy.stats.geom.logpmf", false]], "logpmf() (in module jax.scipy.stats.multinomial)": [[1030, "jax.scipy.stats.multinomial.logpmf", false]], "logpmf() (in module jax.scipy.stats.nbinom)": [[1034, "jax.scipy.stats.nbinom.logpmf", false]], "logpmf() (in module jax.scipy.stats.poisson)": [[1046, "jax.scipy.stats.poisson.logpmf", false]], "logsf() (in module jax.scipy.stats.beta)": [[976, "jax.scipy.stats.beta.logsf", false]], "logsf() (in module jax.scipy.stats.cauchy)": [[987, "jax.scipy.stats.cauchy.logsf", false]], "logsf() (in module jax.scipy.stats.chi2)": [[994, "jax.scipy.stats.chi2.logsf", false]], "logsf() (in module jax.scipy.stats.gamma)": [[1004, "jax.scipy.stats.gamma.logsf", false]], "logsf() (in module jax.scipy.stats.norm)": [[1040, "jax.scipy.stats.norm.logsf", false]], "logsf() (in module jax.scipy.stats.truncnorm)": [[1055, "jax.scipy.stats.truncnorm.logsf", false]], "logspace() (in module jax.numpy)": [[656, "jax.numpy.logspace", false]], "logsumexp() (in module jax.nn)": [[369, "jax.nn.logsumexp", false]], "logsumexp() (in module jax.scipy.special)": [[955, "jax.scipy.special.logsumexp", false]], "lower() (jax.stages.wrapped method)": [[1176, "jax.stages.Wrapped.lower", false]], "lowered (class in jax.stages)": [[1176, "jax.stages.Lowered", false]], "lpmn() (in module jax.scipy.special)": [[956, "jax.scipy.special.lpmn", false]], "lpmn_values() (in module jax.scipy.special)": [[957, "jax.scipy.special.lpmn_values", false]], "lstsq() (in module jax.numpy.linalg)": [[624, "jax.numpy.linalg.lstsq", false]], "lt() (in module jax.lax)": [[261, "jax.lax.lt", false]], "lu() (in module jax.lax.linalg)": [[250, "jax.lax.linalg.lu", false]], "lu() (in module jax.scipy.linalg)": [[900, "jax.scipy.linalg.lu", false]], "lu_factor() (in module jax.scipy.linalg)": [[901, "jax.scipy.linalg.lu_factor", false]], "lu_solve() (in module jax.scipy.linalg)": [[902, "jax.scipy.linalg.lu_solve", false]], "machep (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.machep", false]], "make_array_from_callback() (in module jax)": [[338, "jax.make_array_from_callback", false]], "make_array_from_single_device_arrays() (in module jax)": [[339, "jax.make_array_from_single_device_arrays", false]], "make_jaxpr() (in module jax)": [[340, "jax.make_jaxpr", false]], "make_schedule() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.make_schedule", false]], "map() (in module jax.lax)": [[262, "jax.lax.map", false]], "map() (in module jax.tree)": [[1070, "jax.tree.map", false]], "map_coordinates() (in module jax.scipy.ndimage)": [[912, "jax.scipy.ndimage.map_coordinates", false]], "mask_indices() (in module jax.numpy)": [[657, "jax.numpy.mask_indices", false]], "matmul() (in module jax.numpy)": [[658, "jax.numpy.matmul", false]], "matmul() (in module jax.numpy.linalg)": [[625, "jax.numpy.linalg.matmul", false]], "matrix_norm() (in module jax.numpy.linalg)": [[626, "jax.numpy.linalg.matrix_norm", false]], "matrix_power() (in module jax.numpy.linalg)": [[627, "jax.numpy.linalg.matrix_power", false]], "matrix_rank() (in module jax.numpy.linalg)": [[628, "jax.numpy.linalg.matrix_rank", false]], "matrix_transpose() (in module jax.numpy)": [[659, "jax.numpy.matrix_transpose", false]], "matrix_transpose() (in module jax.numpy.linalg)": [[629, "jax.numpy.linalg.matrix_transpose", false]], "max (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.max", false]], "max() (in module jax.lax)": [[263, "jax.lax.max", false]], "max() (in module jax.numpy)": [[660, "jax.numpy.max", false]], "maxexp (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.maxexp", false]], "maximum() (in module jax.numpy)": [[661, "jax.numpy.maximum", false]], "maxpool() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.MaxPool", false]], "maxwell() (in module jax.random)": [[864, "jax.random.maxwell", false]], "mean() (in module jax.numpy)": [[662, "jax.numpy.mean", false]], "median() (in module jax.numpy)": [[663, "jax.numpy.median", false]], "memory_analysis() (jax.stages.compiled method)": [[1176, "jax.stages.Compiled.memory_analysis", false]], "memory_kind (jax.sharding.gspmdsharding property)": [[1175, "jax.sharding.GSPMDSharding.memory_kind", false]], "memory_kind (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.memory_kind", false]], "memory_kind (jax.sharding.pmapsharding property)": [[1175, "jax.sharding.PmapSharding.memory_kind", false]], "memory_kind (jax.sharding.positionalsharding property)": [[1175, "jax.sharding.PositionalSharding.memory_kind", false]], "memory_kind (jax.sharding.sharding property)": [[1175, "jax.sharding.Sharding.memory_kind", false]], "memory_kind (jax.sharding.singledevicesharding property)": [[1175, "jax.sharding.SingleDeviceSharding.memory_kind", false]], "merge_linear_aux() (in module jax.extend.linear_util)": [[129, "jax.extend.linear_util.merge_linear_aux", false]], "mesh (class in jax.sharding)": [[1175, "jax.sharding.Mesh", false]], "mesh (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.mesh", false]], "meshgrid() (in module jax.numpy)": [[664, "jax.numpy.meshgrid", false]], "mgrid (in module jax.numpy)": [[665, "jax.numpy.mgrid", false]], "min (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.min", false]], "min() (in module jax.lax)": [[264, "jax.lax.min", false]], "min() (in module jax.numpy)": [[666, "jax.numpy.min", false]], "minexp (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.minexp", false]], "minimize() (in module jax.scipy.optimize)": [[914, "jax.scipy.optimize.minimize", false]], "minimum() (in module jax.numpy)": [[667, "jax.numpy.minimum", false]], "mish() (in module jax.nn)": [[370, "jax.nn.mish", false]], "mod() (in module jax.numpy)": [[668, "jax.numpy.mod", false]], "mode() (in module jax.scipy.stats)": [[1029, "jax.scipy.stats.mode", false]], "modf() (in module jax.numpy)": [[669, "jax.numpy.modf", false]], "module": [[133, "module-jax.extend.mlir.dialects", false], [134, "module-jax.extend.mlir.ir", false], [135, "module-jax.extend.mlir.passmanager", false], [1140, "module-jax.debug", false], [1141, "module-jax.distributed", false], [1142, "module-jax.dlpack", false], [1143, "module-jax.dtypes", false], [1144, "module-jax.example_libraries", false], [1145, "module-jax.example_libraries.optimizers", false], [1146, "module-jax.example_libraries.stax", false], [1148, "module-jax.experimental.array_api", false], [1149, "module-jax.experimental.checkify", false], [1150, "module-jax.experimental.compilation_cache.compilation_cache", false], [1151, "module-jax.experimental.custom_partitioning", false], [1152, "module-jax.experimental.host_callback", false], [1153, "module-jax.experimental.jet", false], [1154, "module-jax.experimental.key_reuse", false], [1155, "module-jax.experimental.maps", false], [1156, "module-jax.experimental.mesh_utils", false], [1157, "module-jax.experimental.multihost_utils", false], [1158, "module-jax.experimental.pjit", false], [1159, "module-jax.experimental.sparse", false], [1159, "module-jax.experimental.sparse.linalg", false], [1160, "module-jax.extend", false], [1161, "module-jax.extend.linear_util", false], [1162, "module-jax.extend.mlir", false], [1163, "module-jax.extend.random", false], [1164, "module-jax.flatten_util", false], [1165, "module-jax.image", false], [1166, "module-jax.lax", false], [1166, "module-jax.lax.linalg", false], [1168, "module-jax.nn", false], [1169, "module-jax.nn.initializers", false], [1170, "module-jax.numpy", false], [1170, "module-jax.numpy.fft", false], [1170, "module-jax.numpy.linalg", false], [1171, "module-jax.ops", false], [1172, "module-jax.profiler", false], [1173, "module-jax.random", false], [1174, "module-jax.scipy.fft", false], [1174, "module-jax.scipy.integrate", false], [1174, "module-jax.scipy.linalg", false], [1174, "module-jax.scipy.ndimage", false], [1174, "module-jax.scipy.optimize", false], [1174, "module-jax.scipy.signal", false], [1174, "module-jax.scipy.sparse.linalg", false], [1174, "module-jax.scipy.spatial.transform", false], [1174, "module-jax.scipy.special", false], [1174, "module-jax.scipy.stats", false], [1174, "module-jax.scipy.stats.bernoulli", false], [1174, "module-jax.scipy.stats.beta", false], [1174, "module-jax.scipy.stats.betabinom", false], [1174, "module-jax.scipy.stats.binom", false], [1174, "module-jax.scipy.stats.cauchy", false], [1174, "module-jax.scipy.stats.chi2", false], [1174, "module-jax.scipy.stats.dirichlet", false], [1174, "module-jax.scipy.stats.expon", false], [1174, "module-jax.scipy.stats.gamma", false], [1174, "module-jax.scipy.stats.gennorm", false], [1174, "module-jax.scipy.stats.geom", false], [1174, "module-jax.scipy.stats.laplace", false], [1174, "module-jax.scipy.stats.logistic", false], [1174, "module-jax.scipy.stats.multinomial", false], [1174, "module-jax.scipy.stats.multivariate_normal", false], [1174, "module-jax.scipy.stats.nbinom", false], [1174, "module-jax.scipy.stats.norm", false], [1174, "module-jax.scipy.stats.pareto", false], [1174, "module-jax.scipy.stats.poisson", false], [1174, "module-jax.scipy.stats.t", false], [1174, "module-jax.scipy.stats.truncnorm", false], [1174, "module-jax.scipy.stats.uniform", false], [1174, "module-jax.scipy.stats.vonmises", false], [1174, "module-jax.scipy.stats.wrapcauchy", false], [1175, "module-jax.sharding", false], [1176, "module-jax.stages", false], [1177, "module-jax.tree", false], [1178, "module-jax.tree_util", false], [1179, "module-jax.typing", false], [1181, "module-jax.core", false]], "momentum() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.momentum", false]], "moveaxis() (in module jax.numpy)": [[670, "jax.numpy.moveaxis", false]], "mul() (in module jax.lax)": [[265, "jax.lax.mul", false]], "multi_dot() (in module jax.numpy.linalg)": [[630, "jax.numpy.linalg.multi_dot", false]], "multigammaln() (in module jax.scipy.special)": [[958, "jax.scipy.special.multigammaln", false]], "multiply() (in module jax.numpy)": [[671, "jax.numpy.multiply", false]], "multivariate_normal() (in module jax.random)": [[865, "jax.random.multivariate_normal", false]], "named_call() (in module jax)": [[341, "jax.named_call", false]], "named_scope() (in module jax)": [[342, "jax.named_scope", false]], "namedsharding (class in jax.sharding)": [[1175, "jax.sharding.NamedSharding", false]], "nan_checks (in module jax.experimental.checkify)": [[61, "jax.experimental.checkify.nan_checks", false]], "nan_to_num() (in module jax.numpy)": [[672, "jax.numpy.nan_to_num", false]], "nanargmax() (in module jax.numpy)": [[673, "jax.numpy.nanargmax", false]], "nanargmin() (in module jax.numpy)": [[674, "jax.numpy.nanargmin", false]], "nancumprod() (in module jax.numpy)": [[675, "jax.numpy.nancumprod", false]], "nancumsum() (in module jax.numpy)": [[676, "jax.numpy.nancumsum", false]], "nanmax() (in module jax.numpy)": [[677, "jax.numpy.nanmax", false]], "nanmean() (in module jax.numpy)": [[678, "jax.numpy.nanmean", false]], "nanmedian() (in module jax.numpy)": [[679, "jax.numpy.nanmedian", false]], "nanmin() (in module jax.numpy)": [[680, "jax.numpy.nanmin", false]], "nanpercentile() (in module jax.numpy)": [[681, "jax.numpy.nanpercentile", false]], "nanprod() (in module jax.numpy)": [[682, "jax.numpy.nanprod", false]], "nanquantile() (in module jax.numpy)": [[683, "jax.numpy.nanquantile", false]], "nanstd() (in module jax.numpy)": [[684, "jax.numpy.nanstd", false]], "nansum() (in module jax.numpy)": [[685, "jax.numpy.nansum", false]], "nanvar() (in module jax.numpy)": [[686, "jax.numpy.nanvar", false]], "ndarray (in module jax.numpy)": [[687, "jax.numpy.ndarray", false]], "ndim() (in module jax.numpy)": [[689, "jax.numpy.ndim", false]], "ndtr() (in module jax.scipy.special)": [[959, "jax.scipy.special.ndtr", false]], "ndtri() (in module jax.scipy.special)": [[960, "jax.scipy.special.ndtri", false]], "ne() (in module jax.lax)": [[266, "jax.lax.ne", false]], "neg() (in module jax.lax)": [[267, "jax.lax.neg", false]], "negative() (in module jax.numpy)": [[690, "jax.numpy.negative", false]], "negep (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.negep", false]], "nesterov() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.nesterov", false]], "nexp (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.nexp", false]], "nextafter() (in module jax.lax)": [[268, "jax.lax.nextafter", false]], "nextafter() (in module jax.numpy)": [[691, "jax.numpy.nextafter", false]], "nmant (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.nmant", false]], "nonconcretebooleanindexerror (class in jax.errors)": [[1121, "jax.errors.NonConcreteBooleanIndexError", false]], "nonzero() (in module jax.numpy)": [[692, "jax.numpy.nonzero", false]], "norm() (in module jax.numpy.linalg)": [[631, "jax.numpy.linalg.norm", false]], "normal() (in module jax.nn.initializers)": [[359, "jax.nn.initializers.normal", false]], "normal() (in module jax.random)": [[866, "jax.random.normal", false]], "not_equal() (in module jax.numpy)": [[693, "jax.numpy.not_equal", false]], "number (class in jax.numpy)": [[694, "jax.numpy.number", false]], "numpy_rank_promotion (in module jax)": [[819, "jax.numpy_rank_promotion", false]], "object_ (class in jax.numpy)": [[695, "jax.numpy.object_", false]], "ogrid (in module jax.numpy)": [[696, "jax.numpy.ogrid", false]], "one_hot() (in module jax.nn)": [[371, "jax.nn.one_hot", false]], "ones() (in module jax.nn.initializers)": [[360, "jax.nn.initializers.ones", false]], "ones() (in module jax.numpy)": [[697, "jax.numpy.ones", false]], "ones_like() (in module jax.numpy)": [[698, "jax.numpy.ones_like", false]], "optimizer (class in jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.Optimizer", false]], "optimizer() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.optimizer", false]], "optimizeresults (class in jax.scipy.optimize)": [[913, "jax.scipy.optimize.OptimizeResults", false]], "optimizerstate (class in jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.OptimizerState", false]], "orthogonal() (in module jax.nn.initializers)": [[361, "jax.nn.initializers.orthogonal", false]], "orthogonal() (in module jax.random)": [[867, "jax.random.orthogonal", false]], "outer() (in module jax.numpy)": [[699, "jax.numpy.outer", false]], "outer() (in module jax.numpy.linalg)": [[632, "jax.numpy.linalg.outer", false]], "pack_optimizer_state() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.pack_optimizer_state", false]], "packbits() (in module jax.numpy)": [[700, "jax.numpy.packbits", false]], "packed_state (jax.example_libraries.optimizers.optimizerstate attribute)": [[1145, "jax.example_libraries.optimizers.OptimizerState.packed_state", false]], "pad() (in module jax.lax)": [[269, "jax.lax.pad", false]], "pad() (in module jax.numpy)": [[701, "jax.numpy.pad", false]], "parallel() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.parallel", false]], "params_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1145, "jax.example_libraries.optimizers.Optimizer.params_fn", false]], "pareto() (in module jax.random)": [[868, "jax.random.pareto", false]], "partial (class in jax.tree_util)": [[1075, "jax.tree_util.Partial", false]], "partition() (in module jax.numpy)": [[702, "jax.numpy.partition", false]], "partitionspec (class in jax.sharding)": [[1175, "jax.sharding.PartitionSpec", false]], "pdf() (in module jax.scipy.stats.beta)": [[977, "jax.scipy.stats.beta.pdf", false]], "pdf() (in module jax.scipy.stats.cauchy)": [[988, "jax.scipy.stats.cauchy.pdf", false]], "pdf() (in module jax.scipy.stats.chi2)": [[995, "jax.scipy.stats.chi2.pdf", false]], "pdf() (in module jax.scipy.stats.dirichlet)": [[998, "jax.scipy.stats.dirichlet.pdf", false]], "pdf() (in module jax.scipy.stats.expon)": [[1000, "jax.scipy.stats.expon.pdf", false]], "pdf() (in module jax.scipy.stats.gamma)": [[1005, "jax.scipy.stats.gamma.pdf", false]], "pdf() (in module jax.scipy.stats.gennorm)": [[1017, "jax.scipy.stats.gennorm.pdf", false]], "pdf() (in module jax.scipy.stats.laplace)": [[1022, "jax.scipy.stats.laplace.pdf", false]], "pdf() (in module jax.scipy.stats.logistic)": [[1026, "jax.scipy.stats.logistic.pdf", false]], "pdf() (in module jax.scipy.stats.multivariate_normal)": [[1033, "jax.scipy.stats.multivariate_normal.pdf", false]], "pdf() (in module jax.scipy.stats.norm)": [[1041, "jax.scipy.stats.norm.pdf", false]], "pdf() (in module jax.scipy.stats.pareto)": [[1045, "jax.scipy.stats.pareto.pdf", false]], "pdf() (in module jax.scipy.stats.t)": [[1051, "jax.scipy.stats.t.pdf", false]], "pdf() (in module jax.scipy.stats.truncnorm)": [[1056, "jax.scipy.stats.truncnorm.pdf", false]], "pdf() (in module jax.scipy.stats.uniform)": [[1060, "jax.scipy.stats.uniform.pdf", false]], "pdf() (in module jax.scipy.stats.vonmises)": [[1063, "jax.scipy.stats.vonmises.pdf", false]], "pdf() (in module jax.scipy.stats.wrapcauchy)": [[1065, "jax.scipy.stats.wrapcauchy.pdf", false]], "pdf() (jax.scipy.stats.gaussian_kde method)": [[1013, "jax.scipy.stats.gaussian_kde.pdf", false]], "pdot() (in module jax.lax)": [[270, "jax.lax.pdot", false]], "percentile() (in module jax.numpy)": [[703, "jax.numpy.percentile", false]], "permutation() (in module jax.random)": [[869, "jax.random.permutation", false]], "permute_dims() (in module jax.numpy)": [[704, "jax.numpy.permute_dims", false]], "piecewise() (in module jax.numpy)": [[705, "jax.numpy.piecewise", false]], "piecewise_constant() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.piecewise_constant", false]], "pinv (in module jax.numpy.linalg)": [[633, "jax.numpy.linalg.pinv", false]], "pjit() (in module jax.experimental.pjit)": [[1158, "jax.experimental.pjit.pjit", false]], "place() (in module jax.numpy)": [[706, "jax.numpy.place", false]], "pmap() (in module jax)": [[824, "jax.pmap", false]], "pmapsharding (class in jax.sharding)": [[1175, "jax.sharding.PmapSharding", false]], "pmax() (in module jax.lax)": [[271, "jax.lax.pmax", false]], "pmean() (in module jax.lax)": [[272, "jax.lax.pmean", false]], "pmf() (in module jax.scipy.stats.bernoulli)": [[971, "jax.scipy.stats.bernoulli.pmf", false]], "pmf() (in module jax.scipy.stats.betabinom)": [[980, "jax.scipy.stats.betabinom.pmf", false]], "pmf() (in module jax.scipy.stats.binom)": [[982, "jax.scipy.stats.binom.pmf", false]], "pmf() (in module jax.scipy.stats.geom)": [[1019, "jax.scipy.stats.geom.pmf", false]], "pmf() (in module jax.scipy.stats.multinomial)": [[1031, "jax.scipy.stats.multinomial.pmf", false]], "pmf() (in module jax.scipy.stats.nbinom)": [[1035, "jax.scipy.stats.nbinom.pmf", false]], "pmf() (in module jax.scipy.stats.poisson)": [[1047, "jax.scipy.stats.poisson.pmf", false]], "pmin() (in module jax.lax)": [[273, "jax.lax.pmin", false]], "poch (in module jax.scipy.special)": [[961, "jax.scipy.special.poch", false]], "poisson() (in module jax.random)": [[870, "jax.random.poisson", false]], "polar() (in module jax.scipy.linalg)": [[903, "jax.scipy.linalg.polar", false]], "poly() (in module jax.numpy)": [[707, "jax.numpy.poly", false]], "polyadd() (in module jax.numpy)": [[708, "jax.numpy.polyadd", false]], "polyder() (in module jax.numpy)": [[709, "jax.numpy.polyder", false]], "polydiv() (in module jax.numpy)": [[710, "jax.numpy.polydiv", false]], "polyfit() (in module jax.numpy)": [[711, "jax.numpy.polyfit", false]], "polygamma() (in module jax.lax)": [[274, "jax.lax.polygamma", false]], "polygamma() (in module jax.scipy.special)": [[962, "jax.scipy.special.polygamma", false]], "polyint() (in module jax.numpy)": [[712, "jax.numpy.polyint", false]], "polymul() (in module jax.numpy)": [[713, "jax.numpy.polymul", false]], "polynomial_decay() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.polynomial_decay", false]], "polysub() (in module jax.numpy)": [[714, "jax.numpy.polysub", false]], "polyval() (in module jax.numpy)": [[715, "jax.numpy.polyval", false]], "population_count() (in module jax.lax)": [[275, "jax.lax.population_count", false]], "positionalsharding (class in jax.sharding)": [[1175, "jax.sharding.PositionalSharding", false]], "positive() (in module jax.numpy)": [[716, "jax.numpy.positive", false]], "pow() (in module jax.lax)": [[276, "jax.lax.pow", false]], "pow() (in module jax.numpy)": [[717, "jax.numpy.pow", false]], "power() (in module jax.numpy)": [[718, "jax.numpy.power", false]], "ppermute() (in module jax.lax)": [[277, "jax.lax.ppermute", false]], "ppf() (in module jax.scipy.stats.bernoulli)": [[972, "jax.scipy.stats.bernoulli.ppf", false]], "ppf() (in module jax.scipy.stats.cauchy)": [[989, "jax.scipy.stats.cauchy.ppf", false]], "ppf() (in module jax.scipy.stats.logistic)": [[1027, "jax.scipy.stats.logistic.ppf", false]], "ppf() (in module jax.scipy.stats.norm)": [[1042, "jax.scipy.stats.norm.ppf", false]], "ppf() (in module jax.scipy.stats.uniform)": [[1061, "jax.scipy.stats.uniform.ppf", false]], "precision (class in jax.lax)": [[1166, "jax.lax.Precision", false]], "precision (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.precision", false]], "precisionlike (in module jax.lax)": [[1166, "jax.lax.PrecisionLike", false]], "primitive": [[1123, "term-primitive", true]], "print() (in module jax.debug)": [[19, "jax.debug.print", false]], "print_environment_info() (in module jax)": [[825, "jax.print_environment_info", false]], "printoptions() (in module jax.numpy)": [[719, "jax.numpy.printoptions", false]], "prng_key (class in jax.dtypes)": [[43, "jax.dtypes.prng_key", false]], "prngkey() (in module jax.random)": [[838, "jax.random.PRNGKey", false]], "process_allgather() (in module jax.experimental.multihost_utils)": [[78, "jax.experimental.multihost_utils.process_allgather", false]], "process_count() (in module jax)": [[826, "jax.process_count", false]], "process_index() (in module jax)": [[827, "jax.process_index", false]], "prod() (in module jax.numpy)": [[720, "jax.numpy.prod", false]], "promote_types() (in module jax.numpy)": [[721, "jax.numpy.promote_types", false]], "pshuffle() (in module jax.lax)": [[278, "jax.lax.pshuffle", false]], "psum() (in module jax.lax)": [[279, "jax.lax.psum", false]], "psum_scatter() (in module jax.lax)": [[280, "jax.lax.psum_scatter", false]], "pswapaxes() (in module jax.lax)": [[281, "jax.lax.pswapaxes", false]], "ptp() (in module jax.numpy)": [[722, "jax.numpy.ptp", false]], "pure function": [[1123, "term-pure-function", true]], "pure_callback() (in module jax)": [[837, "jax.pure_callback", false]], "put() (in module jax.numpy)": [[723, "jax.numpy.put", false]], "pytree": [[1123, "term-pytree", true]], "qdwh() (in module jax.lax.linalg)": [[251, "jax.lax.linalg.qdwh", false]], "qr() (in module jax.lax.linalg)": [[252, "jax.lax.linalg.qr", false]], "qr() (in module jax.numpy.linalg)": [[634, "jax.numpy.linalg.qr", false]], "qr() (in module jax.scipy.linalg)": [[904, "jax.scipy.linalg.qr", false]], "quantile() (in module jax.numpy)": [[724, "jax.numpy.quantile", false]], "r_ (in module jax.numpy)": [[725, "jax.numpy.r_", false]], "rad2deg() (in module jax.numpy)": [[726, "jax.numpy.rad2deg", false]], "rademacher() (in module jax.random)": [[871, "jax.random.rademacher", false]], "radians() (in module jax.numpy)": [[727, "jax.numpy.radians", false]], "randint() (in module jax.random)": [[872, "jax.random.randint", false]], "random_bcoo() (in module jax.experimental.sparse)": [[122, "jax.experimental.sparse.random_bcoo", false]], "random_gamma_grad() (in module jax.lax)": [[282, "jax.lax.random_gamma_grad", false]], "rankdata() (in module jax.scipy.stats)": [[1048, "jax.scipy.stats.rankdata", false]], "ravel() (in module jax.numpy)": [[728, "jax.numpy.ravel", false]], "ravel_multi_index() (in module jax.numpy)": [[729, "jax.numpy.ravel_multi_index", false]], "ravel_pytree() (in module jax.flatten_util)": [[143, "jax.flatten_util.ravel_pytree", false]], "rayleigh() (in module jax.random)": [[873, "jax.random.rayleigh", false]], "rbg_prng_impl (in module jax.extend.random)": [[137, "jax.extend.random.rbg_prng_impl", false]], "real() (in module jax.lax)": [[283, "jax.lax.real", false]], "real() (in module jax.numpy)": [[730, "jax.numpy.real", false]], "reciprocal() (in module jax.lax)": [[284, "jax.lax.reciprocal", false]], "reciprocal() (in module jax.numpy)": [[731, "jax.numpy.reciprocal", false]], "reduce() (in module jax.lax)": [[285, "jax.lax.reduce", false]], "reduce() (in module jax.tree)": [[1071, "jax.tree.reduce", false]], "reduce_precision() (in module jax.lax)": [[286, "jax.lax.reduce_precision", false]], "reduce_window() (in module jax.lax)": [[287, "jax.lax.reduce_window", false]], "register_pytree_node() (in module jax.tree_util)": [[1079, "jax.tree_util.register_pytree_node", false]], "register_pytree_node_class() (in module jax.tree_util)": [[1080, "jax.tree_util.register_pytree_node_class", false]], "register_pytree_with_keys() (in module jax.tree_util)": [[1081, "jax.tree_util.register_pytree_with_keys", false]], "register_pytree_with_keys_class() (in module jax.tree_util)": [[1082, "jax.tree_util.register_pytree_with_keys_class", false]], "rel_entr() (in module jax.scipy.special)": [[963, "jax.scipy.special.rel_entr", false]], "relu (in module jax.nn)": [[372, "jax.nn.relu", false]], "relu6 (in module jax.nn)": [[373, "jax.nn.relu6", false]], "rem() (in module jax.lax)": [[288, "jax.lax.rem", false]], "remainder() (in module jax.numpy)": [[732, "jax.numpy.remainder", false]], "repeat() (in module jax.numpy)": [[733, "jax.numpy.repeat", false]], "resample() (jax.scipy.stats.gaussian_kde method)": [[1014, "jax.scipy.stats.gaussian_kde.resample", false]], "reset_cache() (in module jax.experimental.compilation_cache.compilation_cache)": [[1150, "jax.experimental.compilation_cache.compilation_cache.reset_cache", false]], "reshape() (in module jax.lax)": [[289, "jax.lax.reshape", false]], "reshape() (in module jax.numpy)": [[734, "jax.numpy.reshape", false]], "resize() (in module jax.image)": [[146, "jax.image.resize", false]], "resize() (in module jax.numpy)": [[735, "jax.numpy.resize", false]], "resizemethod (class in jax.image)": [[1165, "jax.image.ResizeMethod", false]], "resolution (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.resolution", false]], "result_type() (in module jax.dtypes)": [[44, "jax.dtypes.result_type", false]], "result_type() (in module jax.numpy)": [[736, "jax.numpy.result_type", false]], "rev() (in module jax.lax)": [[290, "jax.lax.rev", false]], "reverse-mode autodiff": [[1123, "term-reverse-mode-autodiff", true]], "rfft() (in module jax.numpy.fft)": [[522, "jax.numpy.fft.rfft", false]], "rfft2() (in module jax.numpy.fft)": [[523, "jax.numpy.fft.rfft2", false]], "rfftfreq() (in module jax.numpy.fft)": [[524, "jax.numpy.fft.rfftfreq", false]], "rfftn() (in module jax.numpy.fft)": [[525, "jax.numpy.fft.rfftn", false]], "right_shift() (in module jax.numpy)": [[737, "jax.numpy.right_shift", false]], "rint() (in module jax.numpy)": [[738, "jax.numpy.rint", false]], "rmsprop() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.rmsprop", false]], "rmsprop_momentum() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.rmsprop_momentum", false]], "rng_bit_generator() (in module jax.lax)": [[291, "jax.lax.rng_bit_generator", false]], "rng_uniform() (in module jax.lax)": [[292, "jax.lax.rng_uniform", false]], "roll() (in module jax.numpy)": [[739, "jax.numpy.roll", false]], "rollaxis() (in module jax.numpy)": [[740, "jax.numpy.rollaxis", false]], "roots() (in module jax.numpy)": [[741, "jax.numpy.roots", false]], "rot90() (in module jax.numpy)": [[742, "jax.numpy.rot90", false]], "rotation (class in jax.scipy.spatial.transform)": [[927, "jax.scipy.spatial.transform.Rotation", false]], "round() (in module jax.lax)": [[293, "jax.lax.round", false]], "round() (in module jax.numpy)": [[743, "jax.numpy.round", false]], "round_() (in module jax.numpy)": [[744, "jax.numpy.round_", false]], "roundingmethod (class in jax.lax)": [[1166, "jax.lax.RoundingMethod", false]], "rsf2csf() (in module jax.scipy.linalg)": [[905, "jax.scipy.linalg.rsf2csf", false]], "rsqrt() (in module jax.lax)": [[294, "jax.lax.rsqrt", false]], "runtime_executable() (jax.stages.compiled method)": [[1176, "jax.stages.Compiled.runtime_executable", false]], "s_ (in module jax.numpy)": [[745, "jax.numpy.s_", false]], "save() (in module jax.numpy)": [[746, "jax.numpy.save", false]], "save_device_memory_profile() (in module jax.profiler)": [[832, "jax.profiler.save_device_memory_profile", false]], "savez() (in module jax.numpy)": [[747, "jax.numpy.savez", false]], "scalar_type_of() (in module jax.dtypes)": [[45, "jax.dtypes.scalar_type_of", false]], "scale_and_translate() (in module jax.image)": [[147, "jax.image.scale_and_translate", false]], "scan() (in module jax.lax)": [[295, "jax.lax.scan", false]], "scatter() (in module jax.lax)": [[296, "jax.lax.scatter", false]], "scatter_add() (in module jax.lax)": [[297, "jax.lax.scatter_add", false]], "scatter_apply() (in module jax.lax)": [[298, "jax.lax.scatter_apply", false]], "scatter_max() (in module jax.lax)": [[299, "jax.lax.scatter_max", false]], "scatter_min() (in module jax.lax)": [[300, "jax.lax.scatter_min", false]], "scatter_mul() (in module jax.lax)": [[301, "jax.lax.scatter_mul", false]], "scatterdimensionnumbers (class in jax.lax)": [[1166, "jax.lax.ScatterDimensionNumbers", false]], "schur() (in module jax.lax.linalg)": [[253, "jax.lax.linalg.schur", false]], "schur() (in module jax.scipy.linalg)": [[906, "jax.scipy.linalg.schur", false]], "searchsorted() (in module jax.numpy)": [[748, "jax.numpy.searchsorted", false]], "seed_with_impl() (in module jax.extend.random)": [[138, "jax.extend.random.seed_with_impl", false]], "segment_max() (in module jax.ops)": [[820, "jax.ops.segment_max", false]], "segment_min() (in module jax.ops)": [[821, "jax.ops.segment_min", false]], "segment_prod() (in module jax.ops)": [[822, "jax.ops.segment_prod", false]], "segment_sum() (in module jax.ops)": [[823, "jax.ops.segment_sum", false]], "select() (in module jax.lax)": [[302, "jax.lax.select", false]], "select() (in module jax.numpy)": [[749, "jax.numpy.select", false]], "select_n() (in module jax.lax)": [[303, "jax.lax.select_n", false]], "selu() (in module jax.nn)": [[374, "jax.nn.selu", false]], "sem() (in module jax.scipy.stats)": [[1049, "jax.scipy.stats.sem", false]], "serial() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.serial", false]], "set_cache_dir() (in module jax.experimental.compilation_cache.compilation_cache)": [[1150, "jax.experimental.compilation_cache.compilation_cache.set_cache_dir", false]], "set_printoptions() (in module jax.numpy)": [[750, "jax.numpy.set_printoptions", false]], "setdiff1d() (in module jax.numpy)": [[751, "jax.numpy.setdiff1d", false]], "setxor1d() (in module jax.numpy)": [[752, "jax.numpy.setxor1d", false]], "sf() (in module jax.scipy.stats.beta)": [[978, "jax.scipy.stats.beta.sf", false]], "sf() (in module jax.scipy.stats.cauchy)": [[990, "jax.scipy.stats.cauchy.sf", false]], "sf() (in module jax.scipy.stats.chi2)": [[996, "jax.scipy.stats.chi2.sf", false]], "sf() (in module jax.scipy.stats.gamma)": [[1006, "jax.scipy.stats.gamma.sf", false]], "sf() (in module jax.scipy.stats.logistic)": [[1028, "jax.scipy.stats.logistic.sf", false]], "sf() (in module jax.scipy.stats.norm)": [[1043, "jax.scipy.stats.norm.sf", false]], "sf() (in module jax.scipy.stats.truncnorm)": [[1057, "jax.scipy.stats.truncnorm.sf", false]], "sgd() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.sgd", false]], "shape() (in module jax.numpy)": [[753, "jax.numpy.shape", false]], "shape_dependent() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.shape_dependent", false]], "shapedtypestruct (class in jax)": [[3, "jax.ShapeDtypeStruct", false]], "shard_shape() (jax.sharding.pmapsharding method)": [[1175, "jax.sharding.PmapSharding.shard_shape", false]], "shard_shape() (jax.sharding.sharding method)": [[1175, "jax.sharding.Sharding.shard_shape", false]], "shard_shape() (jax.sharding.xlacompatiblesharding method)": [[1175, "jax.sharding.XLACompatibleSharding.shard_shape", false]], "sharding (class in jax.sharding)": [[1175, "jax.sharding.Sharding", false]], "sharding_spec (jax.sharding.pmapsharding property)": [[1175, "jax.sharding.PmapSharding.sharding_spec", false]], "shift_left() (in module jax.lax)": [[304, "jax.lax.shift_left", false]], "shift_right_arithmetic() (in module jax.lax)": [[305, "jax.lax.shift_right_arithmetic", false]], "shift_right_logical() (in module jax.lax)": [[306, "jax.lax.shift_right_logical", false]], "shutdown() (in module jax.distributed)": [[36, "jax.distributed.shutdown", false]], "sigmoid() (in module jax.nn)": [[375, "jax.nn.sigmoid", false]], "sign() (in module jax.lax)": [[307, "jax.lax.sign", false]], "sign() (in module jax.numpy)": [[754, "jax.numpy.sign", false]], "signbit() (in module jax.numpy)": [[755, "jax.numpy.signbit", false]], "signedinteger (class in jax.numpy)": [[756, "jax.numpy.signedinteger", false]], "silu() (in module jax.nn)": [[376, "jax.nn.silu", false]], "sin() (in module jax.lax)": [[308, "jax.lax.sin", false]], "sin() (in module jax.numpy)": [[757, "jax.numpy.sin", false]], "sinc() (in module jax.numpy)": [[758, "jax.numpy.sinc", false]], "single (in module jax.numpy)": [[759, "jax.numpy.single", false]], "singledevicesharding (class in jax.sharding)": [[1175, "jax.sharding.SingleDeviceSharding", false]], "sinh() (in module jax.lax)": [[309, "jax.lax.sinh", false]], "sinh() (in module jax.numpy)": [[760, "jax.numpy.sinh", false]], "size() (in module jax.numpy)": [[761, "jax.numpy.size", false]], "slerp (class in jax.scipy.spatial.transform)": [[928, "jax.scipy.spatial.transform.Slerp", false]], "slice() (in module jax.lax)": [[310, "jax.lax.slice", false]], "slice_in_dim() (in module jax.lax)": [[311, "jax.lax.slice_in_dim", false]], "slogdet() (in module jax.numpy.linalg)": [[635, "jax.numpy.linalg.slogdet", false]], "sm3() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.sm3", false]], "smallest_normal (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.smallest_normal", false]], "smallest_subnormal (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.smallest_subnormal", false]], "soft_sign() (in module jax.nn)": [[377, "jax.nn.soft_sign", false]], "softmax() (in module jax.nn)": [[378, "jax.nn.softmax", false]], "softplus() (in module jax.nn)": [[379, "jax.nn.softplus", false]], "solve() (in module jax.numpy.linalg)": [[636, "jax.numpy.linalg.solve", false]], "solve() (in module jax.scipy.linalg)": [[907, "jax.scipy.linalg.solve", false]], "solve_triangular() (in module jax.scipy.linalg)": [[908, "jax.scipy.linalg.solve_triangular", false]], "sort() (in module jax.lax)": [[312, "jax.lax.sort", false]], "sort() (in module jax.numpy)": [[762, "jax.numpy.sort", false]], "sort_complex() (in module jax.numpy)": [[763, "jax.numpy.sort_complex", false]], "sort_key_val() (in module jax.lax)": [[313, "jax.lax.sort_key_val", false]], "sparse_plus() (in module jax.nn)": [[380, "jax.nn.sparse_plus", false]], "sparsify() (in module jax.experimental.sparse)": [[123, "jax.experimental.sparse.sparsify", false]], "spec (jax.sharding.namedsharding property)": [[1175, "jax.sharding.NamedSharding.spec", false]], "spence() (in module jax.scipy.special)": [[964, "jax.scipy.special.spence", false]], "sph_harm() (in module jax.scipy.special)": [[965, "jax.scipy.special.sph_harm", false]], "split() (in module jax.numpy)": [[764, "jax.numpy.split", false]], "split() (in module jax.random)": [[874, "jax.random.split", false]], "spmd": [[1123, "term-SPMD", true]], "spsolve() (in module jax.experimental.sparse.linalg)": [[121, "jax.experimental.sparse.linalg.spsolve", false]], "sqrt() (in module jax.lax)": [[314, "jax.lax.sqrt", false]], "sqrt() (in module jax.numpy)": [[765, "jax.numpy.sqrt", false]], "sqrtm() (in module jax.scipy.linalg)": [[909, "jax.scipy.linalg.sqrtm", false]], "square() (in module jax.lax)": [[315, "jax.lax.square", false]], "square() (in module jax.numpy)": [[766, "jax.numpy.square", false]], "squareplus() (in module jax.nn)": [[381, "jax.nn.squareplus", false]], "squeeze() (in module jax.lax)": [[316, "jax.lax.squeeze", false]], "squeeze() (in module jax.numpy)": [[767, "jax.numpy.squeeze", false]], "stack() (in module jax.numpy)": [[768, "jax.numpy.stack", false]], "standardize() (in module jax.nn)": [[382, "jax.nn.standardize", false]], "start_server() (in module jax.profiler)": [[833, "jax.profiler.start_server", false]], "start_trace() (in module jax.profiler)": [[834, "jax.profiler.start_trace", false]], "static": [[1123, "term-static", true]], "std() (in module jax.numpy)": [[769, "jax.numpy.std", false]], "steptraceannotation (class in jax.profiler)": [[828, "jax.profiler.StepTraceAnnotation", false]], "stft() (in module jax.scipy.signal)": [[922, "jax.scipy.signal.stft", false]], "stop_gradient() (in module jax.lax)": [[317, "jax.lax.stop_gradient", false]], "stop_trace() (in module jax.profiler)": [[835, "jax.profiler.stop_trace", false]], "storeexception": [[126, "jax.extend.linear_util.StoreException", false]], "structure() (in module jax.tree)": [[1072, "jax.tree.structure", false]], "sub() (in module jax.lax)": [[318, "jax.lax.sub", false]], "subtract() (in module jax.numpy)": [[770, "jax.numpy.subtract", false]], "subtree_defs (jax.example_libraries.optimizers.optimizerstate attribute)": [[1145, "jax.example_libraries.optimizers.OptimizerState.subtree_defs", false]], "sum() (in module jax.numpy)": [[771, "jax.numpy.sum", false]], "sumpool() (in module jax.example_libraries.stax)": [[1146, "jax.example_libraries.stax.SumPool", false]], "svd() (in module jax.lax.linalg)": [[254, "jax.lax.linalg.svd", false]], "svd() (in module jax.numpy.linalg)": [[637, "jax.numpy.linalg.svd", false]], "svd() (in module jax.scipy.linalg)": [[910, "jax.scipy.linalg.svd", false]], "svdvals() (in module jax.numpy.linalg)": [[638, "jax.numpy.linalg.svdvals", false]], "swapaxes() (in module jax.numpy)": [[772, "jax.numpy.swapaxes", false]], "swish() (in module jax.nn)": [[383, "jax.nn.swish", false]], "switch() (in module jax.lax)": [[319, "jax.lax.switch", false]], "sync_global_devices() (in module jax.experimental.multihost_utils)": [[79, "jax.experimental.multihost_utils.sync_global_devices", false]], "t() (in module jax.random)": [[875, "jax.random.t", false]], "take() (in module jax.numpy)": [[773, "jax.numpy.take", false]], "take_along_axis() (in module jax.numpy)": [[774, "jax.numpy.take_along_axis", false]], "tan() (in module jax.lax)": [[320, "jax.lax.tan", false]], "tan() (in module jax.numpy)": [[775, "jax.numpy.tan", false]], "tanh() (in module jax.lax)": [[321, "jax.lax.tanh", false]], "tanh() (in module jax.numpy)": [[776, "jax.numpy.tanh", false]], "tensordot() (in module jax.numpy)": [[777, "jax.numpy.tensordot", false]], "tensordot() (in module jax.numpy.linalg)": [[639, "jax.numpy.linalg.tensordot", false]], "tensorinv() (in module jax.numpy.linalg)": [[640, "jax.numpy.linalg.tensorinv", false]], "tensorsolve() (in module jax.numpy.linalg)": [[641, "jax.numpy.linalg.tensorsolve", false]], "threefry2x32_p (in module jax.extend.random)": [[139, "jax.extend.random.threefry2x32_p", false]], "threefry_2x32() (in module jax.extend.random)": [[140, "jax.extend.random.threefry_2x32", false]], "threefry_prng_impl (in module jax.extend.random)": [[141, "jax.extend.random.threefry_prng_impl", false]], "tie_in() (in module jax.lax)": [[322, "jax.lax.tie_in", false]], "tile() (in module jax.numpy)": [[778, "jax.numpy.tile", false]], "tiny (jax.numpy.finfo attribute)": [[527, "jax.numpy.finfo.tiny", false]], "to_dlpack() (in module jax.dlpack)": [[38, "jax.dlpack.to_dlpack", false]], "todense() (in module jax.experimental.sparse)": [[124, "jax.experimental.sparse.todense", false]], "toeplitz() (in module jax.scipy.linalg)": [[911, "jax.scipy.linalg.toeplitz", false]], "top_k() (in module jax.lax)": [[323, "jax.lax.top_k", false]], "tpu": [[1123, "term-TPU", true]], "trace() (in module jax.numpy)": [[779, "jax.numpy.trace", false]], "trace() (in module jax.profiler)": [[836, "jax.profiler.trace", false]], "traceannotation (class in jax.profiler)": [[829, "jax.profiler.TraceAnnotation", false]], "tracer": [[1123, "term-Tracer", true]], "tracerarrayconversionerror (class in jax.errors)": [[1121, "jax.errors.TracerArrayConversionError", false]], "tracerboolconversionerror (class in jax.errors)": [[1121, "jax.errors.TracerBoolConversionError", false]], "tracerintegerconversionerror (class in jax.errors)": [[1121, "jax.errors.TracerIntegerConversionError", false]], "transfer_guard() (in module jax)": [[1066, "jax.transfer_guard", false]], "transformation": [[1123, "term-transformation", true]], "transformation (in module jax.extend.linear_util)": [[130, "jax.extend.linear_util.transformation", false]], "transformation_with_aux (in module jax.extend.linear_util)": [[131, "jax.extend.linear_util.transformation_with_aux", false]], "transpose() (in module jax.lax)": [[324, "jax.lax.transpose", false]], "transpose() (in module jax.numpy)": [[780, "jax.numpy.transpose", false]], "transpose() (in module jax.tree)": [[1073, "jax.tree.transpose", false]], "trapezoid() (in module jax.numpy)": [[781, "jax.numpy.trapezoid", false]], "trapezoid() (in module jax.scipy.integrate)": [[886, "jax.scipy.integrate.trapezoid", false]], "tree_all() (in module jax.tree_util)": [[1083, "jax.tree_util.tree_all", false]], "tree_def (jax.example_libraries.optimizers.optimizerstate attribute)": [[1145, "jax.example_libraries.optimizers.OptimizerState.tree_def", false]], "tree_flatten() (in module jax.tree_util)": [[1084, "jax.tree_util.tree_flatten", false]], "tree_flatten_with_path() (in module jax.tree_util)": [[1085, "jax.tree_util.tree_flatten_with_path", false]], "tree_leaves() (in module jax.tree_util)": [[1086, "jax.tree_util.tree_leaves", false]], "tree_leaves_with_path() (in module jax.tree_util)": [[1087, "jax.tree_util.tree_leaves_with_path", false]], "tree_map() (in module jax.tree_util)": [[1088, "jax.tree_util.tree_map", false]], "tree_map_with_path() (in module jax.tree_util)": [[1089, "jax.tree_util.tree_map_with_path", false]], "tree_reduce() (in module jax.tree_util)": [[1090, "jax.tree_util.tree_reduce", false]], "tree_structure() (in module jax.tree_util)": [[1091, "jax.tree_util.tree_structure", false]], "tree_transpose() (in module jax.tree_util)": [[1092, "jax.tree_util.tree_transpose", false]], "tree_unflatten() (in module jax.tree_util)": [[1093, "jax.tree_util.tree_unflatten", false]], "treedef_children() (in module jax.tree_util)": [[1094, "jax.tree_util.treedef_children", false]], "treedef_is_leaf() (in module jax.tree_util)": [[1095, "jax.tree_util.treedef_is_leaf", false]], "treedef_tuple() (in module jax.tree_util)": [[1096, "jax.tree_util.treedef_tuple", false]], "tri() (in module jax.numpy)": [[782, "jax.numpy.tri", false]], "triangular() (in module jax.random)": [[876, "jax.random.triangular", false]], "triangular_solve() (in module jax.lax.linalg)": [[255, "jax.lax.linalg.triangular_solve", false]], "tridiagonal() (in module jax.lax.linalg)": [[256, "jax.lax.linalg.tridiagonal", false]], "tridiagonal_solve() (in module jax.lax.linalg)": [[257, "jax.lax.linalg.tridiagonal_solve", false]], "tril() (in module jax.numpy)": [[783, "jax.numpy.tril", false]], "tril_indices() (in module jax.numpy)": [[784, "jax.numpy.tril_indices", false]], "tril_indices_from() (in module jax.numpy)": [[785, "jax.numpy.tril_indices_from", false]], "trim_zeros() (in module jax.numpy)": [[786, "jax.numpy.trim_zeros", false]], "triu() (in module jax.numpy)": [[787, "jax.numpy.triu", false]], "triu_indices() (in module jax.numpy)": [[788, "jax.numpy.triu_indices", false]], "triu_indices_from() (in module jax.numpy)": [[789, "jax.numpy.triu_indices_from", false]], "true_divide() (in module jax.numpy)": [[790, "jax.numpy.true_divide", false]], "trunc() (in module jax.numpy)": [[791, "jax.numpy.trunc", false]], "truncated_normal() (in module jax.nn.initializers)": [[362, "jax.nn.initializers.truncated_normal", false]], "truncated_normal() (in module jax.random)": [[877, "jax.random.truncated_normal", false]], "ufunc (class in jax.numpy)": [[792, "jax.numpy.ufunc", false]], "uint (in module jax.numpy)": [[793, "jax.numpy.uint", false]], "uint16 (class in jax.numpy)": [[794, "jax.numpy.uint16", false]], "uint32 (class in jax.numpy)": [[795, "jax.numpy.uint32", false]], "uint64 (class in jax.numpy)": [[796, "jax.numpy.uint64", false]], "uint8 (class in jax.numpy)": [[797, "jax.numpy.uint8", false]], "unexpectedtracererror (class in jax.errors)": [[1121, "jax.errors.UnexpectedTracerError", false]], "unflatten() (in module jax.tree)": [[1074, "jax.tree.unflatten", false]], "uniform() (in module jax.nn.initializers)": [[363, "jax.nn.initializers.uniform", false]], "uniform() (in module jax.random)": [[878, "jax.random.uniform", false]], "union1d() (in module jax.numpy)": [[798, "jax.numpy.union1d", false]], "unique() (in module jax.numpy)": [[799, "jax.numpy.unique", false]], "unique_all() (in module jax.numpy)": [[800, "jax.numpy.unique_all", false]], "unique_counts() (in module jax.numpy)": [[801, "jax.numpy.unique_counts", false]], "unique_inverse() (in module jax.numpy)": [[802, "jax.numpy.unique_inverse", false]], "unique_values() (in module jax.numpy)": [[803, "jax.numpy.unique_values", false]], "unpack_optimizer_state() (in module jax.example_libraries.optimizers)": [[1145, "jax.example_libraries.optimizers.unpack_optimizer_state", false]], "unpackbits() (in module jax.numpy)": [[804, "jax.numpy.unpackbits", false]], "unravel_index() (in module jax.numpy)": [[805, "jax.numpy.unravel_index", false]], "unsafe_rbg_prng_impl (in module jax.extend.random)": [[142, "jax.extend.random.unsafe_rbg_prng_impl", false]], "unsignedinteger (class in jax.numpy)": [[806, "jax.numpy.unsignedinteger", false]], "unstack() (in module jax.numpy)": [[807, "jax.numpy.unstack", false]], "unwrap() (in module jax.numpy)": [[808, "jax.numpy.unwrap", false]], "update_fn (jax.example_libraries.optimizers.optimizer attribute)": [[1145, "jax.example_libraries.optimizers.Optimizer.update_fn", false]], "user_checks (in module jax.experimental.checkify)": [[62, "jax.experimental.checkify.user_checks", false]], "value_and_grad() (in module jax)": [[1099, "jax.value_and_grad", false]], "value_and_grad() (in module jax.experimental.sparse)": [[125, "jax.experimental.sparse.value_and_grad", false]], "vander() (in module jax.numpy)": [[809, "jax.numpy.vander", false]], "var() (in module jax.numpy)": [[810, "jax.numpy.var", false]], "variance_scaling() (in module jax.nn.initializers)": [[364, "jax.nn.initializers.variance_scaling", false]], "vdot() (in module jax.numpy)": [[811, "jax.numpy.vdot", false]], "vecdot() (in module jax.numpy)": [[812, "jax.numpy.vecdot", false]], "vecdot() (in module jax.numpy.linalg)": [[642, "jax.numpy.linalg.vecdot", false]], "vector_norm() (in module jax.numpy.linalg)": [[643, "jax.numpy.linalg.vector_norm", false]], "vectorize() (in module jax.numpy)": [[813, "jax.numpy.vectorize", false]], "visualize_array_sharding() (in module jax.debug)": [[20, "jax.debug.visualize_array_sharding", false]], "visualize_sharding() (in module jax.debug)": [[21, "jax.debug.visualize_sharding", false]], "vjp": [[1123, "term-VJP", true]], "vjp() (in module jax)": [[1100, "jax.vjp", false]], "vmap() (in module jax)": [[1101, "jax.vmap", false]], "vsplit() (in module jax.numpy)": [[814, "jax.numpy.vsplit", false]], "vstack() (in module jax.numpy)": [[815, "jax.numpy.vstack", false]], "wald() (in module jax.random)": [[879, "jax.random.wald", false]], "weak type": [[1123, "term-weak-type", true]], "weibull_min() (in module jax.random)": [[880, "jax.random.weibull_min", false]], "welch() (in module jax.scipy.signal)": [[923, "jax.scipy.signal.welch", false]], "where() (in module jax.numpy)": [[816, "jax.numpy.where", false]], "while_loop() (in module jax.lax)": [[325, "jax.lax.while_loop", false]], "with_memory_kind() (jax.sharding.gspmdsharding method)": [[1175, "jax.sharding.GSPMDSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.namedsharding method)": [[1175, "jax.sharding.NamedSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.pmapsharding method)": [[1175, "jax.sharding.PmapSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.positionalsharding method)": [[1175, "jax.sharding.PositionalSharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.sharding method)": [[1175, "jax.sharding.Sharding.with_memory_kind", false]], "with_memory_kind() (jax.sharding.singledevicesharding method)": [[1175, "jax.sharding.SingleDeviceSharding.with_memory_kind", false]], "with_sharding_constraint() (in module jax.lax)": [[326, "jax.lax.with_sharding_constraint", false]], "wrap_init() (in module jax.extend.linear_util)": [[132, "jax.extend.linear_util.wrap_init", false]], "wrap_key_data() (in module jax.random)": [[881, "jax.random.wrap_key_data", false]], "wrapped (class in jax.stages)": [[1176, "jax.stages.Wrapped", false]], "wrappedfun (class in jax.extend.linear_util)": [[127, "jax.extend.linear_util.WrappedFun", false]], "xla": [[1123, "term-XLA", true]], "xla_computation() (in module jax)": [[1102, "jax.xla_computation", false]], "xlacompatiblesharding (class in jax.sharding)": [[1175, "jax.sharding.XLACompatibleSharding", false]], "xlog1py (in module jax.scipy.special)": [[966, "jax.scipy.special.xlog1py", false]], "xlogy (in module jax.scipy.special)": [[967, "jax.scipy.special.xlogy", false]], "xmap() (in module jax.experimental.maps)": [[71, "jax.experimental.maps.xmap", false]], "zeros() (in module jax.nn.initializers)": [[365, "jax.nn.initializers.zeros", false]], "zeros() (in module jax.numpy)": [[817, "jax.numpy.zeros", false]], "zeros_like() (in module jax.numpy)": [[818, "jax.numpy.zeros_like", false]], "zeros_like_array() (in module jax.lax)": [[327, "jax.lax.zeros_like_array", false]], "zeta (in module jax.scipy.special)": [[968, "jax.scipy.special.zeta", false]], "zeta() (in module jax.lax)": [[328, "jax.lax.zeta", false]]}, "objects": {"jax": [[1, 0, 1, "", "Array"], [2, 0, 1, "", "Device"], [3, 0, 1, "", "ShapeDtypeStruct"], [4, 2, 1, "", "block_until_ready"], [5, 3, 1, "", "check_tracer_leaks"], [6, 3, 1, "", "checking_leaks"], [7, 2, 1, "", "checkpoint"], [8, 2, 1, "", "clear_caches"], [9, 2, 1, "", "closure_convert"], [10, 3, 1, "", "config"], [1181, 4, 0, "-", "core"], [13, 2, 1, "", "custom_gradient"], [14, 0, 1, "", "custom_jvp"], [15, 0, 1, "", "custom_vjp"], [1140, 4, 0, "-", "debug"], [22, 3, 1, "", "debug_infs"], [23, 3, 1, "", "debug_nans"], [24, 2, 1, "", "default_backend"], [25, 3, 1, "", "default_device"], [26, 3, 1, "", "default_matmul_precision"], [27, 3, 1, "", "default_prng_impl"], [28, 2, 1, "", "device_count"], [29, 2, 1, "", "device_get"], [30, 2, 1, "", "device_put"], [31, 2, 1, "", "device_put_replicated"], [32, 2, 1, "", "device_put_sharded"], [33, 2, 1, "", "devices"], [34, 2, 1, "", "disable_jit"], [1141, 4, 0, "-", "distributed"], [1142, 4, 0, "-", "dlpack"], [1143, 4, 0, "-", "dtypes"], [46, 3, 1, "", "enable_checks"], [47, 3, 1, "", "enable_custom_prng"], [48, 3, 1, "", "enable_custom_vjp_by_custom_transpose"], [49, 2, 1, "", "ensure_compile_time_eval"], [50, 2, 1, "", "eval_shape"], [1144, 4, 0, "-", "example_libraries"], [1160, 4, 0, "-", "extend"], [1164, 4, 0, "-", "flatten_util"], [144, 2, 1, "", "grad"], [145, 2, 1, "", "hessian"], [1165, 4, 0, "-", "image"], [148, 2, 1, "", "jacfwd"], [149, 2, 1, "", "jacrev"], [150, 2, 1, "", "jit"], [151, 2, 1, "", "jvp"], [1166, 4, 0, "-", "lax"], [332, 2, 1, "", "linear_transpose"], [333, 2, 1, "", "linearize"], [334, 2, 1, "", "live_arrays"], [335, 2, 1, "", "local_device_count"], [336, 2, 1, "", "local_devices"], [337, 3, 1, "", "log_compiles"], [338, 2, 1, "", "make_array_from_callback"], [339, 2, 1, "", "make_array_from_single_device_arrays"], [340, 2, 1, "", "make_jaxpr"], [341, 2, 1, "", "named_call"], [342, 2, 1, "", "named_scope"], [1168, 4, 0, "-", "nn"], [1170, 4, 0, "-", "numpy"], [819, 3, 1, "", "numpy_rank_promotion"], [1171, 4, 0, "-", "ops"], [824, 2, 1, "", "pmap"], [825, 2, 1, "", "print_environment_info"], [826, 2, 1, "", "process_count"], [827, 2, 1, "", "process_index"], [1172, 4, 0, "-", "profiler"], [837, 2, 1, "", "pure_callback"], [1173, 4, 0, "-", "random"], [1175, 4, 0, "-", "sharding"], [1176, 4, 0, "-", "stages"], [1066, 2, 1, "", "transfer_guard"], [1177, 4, 0, "-", "tree"], [1178, 4, 0, "-", "tree_util"], [1179, 4, 0, "-", "typing"], [1099, 2, 1, "", "value_and_grad"], [1100, 2, 1, "", "vjp"], [1101, 2, 1, "", "vmap"], [1102, 2, 1, "", "xla_computation"]], "jax.Array": [[1, 1, 1, "", "__init__"]], "jax.Device": [[2, 1, 1, "", "__init__"]], "jax.ShapeDtypeStruct": [[3, 1, 1, "", "__init__"]], "jax.core": [[11, 0, 1, "", "ClosedJaxpr"], [12, 0, 1, "", "Jaxpr"]], "jax.core.ClosedJaxpr": [[11, 1, 1, "", "__init__"]], "jax.core.Jaxpr": [[12, 1, 1, "", "__init__"]], "jax.custom_jvp": [[14, 1, 1, "", "__init__"]], "jax.custom_vjp": [[15, 1, 1, "", "__init__"]], "jax.debug": [[16, 2, 1, "", "breakpoint"], [17, 2, 1, "", "callback"], [18, 2, 1, "", "inspect_array_sharding"], [19, 2, 1, "", "print"], [20, 2, 1, "", "visualize_array_sharding"], [21, 2, 1, "", "visualize_sharding"]], "jax.distributed": [[35, 2, 1, "", "initialize"], [36, 2, 1, "", "shutdown"]], "jax.dlpack": [[37, 2, 1, "", "from_dlpack"], [38, 2, 1, "", "to_dlpack"]], "jax.dtypes": [[39, 0, 1, "", "bfloat16"], [40, 2, 1, "", "canonicalize_dtype"], [41, 3, 1, "", "float0"], [42, 2, 1, "", "issubdtype"], [43, 0, 1, "", "prng_key"], [44, 2, 1, "", "result_type"], [45, 2, 1, "", "scalar_type_of"]], "jax.dtypes.bfloat16": [[39, 1, 1, "", "__init__"]], "jax.dtypes.prng_key": [[43, 1, 1, "", "__init__"]], "jax.errors": [[1121, 0, 1, "", "ConcretizationTypeError"], [1121, 0, 1, "", "KeyReuseError"], [1121, 0, 1, "", "NonConcreteBooleanIndexError"], [1121, 0, 1, "", "TracerArrayConversionError"], [1121, 0, 1, "", "TracerBoolConversionError"], [1121, 0, 1, "", "TracerIntegerConversionError"], [1121, 0, 1, "", "UnexpectedTracerError"]], "jax.example_libraries": [[1145, 4, 0, "-", "optimizers"], [1146, 4, 0, "-", "stax"]], "jax.example_libraries.optimizers": [[1145, 0, 1, "", "JoinPoint"], [1145, 0, 1, "", "Optimizer"], [1145, 0, 1, "", "OptimizerState"], [1145, 2, 1, "", "adagrad"], [1145, 2, 1, "", "adam"], [1145, 2, 1, "", "adamax"], [1145, 2, 1, "", "clip_grads"], [1145, 2, 1, "", "constant"], [1145, 2, 1, "", "exponential_decay"], [1145, 2, 1, "", "inverse_time_decay"], [1145, 2, 1, "", "l2_norm"], [1145, 2, 1, "", "make_schedule"], [1145, 2, 1, "", "momentum"], [1145, 2, 1, "", "nesterov"], [1145, 2, 1, "", "optimizer"], [1145, 2, 1, "", "pack_optimizer_state"], [1145, 2, 1, "", "piecewise_constant"], [1145, 2, 1, "", "polynomial_decay"], [1145, 2, 1, "", "rmsprop"], [1145, 2, 1, "", "rmsprop_momentum"], [1145, 2, 1, "", "sgd"], [1145, 2, 1, "", "sm3"], [1145, 2, 1, "", "unpack_optimizer_state"]], "jax.example_libraries.optimizers.Optimizer": [[1145, 5, 1, "", "init_fn"], [1145, 5, 1, "", "params_fn"], [1145, 5, 1, "", "update_fn"]], "jax.example_libraries.optimizers.OptimizerState": [[1145, 5, 1, "", "packed_state"], [1145, 5, 1, "", "subtree_defs"], [1145, 5, 1, "", "tree_def"]], "jax.example_libraries.stax": [[1146, 2, 1, "", "AvgPool"], [1146, 2, 1, "", "BatchNorm"], [1146, 2, 1, "", "Conv"], [1146, 2, 1, "", "Conv1DTranspose"], [1146, 2, 1, "", "ConvTranspose"], [1146, 2, 1, "", "Dense"], [1146, 2, 1, "", "Dropout"], [1146, 2, 1, "", "FanInConcat"], [1146, 2, 1, "", "FanOut"], [1146, 2, 1, "", "GeneralConv"], [1146, 2, 1, "", "GeneralConvTranspose"], [1146, 2, 1, "", "MaxPool"], [1146, 2, 1, "", "SumPool"], [1146, 2, 1, "", "elementwise"], [1146, 2, 1, "", "parallel"], [1146, 2, 1, "", "serial"], [1146, 2, 1, "", "shape_dependent"]], "jax.experimental": [[1148, 4, 0, "-", "array_api"], [1149, 4, 0, "-", "checkify"], [1151, 4, 0, "-", "custom_partitioning"], [63, 2, 1, "", "disable_x64"], [64, 2, 1, "", "enable_x64"], [1152, 4, 0, "-", "host_callback"], [70, 2, 1, "", "io_callback"], [1153, 4, 0, "-", "jet"], [1154, 4, 0, "-", "key_reuse"], [1155, 4, 0, "-", "maps"], [1156, 4, 0, "-", "mesh_utils"], [1157, 4, 0, "-", "multihost_utils"], [1158, 4, 0, "-", "pjit"], [1159, 4, 0, "-", "sparse"]], "jax.experimental.checkify": [[51, 0, 1, "", "Error"], [52, 6, 1, "", "JaxRuntimeError"], [53, 3, 1, "", "all_checks"], [54, 3, 1, "", "automatic_checks"], [55, 2, 1, "", "check"], [56, 2, 1, "", "check_error"], [57, 2, 1, "", "checkify"], [58, 3, 1, "", "div_checks"], [59, 3, 1, "", "float_checks"], [60, 3, 1, "", "index_checks"], [61, 3, 1, "", "nan_checks"], [62, 3, 1, "", "user_checks"]], "jax.experimental.checkify.Error": [[51, 1, 1, "", "__init__"]], "jax.experimental.compilation_cache": [[1150, 4, 0, "-", "compilation_cache"]], "jax.experimental.compilation_cache.compilation_cache": [[1150, 2, 1, "", "initialize_cache"], [1150, 2, 1, "", "is_initialized"], [1150, 2, 1, "", "reset_cache"], [1150, 2, 1, "", "set_cache_dir"]], "jax.experimental.custom_partitioning": [[1151, 2, 1, "", "custom_partitioning"]], "jax.experimental.host_callback": [[65, 6, 1, "", "CallbackException"], [66, 2, 1, "", "barrier_wait"], [67, 2, 1, "", "call"], [68, 2, 1, "", "id_print"], [69, 2, 1, "", "id_tap"]], "jax.experimental.jet": [[1153, 2, 1, "", "jet"]], "jax.experimental.maps": [[71, 2, 1, "", "xmap"]], "jax.experimental.mesh_utils": [[72, 2, 1, "", "create_device_mesh"], [73, 2, 1, "", "create_hybrid_device_mesh"]], "jax.experimental.multihost_utils": [[74, 2, 1, "", "assert_equal"], [75, 2, 1, "", "broadcast_one_to_all"], [76, 2, 1, "", "global_array_to_host_local_array"], [77, 2, 1, "", "host_local_array_to_global_array"], [78, 2, 1, "", "process_allgather"], [79, 2, 1, "", "sync_global_devices"]], "jax.experimental.pjit": [[1158, 2, 1, "", "pjit"]], "jax.experimental.sparse": [[80, 0, 1, "", "BCOO"], [81, 0, 1, "", "BCSR"], [82, 0, 1, "", "COO"], [83, 0, 1, "", "CSC"], [84, 0, 1, "", "CSR"], [85, 0, 1, "", "JAXSparse"], [86, 2, 1, "", "bcoo_broadcast_in_dim"], [87, 2, 1, "", "bcoo_concatenate"], [88, 2, 1, "", "bcoo_dot_general"], [89, 2, 1, "", "bcoo_dot_general_sampled"], [90, 2, 1, "", "bcoo_dynamic_slice"], [91, 2, 1, "", "bcoo_extract"], [92, 2, 1, "", "bcoo_fromdense"], [93, 2, 1, "", "bcoo_gather"], [94, 2, 1, "", "bcoo_multiply_dense"], [95, 2, 1, "", "bcoo_multiply_sparse"], [96, 2, 1, "", "bcoo_reduce_sum"], [97, 2, 1, "", "bcoo_reshape"], [98, 2, 1, "", "bcoo_slice"], [99, 2, 1, "", "bcoo_sort_indices"], [100, 2, 1, "", "bcoo_squeeze"], [101, 2, 1, "", "bcoo_sum_duplicates"], [102, 2, 1, "", "bcoo_todense"], [103, 2, 1, "", "bcoo_transpose"], [104, 2, 1, "", "bcoo_update_layout"], [105, 2, 1, "", "bcsr_dot_general"], [106, 2, 1, "", "bcsr_extract"], [107, 2, 1, "", "bcsr_fromdense"], [108, 2, 1, "", "bcsr_todense"], [109, 2, 1, "", "coo_fromdense"], [110, 2, 1, "", "coo_matmat"], [111, 2, 1, "", "coo_matvec"], [112, 2, 1, "", "coo_todense"], [113, 2, 1, "", "csr_fromdense"], [114, 2, 1, "", "csr_matmat"], [115, 2, 1, "", "csr_matvec"], [116, 2, 1, "", "csr_todense"], [117, 2, 1, "", "empty"], [118, 2, 1, "", "eye"], [119, 2, 1, "", "grad"], [1159, 4, 0, "-", "linalg"], [122, 2, 1, "", "random_bcoo"], [123, 2, 1, "", "sparsify"], [124, 2, 1, "", "todense"], [125, 2, 1, "", "value_and_grad"]], "jax.experimental.sparse.BCOO": [[80, 1, 1, "", "__init__"], [80, 5, 1, "", "data"], [80, 5, 1, "", "indices"]], "jax.experimental.sparse.BCSR": [[81, 1, 1, "", "__init__"]], "jax.experimental.sparse.COO": [[82, 1, 1, "", "__init__"]], "jax.experimental.sparse.CSC": [[83, 1, 1, "", "__init__"]], "jax.experimental.sparse.CSR": [[84, 1, 1, "", "__init__"]], "jax.experimental.sparse.JAXSparse": [[85, 1, 1, "", "__init__"]], "jax.experimental.sparse.linalg": [[120, 2, 1, "", "lobpcg_standard"], [121, 2, 1, "", "spsolve"]], "jax.extend": [[1161, 4, 0, "-", "linear_util"], [1162, 4, 0, "-", "mlir"], [1163, 4, 0, "-", "random"]], "jax.extend.linear_util": [[126, 6, 1, "", "StoreException"], [127, 0, 1, "", "WrappedFun"], [128, 2, 1, "", "cache"], [129, 2, 1, "", "merge_linear_aux"], [130, 3, 1, "", "transformation"], [131, 3, 1, "", "transformation_with_aux"], [132, 2, 1, "", "wrap_init"]], "jax.extend.linear_util.WrappedFun": [[127, 1, 1, "", "__init__"]], "jax.extend.mlir": [[133, 4, 0, "-", "dialects"], [134, 4, 0, "-", "ir"], [135, 4, 0, "-", "passmanager"]], "jax.extend.random": [[136, 2, 1, "", "define_prng_impl"], [137, 3, 1, "", "rbg_prng_impl"], [138, 2, 1, "", "seed_with_impl"], [139, 3, 1, "", "threefry2x32_p"], [140, 2, 1, "", "threefry_2x32"], [141, 3, 1, "", "threefry_prng_impl"], [142, 3, 1, "", "unsafe_rbg_prng_impl"]], "jax.flatten_util": [[143, 2, 1, "", "ravel_pytree"]], "jax.image": [[1165, 0, 1, "", "ResizeMethod"], [146, 2, 1, "", "resize"], [147, 2, 1, "", "scale_and_translate"]], "jax.lax": [[1166, 0, 1, "", "ConvDimensionNumbers"], [1166, 5, 1, "", "ConvGeneralDilatedDimensionNumbers"], [1166, 0, 1, "", "GatherDimensionNumbers"], [1166, 0, 1, "", "GatherScatterMode"], [1166, 0, 1, "", "Precision"], [1166, 5, 1, "", "PrecisionLike"], [1166, 0, 1, "", "RoundingMethod"], [1166, 0, 1, "", "ScatterDimensionNumbers"], [152, 2, 1, "", "abs"], [153, 2, 1, "", "acos"], [154, 2, 1, "", "acosh"], [155, 2, 1, "", "add"], [156, 2, 1, "", "after_all"], [157, 2, 1, "", "all_gather"], [158, 2, 1, "", "all_to_all"], [159, 2, 1, "", "approx_max_k"], [160, 2, 1, "", "approx_min_k"], [161, 2, 1, "", "argmax"], [162, 2, 1, "", "argmin"], [163, 2, 1, "", "asin"], [164, 2, 1, "", "asinh"], [165, 2, 1, "", "associative_scan"], [166, 2, 1, "", "atan"], [167, 2, 1, "", "atan2"], [168, 2, 1, "", "atanh"], [169, 2, 1, "", "axis_index"], [170, 2, 1, "", "batch_matmul"], [171, 2, 1, "", "bessel_i0e"], [172, 2, 1, "", "bessel_i1e"], [173, 2, 1, "", "betainc"], [174, 2, 1, "", "bitcast_convert_type"], [175, 2, 1, "", "bitwise_and"], [176, 2, 1, "", "bitwise_not"], [177, 2, 1, "", "bitwise_or"], [178, 2, 1, "", "bitwise_xor"], [179, 2, 1, "", "broadcast"], [180, 2, 1, "", "broadcast_in_dim"], [181, 2, 1, "", "broadcast_shapes"], [182, 2, 1, "", "broadcast_to_rank"], [183, 2, 1, "", "broadcasted_iota"], [184, 2, 1, "", "cbrt"], [185, 2, 1, "", "ceil"], [186, 2, 1, "", "clamp"], [187, 2, 1, "", "clz"], [188, 2, 1, "", "collapse"], [189, 2, 1, "", "complex"], [190, 2, 1, "", "concatenate"], [191, 2, 1, "", "cond"], [192, 2, 1, "", "conj"], [193, 2, 1, "", "conv"], [194, 2, 1, "", "conv_dimension_numbers"], [195, 2, 1, "", "conv_general_dilated"], [196, 2, 1, "", "conv_general_dilated_local"], [197, 2, 1, "", "conv_general_dilated_patches"], [198, 2, 1, "", "conv_transpose"], [199, 2, 1, "", "conv_with_general_padding"], [200, 2, 1, "", "convert_element_type"], [201, 2, 1, "", "cos"], [202, 2, 1, "", "cosh"], [203, 2, 1, "", "cumlogsumexp"], [204, 2, 1, "", "cummax"], [205, 2, 1, "", "cummin"], [206, 2, 1, "", "cumprod"], [207, 2, 1, "", "cumsum"], [208, 2, 1, "", "custom_linear_solve"], [209, 2, 1, "", "custom_root"], [210, 2, 1, "", "digamma"], [211, 2, 1, "", "div"], [212, 2, 1, "", "dot"], [213, 2, 1, "", "dot_general"], [214, 2, 1, "", "dynamic_index_in_dim"], [215, 2, 1, "", "dynamic_slice"], [216, 2, 1, "", "dynamic_slice_in_dim"], [217, 2, 1, "", "dynamic_update_index_in_dim"], [218, 2, 1, "", "dynamic_update_slice"], [219, 2, 1, "", "dynamic_update_slice_in_dim"], [220, 2, 1, "", "eq"], [221, 2, 1, "", "erf"], [222, 2, 1, "", "erf_inv"], [223, 2, 1, "", "erfc"], [224, 2, 1, "", "exp"], [225, 2, 1, "", "expand_dims"], [226, 2, 1, "", "expm1"], [227, 2, 1, "", "fft"], [228, 2, 1, "", "floor"], [229, 2, 1, "", "fori_loop"], [230, 2, 1, "", "full"], [231, 2, 1, "", "full_like"], [232, 2, 1, "", "gather"], [233, 2, 1, "", "ge"], [234, 2, 1, "", "gt"], [235, 2, 1, "", "igamma"], [236, 2, 1, "", "igammac"], [237, 2, 1, "", "imag"], [238, 2, 1, "", "index_in_dim"], [239, 2, 1, "", "index_take"], [240, 2, 1, "", "integer_pow"], [241, 2, 1, "", "iota"], [242, 2, 1, "", "is_finite"], [243, 2, 1, "", "le"], [244, 2, 1, "", "lgamma"], [1166, 4, 0, "-", "linalg"], [258, 2, 1, "", "log"], [259, 2, 1, "", "log1p"], [260, 2, 1, "", "logistic"], [261, 2, 1, "", "lt"], [262, 2, 1, "", "map"], [263, 2, 1, "", "max"], [264, 2, 1, "", "min"], [265, 2, 1, "", "mul"], [266, 2, 1, "", "ne"], [267, 2, 1, "", "neg"], [268, 2, 1, "", "nextafter"], [269, 2, 1, "", "pad"], [270, 2, 1, "", "pdot"], [271, 2, 1, "", "pmax"], [272, 2, 1, "", "pmean"], [273, 2, 1, "", "pmin"], [274, 2, 1, "", "polygamma"], [275, 2, 1, "", "population_count"], [276, 2, 1, "", "pow"], [277, 2, 1, "", "ppermute"], [278, 2, 1, "", "pshuffle"], [279, 2, 1, "", "psum"], [280, 2, 1, "", "psum_scatter"], [281, 2, 1, "", "pswapaxes"], [282, 2, 1, "", "random_gamma_grad"], [283, 2, 1, "", "real"], [284, 2, 1, "", "reciprocal"], [285, 2, 1, "", "reduce"], [286, 2, 1, "", "reduce_precision"], [287, 2, 1, "", "reduce_window"], [288, 2, 1, "", "rem"], [289, 2, 1, "", "reshape"], [290, 2, 1, "", "rev"], [291, 2, 1, "", "rng_bit_generator"], [292, 2, 1, "", "rng_uniform"], [293, 2, 1, "", "round"], [294, 2, 1, "", "rsqrt"], [295, 2, 1, "", "scan"], [296, 2, 1, "", "scatter"], [297, 2, 1, "", "scatter_add"], [298, 2, 1, "", "scatter_apply"], [299, 2, 1, "", "scatter_max"], [300, 2, 1, "", "scatter_min"], [301, 2, 1, "", "scatter_mul"], [302, 2, 1, "", "select"], [303, 2, 1, "", "select_n"], [304, 2, 1, "", "shift_left"], [305, 2, 1, "", "shift_right_arithmetic"], [306, 2, 1, "", "shift_right_logical"], [307, 2, 1, "", "sign"], [308, 2, 1, "", "sin"], [309, 2, 1, "", "sinh"], [310, 2, 1, "", "slice"], [311, 2, 1, "", "slice_in_dim"], [312, 2, 1, "", "sort"], [313, 2, 1, "", "sort_key_val"], [314, 2, 1, "", "sqrt"], [315, 2, 1, "", "square"], [316, 2, 1, "", "squeeze"], [317, 2, 1, "", "stop_gradient"], [318, 2, 1, "", "sub"], [319, 2, 1, "", "switch"], [320, 2, 1, "", "tan"], [321, 2, 1, "", "tanh"], [322, 2, 1, "", "tie_in"], [323, 2, 1, "", "top_k"], [324, 2, 1, "", "transpose"], [325, 2, 1, "", "while_loop"], [326, 2, 1, "", "with_sharding_constraint"], [327, 2, 1, "", "zeros_like_array"], [328, 2, 1, "", "zeta"]], "jax.lax.linalg": [[245, 2, 1, "", "cholesky"], [246, 2, 1, "", "eig"], [247, 2, 1, "", "eigh"], [248, 2, 1, "", "hessenberg"], [249, 2, 1, "", "householder_product"], [250, 2, 1, "", "lu"], [251, 2, 1, "", "qdwh"], [252, 2, 1, "", "qr"], [253, 2, 1, "", "schur"], [254, 2, 1, "", "svd"], [255, 2, 1, "", "triangular_solve"], [256, 2, 1, "", "tridiagonal"], [257, 2, 1, "", "tridiagonal_solve"]], "jax.lib.xla_bridge": [[329, 2, 1, "", "default_backend"], [330, 2, 1, "", "get_backend"], [331, 2, 1, "", "get_compile_options"]], "jax.nn": [[343, 2, 1, "", "celu"], [344, 2, 1, "", "elu"], [345, 2, 1, "", "gelu"], [346, 2, 1, "", "glu"], [347, 2, 1, "", "hard_sigmoid"], [348, 2, 1, "", "hard_silu"], [349, 2, 1, "", "hard_swish"], [350, 2, 1, "", "hard_tanh"], [1169, 4, 0, "-", "initializers"], [366, 2, 1, "", "leaky_relu"], [367, 2, 1, "", "log_sigmoid"], [368, 2, 1, "", "log_softmax"], [369, 2, 1, "", "logsumexp"], [370, 2, 1, "", "mish"], [371, 2, 1, "", "one_hot"], [372, 3, 1, "", "relu"], [373, 3, 1, "", "relu6"], [374, 2, 1, "", "selu"], [375, 2, 1, "", "sigmoid"], [376, 2, 1, "", "silu"], [377, 2, 1, "", "soft_sign"], [378, 2, 1, "", "softmax"], [379, 2, 1, "", "softplus"], [380, 2, 1, "", "sparse_plus"], [381, 2, 1, "", "squareplus"], [382, 2, 1, "", "standardize"], [383, 2, 1, "", "swish"]], "jax.nn.initializers": [[351, 2, 1, "", "constant"], [352, 2, 1, "", "delta_orthogonal"], [353, 2, 1, "", "glorot_normal"], [354, 2, 1, "", "glorot_uniform"], [355, 2, 1, "", "he_normal"], [356, 2, 1, "", "he_uniform"], [357, 2, 1, "", "lecun_normal"], [358, 2, 1, "", "lecun_uniform"], [359, 2, 1, "", "normal"], [360, 2, 1, "", "ones"], [361, 2, 1, "", "orthogonal"], [362, 2, 1, "", "truncated_normal"], [363, 2, 1, "", "uniform"], [364, 2, 1, "", "variance_scaling"], [365, 2, 1, "", "zeros"]], "jax.numpy": [[384, 6, 1, "", "ComplexWarning"], [385, 2, 1, "", "abs"], [386, 2, 1, "", "absolute"], [387, 2, 1, "", "acos"], [388, 2, 1, "", "acosh"], [389, 2, 1, "", "add"], [390, 2, 1, "", "all"], [391, 2, 1, "", "allclose"], [392, 2, 1, "", "amax"], [393, 2, 1, "", "amin"], [394, 2, 1, "", "angle"], [395, 2, 1, "", "any"], [396, 2, 1, "", "append"], [397, 2, 1, "", "apply_along_axis"], [398, 2, 1, "", "apply_over_axes"], [399, 2, 1, "", "arange"], [400, 2, 1, "", "arccos"], [401, 2, 1, "", "arccosh"], [402, 2, 1, "", "arcsin"], [403, 2, 1, "", "arcsinh"], [404, 2, 1, "", "arctan"], [405, 2, 1, "", "arctan2"], [406, 2, 1, "", "arctanh"], [407, 2, 1, "", "argmax"], [408, 2, 1, "", "argmin"], [409, 2, 1, "", "argpartition"], [410, 2, 1, "", "argsort"], [411, 2, 1, "", "argwhere"], [412, 2, 1, "", "around"], [413, 2, 1, "", "array"], [414, 2, 1, "", "array_equal"], [415, 2, 1, "", "array_equiv"], [416, 2, 1, "", "array_repr"], [417, 2, 1, "", "array_split"], [418, 2, 1, "", "array_str"], [419, 2, 1, "", "asarray"], [420, 2, 1, "", "asin"], [421, 2, 1, "", "asinh"], [422, 2, 1, "", "astype"], [423, 2, 1, "", "atan"], [424, 2, 1, "", "atan2"], [425, 2, 1, "", "atanh"], [426, 2, 1, "", "atleast_1d"], [427, 2, 1, "", "atleast_2d"], [428, 2, 1, "", "atleast_3d"], [429, 2, 1, "", "average"], [430, 2, 1, "", "bartlett"], [431, 2, 1, "", "bincount"], [432, 2, 1, "", "bitwise_and"], [433, 2, 1, "", "bitwise_count"], [434, 2, 1, "", "bitwise_invert"], [435, 2, 1, "", "bitwise_left_shift"], [436, 2, 1, "", "bitwise_not"], [437, 2, 1, "", "bitwise_or"], [438, 2, 1, "", "bitwise_right_shift"], [439, 2, 1, "", "bitwise_xor"], [440, 2, 1, "", "blackman"], [441, 2, 1, "", "block"], [442, 0, 1, "", "bool_"], [443, 2, 1, "", "broadcast_arrays"], [444, 2, 1, "", "broadcast_shapes"], [445, 2, 1, "", "broadcast_to"], [446, 3, 1, "", "c_"], [447, 2, 1, "", "can_cast"], [448, 2, 1, "", "cbrt"], [449, 5, 1, "", "cdouble"], [450, 2, 1, "", "ceil"], [451, 0, 1, "", "character"], [452, 2, 1, "", "choose"], [453, 2, 1, "", "clip"], [454, 2, 1, "", "column_stack"], [455, 0, 1, "", "complex128"], [456, 0, 1, "", "complex64"], [457, 5, 1, "", "complex_"], [458, 0, 1, "", "complexfloating"], [459, 2, 1, "", "compress"], [460, 2, 1, "", "concat"], [461, 2, 1, "", "concatenate"], [462, 2, 1, "", "conj"], [463, 2, 1, "", "conjugate"], [464, 2, 1, "", "convolve"], [465, 2, 1, "", "copy"], [466, 2, 1, "", "copysign"], [467, 2, 1, "", "corrcoef"], [468, 2, 1, "", "correlate"], [469, 2, 1, "", "cos"], [470, 2, 1, "", "cosh"], [471, 2, 1, "", "count_nonzero"], [472, 2, 1, "", "cov"], [473, 2, 1, "", "cross"], [474, 5, 1, "", "csingle"], [475, 2, 1, "", "cumprod"], [476, 2, 1, "", "cumsum"], [477, 2, 1, "", "cumulative_sum"], [478, 2, 1, "", "deg2rad"], [479, 2, 1, "", "degrees"], [480, 2, 1, "", "delete"], [481, 2, 1, "", "diag"], [482, 2, 1, "", "diag_indices"], [483, 2, 1, "", "diag_indices_from"], [484, 2, 1, "", "diagflat"], [485, 2, 1, "", "diagonal"], [486, 2, 1, "", "diff"], [487, 2, 1, "", "digitize"], [488, 2, 1, "", "divide"], [489, 2, 1, "", "divmod"], [490, 2, 1, "", "dot"], [491, 5, 1, "", "double"], [492, 2, 1, "", "dsplit"], [493, 2, 1, "", "dstack"], [494, 0, 1, "", "dtype"], [495, 2, 1, "", "ediff1d"], [496, 2, 1, "", "einsum"], [497, 2, 1, "", "einsum_path"], [498, 2, 1, "", "empty"], [499, 2, 1, "", "empty_like"], [500, 2, 1, "", "equal"], [501, 2, 1, "", "exp"], [502, 2, 1, "", "exp2"], [503, 2, 1, "", "expand_dims"], [504, 2, 1, "", "expm1"], [505, 2, 1, "", "extract"], [506, 2, 1, "", "eye"], [507, 2, 1, "", "fabs"], [1170, 4, 0, "-", "fft"], [526, 2, 1, "", "fill_diagonal"], [527, 0, 1, "", "finfo"], [528, 2, 1, "", "fix"], [529, 2, 1, "", "flatnonzero"], [530, 0, 1, "", "flexible"], [531, 2, 1, "", "flip"], [532, 2, 1, "", "fliplr"], [533, 2, 1, "", "flipud"], [534, 0, 1, "", "float16"], [535, 0, 1, "", "float32"], [536, 0, 1, "", "float64"], [537, 5, 1, "", "float_"], [538, 2, 1, "", "float_power"], [539, 0, 1, "", "floating"], [540, 2, 1, "", "floor"], [541, 2, 1, "", "floor_divide"], [542, 2, 1, "", "fmax"], [543, 2, 1, "", "fmin"], [544, 2, 1, "", "fmod"], [545, 2, 1, "", "frexp"], [546, 2, 1, "", "from_dlpack"], [547, 2, 1, "", "frombuffer"], [548, 2, 1, "", "fromfile"], [549, 2, 1, "", "fromfunction"], [550, 2, 1, "", "fromiter"], [551, 2, 1, "", "frompyfunc"], [552, 2, 1, "", "fromstring"], [553, 2, 1, "", "full"], [554, 2, 1, "", "full_like"], [555, 2, 1, "", "gcd"], [556, 0, 1, "", "generic"], [557, 2, 1, "", "geomspace"], [558, 2, 1, "", "get_printoptions"], [559, 2, 1, "", "gradient"], [560, 2, 1, "", "greater"], [561, 2, 1, "", "greater_equal"], [562, 2, 1, "", "hamming"], [563, 2, 1, "", "hanning"], [564, 2, 1, "", "heaviside"], [565, 2, 1, "", "histogram"], [566, 2, 1, "", "histogram2d"], [567, 2, 1, "", "histogram_bin_edges"], [568, 2, 1, "", "histogramdd"], [569, 2, 1, "", "hsplit"], [570, 2, 1, "", "hstack"], [571, 2, 1, "", "hypot"], [572, 3, 1, "", "i0"], [573, 2, 1, "", "identity"], [574, 0, 1, "", "iinfo"], [575, 2, 1, "", "imag"], [576, 3, 1, "", "index_exp"], [577, 2, 1, "", "indices"], [578, 0, 1, "", "inexact"], [579, 2, 1, "", "inner"], [580, 2, 1, "", "insert"], [581, 0, 1, "", "int16"], [582, 0, 1, "", "int32"], [583, 0, 1, "", "int64"], [584, 0, 1, "", "int8"], [585, 5, 1, "", "int_"], [586, 0, 1, "", "integer"], [587, 2, 1, "", "interp"], [588, 2, 1, "", "intersect1d"], [589, 2, 1, "", "invert"], [590, 2, 1, "", "isclose"], [591, 2, 1, "", "iscomplex"], [592, 2, 1, "", "iscomplexobj"], [593, 2, 1, "", "isdtype"], [594, 2, 1, "", "isfinite"], [595, 2, 1, "", "isin"], [596, 2, 1, "", "isinf"], [597, 2, 1, "", "isnan"], [598, 2, 1, "", "isneginf"], [599, 2, 1, "", "isposinf"], [600, 2, 1, "", "isreal"], [601, 2, 1, "", "isrealobj"], [602, 2, 1, "", "isscalar"], [603, 2, 1, "", "issubdtype"], [604, 2, 1, "", "iterable"], [605, 2, 1, "", "ix_"], [606, 2, 1, "", "kaiser"], [607, 2, 1, "", "kron"], [608, 2, 1, "", "lcm"], [609, 2, 1, "", "ldexp"], [610, 2, 1, "", "left_shift"], [611, 2, 1, "", "less"], [612, 2, 1, "", "less_equal"], [613, 2, 1, "", "lexsort"], [1170, 4, 0, "-", "linalg"], [644, 2, 1, "", "linspace"], [645, 2, 1, "", "load"], [646, 2, 1, "", "log"], [647, 2, 1, "", "log10"], [648, 2, 1, "", "log1p"], [649, 2, 1, "", "log2"], [650, 3, 1, "", "logaddexp"], [651, 3, 1, "", "logaddexp2"], [652, 2, 1, "", "logical_and"], [653, 2, 1, "", "logical_not"], [654, 2, 1, "", "logical_or"], [655, 2, 1, "", "logical_xor"], [656, 2, 1, "", "logspace"], [657, 2, 1, "", "mask_indices"], [658, 2, 1, "", "matmul"], [659, 2, 1, "", "matrix_transpose"], [660, 2, 1, "", "max"], [661, 2, 1, "", "maximum"], [662, 2, 1, "", "mean"], [663, 2, 1, "", "median"], [664, 2, 1, "", "meshgrid"], [665, 3, 1, "", "mgrid"], [666, 2, 1, "", "min"], [667, 2, 1, "", "minimum"], [668, 2, 1, "", "mod"], [669, 2, 1, "", "modf"], [670, 2, 1, "", "moveaxis"], [671, 2, 1, "", "multiply"], [672, 2, 1, "", "nan_to_num"], [673, 2, 1, "", "nanargmax"], [674, 2, 1, "", "nanargmin"], [675, 2, 1, "", "nancumprod"], [676, 2, 1, "", "nancumsum"], [677, 2, 1, "", "nanmax"], [678, 2, 1, "", "nanmean"], [679, 2, 1, "", "nanmedian"], [680, 2, 1, "", "nanmin"], [681, 2, 1, "", "nanpercentile"], [682, 2, 1, "", "nanprod"], [683, 2, 1, "", "nanquantile"], [684, 2, 1, "", "nanstd"], [685, 2, 1, "", "nansum"], [686, 2, 1, "", "nanvar"], [687, 5, 1, "", "ndarray"], [689, 2, 1, "", "ndim"], [690, 2, 1, "", "negative"], [691, 2, 1, "", "nextafter"], [692, 2, 1, "", "nonzero"], [693, 2, 1, "", "not_equal"], [694, 0, 1, "", "number"], [695, 0, 1, "", "object_"], [696, 3, 1, "", "ogrid"], [697, 2, 1, "", "ones"], [698, 2, 1, "", "ones_like"], [699, 2, 1, "", "outer"], [700, 2, 1, "", "packbits"], [701, 2, 1, "", "pad"], [702, 2, 1, "", "partition"], [703, 2, 1, "", "percentile"], [704, 2, 1, "", "permute_dims"], [705, 2, 1, "", "piecewise"], [706, 2, 1, "", "place"], [707, 2, 1, "", "poly"], [708, 2, 1, "", "polyadd"], [709, 2, 1, "", "polyder"], [710, 2, 1, "", "polydiv"], [711, 2, 1, "", "polyfit"], [712, 2, 1, "", "polyint"], [713, 2, 1, "", "polymul"], [714, 2, 1, "", "polysub"], [715, 2, 1, "", "polyval"], [716, 2, 1, "", "positive"], [717, 2, 1, "", "pow"], [718, 2, 1, "", "power"], [719, 2, 1, "", "printoptions"], [720, 2, 1, "", "prod"], [721, 2, 1, "", "promote_types"], [722, 2, 1, "", "ptp"], [723, 2, 1, "", "put"], [724, 2, 1, "", "quantile"], [725, 3, 1, "", "r_"], [726, 2, 1, "", "rad2deg"], [727, 2, 1, "", "radians"], [728, 2, 1, "", "ravel"], [729, 2, 1, "", "ravel_multi_index"], [730, 2, 1, "", "real"], [731, 2, 1, "", "reciprocal"], [732, 2, 1, "", "remainder"], [733, 2, 1, "", "repeat"], [734, 2, 1, "", "reshape"], [735, 2, 1, "", "resize"], [736, 2, 1, "", "result_type"], [737, 2, 1, "", "right_shift"], [738, 2, 1, "", "rint"], [739, 2, 1, "", "roll"], [740, 2, 1, "", "rollaxis"], [741, 2, 1, "", "roots"], [742, 2, 1, "", "rot90"], [743, 2, 1, "", "round"], [744, 2, 1, "", "round_"], [745, 3, 1, "", "s_"], [746, 2, 1, "", "save"], [747, 2, 1, "", "savez"], [748, 2, 1, "", "searchsorted"], [749, 2, 1, "", "select"], [750, 2, 1, "", "set_printoptions"], [751, 2, 1, "", "setdiff1d"], [752, 2, 1, "", "setxor1d"], [753, 2, 1, "", "shape"], [754, 2, 1, "", "sign"], [755, 2, 1, "", "signbit"], [756, 0, 1, "", "signedinteger"], [757, 2, 1, "", "sin"], [758, 2, 1, "", "sinc"], [759, 5, 1, "", "single"], [760, 2, 1, "", "sinh"], [761, 2, 1, "", "size"], [762, 2, 1, "", "sort"], [763, 2, 1, "", "sort_complex"], [764, 2, 1, "", "split"], [765, 2, 1, "", "sqrt"], [766, 2, 1, "", "square"], [767, 2, 1, "", "squeeze"], [768, 2, 1, "", "stack"], [769, 2, 1, "", "std"], [770, 2, 1, "", "subtract"], [771, 2, 1, "", "sum"], [772, 2, 1, "", "swapaxes"], [773, 2, 1, "", "take"], [774, 2, 1, "", "take_along_axis"], [775, 2, 1, "", "tan"], [776, 2, 1, "", "tanh"], [777, 2, 1, "", "tensordot"], [778, 2, 1, "", "tile"], [779, 2, 1, "", "trace"], [780, 2, 1, "", "transpose"], [781, 2, 1, "", "trapezoid"], [782, 2, 1, "", "tri"], [783, 2, 1, "", "tril"], [784, 2, 1, "", "tril_indices"], [785, 2, 1, "", "tril_indices_from"], [786, 2, 1, "", "trim_zeros"], [787, 2, 1, "", "triu"], [788, 2, 1, "", "triu_indices"], [789, 2, 1, "", "triu_indices_from"], [790, 2, 1, "", "true_divide"], [791, 2, 1, "", "trunc"], [792, 0, 1, "", "ufunc"], [793, 5, 1, "", "uint"], [794, 0, 1, "", "uint16"], [795, 0, 1, "", "uint32"], [796, 0, 1, "", "uint64"], [797, 0, 1, "", "uint8"], [798, 2, 1, "", "union1d"], [799, 2, 1, "", "unique"], [800, 2, 1, "", "unique_all"], [801, 2, 1, "", "unique_counts"], [802, 2, 1, "", "unique_inverse"], [803, 2, 1, "", "unique_values"], [804, 2, 1, "", "unpackbits"], [805, 2, 1, "", "unravel_index"], [806, 0, 1, "", "unsignedinteger"], [807, 2, 1, "", "unstack"], [808, 2, 1, "", "unwrap"], [809, 2, 1, "", "vander"], [810, 2, 1, "", "var"], [811, 2, 1, "", "vdot"], [812, 2, 1, "", "vecdot"], [813, 2, 1, "", "vectorize"], [814, 2, 1, "", "vsplit"], [815, 2, 1, "", "vstack"], [816, 2, 1, "", "where"], [817, 2, 1, "", "zeros"], [818, 2, 1, "", "zeros_like"]], "jax.numpy.bool_": [[442, 1, 1, "", "__init__"]], "jax.numpy.character": [[451, 1, 1, "", "__init__"]], "jax.numpy.complex128": [[455, 1, 1, "", "__init__"]], "jax.numpy.complex64": [[456, 1, 1, "", "__init__"]], "jax.numpy.complexfloating": [[458, 1, 1, "", "__init__"]], "jax.numpy.dtype": [[494, 1, 1, "", "__init__"]], "jax.numpy.fft": [[508, 2, 1, "", "fft"], [509, 2, 1, "", "fft2"], [510, 2, 1, "", "fftfreq"], [511, 2, 1, "", "fftn"], [512, 2, 1, "", "fftshift"], [513, 2, 1, "", "hfft"], [514, 2, 1, "", "ifft"], [515, 2, 1, "", "ifft2"], [516, 2, 1, "", "ifftn"], [517, 2, 1, "", "ifftshift"], [518, 2, 1, "", "ihfft"], [519, 2, 1, "", "irfft"], [520, 2, 1, "", "irfft2"], [521, 2, 1, "", "irfftn"], [522, 2, 1, "", "rfft"], [523, 2, 1, "", "rfft2"], [524, 2, 1, "", "rfftfreq"], [525, 2, 1, "", "rfftn"]], "jax.numpy.finfo": [[527, 1, 1, "", "__init__"], [527, 5, 1, "", "bits"], [527, 5, 1, "", "dtype"], [527, 5, 1, "", "eps"], [527, 5, 1, "", "epsneg"], [527, 5, 1, "", "iexp"], [527, 5, 1, "", "machep"], [527, 5, 1, "", "max"], [527, 5, 1, "", "maxexp"], [527, 5, 1, "", "min"], [527, 5, 1, "", "minexp"], [527, 5, 1, "", "negep"], [527, 5, 1, "", "nexp"], [527, 5, 1, "", "nmant"], [527, 5, 1, "", "precision"], [527, 5, 1, "", "resolution"], [527, 5, 1, "", "smallest_normal"], [527, 5, 1, "", "smallest_subnormal"], [527, 5, 1, "", "tiny"]], "jax.numpy.flexible": [[530, 1, 1, "", "__init__"]], "jax.numpy.float16": [[534, 1, 1, "", "__init__"]], "jax.numpy.float32": [[535, 1, 1, "", "__init__"]], "jax.numpy.float64": [[536, 1, 1, "", "__init__"]], "jax.numpy.floating": [[539, 1, 1, "", "__init__"]], "jax.numpy.generic": [[556, 1, 1, "", "__init__"]], "jax.numpy.iinfo": [[574, 1, 1, "", "__init__"]], "jax.numpy.inexact": [[578, 1, 1, "", "__init__"]], "jax.numpy.int16": [[581, 1, 1, "", "__init__"]], "jax.numpy.int32": [[582, 1, 1, "", "__init__"]], "jax.numpy.int64": [[583, 1, 1, "", "__init__"]], "jax.numpy.int8": [[584, 1, 1, "", "__init__"]], "jax.numpy.integer": [[586, 1, 1, "", "__init__"]], "jax.numpy.linalg": [[614, 2, 1, "", "cholesky"], [615, 2, 1, "", "cond"], [616, 2, 1, "", "cross"], [617, 3, 1, "", "det"], [618, 2, 1, "", "diagonal"], [619, 2, 1, "", "eig"], [620, 2, 1, "", "eigh"], [621, 2, 1, "", "eigvals"], [622, 2, 1, "", "eigvalsh"], [623, 2, 1, "", "inv"], [624, 2, 1, "", "lstsq"], [625, 2, 1, "", "matmul"], [626, 2, 1, "", "matrix_norm"], [627, 2, 1, "", "matrix_power"], [628, 2, 1, "", "matrix_rank"], [629, 2, 1, "", "matrix_transpose"], [630, 2, 1, "", "multi_dot"], [631, 2, 1, "", "norm"], [632, 2, 1, "", "outer"], [633, 3, 1, "", "pinv"], [634, 2, 1, "", "qr"], [635, 2, 1, "", "slogdet"], [636, 2, 1, "", "solve"], [637, 2, 1, "", "svd"], [638, 2, 1, "", "svdvals"], [639, 2, 1, "", "tensordot"], [640, 2, 1, "", "tensorinv"], [641, 2, 1, "", "tensorsolve"], [642, 2, 1, "", "vecdot"], [643, 2, 1, "", "vector_norm"]], "jax.numpy.ndarray": [[688, 7, 1, "", "at"]], "jax.numpy.number": [[694, 1, 1, "", "__init__"]], "jax.numpy.object_": [[695, 1, 1, "", "__init__"]], "jax.numpy.signedinteger": [[756, 1, 1, "", "__init__"]], "jax.numpy.ufunc": [[792, 1, 1, "", "__init__"]], "jax.numpy.uint16": [[794, 1, 1, "", "__init__"]], "jax.numpy.uint32": [[795, 1, 1, "", "__init__"]], "jax.numpy.uint64": [[796, 1, 1, "", "__init__"]], "jax.numpy.uint8": [[797, 1, 1, "", "__init__"]], "jax.numpy.unsignedinteger": [[806, 1, 1, "", "__init__"]], "jax.ops": [[820, 2, 1, "", "segment_max"], [821, 2, 1, "", "segment_min"], [822, 2, 1, "", "segment_prod"], [823, 2, 1, "", "segment_sum"]], "jax.profiler": [[828, 0, 1, "", "StepTraceAnnotation"], [829, 0, 1, "", "TraceAnnotation"], [830, 2, 1, "", "annotate_function"], [831, 2, 1, "", "device_memory_profile"], [832, 2, 1, "", "save_device_memory_profile"], [833, 2, 1, "", "start_server"], [834, 2, 1, "", "start_trace"], [835, 2, 1, "", "stop_trace"], [836, 2, 1, "", "trace"]], "jax.profiler.StepTraceAnnotation": [[828, 1, 1, "", "__init__"]], "jax.profiler.TraceAnnotation": [[829, 1, 1, "", "__init__"]], "jax.random": [[838, 2, 1, "", "PRNGKey"], [839, 2, 1, "", "ball"], [840, 2, 1, "", "bernoulli"], [841, 2, 1, "", "beta"], [842, 2, 1, "", "binomial"], [843, 2, 1, "", "bits"], [844, 2, 1, "", "categorical"], [845, 2, 1, "", "cauchy"], [846, 2, 1, "", "chisquare"], [847, 2, 1, "", "choice"], [848, 2, 1, "", "clone"], [849, 2, 1, "", "dirichlet"], [850, 2, 1, "", "double_sided_maxwell"], [851, 2, 1, "", "exponential"], [852, 2, 1, "", "f"], [853, 2, 1, "", "fold_in"], [854, 2, 1, "", "gamma"], [855, 2, 1, "", "generalized_normal"], [856, 2, 1, "", "geometric"], [857, 2, 1, "", "gumbel"], [858, 2, 1, "", "key"], [859, 2, 1, "", "key_data"], [860, 2, 1, "", "laplace"], [861, 2, 1, "", "loggamma"], [862, 2, 1, "", "logistic"], [863, 2, 1, "", "lognormal"], [864, 2, 1, "", "maxwell"], [865, 2, 1, "", "multivariate_normal"], [866, 2, 1, "", "normal"], [867, 2, 1, "", "orthogonal"], [868, 2, 1, "", "pareto"], [869, 2, 1, "", "permutation"], [870, 2, 1, "", "poisson"], [871, 2, 1, "", "rademacher"], [872, 2, 1, "", "randint"], [873, 2, 1, "", "rayleigh"], [874, 2, 1, "", "split"], [875, 2, 1, "", "t"], [876, 2, 1, "", "triangular"], [877, 2, 1, "", "truncated_normal"], [878, 2, 1, "", "uniform"], [879, 2, 1, "", "wald"], [880, 2, 1, "", "weibull_min"], [881, 2, 1, "", "wrap_key_data"]], "jax.scipy": [[1174, 4, 0, "-", "fft"], [1174, 4, 0, "-", "integrate"], [1174, 4, 0, "-", "linalg"], [1174, 4, 0, "-", "ndimage"], [1174, 4, 0, "-", "optimize"], [1174, 4, 0, "-", "signal"], [1174, 4, 0, "-", "special"], [1174, 4, 0, "-", "stats"]], "jax.scipy.fft": [[882, 2, 1, "", "dct"], [883, 2, 1, "", "dctn"], [884, 2, 1, "", "idct"], [885, 2, 1, "", "idctn"]], "jax.scipy.integrate": [[886, 2, 1, "", "trapezoid"]], "jax.scipy.linalg": [[887, 2, 1, "", "block_diag"], [888, 2, 1, "", "cho_factor"], [889, 2, 1, "", "cho_solve"], [890, 2, 1, "", "cholesky"], [891, 2, 1, "", "det"], [892, 2, 1, "", "eigh"], [893, 2, 1, "", "eigh_tridiagonal"], [894, 2, 1, "", "expm"], [895, 2, 1, "", "expm_frechet"], [896, 2, 1, "", "funm"], [897, 2, 1, "", "hessenberg"], [898, 2, 1, "", "hilbert"], [899, 2, 1, "", "inv"], [900, 2, 1, "", "lu"], [901, 2, 1, "", "lu_factor"], [902, 2, 1, "", "lu_solve"], [903, 2, 1, "", "polar"], [904, 2, 1, "", "qr"], [905, 2, 1, "", "rsf2csf"], [906, 2, 1, "", "schur"], [907, 2, 1, "", "solve"], [908, 2, 1, "", "solve_triangular"], [909, 2, 1, "", "sqrtm"], [910, 2, 1, "", "svd"], [911, 2, 1, "", "toeplitz"]], "jax.scipy.ndimage": [[912, 2, 1, "", "map_coordinates"]], "jax.scipy.optimize": [[913, 0, 1, "", "OptimizeResults"], [914, 2, 1, "", "minimize"]], "jax.scipy.optimize.OptimizeResults": [[913, 1, 1, "", "__init__"]], "jax.scipy.signal": [[915, 2, 1, "", "convolve"], [916, 2, 1, "", "convolve2d"], [917, 2, 1, "", "correlate"], [918, 2, 1, "", "correlate2d"], [919, 2, 1, "", "csd"], [920, 2, 1, "", "fftconvolve"], [921, 2, 1, "", "istft"], [922, 2, 1, "", "stft"], [923, 2, 1, "", "welch"]], "jax.scipy.sparse": [[1174, 4, 0, "-", "linalg"]], "jax.scipy.sparse.linalg": [[924, 2, 1, "", "bicgstab"], [925, 2, 1, "", "cg"], [926, 2, 1, "", "gmres"]], "jax.scipy.spatial": [[1174, 4, 0, "-", "transform"]], "jax.scipy.spatial.transform": [[927, 0, 1, "", "Rotation"], [928, 0, 1, "", "Slerp"]], "jax.scipy.spatial.transform.Rotation": [[927, 1, 1, "", "__init__"]], "jax.scipy.spatial.transform.Slerp": [[928, 1, 1, "", "__init__"]], "jax.scipy.special": [[929, 2, 1, "", "bernoulli"], [930, 2, 1, "", "beta"], [931, 2, 1, "", "betainc"], [932, 2, 1, "", "betaln"], [933, 2, 1, "", "digamma"], [934, 2, 1, "", "entr"], [935, 2, 1, "", "erf"], [936, 2, 1, "", "erfc"], [937, 2, 1, "", "erfinv"], [938, 2, 1, "", "exp1"], [939, 3, 1, "", "expi"], [940, 2, 1, "", "expit"], [941, 3, 1, "", "expn"], [942, 2, 1, "", "factorial"], [943, 2, 1, "", "gamma"], [944, 2, 1, "", "gammainc"], [945, 2, 1, "", "gammaincc"], [946, 2, 1, "", "gammaln"], [947, 3, 1, "", "hyp1f1"], [948, 2, 1, "", "i0"], [949, 2, 1, "", "i0e"], [950, 2, 1, "", "i1"], [951, 2, 1, "", "i1e"], [952, 2, 1, "", "kl_div"], [953, 3, 1, "", "log_ndtr"], [954, 3, 1, "", "logit"], [955, 2, 1, "", "logsumexp"], [956, 2, 1, "", "lpmn"], [957, 2, 1, "", "lpmn_values"], [958, 2, 1, "", "multigammaln"], [959, 2, 1, "", "ndtr"], [960, 2, 1, "", "ndtri"], [961, 3, 1, "", "poch"], [962, 2, 1, "", "polygamma"], [963, 2, 1, "", "rel_entr"], [964, 2, 1, "", "spence"], [965, 2, 1, "", "sph_harm"], [966, 3, 1, "", "xlog1py"], [967, 3, 1, "", "xlogy"], [968, 3, 1, "", "zeta"]], "jax.scipy.stats": [[1174, 4, 0, "-", "bernoulli"], [1174, 4, 0, "-", "beta"], [1174, 4, 0, "-", "betabinom"], [1174, 4, 0, "-", "binom"], [1174, 4, 0, "-", "cauchy"], [1174, 4, 0, "-", "chi2"], [1174, 4, 0, "-", "dirichlet"], [1174, 4, 0, "-", "expon"], [1174, 4, 0, "-", "gamma"], [1007, 0, 1, "", "gaussian_kde"], [1174, 4, 0, "-", "gennorm"], [1174, 4, 0, "-", "geom"], [1174, 4, 0, "-", "laplace"], [1174, 4, 0, "-", "logistic"], [1029, 2, 1, "", "mode"], [1174, 4, 0, "-", "multinomial"], [1174, 4, 0, "-", "multivariate_normal"], [1174, 4, 0, "-", "nbinom"], [1174, 4, 0, "-", "norm"], [1174, 4, 0, "-", "pareto"], [1174, 4, 0, "-", "poisson"], [1048, 2, 1, "", "rankdata"], [1049, 2, 1, "", "sem"], [1174, 4, 0, "-", "t"], [1174, 4, 0, "-", "truncnorm"], [1174, 4, 0, "-", "uniform"], [1174, 4, 0, "-", "vonmises"], [1174, 4, 0, "-", "wrapcauchy"]], "jax.scipy.stats.bernoulli": [[969, 2, 1, "", "cdf"], [970, 2, 1, "", "logpmf"], [971, 2, 1, "", "pmf"], [972, 2, 1, "", "ppf"]], "jax.scipy.stats.beta": [[973, 2, 1, "", "cdf"], [974, 2, 1, "", "logcdf"], [975, 2, 1, "", "logpdf"], [976, 2, 1, "", "logsf"], [977, 2, 1, "", "pdf"], [978, 2, 1, "", "sf"]], "jax.scipy.stats.betabinom": [[979, 2, 1, "", "logpmf"], [980, 2, 1, "", "pmf"]], "jax.scipy.stats.binom": [[981, 2, 1, "", "logpmf"], [982, 2, 1, "", "pmf"]], "jax.scipy.stats.cauchy": [[983, 2, 1, "", "cdf"], [984, 2, 1, "", "isf"], [985, 2, 1, "", "logcdf"], [986, 2, 1, "", "logpdf"], [987, 2, 1, "", "logsf"], [988, 2, 1, "", "pdf"], [989, 2, 1, "", "ppf"], [990, 2, 1, "", "sf"]], "jax.scipy.stats.chi2": [[991, 2, 1, "", "cdf"], [992, 2, 1, "", "logcdf"], [993, 2, 1, "", "logpdf"], [994, 2, 1, "", "logsf"], [995, 2, 1, "", "pdf"], [996, 2, 1, "", "sf"]], "jax.scipy.stats.dirichlet": [[997, 2, 1, "", "logpdf"], [998, 2, 1, "", "pdf"]], "jax.scipy.stats.expon": [[999, 2, 1, "", "logpdf"], [1000, 2, 1, "", "pdf"]], "jax.scipy.stats.gamma": [[1001, 2, 1, "", "cdf"], [1002, 2, 1, "", "logcdf"], [1003, 2, 1, "", "logpdf"], [1004, 2, 1, "", "logsf"], [1005, 2, 1, "", "pdf"], [1006, 2, 1, "", "sf"]], "jax.scipy.stats.gaussian_kde": [[1007, 1, 1, "", "__init__"], [1008, 1, 1, "", "evaluate"], [1009, 1, 1, "", "integrate_box_1d"], [1010, 1, 1, "", "integrate_gaussian"], [1011, 1, 1, "", "integrate_kde"], [1012, 1, 1, "", "logpdf"], [1013, 1, 1, "", "pdf"], [1014, 1, 1, "", "resample"]], "jax.scipy.stats.gennorm": [[1015, 2, 1, "", "cdf"], [1016, 2, 1, "", "logpdf"], [1017, 2, 1, "", "pdf"]], "jax.scipy.stats.geom": [[1018, 2, 1, "", "logpmf"], [1019, 2, 1, "", "pmf"]], "jax.scipy.stats.laplace": [[1020, 2, 1, "", "cdf"], [1021, 2, 1, "", "logpdf"], [1022, 2, 1, "", "pdf"]], "jax.scipy.stats.logistic": [[1023, 2, 1, "", "cdf"], [1024, 2, 1, "", "isf"], [1025, 2, 1, "", "logpdf"], [1026, 2, 1, "", "pdf"], [1027, 2, 1, "", "ppf"], [1028, 2, 1, "", "sf"]], "jax.scipy.stats.multinomial": [[1030, 2, 1, "", "logpmf"], [1031, 2, 1, "", "pmf"]], "jax.scipy.stats.multivariate_normal": [[1032, 2, 1, "", "logpdf"], [1033, 2, 1, "", "pdf"]], "jax.scipy.stats.nbinom": [[1034, 2, 1, "", "logpmf"], [1035, 2, 1, "", "pmf"]], "jax.scipy.stats.norm": [[1036, 2, 1, "", "cdf"], [1037, 2, 1, "", "isf"], [1038, 2, 1, "", "logcdf"], [1039, 2, 1, "", "logpdf"], [1040, 2, 1, "", "logsf"], [1041, 2, 1, "", "pdf"], [1042, 2, 1, "", "ppf"], [1043, 2, 1, "", "sf"]], "jax.scipy.stats.pareto": [[1044, 2, 1, "", "logpdf"], [1045, 2, 1, "", "pdf"]], "jax.scipy.stats.poisson": [[1046, 2, 1, "", "logpmf"], [1047, 2, 1, "", "pmf"]], "jax.scipy.stats.t": [[1050, 2, 1, "", "logpdf"], [1051, 2, 1, "", "pdf"]], "jax.scipy.stats.truncnorm": [[1052, 2, 1, "", "cdf"], [1053, 2, 1, "", "logcdf"], [1054, 2, 1, "", "logpdf"], [1055, 2, 1, "", "logsf"], [1056, 2, 1, "", "pdf"], [1057, 2, 1, "", "sf"]], "jax.scipy.stats.uniform": [[1058, 2, 1, "", "cdf"], [1059, 2, 1, "", "logpdf"], [1060, 2, 1, "", "pdf"], [1061, 2, 1, "", "ppf"]], "jax.scipy.stats.vonmises": [[1062, 2, 1, "", "logpdf"], [1063, 2, 1, "", "pdf"]], "jax.scipy.stats.wrapcauchy": [[1064, 2, 1, "", "logpdf"], [1065, 2, 1, "", "pdf"]], "jax.sharding": [[1175, 0, 1, "", "GSPMDSharding"], [1175, 0, 1, "", "Mesh"], [1175, 0, 1, "", "NamedSharding"], [1175, 0, 1, "", "PartitionSpec"], [1175, 0, 1, "", "PmapSharding"], [1175, 0, 1, "", "PositionalSharding"], [1175, 0, 1, "", "Sharding"], [1175, 0, 1, "", "SingleDeviceSharding"], [1175, 0, 1, "", "XLACompatibleSharding"]], "jax.sharding.GSPMDSharding": [[1175, 7, 1, "", "device_set"], [1175, 1, 1, "", "devices_indices_map"], [1175, 7, 1, "", "is_fully_addressable"], [1175, 7, 1, "", "is_fully_replicated"], [1175, 7, 1, "", "memory_kind"], [1175, 1, 1, "", "with_memory_kind"]], "jax.sharding.NamedSharding": [[1175, 7, 1, "", "addressable_devices"], [1175, 7, 1, "", "device_set"], [1175, 7, 1, "", "is_fully_addressable"], [1175, 7, 1, "", "is_fully_replicated"], [1175, 7, 1, "", "memory_kind"], [1175, 7, 1, "", "mesh"], [1175, 7, 1, "", "spec"], [1175, 1, 1, "", "with_memory_kind"]], "jax.sharding.PmapSharding": [[1175, 1, 1, "", "default"], [1175, 7, 1, "", "device_set"], [1175, 7, 1, "", "devices"], [1175, 1, 1, "", "devices_indices_map"], [1175, 1, 1, "", "is_equivalent_to"], [1175, 7, 1, "", "is_fully_addressable"], [1175, 7, 1, "", "is_fully_replicated"], [1175, 7, 1, "", "memory_kind"], [1175, 1, 1, "", "shard_shape"], [1175, 7, 1, "", "sharding_spec"], [1175, 1, 1, "", "with_memory_kind"]], "jax.sharding.PositionalSharding": [[1175, 7, 1, "", "device_set"], [1175, 7, 1, "", "is_fully_addressable"], [1175, 7, 1, "", "is_fully_replicated"], [1175, 7, 1, "", "memory_kind"], [1175, 1, 1, "", "with_memory_kind"]], "jax.sharding.Sharding": [[1175, 7, 1, "", "addressable_devices"], [1175, 1, 1, "", "addressable_devices_indices_map"], [1175, 7, 1, "", "device_set"], [1175, 1, 1, "", "devices_indices_map"], [1175, 1, 1, "", "is_equivalent_to"], [1175, 7, 1, "", "is_fully_addressable"], [1175, 7, 1, "", "is_fully_replicated"], [1175, 7, 1, "", "memory_kind"], [1175, 1, 1, "", "shard_shape"], [1175, 1, 1, "", "with_memory_kind"]], "jax.sharding.SingleDeviceSharding": [[1175, 7, 1, "", "device_set"], [1175, 1, 1, "", "devices_indices_map"], [1175, 7, 1, "", "is_fully_addressable"], [1175, 7, 1, "", "is_fully_replicated"], [1175, 7, 1, "", "memory_kind"], [1175, 1, 1, "", "with_memory_kind"]], "jax.sharding.XLACompatibleSharding": [[1175, 1, 1, "", "devices_indices_map"], [1175, 1, 1, "", "is_equivalent_to"], [1175, 1, 1, "", "shard_shape"]], "jax.stages": [[1176, 0, 1, "", "Compiled"], [1176, 0, 1, "", "Lowered"], [1176, 0, 1, "", "Wrapped"]], "jax.stages.Compiled": [[1176, 1, 1, "", "__call__"], [1176, 1, 1, "", "as_text"], [1176, 1, 1, "", "cost_analysis"], [1176, 7, 1, "", "in_tree"], [1176, 1, 1, "", "memory_analysis"], [1176, 1, 1, "", "runtime_executable"]], "jax.stages.Lowered": [[1176, 1, 1, "", "as_text"], [1176, 1, 1, "", "compile"], [1176, 1, 1, "", "compiler_ir"], [1176, 1, 1, "", "cost_analysis"], [1176, 7, 1, "", "in_tree"]], "jax.stages.Wrapped": [[1176, 1, 1, "", "__call__"], [1176, 1, 1, "", "lower"]], "jax.tree": [[1067, 2, 1, "", "all"], [1068, 2, 1, "", "flatten"], [1069, 2, 1, "", "leaves"], [1070, 2, 1, "", "map"], [1071, 2, 1, "", "reduce"], [1072, 2, 1, "", "structure"], [1073, 2, 1, "", "transpose"], [1074, 2, 1, "", "unflatten"]], "jax.tree_util": [[1075, 0, 1, "", "Partial"], [1076, 2, 1, "", "all_leaves"], [1077, 2, 1, "", "build_tree"], [1078, 2, 1, "", "keystr"], [1079, 2, 1, "", "register_pytree_node"], [1080, 2, 1, "", "register_pytree_node_class"], [1081, 2, 1, "", "register_pytree_with_keys"], [1082, 2, 1, "", "register_pytree_with_keys_class"], [1083, 2, 1, "", "tree_all"], [1084, 2, 1, "", "tree_flatten"], [1085, 2, 1, "", "tree_flatten_with_path"], [1086, 2, 1, "", "tree_leaves"], [1087, 2, 1, "", "tree_leaves_with_path"], [1088, 2, 1, "", "tree_map"], [1089, 2, 1, "", "tree_map_with_path"], [1090, 2, 1, "", "tree_reduce"], [1091, 2, 1, "", "tree_structure"], [1092, 2, 1, "", "tree_transpose"], [1093, 2, 1, "", "tree_unflatten"], [1094, 2, 1, "", "treedef_children"], [1095, 2, 1, "", "treedef_is_leaf"], [1096, 2, 1, "", "treedef_tuple"]], "jax.tree_util.Partial": [[1075, 1, 1, "", "__init__"]], "jax.typing": [[1097, 3, 1, "", "ArrayLike"], [1098, 3, 1, "", "DTypeLike"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "data", "Python data"], "4": ["py", "module", "Python module"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"], "7": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:data", "4": "py:module", "5": "py:attribute", "6": "py:exception", "7": "py:property"}, "terms": {"": [7, 9, 13, 14, 15, 16, 18, 20, 30, 31, 32, 34, 49, 50, 68, 71, 72, 76, 77, 91, 119, 125, 144, 145, 148, 149, 150, 157, 158, 165, 174, 180, 190, 191, 195, 200, 209, 212, 213, 215, 218, 229, 232, 241, 262, 269, 271, 272, 273, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 312, 319, 324, 325, 333, 339, 340, 351, 359, 362, 363, 391, 411, 413, 414, 419, 430, 434, 436, 446, 465, 471, 473, 494, 495, 509, 510, 511, 515, 516, 520, 521, 523, 524, 525, 526, 527, 529, 562, 563, 567, 571, 572, 576, 589, 590, 603, 624, 628, 631, 637, 640, 668, 681, 683, 692, 701, 703, 710, 711, 714, 720, 721, 724, 725, 732, 736, 745, 750, 751, 755, 771, 777, 778, 798, 799, 805, 813, 820, 821, 822, 823, 824, 844, 852, 875, 883, 885, 894, 909, 910, 912, 914, 919, 921, 922, 923, 924, 925, 926, 947, 957, 964, 965, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1075, 1081, 1085, 1087, 1089, 1099, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1114, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1151, 1153, 1158, 1159, 1166, 1167, 1170, 1172, 1173, 1175, 1176, 1179, 1182, 1183, 1187, 1188, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "0": [0, 7, 9, 13, 21, 25, 32, 35, 38, 43, 49, 55, 56, 67, 68, 69, 71, 75, 77, 78, 80, 92, 103, 104, 107, 110, 111, 114, 115, 118, 119, 120, 121, 122, 125, 144, 145, 147, 148, 149, 150, 151, 157, 158, 159, 160, 165, 169, 171, 188, 195, 196, 197, 203, 204, 205, 206, 207, 209, 214, 215, 216, 217, 218, 219, 238, 247, 257, 268, 271, 272, 273, 278, 279, 280, 281, 289, 293, 303, 307, 310, 311, 312, 317, 319, 332, 333, 338, 339, 340, 343, 344, 345, 346, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 368, 369, 371, 372, 373, 374, 378, 380, 387, 394, 399, 400, 405, 409, 412, 413, 416, 417, 418, 424, 429, 431, 435, 441, 444, 446, 447, 448, 452, 453, 460, 461, 472, 480, 481, 482, 484, 485, 487, 489, 490, 494, 503, 506, 509, 510, 511, 512, 514, 515, 516, 521, 524, 525, 527, 529, 531, 533, 538, 547, 549, 557, 564, 569, 572, 573, 576, 577, 587, 604, 610, 615, 618, 619, 623, 624, 627, 635, 644, 656, 663, 664, 665, 670, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 691, 692, 696, 700, 701, 702, 703, 705, 707, 711, 712, 715, 716, 719, 724, 725, 729, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 753, 754, 758, 761, 764, 768, 769, 771, 772, 774, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 799, 804, 805, 807, 809, 810, 813, 814, 820, 821, 822, 823, 824, 827, 840, 841, 842, 846, 847, 848, 849, 851, 852, 854, 855, 856, 863, 864, 868, 869, 870, 873, 875, 878, 879, 880, 883, 885, 886, 887, 892, 893, 894, 902, 904, 908, 911, 912, 913, 916, 918, 919, 921, 922, 923, 924, 925, 926, 929, 931, 933, 934, 935, 938, 939, 941, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 963, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1075, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1151, 1152, 1153, 1154, 1158, 1159, 1171, 1173, 1175, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1221, 1223, 1224, 1225, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "00": [750, 1128, 1130, 1202, 1236], "000": [0, 1212, 1227, 1238, 1242], "000000e": [1202, 1236], "000001": 416, "0000e": 750, "0001": [1135, 1247], "00021085": [1205, 1227], "00092836": [1205, 1227], "001": 0, "00103524": [1205, 1227], "00140431": [1205, 1227], "00182736": [1205, 1227], "00189771": [1205, 1227], "00194457": [1205, 1227], "00194549560547": 1213, "00263782": [1205, 1227], "0027385": [1208, 1233], "00348343": [1205, 1227], "00365263": [1205, 1227], "004": 0, "00456839": [1205, 1227], "00472531": [1205, 1227], "005": [1136, 1137, 1246], "00544639": [1205, 1227], "0065432": [1205, 1227], "00668421": [1205, 1227], "00684531": [1205, 1227], "007528": 333, "00753": 333, "00816024": 1136, "01": [359, 361, 362, 363, 366, 399, 1128, 1202, 1203, 1209, 1213, 1227, 1236], "0108745": 356, "01172127": [1205, 1227], "01284790039062": 1213, "01320427": [1205, 1227], "0137874289354": 1128, "01406341": [1205, 1227], "01408451": 1136, "0156755j": 1151, "01583708": [1205, 1227], "0164618489928": 1128, "01652764": [1208, 1233], "019437": 1136, "01971436": 1106, "01972961": 1106, "01973": 1106, "02": 1128, "020": 0, "02138912": 1244, "02138914": 1244, "02205": 1213, "02285465": [1205, 1227], "0246326": 1159, "0248291": 1159, "026257": 1201, "0291": 1213, "03": [1128, 1210], "03132951": 1159, "03139788": 1159, "03181": 1106, "03181458": 1106, "03195215": [1205, 1227], "0332246": 1201, "03358557": [1208, 1233], "03384247": [1205, 1227], "034945": [1205, 1227], "03518676757812": 1213, "0353256": [1210, 1242], "03921401": [1205, 1227], "03959271": [1205, 1227], "03999995": 1130, "04": [361, 1128, 1227], "04015916": [1205, 1227], "04097353": [1208, 1233], "04154303": 1136, "04322892": 352, "044715": 345, "04563541": [1205, 1227], "04577465": 1136, "04812629": [1205, 1227], "04838832": 1243, "04838839": 1134, "0485873": [1200, 1227], "04922541": [1205, 1227], "04928625": [1205, 1227], "04959785": 1136, "0499999523162842": 1239, "05": [0, 150, 382, 391, 590, 924, 925, 926, 1128, 1131, 1146, 1210, 1238, 1239, 1242], "05011288": [1205, 1227], "0503650": 839, "0507009873554804934193349852946": 374, "0509028": [1205, 1227], "0519385": [1205, 1230], "05202": 1186, "05356663": 1159, "05359547": 1159, "05389404": 1106, "0539": 1106, "05981757": [1205, 1227], "05981758": [1205, 1227], "06": [121, 1128, 1205, 1210, 1223, 1227, 1230], "06045532226562": 1213, "0613258": 359, "063663": 359, "06447162": [1208, 1233], "06604332": [1208, 1233], "06666667": 824, "067581": 1201, "0682373046875": 1213, "06941223144531": 1213, "07": [0, 1128, 1210], "0705": 120, "070650816": [1205, 1230], "0716349809895": 1128, "07289147": [1205, 1227], "07314599": 1244, "0732192993164": 1213, "073738": 1201, "07458": 120, "0748096": 1201, "07492582": 1136, "07746479": 1136, "07975871": 1136, "07996249": 1242, "08": [391, 590, 1128, 1145, 1205, 1227, 1230], "0818567": 363, "083": 1106, "08300781": 1106, "083253": 1201, "0855657": 356, "08661086": 353, "08804226": 1244, "088388346": [1200, 1227], "08838835": [1200, 1227], "08857603": [1205, 1227], "09": [1106, 1128], "09074721x": 894, "09085776": 1242, "09197998": 1106, "09198": 1106, "09224219304455371": 1107, "09298684448485517": 1199, "09438": 1159, "09554290771484": 1213, "09675598144531": 1213, "09683388": 357, "097791": 1223, "09898177": [1205, 1227], "09983342": 151, "0999999": 1130, "0b00000011": [700, 804], "0d": [750, 767, 1110, 1219], "0j": [754, 1110], "0m": [1107, 1199, 1200, 1201, 1202, 1204, 1205, 1208, 1211, 1212, 1213, 1227, 1231, 1232, 1233, 1236, 1238, 1239, 1247], "0mbf": 1199, "0mc": 1204, "0me": [1200, 1212, 1227], "0mj": 1239, "0mk": 1239, "0mnan": 1199, "0mool": 1239, "0th": 1110, "0x": [1202, 1236], "0x121ae9ac0": 1135, "0x1233f9910": 1135, "0x5c205abc4130": 1202, "0x5c205abc5dc0": 1202, "0x5c205abc6990": 1202, "0x5c205c390250": 1202, "0x5c205c47c210": 1202, "0x5c205c4a8d90": 1202, "0x5c205c500610": 1202, "0x5c205c5a75f0": 1202, "0x5c205c6f0530": 1202, "0x5c205c7480f0": 1202, "0x5c205c7a7fe0": 1202, "0x5ed153ba0130": 1236, "0x5ed153ba1dc0": 1236, "0x5ed153ba2990": 1236, "0x5ed1546b5d30": 1236, "0x5ed1552e1aa0": 1236, "0x5ed155370c50": 1236, "0x5ed1555cb6f0": 1236, "0x5ed15565fd10": 1236, "0x5ed1556f0b90": 1236, "0x5ed15575f020": 1236, "0x5ed155810dd0": 1236, "0x731361564f40": 1234, "0x73b47a2fa5d0": 1236, "0x73b47a326ff0": 1236, "0x73b47a32b1d0": 1236, "0x73b47a338bf0": 1236, "0x73b47a338c50": 1236, "0x73b47a33a9b0": 1236, "0x73b47a33ad70": 1236, "0x73b47a33bf50": 1236, "0x73b47a340e90": 1236, "0x73b47a3411f0": 1236, "0x73b47a341230": 1236, "0x73b47a341270": 1236, "0x73b47a3482f0": 1236, "0x73b4801b2cb0": 1236, "0x73b4801b31f0": 1236, "0x73b4801bc6b0": 1236, "0x73b4801bc730": 1236, "0x73b4801bc770": 1236, "0x73b4801bca10": 1236, "0x73b4801be490": 1236, "0x73b4801be550": 1236, "0x73b4801beb90": 1236, "0x73b48243bc90": 1236, "0x73b482450880": 1236, "0x73b4824788f0": 1236, "0x73b482479170": 1236, "0x73b4824a1df0": 1236, "0x73b4824a26b0": 1236, "0x73b4824af630": 1236, "0x73b4824af6b0": 1236, "0x73b4824c5330": 1236, "0x73b4824c6e30": 1236, "0x73b482561a70": 1236, "0x73b48256e5c0": 1236, "0x73b482571a70": 1236, "0x73b482594be0": 1236, "0x73b4826465b0": 1236, "0x73b4827b23a0": 1236, "0x73b490441f30": 1236, "0x73b493424810": 1236, "0x73b4938f8250": 1236, "0x73b4938f8510": 1236, "0x73b4938f9310": 1236, "0x73b4938fa5f0": 1236, "0x73b4938fa7b0": 1236, "0x73b4938fa990": 1236, "0x73b4938fe030": 1236, "0x73b4938fe0f0": 1236, "0x73b4938fe170": 1236, "0x73b4938fe650": 1236, "0x73b4938ff3b0": 1236, "0x73b4e3ff9970": 1236, "0x73b4e3ff9df0": 1236, "0x73b4fca72890": 1236, "0x73b5067a8630": 1236, "0x7cf4186e8070": 1202, "0x7cf4186e8450": 1202, "0x7cf4186e91f0": 1202, "0x7cf4186e9f50": 1202, "0x7cf4186ea310": 1202, "0x7cf4186ea710": 1202, "0x7cf418716810": 1202, "0x7cf41874b290": 1202, "0x7cf4187593b0": 1202, "0x7cf4187599d0": 1202, "0x7cf41875ab70": 1202, "0x7cf41875acf0": 1202, "0x7cf41875ae70": 1202, "0x7cf41875bc50": 1202, "0x7cf418760150": 1202, "0x7cf418761190": 1202, "0x7cf4187614b0": 1202, "0x7cf4187614f0": 1202, "0x7cf418761530": 1202, "0x7cf418762650": 1202, "0x7cf41876c3b0": 1202, "0x7cf4288673d0": 1202, "0x7cf428881200": 1202, "0x7cf4288a7af0": 1202, "0x7cf4288a7bf0": 1202, "0x7cf4288b9970": 1202, "0x7cf4288d24f0": 1202, "0x7cf4288d26b0": 1202, "0x7cf4288e3a30": 1202, "0x7cf4288efd30": 1202, "0x7cf4288f5330": 1202, "0x7cf4288f6e30": 1202, "0x7cf428991a70": 1202, "0x7cf42899a5c0": 1202, "0x7cf42899da70": 1202, "0x7cf4289c4be0": 1202, "0x7cf433f765b0": 1202, "0x7cf4380ee3a0": 1202, "0x7cf438656630": 1202, "0x7cf4397298f0": 1202, "0x7cf48851e150": 1202, "0x7cf48851e750": 1202, "0x7cf4885362d0": 1202, "0x7cf488536e10": 1202, "0x7cf488537d30": 1202, "0x7cf488537d70": 1202, "0x7cf488537db0": 1202, "0x7cf488538770": 1202, "0x7cf488539770": 1202, "0x7cf4885397b0": 1202, "0x7cf488539ad0": 1202, "0x7cf48853b6b0": 1202, "0x7cf48853bb90": 1202, "0x7cf492eca890": 1202, "0x7cf4acb9c630": 1202, "0x7d0e908ec440": 1247, "0x7d0e908ed360": 1247, "0x7d0e908ee110": 1247, "0x7f5e469b1700": 1206, "0x7f7dd4125890": 1122, "0x7fada8e9e9d0": 1135, "0x7ff99e398040": 0, "0x7ff99e3980d0": 0, "0x7ff99e398550": 0, "0x7ff99e3985e0": 0, "0xffffffff": 1110, "1": [0, 7, 13, 21, 29, 31, 32, 34, 35, 38, 50, 55, 56, 71, 77, 80, 100, 103, 104, 110, 111, 114, 115, 120, 121, 122, 144, 145, 147, 148, 149, 150, 151, 157, 158, 159, 160, 165, 169, 172, 174, 182, 195, 196, 197, 209, 211, 212, 214, 215, 216, 217, 218, 219, 222, 223, 225, 226, 231, 232, 238, 245, 247, 251, 255, 257, 259, 260, 268, 271, 272, 273, 279, 280, 281, 282, 284, 288, 289, 294, 295, 307, 310, 311, 312, 313, 316, 319, 332, 339, 340, 343, 344, 345, 346, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 367, 368, 369, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 387, 388, 392, 393, 394, 397, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 416, 417, 418, 421, 424, 425, 426, 428, 429, 430, 431, 434, 436, 441, 443, 444, 446, 447, 448, 452, 453, 454, 459, 464, 467, 468, 470, 472, 473, 476, 480, 481, 482, 485, 486, 487, 489, 490, 493, 494, 495, 501, 503, 504, 505, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 531, 532, 533, 538, 545, 546, 547, 549, 552, 557, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 576, 577, 579, 587, 589, 604, 605, 606, 613, 615, 616, 620, 624, 628, 630, 631, 633, 634, 635, 636, 642, 644, 645, 646, 647, 648, 656, 658, 660, 663, 664, 665, 666, 670, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 685, 686, 688, 689, 691, 692, 696, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 728, 731, 734, 740, 741, 742, 745, 746, 747, 748, 750, 753, 754, 758, 760, 761, 762, 764, 767, 768, 772, 773, 774, 776, 778, 779, 780, 781, 782, 786, 799, 804, 805, 808, 809, 811, 812, 813, 815, 820, 821, 822, 823, 824, 828, 840, 841, 842, 844, 845, 846, 847, 849, 852, 854, 856, 860, 861, 862, 863, 865, 866, 868, 871, 875, 878, 879, 880, 882, 883, 884, 885, 886, 891, 892, 893, 894, 895, 896, 898, 902, 903, 908, 909, 910, 911, 912, 913, 914, 919, 921, 922, 923, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 961, 963, 964, 965, 973, 974, 975, 976, 977, 978, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1081, 1084, 1086, 1088, 1090, 1091, 1092, 1093, 1099, 1100, 1101, 1102, 1104, 1106, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1151, 1152, 1158, 1159, 1165, 1166, 1173, 1180, 1182, 1183, 1184, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "10": [0, 35, 71, 120, 150, 157, 159, 160, 214, 215, 216, 217, 238, 279, 280, 310, 311, 363, 448, 487, 494, 527, 565, 566, 567, 568, 633, 647, 656, 682, 688, 728, 740, 746, 747, 750, 768, 772, 882, 894, 921, 922, 934, 952, 953, 963, 965, 1104, 1107, 1119, 1120, 1121, 1122, 1128, 1130, 1131, 1133, 1136, 1158, 1179, 1185, 1187, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1221, 1222, 1223, 1227, 1230, 1233, 1234, 1236, 1238, 1242, 1244, 1247], "100": [49, 120, 123, 447, 681, 703, 1074, 1093, 1102, 1114, 1116, 1122, 1130, 1131, 1133, 1136, 1173, 1193, 1194, 1200, 1207, 1208, 1210, 1213, 1227, 1233, 1238, 1242], "1000": [49, 50, 447, 750, 829, 830, 1106, 1107, 1120, 1122, 1130, 1131, 1135, 1136, 1137, 1148, 1195, 1199, 1200, 1212, 1213, 1227, 1246], "10000": [1120, 1131, 1133, 1209, 1210, 1212], "1000000": [1120, 1131, 1210, 1238], "10000002": 1130, "10003": 1213, "10009": 1213, "1000x1000": [1106, 1110, 1122], "1001": [1131, 1212], "1002": 1212, "10029": 1110, "1003": 1212, "1004": 1212, "10049": 1110, "1005": 1212, "10069": 1110, "101": [1108, 1109, 1136, 1208, 1233], "10159": 1110, "1017": [934, 952, 963], "1018809052": [1134, 1243], "102": [1208, 1213, 1233, 1244], "10218": 1110, "1024": [159, 160, 1125, 1151, 1186, 1211, 1216, 1218], "1024x1024": 1110, "10266": 1110, "10278": 1110, "10281": 1110, "103": [1199, 1208, 1233], "10322": 1185, "10389": 1110, "104": [1199, 1208, 1233], "10452": 1110, "10499357": [1210, 1242], "105": 1199, "10502338": [1210, 1242], "1051271004": [1134, 1243], "1052": 1110, "10536897": 1173, "1056793272": [1134, 1243], "10570311": 1212, "106": [563, 1199], "10602397": [1205, 1227], "10657": 1197, "10659": 1110, "1066338622": [1134, 1243], "107": 1199, "10717": 1110, "1072": [1208, 1233], "1073": [1208, 1233], "1074": [1208, 1233], "1075": [1208, 1233], "1076": [1208, 1233], "1077": [1208, 1233], "1078": [1208, 1233], "10796146": 1134, "10796154": 1243, "108": 563, "1080163607": 1236, "10830861": 1136, "109": [430, 562, 1213], "10915492": 1136, "10921": 1110, "1093594115": [1134, 1199, 1243], "1094728438082": 1128, "1095": 895, "1097": 1190, "10991956": 1136, "10_000_000": 1184, "10e": 711, "10th": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 572, 646, 647, 648], "10x": [1122, 1184], "10x10": 1122, "11": [0, 157, 214, 215, 216, 238, 279, 280, 310, 311, 670, 740, 750, 904, 968, 1119, 1128, 1130, 1131, 1132, 1136, 1151, 1185, 1193, 1195, 1199, 1201, 1202, 1205, 1208, 1211, 1212, 1214, 1225, 1233, 1236, 1238, 1244, 1247], "110": [430, 562, 1136, 1213], "11003882": 354, "1101979660": [1134, 1243], "1109": [527, 882, 921, 922], "11150": 1145, "11160278320312": 1213, "1116708477": [1134, 1243], "11215": 1110, "11234": 1110, "11237": 1110, "112383129": 1135, "11248": 1110, "113": [1200, 1210, 1212, 1213, 1227], "1137": 894, "114": 1212, "1143": [1199, 1212, 1238], "1144": [1199, 1212, 1238], "1145": [1199, 1212, 1238], "1146": [1199, 1212, 1238], "1147": [1199, 1212, 1238], "1148": [1199, 1212, 1238], "1149": [1199, 1212, 1238], "115": 1212, "11503381": [1205, 1227], "11557": 1110, "116": [1190, 1212], "1163351": 882, "1164317": [921, 922], "116539": 1201, "11687": 381, "117": 1212, "11726379394531": 1213, "1176619927957034": 1107, "11794": 120, "118": [123, 1212, 1244], "11830": [1110, 1184, 1197], "118408203125": 1213, "1185": 894, "1188": 1136, "119": [1136, 1212, 1227], "119123": 1201, "11944": 1110, "11947631835938": 1213, "11952": 1194, "11979675292969": 1213, "1199": [1199, 1212, 1238], "11e": 527, "12": [0, 13, 123, 145, 157, 214, 215, 216, 238, 279, 280, 310, 311, 531, 538, 675, 676, 688, 824, 930, 1101, 1102, 1119, 1127, 1128, 1130, 1131, 1136, 1148, 1158, 1186, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1210, 1211, 1214, 1218, 1223, 1225, 1227, 1230, 1233, 1234, 1236, 1238, 1244], "120": [1202, 1213, 1236], "1200": [1199, 1212, 1238], "1201": [894, 1199, 1212, 1238], "12016": 1185, "1202": [1199, 1212, 1238], "1203": [1199, 1212, 1238], "1204": [1199, 1212, 1238], "12041": 1110, "12049": [1179, 1185, 1197], "1205": [1199, 1212, 1238], "1208447044": [1134, 1199, 1243], "121": 1212, "1210496444": 1199, "121105001260758": 1107, "12167": 1194, "12170": 1194, "12178039550781": 1213, "12188288": [1205, 1227], "12188289": [1205, 1227], "122": 1201, "123": [1130, 1136, 1196, 1238], "12300": 1185, "12302713": 358, "1234": [35, 1198, 1247], "12345": 1152, "123456789": 750, "1235": [750, 1247], "1236": 1247, "1237": [1208, 1233, 1247], "1238": [1208, 1233, 1247], "1239": [1208, 1233, 1247], "124": 1238, "1240": [1202, 1208, 1233, 1236, 1247], "1241": [1208, 1233], "1242": [1208, 1233], "1243": [1208, 1233], "12467473": 1153, "1249": 1190, "12528": 1110, "12533": 1110, "12536": 1110, "12550": 1110, "1258": [1202, 1236], "12582": 1110, "1258726447": 1199, "12593": 1185, "126": [1202, 1208, 1213, 1233, 1236], "12618": 1136, "127": [35, 909, 1134, 1208, 1210, 1223, 1233, 1243], "12707": 1194, "1272950319": 1199, "1275": 1190, "1278412471": 1199, "128": [715, 750, 1110, 1135, 1136, 1137, 1186, 1203, 1205, 1208, 1209, 1211, 1213, 1214, 1216, 1219, 1221, 1227, 1233, 1246, 1247], "12883787": [1205, 1227], "129": [1202, 1208, 1212, 1233, 1236], "12958": 1110, "13": [157, 279, 280, 441, 489, 503, 716, 750, 824, 947, 1102, 1104, 1127, 1128, 1131, 1136, 1193, 1195, 1201, 1202, 1208, 1209, 1210, 1211, 1223, 1227, 1233, 1244], "130": [1208, 1213, 1233, 1247], "1308506715": 1202, "13092041015625": 1213, "131": [1208, 1233, 1247], "13140": 120, "132": [1007, 1208, 1233, 1247], "13218": 1136, "133": [1208, 1233, 1247], "1333281553946": 1128, "13333333": 824, "13371": 1106, "13371277": 1106, "13372803": 1106, "134": [1208, 1212, 1233, 1247], "135": [1208, 1233, 1247], "1351523": [1205, 1227], "135451537": [1134, 1243], "136": 1247, "13621868": [1205, 1230], "136557498189248": 1204, "136557498193024": 1204, "136559225083904": 1204, "136559225093760": 1204, "136559225093824": 1204, "136559225093888": 1204, "136559225093952": 1204, "136559225094016": 1204, "136559225094080": 1204, "1366": 1190, "136797809": [1134, 1243], "1369438": 355, "13793182373047": 1213, "138": 1136, "13818": 1136, "1383": 1136, "139": 633, "1392464762": [1202, 1236], "1393342955": [1202, 1236], "13980": 1110, "14": [0, 157, 279, 280, 552, 624, 628, 633, 688, 750, 892, 1104, 1107, 1119, 1128, 1136, 1189, 1192, 1193, 1195, 1199, 1200, 1201, 1202, 1208, 1209, 1211, 1218, 1223, 1233, 1236, 1244], "140": [909, 1208, 1213, 1233], "1400": 1212, "14008042": 1136, "1401": 1212, "1402": 1212, "1403": 1212, "1404": 1212, "1405": 1212, "1406": 1212, "14084506": 1136, "141": [1208, 1233], "14102": 1110, "14106": 1110, "14108": 1110, "14112": [1121, 1200, 1208, 1227, 1233], "1411200080598672": 1107, "1412": 824, "1414436097": [1134, 1243], "1415927": [1205, 1227], "1416876": 1204, "14169139": 1136, "142": [633, 1208, 1233], "1422": [1151, 1223], "1423771745": [1134, 1243], "14273": 1197, "14286": [159, 160], "143": [1208, 1213, 1233], "144": [1208, 1233], "1440797": 1204, "14446": 1110, "1445": 1223, "145": [1208, 1212, 1233], "14553197": 1199, "146": [741, 1136, 1208, 1212, 1233], "1468": 1212, "1469": 1212, "147": [1212, 1213], "1470": 1212, "1471": 1212, "1472": 1212, "1473": 1212, "14734": 1110, "1474": 1212, "148": 1212, "1485": 1212, "1486": 1212, "1487": [1212, 1223], "1488": 1212, "1489": [1199, 1212, 1238], "149": 1212, "1490": [1199, 1212, 1238], "1491": [1199, 1212, 1238], "14913940429688": 1213, "1492": [1199, 1212, 1238], "1493": [1199, 1212, 1238], "1494": [1199, 1212, 1238], "1495": [1199, 1212, 1238], "1499": 1212, "1499117434": 1199, "1499999": 1242, "15": [125, 157, 279, 280, 531, 630, 631, 633, 683, 724, 774, 919, 923, 962, 1101, 1128, 1136, 1151, 1180, 1193, 1195, 1201, 1202, 1203, 1205, 1208, 1210, 1211, 1212, 1227, 1230, 1233, 1236, 1244], "150": [447, 1131, 1210, 1212, 1213, 1242], "1500": [1195, 1212], "1501": 1212, "1502": 1212, "1503": 1212, "1504": 1212, "1505": 1212, "151": 1212, "1519": 1131, "1520": 1131, "1521": 1131, "1521442": 1210, "15222930908203": 1213, "1541": 1131, "1542": 1131, "1543": [1131, 1212], "1544": 1212, "1545": 1212, "1546": 1212, "1547": 1212, "1548": 1212, "1549": 1212, "155": 1136, "15619659423828": 1213, "15623474121094": 1213, "1570919344": [1202, 1236], "1578": 1136, "15814": 1106, "15814209": 1106, "15856": [1160, 1197], "158883": 1159, "15mb": 1120, "16": [0, 148, 149, 157, 279, 280, 394, 430, 527, 557, 644, 645, 656, 711, 715, 750, 805, 824, 894, 923, 1106, 1119, 1120, 1122, 1128, 1136, 1152, 1173, 1175, 1182, 1184, 1186, 1188, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1206, 1208, 1211, 1216, 1227, 1233, 1234, 1237, 1244, 1248], "160": 1213, "16027": 1110, "16086": 1194, "161": 1131, "16134644": 1106, "16135": 1106, "162": 1131, "16206359863281": 1213, "1622": 1131, "1623": 1131, "1624": 1131, "16242980957031": 1213, "163": [1131, 1213], "1630859375": 1213, "1631": 1131, "1631097290182": 1128, "1632": 1131, "1633": 1131, "1634": 1131, "16347": 1110, "1635": 1131, "1636": 1131, "16362": 1110, "1639": 895, "164": [1136, 1199, 1212, 1238], "16413": 1110, "16440": 1110, "165": [1131, 1199, 1212, 1238], "16520690917969": 1213, "1657": 895, "1657102335": [1134, 1243], "16589": 1194, "166": [1131, 1199, 1212, 1238], "1661738718": [1134, 1243], "16642761": 1106, "16643": 1106, "16666667": [279, 824], "1668": 1193, "167": [1131, 1199, 1212, 1238], "1670": 1190, "1672213357352": 1128, "16746": 1110, "16757": 1106, "16757202": 1106, "16779": 1110, "1678096082": 1199, "16781": 1194, "16795349121094": 1213, "168": [1198, 1199, 1212, 1238], "16820715": 1159, "16824": 1194, "1683": [1208, 1233], "16831970214844": 1213, "16838408": 1159, "1684": [1208, 1233], "1685": [1208, 1233], "1686": [1208, 1233], "1687": [1208, 1233], "1688": [1208, 1233], "1689": [1208, 1233], "169": [1199, 1212, 1238], "16965583": [1205, 1230], "1697775786824": 1128, "16mb": 1219, "16mib": 1221, "17": [443, 447, 692, 931, 1102, 1104, 1128, 1136, 1159, 1184, 1201, 1203, 1208, 1211, 1227, 1233, 1234, 1236, 1244], "170": [1199, 1212, 1213, 1238], "1701": [1159, 1173, 1207, 1212, 1242], "17024128": 1136, "17038": 1189, "1704": 120, "17054": 1110, "171": 909, "17100524902344": 1213, "17111": 1197, "1720605": 1201, "17225": 1194, "1723": 1190, "17253521": 1136, "173": [1208, 1212, 1233], "1737": 824, "17398663": 356, "174": [1207, 1208, 1212, 1233], "1740": 824, "175": [1208, 1212, 1233], "17507419": 1136, "1751132419": 1236, "176": [1199, 1207, 1208, 1210, 1212, 1233, 1238, 1247], "1763": [1208, 1233], "1764": [1208, 1233], "1765": [1208, 1233], "1766": [1208, 1233], "1767": [1208, 1233], "1768": [1208, 1233], "17686": 1128, "1769": [1208, 1233], "177": [0, 606, 1199, 1208, 1212, 1233, 1238, 1247], "1775180719": [1134, 1243], "178": [606, 1199, 1208, 1212, 1233, 1238, 1247], "178264713": 1234, "179": [1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "1796872496": 1199, "18": [280, 503, 1101, 1102, 1125, 1127, 1128, 1136, 1159, 1195, 1201, 1202, 1205, 1206, 1208, 1211, 1233, 1236, 1244], "180": [1199, 1208, 1212, 1213, 1233, 1238, 1247], "1801108376": 1234, "180deg": 1207, "181": [1199, 1208, 1212, 1233, 1238, 1247], "1812433255": [1134, 1199, 1243], "1813425700": [1202, 1236], "18137": 1197, "18140515": 1107, "182": [707, 909, 1199, 1208, 1212, 1233, 1238, 1247], "18226": 1110, "18252563": 1106, "18252768": 1210, "18253": 1106, "1827752256": 1236, "184": 559, "184016991": [1134, 1243], "184469370": 1202, "18471177": 1243, "18471184": 1134, "1858": [1202, 1236], "18632507324219": 1213, "1869125366211": 1213, "18693541": 1134, "18693547": 1243, "1875": 1190, "1878467924": [1134, 1199, 1243], "189": [1199, 1208, 1212, 1233, 1238], "1894044906292982": 1199, "18953": 1110, "19": [480, 508, 920, 933, 941, 1007, 1102, 1104, 1127, 1128, 1136, 1200, 1201, 1202, 1205, 1208, 1212, 1223, 1233, 1236, 1244], "190": [165, 1199, 1208, 1212, 1213, 1233, 1238], "1900088": 355, "1900727105": [1134, 1199, 1243], "1901": 1145, "191": [1136, 1199, 1208, 1212, 1233, 1238], "19107055664062": 1213, "19128": 1136, "19192469": 1244, "192": [1131, 1198, 1199, 1208, 1212, 1233, 1238], "19227": 1110, "19231": 1110, "19235": 1110, "192359": 362, "19282": 1110, "19283": 1110, "19284": 1110, "193": [1122, 1199, 1208, 1212, 1233, 1238], "1933": [1202, 1208, 1233, 1236], "1934": [1208, 1233], "1935": [1208, 1233], "1936": [1208, 1233], "1937": [1208, 1233], "1938": [1190, 1208, 1212, 1233], "1939": [1208, 1212, 1233], "194": [1199, 1208, 1212, 1233, 1238], "1940": 1212, "1941": 1212, "1942": 1212, "1943": 1212, "1943107544": 1234, "1944": 1212, "195": [1199, 1208, 1212, 1233, 1238], "1950": [430, 923], "19515228271484": 1213, "1958": [440, 562, 563], "196": 1207, "1962": [572, 1202, 1236], "1964": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648], "1965": [508, 1205, 1230], "1965761": [1210, 1242], "1966": 606, "19661194": 1210, "19661197": 1242, "1967": [919, 923], "1969": 1007, "1972": [469, 760, 775, 776, 935], "1975": [430, 562, 563, 606, 919], "198": [1136, 1202, 1207, 1208, 1233, 1236, 1238, 1242], "1980": [615, 619, 620, 633, 636, 707, 882, 1110], "19816": 1110, "1983": 909, "1983583872": 1212, "1984": [921, 922], "1985": [631, 715], "1986": [430, 562, 563, 1007], "19863": 1136, "1988": 559, "199": 1131, "1990": 165, "19900084": 151, "19909117": [1205, 1230], "1992": 1007, "1993": 1007, "19937": 1199, "19947023689746857": 1243, "1996": [681, 683, 699, 703, 707, 724, 929], "1999": [405, 424, 430, 440, 559, 741, 921, 922], "19999981": 1130, "1_000_000": 1242, "1_61_0": [944, 945], "1d": [0, 143, 145, 588, 637, 705, 707, 708, 713, 715, 751, 752, 774, 781, 798, 813, 820, 821, 822, 823, 886, 956, 957, 965, 1009, 1110, 1151, 1159, 1186, 1189, 1199, 1211, 1212, 1219], "1e": [0, 121, 382, 391, 416, 590, 633, 750, 924, 925, 926, 1145, 1146, 1200, 1201, 1203, 1205, 1209, 1210, 1211, 1212, 1227, 1230, 1242], "1e3": 750, "1e7": 1130, "1f1": 947, "1j": [470, 707, 760, 776, 1110, 1205, 1227], "1m": [1107, 1199, 1200, 1202, 1204, 1205, 1208, 1212, 1213, 1227, 1231, 1232, 1233, 1236, 1238, 1239, 1247], "1st": [1211, 1221], "2": [0, 7, 13, 29, 31, 34, 35, 38, 71, 77, 80, 120, 121, 122, 123, 141, 144, 145, 148, 149, 150, 151, 157, 158, 160, 165, 169, 188, 193, 195, 196, 197, 198, 199, 212, 214, 215, 216, 217, 218, 219, 231, 238, 245, 247, 271, 272, 273, 279, 280, 281, 289, 310, 311, 315, 317, 333, 338, 339, 345, 346, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 372, 380, 381, 385, 386, 388, 401, 402, 403, 404, 406, 416, 418, 420, 421, 423, 425, 427, 428, 430, 434, 435, 436, 438, 441, 446, 454, 467, 470, 471, 472, 473, 481, 482, 483, 484, 485, 490, 492, 493, 494, 498, 501, 502, 506, 509, 510, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 532, 533, 545, 546, 549, 553, 559, 562, 563, 566, 571, 572, 576, 589, 604, 605, 606, 609, 610, 615, 620, 624, 628, 630, 631, 634, 635, 637, 639, 640, 643, 645, 646, 647, 648, 649, 651, 659, 665, 688, 689, 696, 697, 707, 711, 715, 719, 722, 725, 737, 741, 742, 745, 746, 747, 750, 753, 757, 758, 760, 761, 764, 776, 777, 778, 779, 780, 781, 783, 787, 788, 789, 808, 809, 813, 815, 817, 820, 821, 822, 823, 824, 833, 839, 845, 846, 850, 852, 860, 862, 863, 864, 865, 866, 871, 873, 874, 875, 876, 877, 879, 882, 883, 884, 885, 886, 892, 894, 902, 908, 916, 918, 919, 921, 922, 923, 928, 929, 933, 935, 938, 939, 941, 942, 943, 944, 945, 947, 948, 950, 953, 956, 957, 959, 961, 963, 965, 1007, 1010, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1081, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1101, 1102, 1104, 1106, 1114, 1115, 1116, 1117, 1119, 1121, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1152, 1153, 1158, 1159, 1171, 1175, 1180, 1182, 1183, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1198, 1199, 1200, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1226, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "20": [67, 68, 69, 279, 280, 444, 644, 688, 822, 926, 953, 1128, 1131, 1132, 1136, 1152, 1159, 1189, 1190, 1195, 1201, 1202, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1218, 1233, 1236, 1238, 1242, 1244], "200": [1074, 1093, 1128, 1136, 1207, 1213], "2000": [50, 894, 1195], "20000002": 725, "20000005": [725, 1130], "2001": 1007, "2002": 1186, "2002716": [1205, 1230], "2004": [934, 952, 963], "20040214": 1136, "2007": [559, 628], "2008": 527, "2009": [894, 895], "2013": [909, 1205, 1230], "2015": [1205, 1230], "2017": [1205, 1227], "2018": [1110, 1203, 1209], "2019": [645, 1119, 1127, 1202], "202": [1202, 1207, 1208, 1233, 1236], "2020": [1122, 1182, 1192, 1193, 1200, 1223], "2021": [1122, 1195], "2022": [1148, 1183, 1185], "2023": [1120, 1125, 1128, 1180, 1186, 1187, 1188, 1189, 1194], "2024": [67, 68, 69, 1152, 1185], "202579": 1159, "2026": [1110, 1197], "2028872": 1159, "203": [1208, 1233], "2032348584": [1134, 1243], "20385": [67, 68, 69, 1110, 1152], "204": [1202, 1208, 1233, 1236], "20422535": 1136, "2047218": 355, "2048": [1186, 1214, 1221], "205": [1208, 1233], "20550": 1110, "20584226": 1199, "20598": 1136, "206": [1208, 1233], "2069": 1190, "207": [1208, 1213, 1233], "208": [1208, 1233], "20845698": 1136, "2085143622": [1134, 1243], "209": 1136, "2091": 1110, "21": [750, 894, 1071, 1090, 1101, 1104, 1128, 1131, 1136, 1201, 1212, 1234, 1244, 1247], "210": [0, 1213], "21006774902344": 1213, "2101850145785": 1128, "2107": 1110, "2112": 381, "21209716796875": 1213, "2129": 1110, "213": [1199, 1213], "2132": 1212, "2133": 1212, "21337127685547": 1213, "2134": 1212, "21343994140625": 1213, "2135": 1212, "2135928312": [1134, 1243], "2136": 1212, "2137": 1212, "2138": 1212, "2139": [1199, 1212], "214": 1199, "2140": [1199, 1212], "2141": [824, 1199, 1212], "2142": [1199, 1212], "2143": [1199, 1212], "2143988866626": 1128, "2144": [1199, 1212], "2145": [1199, 1212], "2145028508": [1202, 1236], "21467624978306993": 1107, "215": 1199, "2155094905": 1236, "216": 1199, "2161": 1247, "2162": 1247, "2163": 1247, "2164": 1247, "2165": 1247, "2166": 1247, "2167": 1247, "2168": 1247, "2168787041": [1134, 1243], "2169": 1247, "217": 1199, "2170": 1247, "2171": 1247, "2172": 1247, "217285": 1151, "218": [606, 1199, 1212], "2182328957": 1199, "219": 1199, "22": [279, 280, 409, 636, 681, 683, 702, 703, 724, 750, 1128, 1136, 1171, 1201, 1206, 1208, 1211, 1227, 1233, 1244], "220": 1213, "2202": [1208, 1233], "2203": [1208, 1233], "2204": [1208, 1233], "2205": [1208, 1233], "2206": [159, 160, 1208, 1233], "2207": [1208, 1233], "2208": [1208, 1233], "222": 620, "2226542": [1134, 1243], "223": 1199, "223194": 1201, "22348": 1106, "22348022": 1106, "2239": 1247, "224": 1199, "2240": 1247, "2241": 1247, "2242": 1247, "2242547484": 1199, "2243": 1247, "2244": 1247, "2245": 1247, "225": 1199, "2255967221336": 1128, "226": [1199, 1212], "22662": 1106, "22662354": 1106, "227": 1199, "2273819758": [1134, 1243], "228": [1136, 1199], "229": [1131, 1199, 1212], "2296542172": 1234, "22e": 527, "23": [1128, 1136, 1201, 1208, 1233, 1244], "230": 1213, "23056298": 1136, "23059082": 1106, "2306": 1106, "2319": [1199, 1208, 1212, 1233, 1238], "232": [1202, 1236, 1242], "2320": [1199, 1208, 1212, 1233, 1238], "2321": [1199, 1208, 1212, 1233, 1238], "2322": [1199, 1208, 1212, 1233, 1238], "23226928710938": 1213, "2323": [1199, 1208, 1212, 1233, 1238], "2324": [1199, 1208, 1212, 1233, 1238], "2325": [1199, 1208, 1212, 1233, 1238], "233": 1106, "2338114": 362, "2341": [1199, 1208, 1212, 1233, 1238], "2342": [1199, 1208, 1212, 1233, 1238], "2343": [1199, 1208, 1212, 1233, 1238], "23439017": [1205, 1227], "2344": [1199, 1208, 1212, 1233, 1238], "2345": [1199, 1208, 1212, 1233, 1238], "2346": [1199, 1208, 1212, 1233, 1238], "2347": [1199, 1208, 1212, 1233, 1238], "2348": 1199, "23489487": 1212, "2349": 1199, "2350": 1199, "2351": 1199, "2352": 1199, "23527526855469": 1213, "23558": 1213, "23591548": 1136, "236": [1106, 1136], "2362978080912": 1128, "237": 1106, "238": 1106, "2382": 1110, "2384771982": 1199, "23876953": 1106, "23877": 1106, "239": 1106, "23997497558594": 1213, "2399811678": [1134, 1243], "23_spmd": 0, "24": [279, 280, 1118, 1128, 1136, 1186, 1194, 1199, 1201, 1208, 1211, 1227, 1233, 1234, 1244], "240": [1106, 1206, 1213, 1234], "2409145495443": 1128, "241": 1106, "24183977": 1136, "242": [1106, 1238], "2422663986": 1212, "243": [1106, 1213], "24345397949219": 1213, "24370574951172": 1213, "244": [824, 1106, 1199], "2443250962": [1134, 1199, 1243], "2447": 1110, "245": [1106, 1136, 1199], "246": [1106, 1199, 1202, 1236], "2465931498": 1134, "247": [1106, 1199], "24748": 150, "248": [1106, 1199], "2481403966": [1134, 1199, 1243], "2484405": [1200, 1227], "249": 1106, "2495741e": 361, "24998187": [1210, 1242], "25": [494, 656, 824, 968, 1104, 1119, 1122, 1127, 1128, 1136, 1193, 1195, 1200, 1201, 1202, 1205, 1206, 1208, 1210, 1227, 1233, 1236, 1242, 1244, 1246], "250": [1106, 1213], "2501": 1110, "251": 1106, "2512": 1110, "2515389": [1193, 1199], "2516396728": [1134, 1243], "252": 1106, "2524413": 1100, "25265405": [1205, 1230], "253": 1106, "2537": 1110, "254": [1106, 1136, 1199], "255": [0, 71, 1106, 1199], "2551253": 1204, "255383827": 1134, "2556391": 7, "256": [150, 919, 922, 923, 1106, 1125, 1128, 1216, 1221], "2562755208": [1134, 1243], "2566": 1110, "257": 1106, "25773212": 1212, "258": [1106, 1199], "25881958007812": 1213, "259": 1106, "2591": 1110, "2596": 1110, "2597": 1110, "26": [279, 1007, 1122, 1128, 1136, 1154, 1201, 1203, 1208, 1212, 1227, 1233, 1244], "260": 1213, "2602819927345": 1128, "26075": 1213, "261": [1106, 1210], "2612533569336": 1213, "262": [1106, 1131], "262144": 0, "2626": 120, "2626558620": [1134, 1243], "263": [1131, 1173, 1197], "2635": 1110, "26397705078125": 1213, "264": 1131, "2640": 912, "2641678767": 1202, "26423115": 1210, "2648828502": 1199, "265": [0, 1106], "2656": 1110, "2665": 1110, "26651": 1106, "26651001": 1106, "26666667": 824, "26676940917969": 1213, "267": 1106, "267815257": 1134, "268": 1106, "26819": 333, "2681944": 333, "2684": 1110, "269": 1106, "2696932952": [1134, 1243], "26978672": [1208, 1233], "26988": 1136, "269\u00b5": 1106, "27": [882, 1122, 1128, 1136, 1152, 1200, 1202, 1205, 1206, 1227, 1236, 1244], "270": 1213, "2709361018": [1134, 1243], "271": 1106, "2718843009": 1199, "2719": 1110, "272": 1007, "2724": 1110, "2726": 1110, "275": [1199, 1212], "2755": 1110, "275552121": [1134, 1243], "2759011858": [1134, 1243], "276": [1199, 1212, 1242], "2760": 1110, "277": [1199, 1212], "27744": 150, "277685388252": 1128, "278": [1199, 1212], "2785": [1208, 1212, 1233], "27858": 1136, "27858758": 352, "2786": [1208, 1212, 1233], "2787": [1208, 1212, 1233], "2788": [1208, 1212, 1233], "2789": [1208, 1212, 1233], "2789248": 356, "279": [1007, 1199, 1212], "2790": [1208, 1212, 1233], "2791": [1208, 1212, 1233], "27th": 1110, "28": [50, 279, 280, 824, 882, 1128, 1136, 1202, 1203, 1209, 1212, 1236, 1244], "280": [1199, 1212, 1213], "2806505": 1243, "2806507": 1134, "2809": 1110, "281": [1136, 1199, 1212], "2817": 1110, "2819775617064": 1128, "2819792939": 1199, "2820373052": 1227, "28224": 1244, "2822400161197344": 1107, "2823738293221": 1128, "283": [1202, 1236], "283185307179586": 808, "28434753417969": 1213, "2844449444": [1202, 1236], "285": [606, 615], "2860107421875": 1213, "2867": 1110, "28728": 1136, "28772": 1213, "28812408447266": 1213, "2887650464874": 1128, "289": [1208, 1233], "28900146484375": 1213, "28910828": 1106, "28911": 1106, "28912354": 1106, "2891506774": [1134, 1243], "2896": 1110, "2896855": 356, "29": [824, 1104, 1128, 1132, 1136, 1185, 1202, 1208, 1212, 1233, 1236, 1244], "290": [1136, 1208, 1213, 1233], "29047393798828": 1213, "2906": 1110, "291": [1208, 1233], "29165649414062": 1213, "292": [1208, 1233], "29227245": [1205, 1230], "29255": 150, "293": [1208, 1233], "29325485": [1205, 1230], "29335397": 1159, "2934014": 1159, "29376220703125": 1213, "294": [1208, 1233], "2943625357": [1134, 1243], "2949980591": 1199, "295": [1199, 1208, 1212, 1233, 1238], "2956679937": 1238, "296": [1199, 1208, 1212, 1233, 1238], "296167901": [1134, 1243], "297": [508, 1199, 1208, 1212, 1233, 1238], "29745483398438": 1213, "29788970947266": 1213, "297902587": [1134, 1243], "298": [1007, 1199, 1202, 1208, 1212, 1233, 1236, 1238], "298188": 363, "298278331756592": 1243, "29852": 362, "29878938": 1159, "29893667": 1159, "299": [1136, 1199, 1208, 1212, 1233, 1238], "2993": 1110, "2997544": 1244, "2aa78f448d5d": 1131, "2c1a07641e48": 1131, "2d": [71, 118, 147, 195, 196, 279, 613, 637, 711, 725, 742, 813, 924, 925, 926, 1110, 1151, 1175, 1186, 1207, 1211, 1212, 1214, 1218, 1219], "2e": 711, "2f": [1130, 1203, 1209], "2k": 808, "2n": [953, 965], "2nd": [619, 620, 633, 636, 707, 1200, 1202, 1205, 1221, 1227, 1230], "2x": [1133, 1152, 1219, 1227, 1230], "2x2": [906, 1205, 1207, 1227], "2x32": 140, "2xf32": [1202, 1236], "3": [0, 13, 29, 31, 34, 49, 50, 55, 77, 80, 120, 121, 123, 145, 146, 147, 148, 149, 150, 157, 158, 165, 169, 184, 188, 195, 196, 197, 214, 215, 216, 217, 218, 219, 231, 238, 251, 271, 272, 273, 279, 280, 281, 289, 310, 311, 317, 333, 340, 345, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 371, 416, 418, 428, 430, 446, 447, 471, 473, 492, 493, 494, 498, 553, 559, 562, 563, 570, 572, 576, 604, 605, 606, 645, 665, 668, 688, 689, 696, 697, 700, 711, 719, 725, 732, 736, 745, 746, 747, 750, 753, 761, 764, 773, 778, 804, 813, 815, 817, 820, 821, 822, 823, 824, 879, 882, 883, 884, 885, 892, 894, 903, 912, 913, 922, 927, 935, 953, 1007, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1084, 1086, 1090, 1091, 1092, 1093, 1100, 1101, 1102, 1104, 1105, 1106, 1112, 1114, 1117, 1119, 1121, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1152, 1153, 1159, 1165, 1166, 1179, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247], "30": [71, 824, 895, 953, 1128, 1130, 1131, 1136, 1186, 1201, 1202, 1205, 1207, 1209, 1210, 1213, 1214, 1227, 1230, 1236, 1238, 1244], "300": [35, 1074, 1093, 1136, 1144, 1199, 1208, 1212, 1213, 1233, 1238], "3000": [50, 1210], "300394253605": 1128, "3004413": 1212, "30055236816406": 1213, "3005757": 1244, "3006": 1110, "30085585": 352, "301": [508, 1199, 1208, 1212, 1233, 1238], "3012": 1151, "3042": 1151, "3047072": [1205, 1227], "3048484911": 1199, "3049883393633": 1128, "305012020407": 1128, "3063618431178": 1128, "3072": [1208, 1233], "3073": [1208, 1233], "3074": [1208, 1233], "3075": [1208, 1212, 1233], "3076": [1208, 1233], "3077": [1208, 1233], "3078": [1208, 1233], "3085343041": [1202, 1236], "30j": 1207, "30mb": 1120, "30x": 1122, "31": [824, 894, 1136, 1223, 1244], "310": 1213, "3101": 1110, "3107": 1185, "311": [1199, 1208, 1233], "312": [1208, 1233], "3127": [1208, 1233], "3128": [1208, 1233], "3129": [1208, 1233], "313": [1208, 1233], "3130": [1208, 1212, 1233], "3130127722537": 1128, "3131": [1208, 1233], "3132": [1110, 1208, 1233], "3133": [1208, 1233], "3139732": 1244, "3139825610": [1134, 1243], "314": [1208, 1233], "31468165": 1194, "315": [1208, 1233], "3151": 1110, "3155028": 1204, "3157725e": 361, "316": [1208, 1233], "3161423260563": 1128, "317": [1208, 1233], "3176189976": [1134, 1243], "317766": 145, "318": [707, 1247], "3183": [1202, 1236], "3186499464459": 1128, "319": 1247, "3192392114": [1134, 1243], "3197095916": 1202, "31mvalueerror": 1201, "32": [0, 50, 279, 280, 339, 619, 682, 685, 736, 750, 824, 838, 858, 909, 1110, 1122, 1136, 1151, 1186, 1194, 1195, 1198, 1199, 1201, 1202, 1209, 1211, 1214, 1219, 1236, 1244], "320": [1213, 1247], "3202401494": [1134, 1243], "321": 1247, "322": 1247, "323": 1247, "3232553940": [1134, 1243], "324": [1195, 1247], "326": 1136, "32726777": 1244, "3277342478": 1199, "32bit": [26, 140, 853], "32m": [1199, 1212, 1247], "33": [824, 1007, 1104, 1136, 1199, 1208, 1212, 1233, 1238, 1247], "330": 1213, "330483": 1201, "3318": 1110, "332": [1199, 1208, 1212, 1233, 1238], "333": [1199, 1208, 1212, 1233, 1238], "3331": [1208, 1233], "3332": [1208, 1233], "3333": [1208, 1233], "33333333": 824, "33333334": [279, 665, 696, 824], "3333334": 272, "3334": [1202, 1208, 1212, 1233, 1236], "3335": [1208, 1233], "3336": [1208, 1233], "3337": [1208, 1233], "33398": 1106, "33398438": 1106, "334": [1199, 1208, 1212, 1233, 1238], "3343076723": 0, "335": [1136, 1199, 1208, 1212, 1233, 1238], "3353042602539": 1213, "335474": 1201, "336": [1199, 1208, 1212, 1233, 1238], "337": [1106, 1199, 1208, 1212, 1233, 1238], "3370": [1110, 1193], "33700562": 1106, "3375": [1200, 1227], "337614300": [1134, 1199, 1243], "338": [1199, 1208, 1212, 1233, 1238], "33905897": [1208, 1233], "339076514": 1202, "33max": 1199, "33mbroadcast_dimens": 1199, "33mdevic": 1239, "33mdimens": 1199, "33mdimension_numb": 1212, "33mdtype": [1199, 1200, 1204, 1205, 1208, 1212, 1213, 1227, 1231, 1232, 1233, 1238, 1247], "33mid": 1239, "33mjaxpr": 1239, "33mname": 1239, "33mnew_dtyp": 1199, "33mpreferred_element_typ": 1212, "33mshape": 1199, "33mweak_typ": [1199, 1200, 1204, 1205, 1208, 1212, 1227, 1232, 1233, 1238], "33mx": 1247, "33my": 1247, "34": [824, 882, 1136, 1227], "340": 1213, "3402096563": 1199, "3418": [1202, 1236], "343": [0, 1134, 1199, 1243], "3432054210": [1134, 1243], "3435837498": 1212, "344": [0, 1136, 1199], "345": [824, 1199], "3453199728248": 1128, "346": [1199, 1212], "347": [1199, 1212, 1238], "347789876": 1236, "348": [824, 1199, 1212, 1238], "349": [1199, 1212, 1238], "34961700439453": 1213, "35": [824, 1136, 1207], "350": [1199, 1212, 1213, 1238], "350306": 1201, "351": [1199, 1212, 1238], "3514": [1208, 1233], "3515": [1208, 1233], "3516": [1208, 1233], "3517": [1202, 1208, 1212, 1233, 1236], "3518": [1110, 1208, 1233], "3518946594": [1134, 1243], "3519": [1208, 1233], "352": [1199, 1212, 1238], "3520": [1208, 1233], "353": [1199, 1212, 1238], "3530655617": [1134, 1243], "35322570800781": 1213, "35355338": [1200, 1227], "3539885757353": 1128, "3541": [1202, 1236], "3545703099": [1134, 1243], "3562": 1110, "3574": [1208, 1233], "3575": [1208, 1233], "3576": [1208, 1233], "3577": [1202, 1208, 1212, 1233, 1236], "3578": [1208, 1233], "3579": [1208, 1233], "358": [1208, 1233], "3580": [1208, 1233], "3587": 1110, "359": [1208, 1233], "35m_where": 1239, "35marrai": [1107, 1199, 1200, 1204, 1205, 1208, 1212, 1213, 1227, 1231, 1232, 1233, 1238, 1247], "35mcomplex64": [1205, 1227], "35mcpudevic": 1239, "35mdtype": 1199, "35mfloat32": [1199, 1200, 1204, 1208, 1212, 1213, 1227, 1231, 1232, 1233, 1247], "35mint32": [1199, 1212, 1213, 1232, 1238], "35mkei": 1199, "35mnone": 1247, "35mregisteredspeci": 1247, "35msingledeviceshard": 1239, "36": [279, 280, 824, 1007, 1118, 1136, 1208, 1209, 1211, 1233], "360": [757, 1106, 1208, 1213, 1233], "3608": 1110, "361": [681, 683, 703, 724, 1208, 1233], "3610": 1110, "3611": 1110, "3618": 1110, "36198": 1136, "361h": 0, "362": [1208, 1233], "3623195": 1212, "363": [1208, 1233], "364": [1208, 1233], "3643": 1110, "3648": 1136, "365": [681, 683, 703, 724, 1208, 1233], "3653": 1110, "3657": 1110, "3664": 1110, "3679230171": 1134, "36853": 1106, "36853027": 1106, "3694694": 1134, "369469404220581": 1243, "36m": [1107, 1199, 1200, 1204, 1205, 1208, 1212, 1213, 1227, 1233], "36m0": [1107, 1199, 1205, 1208, 1212, 1213, 1227, 1233, 1239], "36m0x709b70261950": 1213, "36m0x73b482489f80": 1236, "36m0x73b4824d9e40": 1236, "36m0x73b4e3fec720": 1236, "36m0x75bb75d40e00": 1227, "36m0x75bb75e47e90": 1227, "36m0x75bb75f6e990": 1227, "36m0x775dc41f1e40": 1200, "36m0x775dc42599d0": 1200, "36m0x775dc42aafd0": 1200, "36m0x7cf428109e40": 1202, "36m0x7cf42810a700": 1202, "36m0x7cf4288b6f20": 1202, "36m0x7d0e90f97450": 1247, "36m0x7d0ee0189590": 1247, "36m1": [1107, 1199, 1200, 1204, 1205, 1212, 1213, 1227, 1239, 1247], "36m10": [1199, 1205, 1227], "36m11": 1231, "36m128": 1247, "36m15": 1204, "36m2": [1204, 1212, 1227, 1232, 1247], "36m20": 1231, "36m29": 1231, "36m3": [1200, 1205, 1212, 1227, 1232, 1247], "36m30": 1238, "36m4": [1199, 1212, 1247], "36m45": 1199, "36m5": [1199, 1205, 1212, 1227, 1239, 1247], "36m6": [1199, 1205, 1227, 1247], "36m7": 1212, "36m8": 1247, "36m9": 1199, "37": [430, 923, 1104, 1136, 1203, 1205, 1246], "370": [0, 630, 1213], "3703": 1110, "37203": 1136, "3721109": 1210, "3726": 1110, "3728": 1110, "3729": 1110, "3733": 1110, "3735": 1110, "3738": 1110, "3739224": 1159, "3740134": 1159, "3751": 1110, "37533438": 1199, "3769736790": 1205, "3777": 1110, "3778": 1110, "378": 630, "379": 572, "38": [1120, 1136, 1151, 1203, 1244], "380": [1213, 1242], "3800": 1110, "3803": 1110, "3806145045": [1134, 1243], "3808b5023c3d": 1206, "3812": 1110, "3812477442": [1134, 1243], "38208": 1136, "3836": 1110, "3845": 1110, "3869": 1110, "3873": 1110, "3874": 1110, "3878": 1110, "3879932251": [1134, 1243], "389056": 1242, "38916": 1106, "38916016": 1106, "39": [1130, 1136, 1205, 1227, 1230], "390": 1213, "390276": 1201, "3904844661": [1134, 1243], "3914": 1110, "3928867769": 1199, "393": 1207, "39595031738281": 1213, "396": 1207, "397": 1207, "3974": 49, "39764675": 1159, "39774987": 1159, "3978": 1136, "39904642": 1194, "3992505346": [1134, 1243], "39m": [1200, 1202, 1212, 1213, 1227, 1236, 1247], "3d": [352, 956, 957, 1136], "3f": 1136, "3j": [1205, 1227], "3rd": [492, 628, 699, 1200, 1202, 1227], "3x": [1133, 1152, 1153, 1205, 1227, 1230], "4": [0, 13, 32, 34, 71, 77, 80, 120, 123, 137, 142, 148, 149, 150, 157, 158, 165, 169, 188, 214, 215, 216, 217, 218, 219, 232, 238, 251, 271, 272, 273, 279, 280, 281, 289, 310, 311, 333, 338, 359, 361, 362, 380, 381, 430, 446, 562, 563, 576, 665, 681, 683, 688, 689, 696, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 724, 725, 741, 745, 746, 747, 750, 753, 761, 778, 813, 821, 823, 824, 882, 883, 884, 885, 894, 895, 903, 913, 922, 948, 950, 965, 1007, 1068, 1069, 1071, 1072, 1073, 1074, 1084, 1086, 1090, 1091, 1092, 1093, 1101, 1102, 1104, 1106, 1114, 1119, 1121, 1122, 1125, 1130, 1131, 1132, 1133, 1135, 1136, 1151, 1152, 1154, 1158, 1159, 1173, 1175, 1180, 1182, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1199, 1200, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1215, 1216, 1218, 1219, 1224, 1225, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1242, 1244, 1246, 1247, 1248], "40": [1151, 1186, 1203, 1205, 1209, 1211, 1213, 1227], "400": [1074, 1093, 1136, 1207, 1213], "4000": 1195, "40015721": 1191, "4003078": [1208, 1233], "4008": [1192, 1197], "403243": 1212, "4039": 1192, "4042607538": [1134, 1199, 1243], "404566": 1201, "405": 1151, "4075895579": [1134, 1243], "40774566": 352, "408": 1247, "4087536357031": 1128, "409": 1247, "4096": 1186, "41": [1104, 1110, 1119, 1202, 1203, 1236, 1238, 1247], "410": [1213, 1247], "4101": 1110, "410288286": 1234, "41094971": 1106, "41095": 1106, "411": 1247, "4118182506": 1207, "412": 1247, "413": 1247, "414": [919, 1247], "4142135": [1200, 1227], "4146024105": 1199, "416": 1212, "41614684": [1107, 1200, 1227], "4162027047": 1199, "4165789807": [1202, 1236], "417": 1212, "41770416": 353, "418": [1131, 1212], "41845703": 1173, "419": [919, 1131, 1208, 1212, 1233], "4190113959127": 1128, "4196": 1110, "42": [351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 894, 1070, 1088, 1120, 1134, 1137, 1201, 1203, 1208, 1233, 1238, 1243, 1246], "420": [1131, 1208, 1212, 1213, 1233], "4209507": 1159, "421": [1208, 1212, 1233], "4212713": 1159, "422": [1208, 1212, 1233], "4223280707176": 1128, "423": [1208, 1212, 1233], "4230705069": 1234, "424": [1208, 1212, 1233], "42419332": 1244, "425": [562, 563, 1208, 1212, 1233], "426": [1208, 1212, 1233], "4263792037783": 1128, "427": [1208, 1212, 1233], "4273176064": [1134, 1243], "428": [1208, 1212, 1233], "4287": 1151, "429": [430, 1208, 1233], "42941284179688": 1213, "4294967295": 1110, "4297j": 1151, "43": [1070, 1088, 1134, 1210, 1243], "430": [1208, 1213, 1233], "4308": 1136, "431": [1208, 1233], "432": [1110, 1208, 1233], "433": [0, 1208, 1233], "434": [1208, 1233], "4344584": 1212, "435": [1208, 1233], "436": [1208, 1233], "437": [1208, 1233], "43706512451172": 1213, "437153685251": 1128, "438": [1208, 1233], "439": [1208, 1233], "44": [1203, 1208, 1233], "440": [0, 1196, 1208, 1213, 1233], "44005057": [1208, 1233], "44030377": 1210, "4409e": 750, "441": [1208, 1233], "4410": 1197, "44116896": 1244, "44122": 1106, "44122314": 1106, "44197845458984": 1213, "442": [1208, 1233], "4427": 1110, "443": [1208, 1233], "444": [1208, 1233], "44430563": 1159, "44436368": 1159, "446": [1208, 1233], "447": [1208, 1233], "448": [1208, 1233], "449": [1208, 1212, 1233], "45": [268, 691, 1104, 1118, 1135, 1199, 1202, 1203, 1210, 1236, 1247], "450": [1208, 1213, 1233], "4502": 1151, "4506445": 1201, "451": [1208, 1233], "452": [1208, 1233], "4520254": 359, "456195": 1201, "45624542236328": 1213, "4564": 1110, "459539105": 1236, "460": [1134, 1213, 1243], "4600": [1199, 1212], "4601": [1199, 1212], "4602": [1199, 1212], "4603": [1199, 1212], "4604": [1199, 1212], "4605": [1199, 1212], "4606": [1199, 1212], "4608": 1110, "4610935": 527, "4636": 1110, "46401": 1201, "4650": 1110, "4651": 1110, "46700746": 357, "468": [430, 440], "4685": [1199, 1212], "4686": [1199, 1212], "4687": [1199, 1212], "4688": [1199, 1212], "4689": [1199, 1212], "4690": [1199, 1212], "4691": [1199, 1212], "469475": 1201, "46996307373047": 1213, "46b5594773cb": 1206, "47": 1238, "470": 1213, "471": [430, 440], "474": 1247, "4744": 1110, "475": 1247, "476": 1247, "477": 1247, "4771728515625": 1213, "477554": 1201, "478": 1247, "4782867": 1201, "479": 1247, "48": [1202, 1210, 1236, 1244], "480": [145, 1213, 1247], "483": 0, "48327": 120, "484": [0, 1185], "485": 1122, "48648298": 1193, "487": [1208, 1233], "4877": 1110, "488": [1208, 1233], "48870957": 1201, "489": [1208, 1233], "49": [824, 1205, 1208, 1227, 1230, 1233], "490": [1208, 1213, 1233], "4901346": [1205, 1230], "4903": 1110, "491": [1208, 1233], "492": [1208, 1233], "493": [824, 1208, 1233], "4937": 1151, "4943618774414": 1213, "496": 1244, "4963": 1151, "4971": 1110, "4983": [1199, 1212], "4984": [1199, 1212], "4984359741211": 1213, "4985": [1199, 1212], "4986": [1199, 1212], "4987": [1199, 1212], "4988": [1199, 1212], "4989": [1199, 1212], "499500": 1148, "4d": 352, "4e": 416, "4j": [665, 696, 1205, 1227], "4kbi": 1219, "4th": 896, "4x": [1133, 1230], "5": [0, 1, 32, 34, 35, 63, 64, 71, 80, 119, 120, 125, 146, 147, 148, 149, 157, 165, 169, 214, 215, 216, 218, 219, 238, 272, 279, 280, 289, 293, 310, 311, 332, 333, 359, 361, 362, 363, 372, 430, 446, 472, 564, 572, 605, 688, 689, 725, 746, 747, 750, 753, 761, 778, 820, 823, 824, 840, 892, 912, 913, 930, 933, 939, 943, 946, 953, 961, 962, 1007, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1084, 1086, 1088, 1090, 1091, 1092, 1093, 1100, 1101, 1102, 1104, 1114, 1116, 1119, 1120, 1121, 1122, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1153, 1158, 1159, 1165, 1182, 1186, 1188, 1191, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1223, 1224, 1225, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247, 1248], "50": [159, 160, 557, 644, 656, 681, 683, 703, 724, 871, 1106, 1119, 1199, 1203, 1207, 1213], "500": [920, 1074, 1093, 1136, 1207, 1213], "5000": [1204, 1223], "50197446": 1244, "5022564": 363, "50271606445312": 1213, "5030108108612741": 1199, "50350785": 354, "5069753": 1159, "507": 1227, "5071844": 1159, "51": [559, 1106], "510": 1213, "5117505070573": 1128, "512": [0, 1203, 1209, 1214, 1216, 1218, 1221], "513605": 1244, "51435089111328": 1213, "5156": 1110, "5182": 1110, "52": [527, 909, 1205, 1227, 1230, 1244], "520": 1213, "5224": 1110, "522672": 1159, "5227761": 1159, "5243": 1110, "5244": 1110, "525": 1127, "525117": 1244, "52909088134766": 1213, "53": [527, 1205], "530": 1213, "531": [1208, 1233], "532": [1208, 1233], "533": [1208, 1233], "5331743016213": 1128, "5339818238837": 1128, "534": [1208, 1233], "535": [1208, 1233], "536": [1128, 1208, 1233], "537": [1128, 1208, 1233], "538": [1208, 1233], "53887904": 352, "539": [1208, 1233], "54": [1131, 1202, 1208, 1223, 1227, 1233, 1236, 1244], "540": [1208, 1213, 1233], "5403023": [1200, 1227], "54030231": 1107, "541": [1208, 1233], "5418116": 1244, "542": [1208, 1233], "5423026j": [1205, 1227], "543": [1208, 1233, 1238], "543625": [1208, 1233], "544": [1208, 1233], "54485": 150, "545": [1208, 1233], "546": [1208, 1233], "547": [1208, 1233], "548": [1131, 1208, 1233], "5488135": [1134, 1243], "549": [1131, 1208, 1212, 1233], "55": [1202, 1203, 1209, 1223, 1236], "550": [1131, 1208, 1213, 1233], "551": [1208, 1233], "5516644": 353, "552": [1208, 1233, 1238], "5593132": 1243, "5593133": 1134, "559373j": [1205, 1227], "56": [1136, 1244], "560": 1213, "561016": 1201, "5627": 1110, "56293887": 358, "56382751464844": 1213, "56503295898438": 1213, "5673026": 1210, "569184356": [1134, 1243], "57": [1209, 1227], "570": [1128, 1213], "5723649": 1122, "572365": 1122, "5746": 1110, "576": 1128, "5767248": [1208, 1233], "5768": 1110, "577": 1128, "578": [1199, 1212, 1238], "579": [1199, 1212, 1238], "57972717285156": 1213, "58": [1202, 1236, 1247], "580": [1199, 1212, 1213, 1238], "58067321777344": 1213, "581": [1199, 1212, 1238], "582": [1199, 1212, 1238], "583": [1199, 1212, 1238], "584": [1199, 1212, 1238], "584931": 1204, "585866": 1201, "58665055": 1199, "58665067": 1193, "586697": 1201, "5868": 1110, "587": 1128, "59": [1223, 1227, 1247], "590": 1213, "5908641": 1210, "591674": 1159, "5930698237612": 1128, "59403396": 1212, "594215549": [1134, 1243], "59566": 150, "59848": 1106, "59848022": 1106, "59892005": 1244, "5989201": 1244, "5d": 352, "5e": [416, 418], "5e100": 447, "5j": [1205, 1227], "5kb": 1199, "5x7x4": 1214, "6": [0, 34, 77, 119, 121, 125, 145, 157, 165, 169, 188, 214, 215, 216, 217, 218, 219, 238, 279, 280, 289, 310, 311, 317, 333, 347, 373, 416, 446, 526, 689, 725, 746, 747, 753, 761, 805, 808, 820, 821, 822, 824, 938, 939, 965, 1070, 1071, 1073, 1088, 1090, 1092, 1101, 1102, 1107, 1114, 1116, 1119, 1121, 1122, 1125, 1130, 1131, 1133, 1135, 1136, 1152, 1153, 1158, 1159, 1186, 1191, 1193, 1195, 1199, 1200, 1201, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1218, 1224, 1225, 1227, 1230, 1233, 1234, 1238, 1244, 1247, 1248], "60": [1127, 1203, 1207, 1213, 1227, 1244, 1247], "600": [399, 1136, 1213], "60000": 1209, "6002": 1122, "6006": 1223, "6014": 1110, "6022964": 362, "60276338": [1134, 1243], "602836": 1201, "6028657": 353, "6047": 1110, "605": [1208, 1233], "6050892": 352, "60544": 1213, "606": [1208, 1233], "60663575": [1208, 1233], "607": [1208, 1233], "608": [1208, 1233], "6085": 1110, "609": [1208, 1233], "61": [1106, 1212, 1247], "610": [1208, 1213, 1233], "610491522": [1134, 1243], "611": [1208, 1233], "6112": 1110, "612": 1185, "6129": 1110, "6129413": 359, "6136": 1110, "614": 1199, "61430776": 1100, "6145": 1110, "6156273667873": 1128, "6162715": 1201, "6165": 1110, "61677957": 357, "619b39acbaac": 1199, "62": [1205, 1208, 1233, 1247], "620": 1213, "6209": [148, 149], "624": 1199, "62452": 150, "62471": 1106, "62471008": 1106, "62597656": 1106, "62598": 1106, "626": 1131, "6262": 1110, "627": 1131, "628": 1131, "6288222": 1159, "62893456": 1159, "63": 1247, "630": 1213, "6310087": 1159, "6310593": 1159, "63115686": 359, "63302994": 1194, "6343j": 1151, "635532": 1159, "63591766357422": 1213, "635j": 1151, "636": 1190, "6360": 1110, "6369617": [1208, 1233], "63918": 1201, "6393332": 354, "64": [123, 159, 160, 527, 619, 682, 685, 736, 838, 858, 909, 1119, 1122, 1195, 1199, 1202, 1205, 1236, 1244, 1247, 1248], "640": 1213, "644": [1208, 1233], "6446": 645, "645": [1208, 1233], "646": [1185, 1208, 1233], "647": [1202, 1208, 1233, 1236], "648": [1208, 1233], "64862": 1106, "64862061": 1106, "649": [1208, 1233], "649452": 1151, "65": 1136, "650": [1208, 1213, 1233], "6501": 1110, "6507808565617": 1128, "6532": 1110, "656": 1247, "6561": 150, "6569": 1110, "657": 1247, "6572": 1110, "658": 1247, "659": 1247, "6594": 1130, "6595": 1130, "6596": 1130, "6597": 1130, "65979004": 1106, "6598": [1106, 1130], "660": [1213, 1247], "6604483": 355, "661": 1247, "662": 1247, "663": 1247, "664": 1247, "665": 1247, "666": 1247, "6666667": [272, 665, 696], "667": 1247, "6672134399414": 1213, "668": 1247, "669": 1247, "6699999570846558": 1239, "67": [150, 646, 647, 648, 719, 1131, 1210, 1238, 1239, 1242], "670": [1213, 1247], "670236": 1159, "6702557143142": 1128, "67060554": 1159, "6707332269023": 1128, "671": 1247, "67135346": 1210, "6717": 1110, "672": 1247, "6720": 1110, "6732632423543772848170429916717": 374, "6733112": 1244, "67402434": 357, "6756169e": 361, "6760131792959": 1128, "676704": 333, "676747479": [1134, 1243], "6777936517823": 1128, "67948914": 1106, "67949": 1106, "6797972": 1201, "68": [1203, 1244], "680": 1213, "682": [1208, 1233], "6827": 1110, "68294197": 1107, "682942": 1244, "683": [1208, 1233], "684": [1208, 1233], "685": [1208, 1233], "686": [1208, 1233], "6865721": 354, "6866574": 359, "687": [1131, 1208, 1233], "688": [1131, 1208, 1233], "6883": 1110, "689": 1131, "6892": 1110, "68939": 1106, "68939209": 1106, "6899": 1194, "69": [501, 1201], "690": 1213, "6900277": 1201, "691938": 363, "692": [1208, 1233], "69244075": 1244, "69281005859375": 1213, "69286346435547": 1213, "693": [1208, 1233], "6937828": 1151, "694": [1208, 1233], "6947": 1110, "695": [1208, 1233], "6950": 1110, "6956": 1110, "696": [1208, 1233], "696824676": [1134, 1243], "697": [1208, 1233], "6978912984252": 1128, "698": [1208, 1233], "698959": 1201, "699": 559, "6j": 725, "6x": [1133, 1153, 1230], "7": [0, 34, 157, 169, 214, 215, 216, 232, 238, 279, 280, 310, 311, 351, 361, 363, 416, 485, 606, 668, 681, 683, 703, 724, 732, 741, 746, 747, 750, 1070, 1088, 1100, 1102, 1104, 1114, 1116, 1119, 1121, 1128, 1130, 1131, 1133, 1136, 1151, 1159, 1186, 1191, 1193, 1195, 1198, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1222, 1227, 1233, 1234, 1236, 1238, 1242, 1244, 1247], "70": [527, 919, 923, 1213, 1244], "700": [1136, 1213], "7030899164106": 1128, "7042": 1110, "706": 559, "7077524804807109": 1107, "709e2d7ddd3f": 1130, "710": 1213, "7102678": 1159, "7104083": 1159, "7104991444398": 1128, "711355": 1201, "714": [1208, 1233], "7144494518315": 1128, "71479625": 358, "715": [1208, 1233], "71518937": [1134, 1243], "716": [1208, 1233], "7162": 895, "717": [1208, 1233], "7177599838802657": 1107, "7178471720636": 1128, "718": [1208, 1233], "7182817": 1242, "719": [1208, 1233], "7196": 1110, "72": [1104, 1105, 1131, 1227, 1244], "720": [715, 1208, 1213, 1233], "72172546": 1106, "72173": 1106, "72174072": 1106, "721844192": 1246, "7229": 1110, "722961019": 1238, "7230015": 363, "72503686": 1201, "726157440174": 1128, "7268": 1106, "72680664": 1106, "7271": 1151, "72747803": 1106, "72748": 1106, "7278922": [1200, 1227], "729": 1152, "72949654": [1208, 1233], "72965544": [1208, 1233], "72971725": 1159, "7298445": 1159, "73": [919, 923, 1122, 1205, 1242], "730": 1213, "7310586": [1200, 1227], "73168886": 1210, "7317": 1110, "7320509": [1200, 1227], "7320935035265": 1128, "733": [1199, 1212], "734": [1199, 1212], "735": [1199, 1212], "7352965": 1244, "73571277": 1194, "736": [1199, 1208, 1212, 1233], "7361260076634": 1128, "7368197": 1210, "737": [1199, 1208, 1212, 1233], "73712474": 352, "73727416992188": 1213, "7376612408998": 1128, "738": [1199, 1208, 1212, 1227, 1233], "739": [1199, 1208, 1212, 1233], "739723": 1201, "74": [1133, 1136, 1205, 1209, 1227, 1230], "740": [1208, 1212, 1213, 1233], "7409311e": 361, "741": [1208, 1212, 1233], "742": [1208, 1212, 1233], "743": [1199, 1212, 1238], "7433a86e7375": 1130, "744": [1199, 1212, 1238], "7441479": 1153, "74414825": 1153, "7446210750584": 1128, "745": [1199, 1212, 1238], "7458": 1136, "746": [1199, 1212, 1238], "7461": 1110, "747": [1199, 1212, 1238], "748": [1199, 1212, 1238], "749": [1199, 1212, 1238], "7492269469092": 1128, "75": [750, 1122, 1124, 1195, 1200, 1203, 1205, 1227], "750": 1213, "752466": 1201, "75262755": 353, "7534186": [1205, 1227], "754": [527, 1248], "75433": 1106, "7543335": 1106, "7568025": [1208, 1233], "7581523280307": 1128, "759": 1131, "76": [1120, 1244], "760": [1131, 1213], "760101": 1201, "760103": 1201, "761": 1131, "7613": 1110, "7619329": 353, "76338195800781": 1213, "76405235": 1191, "766": [1208, 1233], "7662": 1110, "767": [1208, 1233], "7676109": 358, "768": [1208, 1233], "76827": 150, "7684e": 0, "769": [1208, 1233], "77": [1120, 1205, 1227, 1230], "770": [1208, 1213, 1233], "771": [1131, 1208, 1233], "7717": 1213, "772": [1131, 1208, 1233], "77225566": 1159, "7724008": 1159, "773": [1131, 1208, 1233], "7732": 1110, "7733": 1110, "7737": 1110, "774": [1208, 1233], "7747": 1110, "775": [1208, 1233], "775133": 1201, "776": [1208, 1233], "777": [1208, 1233], "777622": 1201, "778": [1208, 1212, 1233], "7782": 909, "779": [1208, 1233], "7798324141778": 1128, "779884": 1211, "779886": 1211, "779888": 1211, "78": [750, 1136], "780": [1208, 1213, 1233], "7802": 1110, "781": [1208, 1233], "78104400634766": 1213, "78232": 150, "7839": 1110, "784": [1201, 1203, 1209, 1211, 1214], "787353515625": 1213, "789": [1208, 1233], "78907233": 7, "79": [387, 400, 404, 423, 1238], "790": [1208, 1213, 1233], "7907": 1110, "791": [1208, 1233], "792": [1208, 1233], "7923": 1136, "7925": 1110, "7927": 1110, "793": [1208, 1233], "7936": 1110, "794": [1208, 1233], "7949833": 352, "795": [628, 1208, 1233], "79611576": 356, "7987": 1110, "79ff": [402, 420], "7_spmd": 0, "7j": [1205, 1227], "8": [0, 18, 157, 169, 214, 215, 216, 238, 279, 280, 310, 311, 338, 339, 361, 363, 409, 416, 418, 485, 552, 634, 678, 684, 686, 699, 702, 736, 746, 747, 750, 824, 931, 941, 944, 945, 953, 1070, 1088, 1101, 1102, 1104, 1106, 1114, 1116, 1119, 1121, 1127, 1128, 1130, 1131, 1135, 1136, 1145, 1158, 1175, 1180, 1182, 1186, 1188, 1193, 1195, 1198, 1199, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1225, 1227, 1233, 1234, 1236, 1237, 1238, 1244, 1247, 1248], "80": [21, 71, 963, 1210, 1213], "800": [1136, 1213], "800067577": 1202, "8047469e": 361, "80833": 1213, "808557": 1201, "8088631": 354, "81": [1208, 1233], "810": 1213, "810046": 1201, "81115675": 1244, "811b7ddb3300": 1199, "8121": 1110, "8132702": [1208, 1233], "81566876": 354, "8158": 1110, "81585354": [1208, 1233], "817": 1186, "818": 1190, "818481": 1201, "818595": 1244, "818634": 1201, "8192": [1201, 1211], "81992": 1213, "82": [123, 1208, 1233, 1242], "820": 1213, "822799": 1223, "824237": 1244, "82575988769531": 1213, "8258905": 1244, "8293481": 1159, "82974285": 1159, "829906058": [1134, 1243], "83": [760, 776, 1199, 1208, 1233], "830": 1213, "83563": 1106, "83563232": 1106, "83594": 1151, "836": 1193, "83602": 340, "836303": 362, "83660888671875": 1213, "8388": 1136, "84": [1199, 1208, 1212, 1227, 1233], "840": 1213, "8400499820709229": 1209, "8402481j": 1151, "84028625488281": 1213, "84033": [1151, 1213], "8403342": 1244, "840824": 1151, "8414632": 357, "84147": [148, 149], "8414709568023682": 1232, "84147096": [1121, 1200, 1227], "841471": [1117, 1208, 1233], "8430": 1110, "843624": 145, "845365j": 1151, "8469000458717346": 1209, "8485": 1213, "85": [1130, 1199, 1208, 1212, 1233], "850": 1213, "8511531j": [1205, 1227], "8518669": 357, "8526619429658": 1128, "8532515": 1201, "85385131835938": 1213, "8574043": [1208, 1233], "85743": 150, "858128": 1201, "86": [388, 401, 403, 406, 421, 425, 1133, 1199, 1201, 1208, 1212, 1233, 1244], "860": 1213, "86013": 1201, "861367": 1201, "862": 1193, "8634": 1110, "86396026611328": 1213, "86555480957031": 1213, "8662417": 363, "8678": 1110, "8680282": 1212, "86f83c871e81": 1206, "87": [1199, 1205, 1208, 1212, 1233], "870": 1213, "87225807": 355, "87282": 1201, "8743667006492615": 1209, "8774644": [1205, 1230], "8784217": 1159, "8785025": 1159, "87930297851562": 1213, "88": [1199, 1202, 1205, 1208, 1212, 1227, 1230, 1233, 1236], "880": 1213, "8803000450134277": 1209, "8805201": 1194, "8807971": [1200, 1227], "884": 1205, "88956451416016": 1213, "89": [750, 1199, 1203, 1209, 1210, 1212], "890": 1213, "8901500105857849": 1209, "8907": 1110, "8907972116419": 1128, "893112": 1244, "89311206": 1244, "8941": 1110, "8957000374794006": 1209, "8991333246231079": 1209, "89968872070312": 1213, "9": [0, 13, 21, 34, 77, 157, 214, 215, 216, 238, 279, 280, 310, 311, 416, 418, 447, 485, 663, 664, 679, 681, 685, 703, 746, 747, 750, 799, 824, 1070, 1088, 1102, 1104, 1112, 1118, 1121, 1127, 1128, 1130, 1131, 1136, 1145, 1152, 1183, 1193, 1195, 1199, 1200, 1201, 1202, 1205, 1208, 1209, 1211, 1212, 1221, 1225, 1227, 1233, 1234, 1236, 1238, 1244, 1247], "90": [165, 742, 1202, 1212, 1213, 1236], "900": [1136, 1213], "9001": 1223, "9026976e": 361, "903700053691864": 1209, "90433645": 358, "904491": [1205, 1227], "9047365": 362, "9051978525331": 1128, "9061833620071411": 1209, "9064622": 1153, "9064634": 1153, "9066": 1110, "907651": 1201, "9087000489234924": 1209, "90898132324219": 1213, "9092974": [1117, 1121, 1200, 1208, 1227, 1233], "9092974066734314": 1232, "9092974662780762": [1116, 1117], "910": [1212, 1213], "911": 1212, "91113025": [1200, 1227], "9113333225250244": 1209, "9119454": 358, "912": 1212, "91204834": 1106, "91205": 1106, "9120717": 352, "91226196289062": 1213, "912600040435791": 1209, "912752": 1244, "91275555": [1208, 1233], "913": 1212, "914": 1212, "91421": 150, "915": 1212, "9156833291053772": 1209, "9157500267028809": 1203, "916": 1212, "9176000356674194": 1209, "9178": 1110, "9178486": 1244, "9184": 1110, "9189": 1110, "9192000031471252": 1209, "9195000529289246": 1203, "91mfals": 1199, "92": [1106, 1238], "920": 1213, "9214000701904297": 1209, "9222500324249268": 1209, "92279506": 1244, "924": 1247, "9240990200157": 1128, "9241000413894653": 1209, "925": 1247, "9253666996955872": 1209, "925881": 1201, "926": [1227, 1247], "9263": [1173, 1187, 1197, 1243], "9269000291824341": 1209, "927": 1247, "928": [1106, 1247], "929": 1247, "92ma": [1200, 1204, 1212, 1227, 1239], "92mb": [1200, 1204, 1212, 1227, 1239], "92mc": [1200, 1204, 1212, 1227, 1239], "92md": [1200, 1212, 1227, 1239], "92me": [1200, 1212, 1227, 1239], "92mf": 1239, "92mtrue": [1199, 1200, 1204, 1205, 1208, 1211, 1212, 1227, 1232, 1233, 1238, 1239], "93": [1106, 1227], "930": [1213, 1247], "9304e": 750, "9311": 1110, "933040465": [1134, 1243], "93419647216797": 1213, "9350724": [1208, 1233], "9372166991233826": 1203, "9384000301361084": 1203, "938720703125": 1213, "93leibler_diverg": 963, "940": 1213, "940544j": [1205, 1227], "9407": 1197, "94176483154297": 1213, "9419": 1197, "943": 1185, "9469000697135925": 1203, "9491666555404663": 1203, "95": [159, 160, 1209], "950": 1213, "95257413": [1200, 1227], "95321447": 355, "9534000158309937": 1203, "9545448661609": 1128, "9562": 1110, "9568166732788086": 1203, "9577000737190247": 1203, "9596": 1185, "95m__main__": 1247, "95mclass": 1212, "95mfry": 1199, "95mfunction": [1200, 1202, 1227, 1236], "95mmatplotlib": [1200, 1213, 1227], "96": [1213, 1242], "960": 1213, "960099": 1201, "961043": 144, "9616000652313232": 1203, "9620": 1110, "962584079": [1134, 1243], "9631333351135254": 1203, "96438598632812": 1213, "9650000333786011": 1203, "9653214": 1194, "967050713": 1199, "9672000408172607": 1203, "9675000309944153": 1203, "97": [894, 1213], "970": [894, 1213], "9708333611488342": 1203, "973716676235199": 1203, "97606325": 1244, "97742504": 1244, "97742516": 1244, "9787164": 1244, "9791922366721637": [1134, 1243], "9799849932008908": 1107, "979984993200891": 1107, "98": [1202, 1205, 1208, 1213, 1233, 1236, 1242], "980": 1213, "9812148": 1244, "98229736": 1244, "983416": 1201, "983j": 1151, "984j": 1151, "986": 1212, "98645043": 1199, "987": 1212, "988": 1212, "989": [894, 1212], "9896846": [1205, 1227], "9897013": 1212, "9899": [405, 424, 1110], "9899924966004454": 1107, "9899925": [1200, 1227], "99": [1207, 1208, 1213, 1233], "990": [1212, 1213], "9906": 1110, "9906997680664": 1213, "991": 1212, "9917": 1185, "992": 1212, "99235534667969": 1213, "9946": 1110, "9950": 1185, "99581909179688": 1213, "999": [1131, 1145, 1194, 1212], "999859": 1151, "9999": [1185, 1223], "99998045": 1244, "A": [2, 3, 4, 7, 9, 13, 16, 17, 18, 19, 30, 31, 32, 37, 38, 49, 50, 57, 71, 72, 73, 75, 76, 77, 86, 87, 88, 89, 94, 95, 96, 103, 104, 105, 106, 120, 121, 128, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 165, 191, 194, 197, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 295, 319, 332, 338, 339, 340, 341, 342, 352, 353, 354, 355, 356, 357, 358, 370, 371, 387, 388, 390, 394, 395, 396, 400, 401, 402, 403, 404, 406, 413, 419, 420, 421, 423, 425, 430, 431, 434, 436, 440, 443, 445, 459, 465, 467, 469, 472, 475, 476, 480, 486, 494, 496, 497, 501, 503, 509, 514, 515, 528, 531, 532, 533, 546, 552, 559, 562, 563, 566, 568, 572, 576, 580, 587, 589, 598, 599, 619, 620, 621, 622, 628, 634, 635, 637, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 663, 675, 676, 679, 682, 685, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 721, 728, 729, 734, 741, 742, 745, 750, 758, 760, 764, 773, 775, 776, 778, 780, 786, 804, 824, 831, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 887, 888, 889, 890, 892, 894, 895, 896, 897, 900, 901, 903, 904, 906, 908, 909, 911, 915, 916, 917, 918, 919, 920, 923, 924, 925, 926, 935, 956, 957, 960, 965, 1007, 1010, 1066, 1068, 1070, 1075, 1076, 1078, 1084, 1085, 1087, 1088, 1089, 1099, 1100, 1101, 1102, 1104, 1107, 1109, 1110, 1112, 1114, 1119, 1120, 1121, 1122, 1123, 1130, 1131, 1134, 1135, 1136, 1145, 1146, 1152, 1153, 1158, 1173, 1175, 1176, 1182, 1183, 1185, 1188, 1189, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1226, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1247], "AND": [175, 390, 432, 652], "AS": [1203, 1209], "And": [0, 1107, 1112, 1119, 1121, 1137, 1188, 1193, 1194, 1199, 1200, 1204, 1205, 1207, 1208, 1211, 1219, 1227, 1233, 1236, 1246], "As": [0, 7, 49, 50, 71, 120, 195, 196, 229, 384, 527, 728, 824, 837, 920, 924, 1104, 1107, 1108, 1110, 1112, 1114, 1117, 1121, 1122, 1125, 1131, 1132, 1134, 1135, 1136, 1139, 1151, 1159, 1180, 1183, 1184, 1185, 1186, 1188, 1190, 1191, 1193, 1196, 1199, 1200, 1201, 1202, 1206, 1208, 1211, 1212, 1214, 1216, 1219, 1227, 1231, 1233, 1234, 1236, 1238, 1242, 1243, 1244, 1247], "At": [7, 69, 71, 464, 619, 652, 653, 654, 655, 816, 928, 1107, 1120, 1130, 1136, 1152, 1183, 1184, 1187, 1188, 1194, 1195, 1199, 1200, 1202, 1203, 1209, 1211, 1212, 1213, 1214, 1216, 1219, 1227, 1236], "Be": 1223, "But": [7, 26, 49, 50, 56, 452, 710, 713, 1107, 1114, 1117, 1122, 1128, 1130, 1133, 1137, 1180, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1199, 1200, 1201, 1205, 1206, 1210, 1211, 1212, 1218, 1219, 1227, 1230, 1234, 1246], "By": [16, 57, 150, 158, 281, 333, 369, 392, 393, 405, 407, 408, 419, 424, 464, 473, 475, 509, 515, 525, 549, 557, 613, 644, 656, 660, 666, 673, 674, 675, 682, 684, 685, 686, 688, 711, 722, 728, 733, 736, 739, 761, 769, 773, 774, 782, 808, 810, 813, 820, 821, 822, 823, 837, 922, 955, 1048, 1107, 1110, 1114, 1117, 1119, 1120, 1122, 1125, 1130, 1151, 1158, 1178, 1183, 1184, 1190, 1193, 1194, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1206, 1208, 1211, 1212, 1214, 1216, 1221, 1223, 1224, 1227, 1233, 1234, 1236, 1239, 1244], "For": [0, 7, 13, 14, 15, 17, 19, 30, 34, 49, 50, 55, 56, 57, 66, 67, 68, 69, 70, 71, 77, 143, 144, 145, 147, 150, 151, 157, 165, 169, 188, 195, 196, 197, 198, 209, 212, 232, 242, 247, 248, 263, 264, 268, 272, 277, 279, 280, 289, 296, 297, 298, 299, 300, 301, 302, 303, 307, 312, 317, 326, 332, 339, 343, 345, 370, 372, 374, 385, 386, 387, 399, 400, 413, 417, 419, 428, 434, 436, 453, 465, 471, 480, 482, 493, 510, 513, 514, 516, 519, 524, 526, 527, 532, 533, 549, 552, 556, 558, 567, 570, 576, 589, 624, 627, 635, 645, 652, 653, 654, 655, 658, 662, 664, 672, 673, 674, 678, 682, 684, 685, 686, 688, 691, 701, 711, 721, 725, 736, 740, 745, 746, 747, 754, 764, 768, 769, 772, 773, 780, 783, 787, 808, 810, 815, 824, 828, 829, 830, 831, 837, 865, 891, 892, 893, 895, 910, 914, 919, 938, 939, 941, 946, 953, 961, 964, 965, 1066, 1075, 1101, 1102, 1104, 1105, 1107, 1108, 1110, 1112, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1151, 1152, 1153, 1158, 1159, 1170, 1173, 1175, 1176, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248], "If": [7, 9, 13, 16, 29, 30, 33, 34, 35, 37, 38, 44, 49, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 88, 91, 97, 101, 104, 105, 109, 113, 118, 120, 124, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 195, 196, 213, 217, 218, 219, 229, 230, 231, 232, 245, 246, 247, 256, 271, 272, 273, 277, 278, 279, 281, 289, 292, 295, 296, 297, 298, 299, 300, 301, 317, 319, 333, 334, 336, 340, 345, 361, 369, 389, 390, 391, 392, 393, 395, 396, 398, 399, 405, 407, 408, 409, 410, 411, 413, 414, 419, 424, 429, 430, 431, 432, 435, 437, 438, 439, 440, 441, 443, 447, 448, 452, 453, 459, 461, 464, 466, 467, 468, 471, 472, 473, 475, 476, 480, 481, 485, 486, 487, 488, 489, 490, 494, 495, 497, 499, 500, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 526, 527, 528, 529, 531, 538, 541, 542, 543, 544, 546, 549, 552, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 575, 576, 577, 579, 580, 588, 590, 593, 595, 598, 599, 600, 606, 608, 609, 610, 611, 612, 613, 624, 627, 628, 630, 631, 633, 634, 635, 637, 641, 644, 645, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 691, 692, 693, 698, 702, 703, 705, 706, 708, 711, 712, 713, 715, 717, 718, 720, 722, 723, 724, 730, 732, 733, 734, 735, 736, 737, 739, 741, 745, 746, 747, 748, 750, 751, 752, 762, 764, 765, 768, 769, 770, 771, 773, 774, 777, 778, 779, 780, 781, 790, 798, 799, 809, 810, 811, 813, 815, 816, 818, 824, 837, 847, 867, 869, 882, 883, 884, 885, 886, 888, 891, 892, 893, 900, 903, 904, 906, 907, 908, 909, 910, 911, 919, 921, 922, 923, 926, 942, 955, 965, 1007, 1029, 1048, 1049, 1070, 1073, 1085, 1087, 1088, 1092, 1099, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1110, 1112, 1114, 1115, 1119, 1120, 1121, 1122, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1152, 1158, 1166, 1170, 1173, 1175, 1180, 1182, 1183, 1184, 1186, 1188, 1189, 1190, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1205, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "In": [0, 7, 18, 35, 67, 71, 82, 84, 104, 145, 150, 158, 159, 160, 191, 195, 196, 209, 229, 295, 302, 325, 333, 339, 422, 434, 436, 464, 468, 473, 475, 476, 480, 485, 490, 496, 514, 515, 516, 519, 521, 557, 579, 587, 589, 595, 604, 614, 624, 633, 634, 635, 644, 645, 650, 651, 656, 658, 675, 676, 682, 685, 688, 701, 702, 715, 720, 722, 723, 729, 733, 734, 752, 771, 777, 791, 811, 812, 824, 828, 892, 894, 906, 907, 912, 915, 916, 917, 918, 920, 924, 925, 926, 937, 1007, 1032, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1117, 1120, 1121, 1122, 1123, 1125, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1139, 1146, 1152, 1158, 1166, 1173, 1175, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1205, 1206, 1208, 1210, 1211, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "It": [0, 7, 13, 19, 70, 71, 77, 122, 144, 145, 150, 151, 291, 333, 342, 396, 397, 407, 408, 409, 410, 430, 431, 440, 445, 450, 487, 489, 490, 540, 541, 544, 620, 622, 624, 633, 641, 668, 705, 715, 732, 733, 749, 813, 824, 906, 909, 914, 926, 935, 939, 940, 944, 945, 964, 1007, 1068, 1069, 1070, 1071, 1072, 1081, 1082, 1084, 1086, 1088, 1090, 1091, 1099, 1100, 1102, 1107, 1110, 1111, 1112, 1115, 1117, 1119, 1121, 1122, 1125, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1152, 1153, 1154, 1158, 1159, 1176, 1182, 1184, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1223, 1227, 1231, 1232, 1234, 1236, 1237, 1238, 1242, 1243, 1246, 1247], "Its": [1, 7, 17, 50, 71, 144, 145, 151, 333, 340, 404, 423, 615, 619, 620, 633, 636, 640, 707, 824, 940, 954, 1099, 1100, 1107, 1110, 1153, 1158, 1159, 1175, 1194, 1200, 1227], "NOT": [0, 176, 434, 436, 589, 653], "No": [121, 419, 453, 496, 614, 688, 912, 1110, 1130, 1166, 1199, 1202, 1214, 1219, 1223, 1232, 1236], "Not": [0, 71, 594, 675, 676, 682, 685, 904, 1105, 1115, 1134, 1182, 1186, 1188, 1193, 1202, 1212, 1216, 1219, 1223, 1237], "OF": [1203, 1209], "OR": [177, 178, 395, 437, 654, 1117, 1203, 1209], "Of": [901, 904, 910, 1130, 1131, 1203, 1209, 1210, 1214, 1238], "On": [28, 35, 68, 77, 824, 827, 895, 1110, 1119, 1125, 1127, 1128, 1152, 1158, 1185, 1186, 1189, 1195, 1198, 1201, 1208, 1211, 1216, 1218, 1223, 1233, 1234], "One": [9, 280, 364, 371, 426, 427, 428, 587, 604, 682, 701, 734, 748, 882, 1107, 1109, 1121, 1122, 1124, 1130, 1131, 1135, 1152, 1180, 1182, 1185, 1186, 1189, 1190, 1195, 1200, 1201, 1202, 1205, 1206, 1208, 1210, 1214, 1216, 1219, 1221, 1224, 1225, 1227, 1233, 1234, 1236, 1237, 1238, 1242], "Ones": [413, 675], "Or": [777, 1107, 1154, 1186, 1188, 1195, 1211, 1216, 1221, 1224, 1234], "Such": [150, 809, 1105, 1121, 1132, 1158, 1182, 1189, 1195, 1214, 1231, 1237, 1246], "TO": 1202, "That": [0, 7, 13, 56, 180, 281, 285, 295, 325, 657, 1105, 1107, 1114, 1119, 1120, 1122, 1131, 1135, 1136, 1182, 1184, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1199, 1200, 1204, 1205, 1206, 1210, 1211, 1212, 1214, 1219, 1222, 1224, 1227, 1230, 1234, 1237, 1238, 1247], "The": [0, 7, 9, 12, 13, 16, 17, 18, 19, 26, 30, 32, 33, 34, 35, 37, 50, 56, 57, 67, 68, 69, 71, 77, 86, 87, 96, 97, 101, 103, 108, 120, 121, 128, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 158, 159, 160, 165, 174, 188, 190, 191, 195, 197, 209, 213, 217, 219, 229, 232, 238, 245, 246, 250, 251, 255, 256, 257, 269, 277, 281, 288, 289, 295, 296, 297, 298, 299, 300, 301, 310, 312, 325, 332, 333, 338, 339, 340, 341, 342, 346, 352, 360, 365, 369, 378, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 409, 410, 411, 413, 416, 417, 418, 420, 423, 424, 426, 427, 428, 429, 430, 431, 440, 441, 443, 445, 448, 450, 452, 453, 454, 461, 462, 463, 464, 466, 467, 469, 471, 472, 473, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 493, 494, 495, 496, 499, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 540, 542, 543, 544, 545, 549, 552, 553, 554, 555, 557, 559, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 577, 587, 588, 590, 592, 594, 595, 598, 599, 601, 606, 608, 609, 613, 615, 619, 620, 621, 622, 624, 627, 630, 631, 633, 634, 635, 637, 640, 644, 645, 646, 647, 656, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 691, 692, 697, 698, 700, 701, 702, 703, 705, 706, 708, 710, 711, 712, 713, 715, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 739, 740, 741, 742, 747, 749, 750, 751, 753, 754, 755, 757, 758, 760, 762, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 788, 789, 790, 791, 798, 799, 804, 805, 809, 810, 811, 815, 816, 817, 818, 820, 821, 822, 823, 824, 828, 829, 831, 834, 835, 836, 837, 838, 840, 841, 842, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 873, 875, 876, 877, 879, 880, 882, 883, 884, 885, 886, 888, 889, 891, 892, 893, 894, 896, 897, 898, 900, 901, 903, 904, 906, 907, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 923, 924, 925, 926, 927, 928, 929, 933, 934, 935, 937, 939, 940, 942, 943, 947, 953, 954, 955, 956, 957, 958, 960, 961, 962, 965, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1074, 1079, 1081, 1084, 1085, 1093, 1099, 1100, 1101, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1145, 1146, 1148, 1150, 1151, 1152, 1153, 1154, 1158, 1159, 1160, 1166, 1167, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1242, 1243, 1244, 1247, 1248], "Their": [165, 1104, 1159], "Then": [68, 339, 452, 657, 1107, 1112, 1122, 1128, 1130, 1131, 1133, 1152, 1187, 1188, 1197, 1199, 1201, 1202, 1211, 1214, 1221, 1223, 1227, 1236, 1238], "There": [14, 15, 644, 681, 683, 703, 724, 799, 964, 1107, 1110, 1112, 1119, 1122, 1124, 1125, 1127, 1128, 1130, 1136, 1146, 1152, 1178, 1182, 1185, 1186, 1188, 1189, 1190, 1195, 1199, 1200, 1202, 1203, 1205, 1206, 1209, 1211, 1214, 1216, 1221, 1222, 1227, 1234, 1237, 1248], "These": [0, 90, 215, 289, 310, 332, 339, 369, 396, 443, 472, 496, 497, 527, 664, 670, 711, 750, 774, 813, 955, 1104, 1107, 1109, 1110, 1122, 1125, 1127, 1131, 1132, 1137, 1144, 1152, 1159, 1166, 1182, 1184, 1185, 1186, 1189, 1190, 1196, 1198, 1199, 1205, 1207, 1208, 1211, 1212, 1216, 1218, 1224, 1227, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1244, 1247], "To": [0, 9, 35, 77, 145, 146, 150, 332, 399, 513, 519, 521, 538, 624, 692, 717, 718, 750, 780, 808, 927, 1104, 1106, 1107, 1110, 1117, 1119, 1120, 1121, 1122, 1127, 1128, 1130, 1131, 1134, 1135, 1136, 1137, 1144, 1150, 1152, 1158, 1159, 1166, 1173, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1211, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1244, 1246, 1247, 1248], "Will": [588, 620, 1202, 1236], "With": [0, 150, 364, 369, 390, 392, 393, 395, 407, 408, 429, 471, 631, 660, 662, 663, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 707, 720, 722, 724, 741, 769, 771, 810, 955, 957, 1029, 1049, 1107, 1109, 1110, 1117, 1128, 1145, 1158, 1170, 1180, 1184, 1185, 1186, 1188, 1193, 1194, 1195, 1201, 1205, 1210, 1211, 1214, 1218, 1221, 1227, 1234, 1238, 1242, 1244], "_": [0, 31, 56, 169, 340, 746, 747, 781, 886, 1107, 1114, 1117, 1130, 1133, 1134, 1135, 1137, 1151, 1182, 1191, 1192, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1211, 1212, 1221, 1224, 1227, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1246, 1247], "_1": 896, "_1f_1": 947, "__": 1211, "__add__": 1107, "__array__": [413, 1107, 1121, 1185], "__array_api_version__": 1148, "__array_priority__": 1107, "__bool__": [471, 1107, 1131, 1199, 1212, 1238], "__call__": [1107, 1176, 1203], "__cause__": 1110, "__class__": [1107, 1203], "__closure__": 9, "__cuda_array_interface__": 1110, "__dlpack__": [37, 38, 546], "__dlpack_device__": [37, 38, 546], "__enter__": [1202, 1236], "__eq__": [150, 824, 1107, 1110, 1122, 1158], "__exit__": [1202, 1236], "__getattr__": 1107, "__getitem__": [1185, 1214, 1216], "__gt__": 1107, "__hash__": [150, 824, 1107, 1110, 1122, 1158], "__index__": [1121, 1185], "__init__": [1, 2, 3, 11, 12, 14, 15, 39, 43, 51, 80, 81, 82, 83, 84, 85, 127, 442, 451, 455, 456, 458, 494, 527, 530, 534, 535, 536, 539, 556, 574, 578, 581, 582, 583, 584, 586, 694, 695, 756, 792, 794, 795, 796, 797, 806, 828, 829, 913, 927, 928, 1007, 1075, 1080, 1082, 1107, 1122, 1135, 1137, 1203, 1224, 1246, 1247], "__instancecheck__": 1185, "__int__": [1131, 1185, 1199, 1212, 1238], "__isinstance__": 1185, "__iter__": 1185, "__jax_array__": 1185, "__lt__": 1107, "__main__": [1135, 1199, 1247], "__mul__": 1107, "__name__": [341, 1107, 1131, 1195, 1199, 1201, 1212, 1238], "__neg__": 1107, "__new__": [1224, 1247], "__nonzero__": [471, 1107, 1131], "__radd__": 1107, "__repr__": [1107, 1224, 1247], "__rmul__": 1107, "__rshift__": 1107, "__setitem__": 1216, "__slots__": 1107, "__str__": [1107, 1135, 1247], "__tracebackhide__": [1110, 1199, 1208, 1212, 1233, 1238, 1247], "_add": 1107, "_arg": [1208, 1233], "_argnum": 1184, "_array_doc": 1247, "_assert_l": 1193, "_associate_new_top_level_threads_with": [1208, 1233], "_autosummari": [1110, 1130, 1199, 1212], "_auxdata": [1079, 1081], "_basic": [891, 899, 907, 908], "_batch_jaxpr2": [1208, 1233], "_bool": [1107, 1131, 1199, 1212, 1238], "_build": 1119, "_bwd": [1200, 1227], "_cached_lowering_to_hlo": 1212, "_calc": 1122, "_callback": [1208, 1233], "_canonicalize_dimens": [1199, 1212], "_cast_to_numer": 1199, "_check_and_canonicalize_out_shard": [1199, 1212, 1238], "_check_forgot_shape_tupl": 1199, "_check_input_dtype_grad": [1208, 1233], "_check_output_dtype_jacrev": 1247, "_children": 1079, "_code": 51, "_compute_newshap": 1212, "_cond_partial_ev": 1107, "_context": [1208, 1233], "_contiguous_": 1158, "_convert_to_array_if_dtype_fail": 1247, "_create_pjit_jaxpr": [1199, 1212, 1238], "_current_handl": [1208, 1233], "_custom_call_lowering_rul": 0, "_decomp": [892, 893, 897], "_decomp_choleski": [888, 889, 890], "_decomp_lu": [900, 901, 902], "_decomp_qr": 904, "_decomp_schur": [905, 906], "_decomp_svd": 910, "_default_toler": 1110, "_distn_infrastructur": [969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "_div": 952, "_dot_gener": 496, "_dtype_and_weaktyp": 1247, "_element_type_to_descriptor_type_map": 0, "_empti": [117, 118], "_ensure_optional_ax": 1199, "_entr": 963, "_execut": 1183, "_expand_bool_indic": [1199, 1212], "_expm_frechet": 895, "_f": 909, "_filter_zero": [1208, 1233], "_filtering_mod": [1199, 1208, 1212, 1233, 1238, 1247], "_flatcallback": [1208, 1233], "_forward_method_to_av": [1199, 1212], "_forward_operator_to_av": [1199, 1212], "_forward_property_to_av": 1212, "_fwd": [1200, 1227], "_gather": [1199, 1212], "_get_fastpath_data": [1199, 1208, 1212, 1233, 1238], "_getitem": [1199, 1212], "_gt": 1107, "_i": [368, 1130], "_impl": 1194, "_indent": [1202, 1236], "_indexupdatehelp": [1199, 1212], "_infer_param": [1199, 1212, 1238], "_inline_liter": 1107, "_input_type_to_trac": [1199, 1208, 1212, 1233, 1238], "_int": 1131, "_interpol": 912, "_invalid_shape_error": [1199, 1212], "_is_under_rerais": [1199, 1208, 1212, 1233, 1238, 1247], "_jacrev_unravel": 1247, "_jax_dtype_set": 1247, "_jaxcomputationbuild": [1202, 1236], "_jnp_dtype": 1199, "_join_jaxpr_const": 1107, "_join_jaxpr_r": 1107, "_jv_jvp": [1208, 1233], "_jvp": [1202, 1205, 1227, 1236], "_jvp_jaxpr": [1208, 1233], "_k": [947, 1110], "_kde": [1007, 1008, 1009, 1010, 1011, 1012, 1013], "_last_traceback": [1208, 1233], "_lattice_result_typ": 1247, "_layernorm": 1186, "_lt": 1107, "_m": 961, "_mapped_axis_s": [1208, 1233, 1247], "_matfunc": [894, 896], "_matfuncs_sqrtm": 909, "_metadata": 51, "_mgrid": 665, "_minim": 9, "_mlir": [1202, 1236], "_mlir_lib": [1202, 1236], "_mul": 1107, "_multivari": [997, 998, 1030, 1031, 1032, 1033], "_must_": 78, "_n": 468, "_name": 0, "_ndim": [1199, 1212], "_neg": 1107, "_nonzero": [1107, 1131], "_normalize_to_shard": 1199, "_ogrid": 696, "_operator_round": [1130, 1199, 1212], "_output": [1206, 1234], "_p": 1204, "_pattern": 1151, "_payload": 51, "_pjit_batch": [1208, 1233], "_pjit_call_impl": 1212, "_pjit_call_impl_python": 1212, "_pjit_explicit_shard": 1212, "_pjit_jaxpr": [1199, 1212, 1238], "_pjit_jvp": [1208, 1233], "_pjit_low": 1212, "_pjit_lower_cach": 1212, "_plu": 380, "_pred": 51, "_promote_shap": 1199, "_pseudo_sync_runn": [1202, 1208, 1212, 1233, 1236], "_python_pjit_help": [1199, 1202, 1208, 1212, 1233, 1236, 1238], "_quadratur": 886, "_radd": 1107, "_rbg_fold_in": 137, "_rbg_random_bit": [137, 142], "_rbg_seed": [137, 142], "_rbg_split": 137, "_read_most_recent_pjit_call_execut": [1199, 1208, 1212, 1233, 1238], "_realtransform": [882, 883, 884, 885], "_reduce_sum": 1199, "_reduct": 1199, "_relu": 366, "_renderable_repr": [1206, 1234], "_repr_html_": [1206, 1234], "_reshap": 1212, "_rewriting_tak": [1199, 1212], "_rms_norm_bwd_abstract": 0, "_rms_norm_bwd_cuda_low": 0, "_rms_norm_bwd_p": 0, "_rms_norm_fwd_abstract": 0, "_rms_norm_fwd_cuda_low": 0, "_rms_norm_fwd_p": 0, "_rmul": 1107, "_rope": 1186, "_rotat": [927, 928], "_rule": 1194, "_run": [1208, 1233], "_run_cel": [1208, 1212, 1233], "_run_cod": [1202, 1208, 1233, 1236], "_run_module_as_main": [1202, 1208, 1233, 1236], "_run_onc": [1208, 1233], "_safe_mul": 1110, "_scipy_jv": [1208, 1233], "_segment": 953, "_set_coroutine_origin_track": [1208, 1233], "_set_running_loop": [1208, 1233], "_showtraceback": [1208, 1233], "_sigmoid": [347, 348, 349, 367], "_sign": 377, "_signaltool": [915, 916, 917, 918, 920], "_silu": [348, 349], "_site_initi": [1202, 1236], "_softmax": 368, "_special_matric": [887, 898, 911], "_spectral_pi": [919, 921, 922, 923], "_spfun_stat": 958, "_split_index_for_jit": [1199, 1212], "_split_transpos": [295, 1182, 1237], "_src": [0, 5, 6, 10, 22, 23, 25, 26, 27, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 337, 372, 373, 446, 572, 617, 633, 650, 651, 665, 696, 725, 819, 939, 941, 947, 953, 954, 961, 966, 967, 968, 1105, 1107, 1110, 1119, 1130, 1131, 1185, 1187, 1194, 1196, 1199, 1202, 1204, 1208, 1212, 1233, 1236, 1238, 1247], "_state": 1110, "_statecontextmanag": [5, 6, 22, 23, 25, 26, 27, 46, 47, 48, 337, 819], "_stats_pi": [1029, 1048, 1049], "_std_basi": 1247, "_stop": [1208, 1233], "_tanh": 350, "_trace": [1107, 1202, 1236], "_trace_ind": [1202, 1236], "_trace_unind": [1202, 1236], "_tree_flatten": [1107, 1122], "_tree_unflatten": [1107, 1122], "_type_promotion_lattic": 1247, "_unimplemented_setitem": [1130, 1199, 1212], "_uniqueallresult": 800, "_uniquecountsresult": 801, "_uniqueinverseresult": 802, "_unsafe_rbg_fold_in": 142, "_unsafe_rbg_split": 142, "_unspecifi": [368, 378], "_valu": 0, "_version": 1196, "_vjp": [1208, 1233, 1247], "_weak_typ": 1247, "_why_": [1199, 1212], "_with_path": 1135, "_with_sharding_constraint": 1186, "_wrapper": 0, "_xla": [1107, 1212], "_xla_cal": 1131, "_xla_call_impl": 1131, "_xla_callable_uncach": 1131, "_xla_const": 1107, "_xla_param": 1107, "_xla_shap": 1107, "a1": [414, 415, 708, 713, 714, 1107, 1224, 1247], "a100": [1110, 1125], "a2": [414, 415, 708, 713, 714, 1107, 1224, 1247], "a2_": 1107, "a3": [1224, 1247], "a_": [468, 699], "a_0": [699, 1200, 1227], "a_1": 699, "a_ax": 777, "a_bar": [1200, 1227], "a_block": [1186, 1211], "a_max": [453, 1110], "a_min": [453, 1110], "a_swap": 772, "a_tre": [1135, 1247], "a_x": 1186, "aand": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648, 776, 935], "aarch64": [1110, 1127], "ab": [120, 159, 160, 381, 386, 391, 590, 615, 627, 839, 932, 935, 936, 949, 951, 1110, 1145, 1200, 1219, 1227], "abc": [604, 1107, 1211], "abil": [1110, 1131, 1183, 1185, 1186, 1189, 1190, 1191, 1195, 1214, 1238], "abl": [0, 571, 631, 710, 713, 1105, 1107, 1114, 1116, 1117, 1119, 1122, 1123, 1127, 1128, 1131, 1134, 1170, 1180, 1183, 1185, 1188, 1190, 1196, 1199, 1202, 1203, 1205, 1209, 1216, 1221, 1223, 1224, 1227, 1236, 1238, 1247], "abort": 1152, "about": [0, 17, 71, 289, 331, 444, 514, 527, 711, 813, 912, 1107, 1108, 1110, 1117, 1119, 1120, 1121, 1122, 1130, 1131, 1133, 1136, 1137, 1144, 1170, 1173, 1180, 1183, 1186, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1227, 1230, 1232, 1233, 1234, 1236, 1238, 1239, 1244, 1246, 1248], "abov": [0, 16, 71, 145, 160, 174, 229, 251, 255, 256, 295, 325, 339, 364, 452, 481, 484, 485, 503, 511, 516, 521, 525, 634, 662, 672, 678, 684, 686, 720, 769, 782, 783, 810, 903, 904, 907, 921, 953, 1102, 1104, 1107, 1109, 1110, 1112, 1114, 1117, 1119, 1120, 1121, 1122, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1152, 1170, 1173, 1180, 1182, 1185, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1205, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1221, 1223, 1224, 1227, 1230, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "abramovitz": 501, "abramowitz": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 469, 572, 646, 647, 648, 760, 775, 776, 935], "abs_p": 1159, "absenc": [16, 1122, 1202, 1236, 1247], "absl": [1110, 1122, 1130, 1180, 1184, 1193, 1199, 1225], "absolut": [152, 288, 364, 369, 385, 391, 416, 418, 434, 436, 507, 555, 589, 590, 608, 635, 750, 808, 893, 932, 946, 955, 1110], "abstract": [34, 43, 50, 340, 451, 458, 530, 539, 578, 586, 688, 694, 756, 806, 1107, 1114, 1121, 1122, 1123, 1131, 1180, 1182, 1184, 1185, 1188, 1190, 1193, 1195, 1199, 1208, 1216, 1218, 1219, 1230, 1232, 1233, 1237, 1238, 1239], "abstract_arg": 1131, "abstract_arrai": 1110, "abstract_eval_rul": 1107, "abstract_i": [1199, 1212], "abstracted_ax": [150, 340, 1158], "abstractli": [0, 1114, 1202, 1236], "abstractvalu": [1107, 1199, 1208, 1212, 1233, 1238], "abund": 1214, "academ": [615, 619, 620, 633, 636, 707], "acc": 1216, "acceler": [7, 69, 120, 715, 748, 828, 1104, 1105, 1106, 1108, 1109, 1117, 1119, 1122, 1123, 1126, 1127, 1131, 1136, 1139, 1152, 1166, 1193, 1195, 1198, 1199, 1203, 1204, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1233, 1238, 1248], "accept": [0, 9, 13, 56, 57, 66, 71, 121, 122, 209, 295, 397, 496, 805, 914, 933, 943, 947, 961, 1102, 1104, 1107, 1110, 1159, 1179, 1185, 1188, 1189, 1191, 1192, 1194, 1195, 1199, 1214, 1219, 1224, 1239, 1247], "accepts_param": [1208, 1233], "access": [7, 50, 245, 247, 255, 256, 291, 332, 409, 482, 483, 645, 657, 702, 1081, 1110, 1119, 1122, 1133, 1160, 1187, 1191, 1194, 1196, 1205, 1214, 1216, 1218, 1221, 1223, 1227, 1230], "accident": [1110, 1135, 1186, 1194, 1214, 1247], "accommod": 0, "accompani": 1112, "accomplish": [1123, 1159, 1184, 1185, 1218, 1221, 1238], "accord": [77, 91, 147, 195, 196, 247, 269, 277, 278, 303, 429, 447, 464, 525, 613, 619, 620, 621, 622, 701, 840, 841, 842, 845, 846, 849, 850, 851, 852, 854, 855, 856, 857, 860, 862, 863, 864, 865, 866, 868, 870, 871, 873, 875, 876, 877, 879, 880, 892, 893, 1110, 1130, 1133, 1153, 1158, 1185, 1188, 1194, 1200, 1211, 1214, 1227], "accordingli": [473, 1101, 1135, 1247], "account": [567, 728, 734, 736, 1110, 1112, 1185, 1189, 1194, 1201, 1208, 1212, 1233, 1242], "accum": 1186, "accumul": [0, 193, 195, 197, 198, 199, 212, 213, 464, 468, 475, 476, 490, 579, 658, 675, 676, 682, 685, 710, 713, 720, 771, 777, 779, 811, 1110, 1120, 1122, 1133, 1152, 1202, 1205, 1211, 1216, 1219, 1221, 1227, 1236], "accur": [559, 924, 925, 975, 986, 993, 999, 1003, 1016, 1021, 1025, 1039, 1044, 1050, 1054, 1059, 1062, 1064, 1122, 1166], "accuraci": [26, 514, 515, 516, 519, 521, 640, 854, 926, 1110, 1166, 1189, 1203, 1209, 1212, 1219], "accustom": [1108, 1130, 1173, 1216], "achiev": [49, 71, 251, 780, 924, 925, 926, 957, 1107, 1122, 1123, 1125, 1158, 1185, 1186, 1188, 1190, 1191, 1214, 1216, 1219], "acondit": 816, "acontext": 1248, "acoust": 882, "acquir": 1223, "acronym": [722, 1104], "across": [7, 9, 28, 35, 75, 77, 78, 79, 157, 229, 279, 295, 325, 338, 339, 378, 813, 824, 837, 1101, 1104, 1105, 1108, 1110, 1117, 1120, 1132, 1136, 1152, 1157, 1158, 1160, 1173, 1175, 1176, 1180, 1185, 1186, 1189, 1191, 1198, 1199, 1206, 1207, 1208, 1211, 1215, 1216, 1218, 1221, 1231, 1233, 1234, 1239, 1242, 1244, 1247], "act": [813, 1190, 1192, 1195, 1200, 1201, 1202, 1210, 1221, 1227, 1236], "action": [120, 1107, 1119, 1185, 1196, 1198, 1205, 1208, 1222, 1226, 1227, 1233], "activ": [295, 342, 343, 344, 345, 346, 347, 348, 349, 350, 366, 367, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 833, 834, 836, 1107, 1117, 1119, 1152, 1154, 1159, 1189, 1194, 1203, 1209, 1211, 1216, 1218, 1223, 1226], "activitydis": 1223, "actual": [0, 67, 150, 295, 384, 527, 530, 565, 567, 614, 736, 894, 911, 965, 1104, 1106, 1107, 1110, 1117, 1122, 1130, 1131, 1133, 1134, 1136, 1137, 1152, 1158, 1182, 1183, 1184, 1185, 1186, 1190, 1191, 1192, 1198, 1199, 1201, 1202, 1205, 1206, 1208, 1211, 1214, 1216, 1218, 1219, 1221, 1227, 1232, 1233, 1234, 1236, 1237, 1239, 1243, 1246], "acycl": [1107, 1195], "ad": [0, 5, 6, 9, 55, 57, 71, 148, 149, 158, 179, 195, 389, 391, 409, 441, 444, 448, 489, 531, 538, 590, 650, 651, 670, 675, 676, 678, 679, 681, 682, 683, 684, 686, 702, 716, 724, 740, 750, 768, 774, 780, 799, 808, 850, 874, 880, 904, 1110, 1114, 1115, 1117, 1119, 1130, 1132, 1133, 1136, 1137, 1144, 1180, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1197, 1199, 1200, 1201, 1202, 1207, 1208, 1210, 1214, 1216, 1221, 1227, 1231, 1233, 1236, 1246, 1248], "ad_checkpoint": [1110, 1152, 1206, 1234], "adagrad": 1145, "adam": [1137, 1145, 1246], "adamax": 1145, "adapt": [0, 71, 137, 141, 142, 196, 197, 340, 364, 1144, 1145, 1152, 1192, 1211, 1214], "add": [22, 23, 55, 57, 130, 131, 165, 179, 180, 182, 195, 297, 341, 342, 411, 431, 494, 526, 529, 688, 692, 706, 723, 733, 741, 751, 798, 799, 804, 1071, 1075, 1090, 1102, 1104, 1107, 1109, 1110, 1112, 1114, 1116, 1117, 1119, 1122, 1125, 1133, 1136, 1166, 1170, 1179, 1182, 1183, 1185, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1204, 1210, 1211, 1212, 1214, 1218, 1219, 1221, 1223, 1227, 1232, 1236, 1237], "add_const": 1107, "add_eqn": 1107, "add_jvp": 1107, "add_kernel": 1216, "add_leav": 1247, "add_matric": 1221, "add_matrices_kernel": 1221, "add_matrices_pipelin": 1221, "add_matrices_pipelined_2d": 1221, "add_matrices_pipelined_megacor": 1221, "add_on": [1075, 1122], "add_one_to_a_scalar": 1107, "add_p": [1107, 1159, 1187, 1204, 1212], "add_row": [1206, 1234], "add_subplot": 1207, "add_transpos": [1202, 1236], "add_transpose_rul": 1107, "add_var": 1107, "add_vector": 1218, "add_vector_kernel": 1218, "add_vectors_kernel": 1218, "addit": [0, 2, 7, 19, 41, 68, 117, 118, 122, 155, 217, 219, 295, 297, 331, 342, 397, 464, 467, 468, 472, 490, 496, 579, 587, 614, 637, 658, 688, 715, 748, 777, 780, 799, 811, 812, 822, 823, 824, 828, 837, 894, 895, 910, 912, 1101, 1104, 1106, 1109, 1110, 1114, 1117, 1122, 1127, 1130, 1133, 1136, 1145, 1152, 1166, 1179, 1180, 1182, 1185, 1186, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1205, 1210, 1211, 1212, 1214, 1216, 1218, 1221, 1227, 1236, 1237, 1242, 1247], "addition": [5, 6, 71, 82, 84, 87, 97, 256, 431, 741, 834, 836, 837, 896, 1105, 1110, 1119, 1122, 1136, 1173, 1189, 1190, 1195, 1211, 1214, 1247], "addop": [1187, 1202, 1236], "address": [35, 78, 335, 338, 339, 723, 1110, 1121, 1122, 1152, 1175, 1185, 1186, 1188, 1194, 1195, 1198, 1223], "addressable_data": [338, 339, 1110, 1180], "addressable_devic": [339, 1175], "addressable_devices_indices_map": [339, 1175], "addressable_shard": [1110, 1180], "adequ": 380, "adjac": [399, 527, 808, 1158, 1187], "adjoint": [254, 1122, 1205, 1227], "adjust": [215, 218, 219, 1049, 1110, 1119, 1200, 1227], "admittedli": [1189, 1214], "ado": 1211, "adopt": [1110, 1126, 1185, 1195], "advanc": [289, 1076, 1108, 1109, 1139, 1186, 1191, 1199, 1210, 1212, 1216, 1230, 1232, 1235, 1236, 1242], "advantag": [262, 1119, 1152, 1185, 1195, 1208, 1216, 1218, 1219, 1233], "advers": 1183, "advic": 1246, "adviso": 1199, "ae1": [1182, 1199, 1237], "ae2": [1182, 1199, 1237], "aelem": [1182, 1199, 1237], "aesthet": 1190, "affect": [16, 232, 399, 526, 565, 567, 1105, 1110, 1117, 1122, 1133, 1183, 1188, 1191, 1221, 1227, 1238], "affin": [1186, 1211], "aforement": [0, 1183, 1221], "afoul": 1185, "after": [49, 69, 71, 188, 195, 196, 197, 198, 199, 251, 268, 280, 364, 493, 526, 527, 587, 681, 683, 691, 701, 702, 703, 724, 733, 739, 747, 750, 815, 903, 922, 924, 925, 1048, 1105, 1107, 1110, 1117, 1119, 1120, 1122, 1128, 1130, 1131, 1133, 1134, 1136, 1150, 1152, 1185, 1186, 1190, 1192, 1193, 1195, 1200, 1211, 1214, 1216, 1218, 1221, 1223, 1224, 1227, 1238], "after_1": 701, "after_n": 701, "afteral": 156, "afterward": 1214, "afunct": 1120, "ag": [494, 1222], "again": [76, 824, 1104, 1110, 1112, 1122, 1131, 1134, 1150, 1182, 1185, 1186, 1188, 1193, 1194, 1195, 1199, 1200, 1205, 1208, 1211, 1212, 1214, 1227, 1233, 1237, 1238, 1243], "against": [0, 369, 390, 391, 392, 393, 395, 407, 408, 429, 443, 453, 471, 590, 595, 628, 631, 633, 635, 645, 660, 662, 663, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 720, 722, 724, 769, 771, 774, 810, 955, 1029, 1049, 1110, 1136, 1137, 1183, 1185, 1189, 1190, 1201, 1206, 1211, 1216, 1219, 1234, 1246, 1248], "agent": [1135, 1247], "aggreg": [159, 160, 1133, 1227, 1244], "aggregate_to_topk": [159, 160], "aggress": [1170, 1199, 1248], "agnost": [1133, 1212, 1227], "ago": 1110, "agre": [35, 295, 1110, 1203, 1209], "agreement": [1208, 1233], "ahead": [1106, 1110, 1114, 1176, 1188, 1216, 1228, 1249], "aid": 1104, "aim": [1107, 1173, 1185, 1189, 1190, 1193, 1211], "ainv": [623, 899], "aka": [13, 353, 354, 355, 356, 376, 383, 1089, 1103, 1123, 1184], "akin": [1199, 1216], "al": [894, 895, 944, 945], "alabast": 1119, "alan": [921, 922], "alberta": [430, 562, 563, 606], "alexandr": 809, "alexbw": 1205, "alf": [956, 957], "algebra": [496, 615, 619, 620, 633, 636, 707, 813, 909, 1110, 1122, 1123, 1159, 1189, 1202, 1212, 1236, 1237], "algebraic_simplifi": 1122, "algorithm": [159, 160, 280, 291, 409, 410, 472, 496, 497, 508, 514, 522, 630, 762, 894, 895, 903, 909, 913, 926, 1109, 1110, 1134, 1173, 1186, 1189, 1194, 1205, 1210, 1211, 1227, 1243], "alia": [412, 449, 457, 474, 491, 527, 537, 585, 687, 688, 743, 744, 759, 793, 815, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1097, 1098, 1110, 1145, 1166, 1170, 1185, 1206, 1234, 1242], "alias": [7, 348, 349, 376, 383, 514, 1110, 1166, 1177, 1184, 1185, 1194, 1206, 1234, 1247], "alic": [1135, 1247], "align": [71, 494, 953, 959, 1186, 1214, 1218, 1219], "all": [0, 4, 7, 8, 9, 14, 18, 28, 32, 33, 34, 35, 47, 48, 50, 66, 69, 71, 74, 75, 76, 77, 79, 90, 120, 146, 150, 157, 158, 188, 208, 209, 215, 229, 255, 271, 272, 273, 279, 280, 281, 295, 303, 317, 325, 333, 334, 341, 342, 369, 395, 409, 415, 429, 441, 447, 451, 452, 454, 458, 466, 467, 472, 485, 486, 493, 497, 501, 502, 504, 506, 511, 512, 516, 517, 521, 525, 526, 530, 531, 539, 547, 556, 557, 559, 566, 567, 568, 570, 573, 576, 578, 586, 605, 614, 624, 633, 634, 635, 641, 644, 656, 664, 673, 674, 675, 676, 677, 678, 680, 682, 684, 685, 686, 688, 694, 701, 702, 705, 711, 712, 720, 723, 739, 745, 746, 749, 750, 756, 765, 767, 771, 773, 779, 806, 813, 815, 816, 820, 821, 822, 823, 824, 837, 847, 849, 883, 885, 891, 893, 896, 912, 914, 920, 922, 942, 955, 1048, 1066, 1075, 1076, 1078, 1083, 1101, 1102, 1104, 1105, 1107, 1109, 1110, 1112, 1114, 1117, 1118, 1119, 1121, 1122, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1151, 1158, 1170, 1173, 1175, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1212, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1243, 1244, 1246, 1247, 1248], "all_bias": [1206, 1234], "all_check": 1114, "all_gath": [0, 280, 1110], "all_gather_invari": [1188, 1211], "all_gather_invariant_p": 1188, "all_gather_p": 1188, "all_gather_ref": 1211, "all_leav": 1247, "all_reduce_invari": 1188, "all_to_al": [157, 281, 1110, 1188], "all_to_all_ref": 1211, "all_weight": [1206, 1234], "all_x": 1213, "allclos": [0, 31, 32, 1201, 1202, 1204, 1205, 1211, 1212, 1227, 1236], "allgath": [1125, 1186, 1188], "alloc": [396, 650, 651, 652, 653, 654, 655, 658, 831, 1110, 1120, 1122, 1193, 1212, 1215, 1221], "allow": [0, 7, 14, 35, 47, 55, 71, 144, 149, 208, 392, 393, 417, 441, 447, 565, 567, 587, 645, 650, 651, 660, 664, 666, 677, 680, 746, 813, 819, 837, 894, 921, 926, 1032, 1033, 1076, 1081, 1099, 1106, 1107, 1109, 1110, 1112, 1114, 1117, 1120, 1122, 1130, 1131, 1133, 1134, 1135, 1136, 1151, 1159, 1173, 1180, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1206, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1225, 1226, 1227, 1232, 1233, 1234, 1236, 1238, 1243, 1247, 1248], "allow_extended_dtyp": [40, 1247], "allow_growth": 1124, "allow_int": [144, 149, 1099, 1208, 1233], "allow_pickl": [645, 746], "allow_singular": [1032, 1033], "allow_split_physical_ax": [72, 73], "allow_spmd_sharding_propagation_to_output": 0, "allow_spmd_sharding_propagation_to_paramet": 0, "allowlist": 1110, "allreduc": [1125, 1186], "allreducesum": 1188, "allsum": 1102, "alltoal": 1188, "alltru": 1110, "almost": [195, 1130, 1133, 1186, 1205, 1212, 1214, 1227], "almost_perex_grad": [1133, 1227], "alon": [1122, 1188], "along": [7, 31, 57, 71, 87, 118, 127, 157, 158, 159, 160, 161, 162, 165, 169, 190, 203, 204, 205, 206, 207, 214, 216, 238, 262, 271, 272, 273, 277, 278, 279, 280, 295, 311, 312, 313, 323, 346, 368, 371, 378, 390, 392, 393, 395, 396, 397, 407, 408, 409, 410, 429, 441, 446, 459, 461, 471, 475, 476, 480, 482, 486, 492, 493, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 526, 531, 532, 533, 549, 557, 559, 566, 568, 569, 570, 577, 580, 613, 631, 634, 644, 656, 660, 662, 663, 664, 666, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 701, 702, 703, 720, 722, 723, 724, 725, 733, 739, 761, 762, 764, 768, 769, 771, 773, 774, 777, 778, 779, 781, 784, 788, 799, 804, 808, 810, 814, 815, 820, 821, 822, 823, 824, 844, 847, 869, 882, 883, 884, 885, 886, 912, 919, 922, 923, 1029, 1048, 1049, 1104, 1107, 1110, 1121, 1122, 1127, 1136, 1151, 1152, 1170, 1182, 1185, 1186, 1188, 1189, 1190, 1193, 1194, 1199, 1200, 1201, 1202, 1205, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1227, 1236, 1237, 1239, 1242, 1244], "alongsid": [1127, 1187], "alpha": [150, 343, 344, 366, 374, 705, 841, 849, 997, 998, 1131, 1210, 1238, 1239, 1242], "alpha_i": 849, "alreadi": [30, 66, 124, 150, 339, 419, 427, 428, 588, 689, 699, 746, 747, 798, 799, 900, 1107, 1110, 1112, 1114, 1119, 1122, 1127, 1130, 1134, 1136, 1137, 1152, 1158, 1180, 1188, 1189, 1190, 1192, 1193, 1198, 1200, 1201, 1202, 1203, 1205, 1209, 1214, 1216, 1219, 1223, 1226, 1227, 1236, 1246], "also": [0, 7, 16, 34, 50, 56, 57, 67, 68, 69, 71, 76, 150, 195, 196, 197, 198, 199, 229, 295, 323, 325, 339, 341, 342, 399, 418, 447, 464, 467, 468, 472, 490, 494, 496, 507, 511, 516, 521, 525, 527, 549, 552, 564, 579, 587, 658, 670, 707, 708, 711, 713, 715, 722, 750, 758, 773, 777, 799, 811, 812, 824, 828, 834, 836, 837, 883, 885, 888, 893, 894, 895, 903, 910, 912, 921, 940, 958, 964, 1029, 1048, 1085, 1104, 1107, 1110, 1112, 1114, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1150, 1151, 1152, 1158, 1159, 1175, 1176, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1233, 1234, 1236, 1238, 1242, 1243, 1246, 1247], "alter": [485, 1104, 1151], "altern": [7, 16, 71, 250, 278, 688, 773, 816, 1008, 1081, 1089, 1102, 1107, 1110, 1119, 1121, 1124, 1135, 1152, 1170, 1184, 1185, 1186, 1189, 1194, 1200, 1201, 1202, 1205, 1206, 1218, 1222, 1223, 1224, 1227, 1234, 1236, 1244, 1247], "although": [0, 302, 517, 548, 550, 778, 1104, 1105, 1121, 1127, 1170, 1185, 1195, 1196, 1198, 1208, 1210, 1212, 1216, 1233, 1242], "altogeth": [1187, 1204], "alwai": [30, 31, 32, 37, 38, 120, 288, 332, 409, 410, 464, 468, 475, 476, 484, 485, 492, 507, 538, 546, 569, 576, 619, 620, 622, 645, 675, 676, 692, 707, 740, 745, 750, 763, 767, 814, 824, 827, 831, 909, 919, 922, 923, 1101, 1102, 1104, 1107, 1110, 1122, 1128, 1134, 1136, 1137, 1166, 1185, 1186, 1189, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1204, 1205, 1208, 1211, 1212, 1214, 1219, 1224, 1226, 1227, 1233, 1236, 1243, 1248], "amax": 431, "ambigu": 1201, "amen": 1216, "american": [681, 683, 703, 724], "among": [87, 97, 279, 1173, 1187, 1206, 1234], "amort": 1122, "amount": [7, 71, 150, 269, 824, 1102, 1105, 1106, 1107, 1120, 1122, 1124, 1158, 1186, 1188, 1189, 1191, 1192, 1206, 1211, 1234], "an": [0, 2, 3, 7, 9, 13, 16, 18, 20, 22, 23, 26, 28, 29, 30, 31, 33, 34, 37, 38, 43, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 70, 71, 77, 88, 89, 94, 95, 100, 101, 104, 105, 106, 117, 118, 120, 121, 137, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 157, 158, 159, 160, 165, 169, 174, 179, 180, 188, 190, 193, 195, 196, 199, 200, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 229, 230, 231, 232, 238, 247, 250, 251, 252, 262, 269, 271, 272, 273, 277, 279, 280, 281, 285, 288, 291, 293, 295, 296, 297, 298, 299, 300, 301, 303, 310, 311, 316, 325, 326, 331, 332, 333, 336, 337, 339, 340, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 380, 382, 383, 385, 386, 390, 392, 393, 395, 396, 399, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 426, 427, 428, 429, 430, 431, 435, 438, 440, 441, 443, 445, 446, 447, 448, 452, 453, 459, 461, 464, 465, 467, 468, 471, 472, 475, 476, 480, 482, 483, 485, 490, 494, 495, 496, 497, 498, 499, 503, 505, 506, 508, 509, 511, 513, 514, 515, 516, 519, 521, 522, 525, 526, 527, 528, 531, 546, 547, 549, 551, 552, 557, 559, 562, 563, 565, 566, 567, 568, 569, 577, 579, 592, 595, 601, 604, 605, 606, 610, 613, 617, 624, 628, 631, 634, 635, 640, 644, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 665, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 689, 696, 698, 700, 701, 702, 703, 705, 706, 707, 711, 712, 715, 717, 718, 720, 722, 723, 724, 725, 729, 733, 734, 736, 737, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 753, 754, 762, 764, 765, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 799, 805, 808, 810, 811, 813, 814, 815, 816, 818, 820, 821, 822, 823, 824, 827, 830, 831, 838, 842, 843, 847, 848, 849, 856, 858, 867, 869, 872, 874, 881, 884, 886, 891, 893, 894, 895, 896, 902, 906, 912, 914, 915, 917, 920, 921, 922, 923, 924, 925, 926, 927, 940, 953, 954, 955, 959, 960, 964, 1014, 1029, 1048, 1049, 1068, 1069, 1070, 1071, 1072, 1075, 1079, 1081, 1084, 1086, 1088, 1090, 1091, 1096, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1145, 1146, 1151, 1152, 1153, 1158, 1159, 1166, 1169, 1170, 1172, 1173, 1175, 1176, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "anaconda": 1119, "anaconda3": 1203, "anal": 894, "analog": [277, 515, 516, 1107, 1110, 1123, 1130, 1135, 1136, 1148, 1185, 1186, 1188, 1190, 1194, 1200, 1201, 1204, 1211, 1216, 1227, 1247], "analogi": [1130, 1206, 1214, 1234], "analogu": [229, 325, 1153, 1184], "analysi": [430, 562, 563, 606, 741, 828, 895, 923, 1007, 1104, 1120, 1185, 1188, 1199, 1200, 1227], "analyt": [939, 943], "analyz": [1214, 1223], "anf": [1107, 1237], "angl": [387, 400, 402, 405, 420, 424, 478, 479, 726, 727, 757, 927], "angular": [587, 928], "ani": [0, 5, 6, 7, 9, 17, 18, 29, 30, 31, 32, 34, 35, 38, 40, 42, 44, 45, 50, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 90, 92, 100, 107, 109, 113, 117, 118, 122, 125, 131, 146, 147, 150, 151, 161, 162, 174, 179, 180, 183, 191, 193, 195, 196, 197, 198, 199, 200, 208, 212, 213, 215, 225, 230, 231, 232, 241, 253, 268, 277, 285, 287, 289, 292, 295, 296, 298, 316, 322, 325, 333, 338, 340, 341, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 390, 392, 393, 396, 397, 399, 413, 419, 422, 441, 442, 443, 447, 452, 455, 456, 471, 477, 486, 487, 493, 496, 509, 511, 515, 516, 521, 525, 526, 534, 535, 536, 549, 551, 559, 567, 570, 576, 581, 582, 583, 584, 592, 593, 601, 602, 627, 641, 645, 660, 662, 666, 677, 678, 680, 685, 688, 691, 695, 705, 710, 720, 721, 722, 736, 745, 746, 758, 765, 769, 771, 792, 794, 795, 796, 797, 810, 812, 813, 824, 837, 839, 841, 842, 843, 845, 846, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 883, 885, 904, 908, 914, 924, 925, 926, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1107, 1110, 1112, 1117, 1118, 1120, 1122, 1125, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1145, 1150, 1151, 1152, 1158, 1159, 1166, 1173, 1175, 1176, 1178, 1179, 1180, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1230, 1233, 1234, 1236, 1238, 1239, 1242, 1243, 1246, 1247, 1248], "anima": 1199, "ann": [1110, 1147], "annot": [0, 1, 342, 1097, 1110, 1122, 1179, 1188, 1197, 1199, 1201, 1212, 1214, 1221, 1238, 1239, 1247], "annotate_funct": [1110, 1223], "announc": [1105, 1160, 1187], "anoth": [49, 50, 174, 195, 196, 200, 325, 701, 715, 740, 834, 836, 924, 925, 1011, 1101, 1106, 1107, 1109, 1110, 1117, 1121, 1122, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1158, 1170, 1182, 1183, 1184, 1185, 1187, 1189, 1190, 1191, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1223, 1224, 1225, 1227, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1242, 1243, 1246, 1247], "another_list_of_list": [1135, 1247], "anotherfunc": 1120, "ans1": [1107, 1205, 1227], "ans2": [1107, 1205, 1227], "ans3": 1107, "ans4": 1107, "ans_dot": [1200, 1227], "answer": [942, 1108, 1112, 1122, 1133, 1137, 1189, 1200, 1205, 1227], "antialia": [146, 147], "antialias": [146, 147], "anticip": [1136, 1224, 1247], "antideriv": 712, "anymor": 1110, "anyth": [35, 150, 677, 678, 679, 680, 681, 683, 684, 685, 824, 1105, 1114, 1117, 1135, 1136, 1158, 1180, 1183, 1185, 1188, 1190, 1202, 1203, 1204, 1205, 1209, 1212, 1227, 1236, 1247], "anywai": [1137, 1200, 1214, 1223, 1227, 1246], "anywher": [576, 745, 1126, 1134, 1136], "aot": [18, 1176], "apach": [1203, 1209], "apart": [781, 886], "apex": 0, "api": [0, 13, 18, 28, 33, 34, 37, 47, 48, 49, 67, 68, 69, 71, 83, 150, 232, 291, 292, 296, 297, 298, 299, 300, 301, 336, 526, 546, 556, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 723, 741, 824, 827, 831, 914, 1102, 1103, 1104, 1107, 1109, 1110, 1111, 1113, 1114, 1117, 1126, 1127, 1130, 1131, 1135, 1137, 1145, 1148, 1154, 1166, 1170, 1175, 1176, 1179, 1184, 1187, 1191, 1194, 1195, 1198, 1199, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1214, 1215, 1216, 1218, 1221, 1224, 1230, 1233, 1234, 1236, 1239, 1242, 1243, 1246, 1247], "api_boundari": [1199, 1208, 1212, 1233, 1238], "api_doc": 13, "api_nam": [1208, 1212, 1233], "api_util": [1187, 1247], "api_vers": 0, "api_version_status_return": 0, "apicallback": 1223, "app": [1199, 1200, 1202, 1208, 1227, 1233, 1236], "app2": [1200, 1227], "app2_jvp": [1200, 1227], "app_bwd": [1200, 1227], "app_fwd": [1200, 1227], "app_jvp": [1200, 1227], "appar": 1110, "appeal": [1130, 1188], "appear": [71, 195, 196, 268, 430, 440, 503, 532, 533, 562, 563, 606, 691, 799, 824, 1029, 1049, 1101, 1107, 1110, 1128, 1130, 1131, 1135, 1152, 1182, 1199, 1200, 1202, 1211, 1214, 1221, 1223, 1227, 1236, 1237, 1238, 1247], "append": [295, 342, 435, 485, 486, 495, 610, 746, 747, 1107, 1120, 1121, 1131, 1132, 1135, 1136, 1152, 1199, 1212, 1231, 1238, 1247], "appl": [894, 1110], "appli": [7, 14, 15, 44, 50, 69, 127, 130, 140, 147, 165, 191, 195, 196, 197, 198, 199, 214, 216, 238, 262, 269, 278, 296, 297, 298, 299, 300, 301, 311, 313, 319, 333, 340, 362, 397, 398, 413, 429, 480, 559, 637, 652, 653, 654, 655, 672, 688, 711, 729, 736, 750, 777, 783, 787, 824, 837, 903, 940, 954, 957, 1007, 1070, 1088, 1101, 1102, 1104, 1105, 1107, 1110, 1114, 1115, 1117, 1121, 1122, 1123, 1130, 1131, 1132, 1133, 1135, 1137, 1146, 1159, 1175, 1182, 1183, 1184, 1186, 1188, 1190, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1210, 1211, 1212, 1214, 1216, 1219, 1226, 1227, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1242, 1246, 1247, 1248], "applic": [1, 7, 49, 71, 150, 165, 229, 298, 340, 364, 615, 619, 620, 633, 636, 707, 892, 894, 895, 903, 909, 919, 927, 1102, 1103, 1107, 1117, 1122, 1123, 1135, 1158, 1166, 1170, 1184, 1185, 1186, 1188, 1199, 1200, 1201, 1203, 1205, 1206, 1208, 1209, 1211, 1214, 1216, 1218, 1227, 1230, 1232, 1233, 1234, 1247], "apply_fun": [1146, 1191], "apply_lay": 1184, "apply_matrix": [1210, 1242], "apply_over_axi": 398, "apply_primit": [0, 1212], "apply_todo": 1131, "approach": [7, 120, 1107, 1109, 1122, 1134, 1185, 1187, 1194, 1195, 1200, 1205, 1207, 1211, 1214, 1216, 1218, 1227, 1243], "appropri": [77, 104, 120, 213, 277, 441, 487, 527, 590, 641, 705, 847, 861, 1048, 1110, 1122, 1124, 1127, 1134, 1170, 1185, 1186, 1188, 1189, 1195, 1208, 1211, 1216, 1224, 1233, 1239, 1243, 1244], "approv": 1185, "approx": 953, "approx_": 1110, "approx_max_k": 323, "approx_min_k": 323, "approxim": [159, 160, 333, 345, 527, 624, 750, 781, 886, 894, 924, 925, 926, 942, 953, 960, 1122, 1134, 1153, 1183, 1189, 1195, 1213, 1243], "april": 1122, "apt": 1119, "ar": [0, 1, 2, 4, 7, 9, 12, 14, 15, 16, 17, 26, 28, 29, 30, 34, 35, 37, 38, 49, 50, 56, 57, 66, 67, 68, 69, 71, 77, 82, 84, 88, 90, 105, 119, 120, 125, 127, 128, 145, 146, 147, 150, 157, 158, 159, 160, 165, 188, 191, 195, 196, 209, 213, 215, 229, 232, 238, 246, 247, 250, 252, 262, 268, 277, 279, 295, 296, 297, 298, 299, 300, 301, 303, 310, 311, 312, 317, 325, 326, 332, 333, 339, 340, 341, 342, 348, 349, 359, 362, 363, 364, 369, 376, 383, 389, 390, 391, 392, 393, 395, 396, 399, 405, 407, 408, 409, 411, 414, 415, 416, 418, 422, 424, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 443, 447, 448, 452, 453, 454, 458, 461, 464, 465, 466, 467, 471, 472, 473, 475, 476, 480, 481, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 500, 503, 506, 507, 509, 511, 513, 514, 515, 516, 519, 521, 525, 526, 527, 528, 529, 531, 532, 533, 538, 541, 542, 543, 544, 546, 552, 555, 556, 557, 560, 561, 564, 565, 566, 567, 568, 571, 579, 587, 588, 589, 590, 595, 604, 608, 609, 610, 611, 612, 613, 614, 619, 620, 621, 622, 624, 627, 628, 631, 633, 634, 637, 640, 641, 644, 645, 647, 650, 651, 652, 654, 655, 656, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 691, 692, 693, 701, 702, 703, 705, 706, 707, 710, 711, 712, 717, 718, 720, 722, 723, 724, 728, 729, 732, 735, 736, 737, 739, 740, 741, 746, 747, 749, 750, 751, 752, 761, 765, 767, 768, 769, 770, 771, 773, 777, 779, 780, 781, 785, 790, 798, 799, 804, 805, 808, 809, 810, 813, 815, 816, 820, 821, 822, 823, 824, 837, 840, 841, 842, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 860, 862, 863, 864, 865, 866, 868, 870, 871, 873, 875, 876, 877, 879, 880, 883, 885, 886, 891, 892, 894, 896, 901, 903, 907, 908, 910, 912, 914, 919, 920, 921, 922, 923, 924, 925, 926, 927, 940, 954, 955, 956, 957, 964, 965, 1007, 1029, 1048, 1049, 1070, 1076, 1079, 1080, 1081, 1082, 1088, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1145, 1146, 1150, 1151, 1152, 1153, 1154, 1158, 1159, 1165, 1166, 1170, 1173, 1175, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248, 1249], "ar1": [588, 751, 752, 798], "ar2": [588, 751, 752, 798], "arang": [1, 18, 32, 63, 64, 71, 77, 119, 123, 125, 145, 150, 157, 165, 214, 215, 216, 238, 272, 279, 280, 289, 310, 311, 338, 339, 418, 446, 665, 688, 696, 725, 746, 747, 750, 820, 821, 822, 823, 824, 847, 869, 1101, 1104, 1107, 1110, 1114, 1117, 1121, 1122, 1130, 1131, 1132, 1136, 1148, 1158, 1170, 1175, 1180, 1184, 1186, 1193, 1194, 1195, 1199, 1200, 1201, 1203, 1204, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1224, 1225, 1227, 1231, 1232, 1233, 1238, 1239, 1242, 1244, 1247, 1248], "aray_lik": 1010, "arbitrai": 1110, "arbitrari": [34, 262, 295, 498, 499, 551, 645, 746, 813, 824, 837, 882, 884, 933, 1076, 1106, 1107, 1136, 1145, 1152, 1158, 1176, 1185, 1190, 1191, 1192, 1202, 1205, 1209, 1214, 1219, 1221, 1224, 1227, 1230, 1236], "arbitrarili": [559, 1145, 1192, 1210, 1242], "arc": [153, 163, 166, 167, 405, 424], "arcco": 387, "arccosh": [388, 1110], "arch": 0, "architectur": [1109, 1122, 1123, 1127, 1198, 1206, 1208, 1218, 1219, 1233, 1234], "archiv": [746, 747, 1127], "arcsin": 420, "arcsinh": 421, "arctan": 423, "arctan2": 424, "arctanh": [425, 1204], "area": [959, 960, 1133, 1189], "aren": [621, 1114, 1133, 1184, 1186, 1187, 1188, 1193, 1201, 1206, 1207, 1211, 1224, 1234, 1247], "arg": [2, 9, 17, 19, 44, 50, 67, 68, 69, 70, 80, 81, 82, 83, 84, 85, 130, 340, 362, 397, 443, 548, 550, 605, 645, 652, 653, 654, 655, 657, 705, 719, 736, 747, 825, 829, 837, 861, 914, 1070, 1075, 1088, 1089, 1102, 1107, 1110, 1117, 1131, 1133, 1137, 1145, 1151, 1152, 1153, 1175, 1176, 1182, 1183, 1199, 1202, 1204, 1206, 1208, 1212, 1216, 1224, 1227, 1233, 1234, 1236, 1237, 1238, 1246, 1247], "arg0": [829, 1104, 1212], "arg1": [603, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1104, 1182, 1212, 1237], "arg2": [603, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1182, 1237], "arg3": [969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1202, 1236], "arg_0": 0, "arg_1": 0, "arg_dot": 1152, "arg_info": 0, "arg_nam": [1199, 1212, 1238], "arg_shap": 1151, "arg_shard": [0, 1151], "arg_spec": 1131, "arg_tang": [1202, 1236], "arg_valu": [1202, 1236], "argmax": [673, 1110, 1122, 1203, 1209], "argmin": [674, 1110], "argnum": [0, 13, 119, 125, 144, 145, 148, 149, 1099, 1130, 1202, 1205, 1208, 1213, 1230, 1233, 1236, 1247], "argpartit": 774, "args_": 1212, "args_bar": 9, "args_flat": [1107, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "args_info": 1176, "args_spec": 1110, "argsort": [774, 1110, 1122], "arguabl": [1185, 1189, 1216], "argument": [7, 9, 13, 14, 16, 17, 19, 34, 35, 38, 42, 44, 50, 55, 56, 57, 67, 68, 69, 70, 71, 78, 104, 119, 120, 122, 125, 127, 128, 144, 145, 146, 147, 148, 149, 150, 151, 191, 208, 209, 229, 295, 317, 326, 332, 333, 339, 340, 360, 364, 365, 369, 387, 389, 394, 397, 398, 399, 400, 405, 409, 411, 424, 446, 464, 465, 468, 488, 490, 496, 497, 528, 529, 551, 557, 571, 572, 575, 579, 587, 595, 598, 599, 602, 603, 613, 630, 644, 650, 651, 652, 653, 654, 655, 656, 657, 658, 671, 681, 683, 688, 692, 701, 702, 703, 705, 721, 724, 725, 730, 731, 736, 747, 751, 758, 770, 777, 790, 798, 799, 809, 811, 812, 813, 816, 824, 828, 830, 837, 838, 858, 888, 889, 890, 891, 892, 894, 895, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 912, 914, 915, 917, 919, 920, 921, 922, 923, 924, 925, 926, 935, 936, 939, 941, 944, 945, 946, 947, 948, 949, 950, 951, 955, 961, 965, 966, 967, 1032, 1048, 1070, 1075, 1079, 1081, 1088, 1089, 1099, 1100, 1101, 1102, 1107, 1110, 1114, 1117, 1121, 1122, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1151, 1152, 1153, 1158, 1169, 1170, 1173, 1175, 1176, 1180, 1182, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1198, 1199, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1224, 1225, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1239, 1246, 1247], "argv": [1208, 1233], "argwher": 692, "ari": [417, 426, 427, 428, 492, 495, 569, 764, 814, 1247], "aris": [1107, 1121, 1122, 1135, 1152, 1182, 1184, 1188, 1199, 1200, 1202, 1227, 1236, 1237], "arisen": 1185, "arith": 1216, "arithmet": [160, 305, 452, 527, 662, 678, 710, 713, 933, 942, 1107, 1110, 1122, 1173, 1188, 1195, 1199, 1207, 1221], "ariti": [1102, 1188], "arm": [1208, 1233], "aros": [1121, 1131, 1193], "around": [0, 9, 19, 183, 193, 199, 214, 216, 217, 219, 238, 268, 311, 567, 691, 701, 722, 723, 729, 743, 744, 832, 912, 928, 1080, 1082, 1107, 1110, 1116, 1117, 1121, 1137, 1166, 1173, 1185, 1186, 1187, 1188, 1189, 1190, 1195, 1199, 1200, 1201, 1206, 1208, 1214, 1221, 1227, 1233, 1234, 1246], "arr": [20, 77, 91, 100, 122, 124, 338, 339, 396, 397, 416, 465, 480, 483, 505, 552, 580, 663, 682, 706, 740, 746, 773, 774, 785, 789, 887, 1110, 1121, 1122, 1136, 1148, 1182, 1199, 1212, 1237, 1244], "arr_0": 747, "arr_1": 747, "arr_shard": 1244, "arrai": [3, 4, 7, 9, 12, 13, 16, 18, 20, 29, 30, 31, 32, 34, 37, 38, 50, 51, 55, 68, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 332, 333, 334, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 443, 445, 446, 447, 448, 452, 453, 454, 459, 460, 461, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 542, 543, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 575, 576, 577, 579, 580, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 620, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 758, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 831, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 930, 932, 933, 934, 935, 936, 937, 938, 940, 942, 943, 944, 945, 952, 953, 954, 955, 956, 957, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1014, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1029, 1034, 1035, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1062, 1063, 1064, 1065, 1075, 1097, 1099, 1100, 1101, 1103, 1104, 1106, 1107, 1110, 1114, 1116, 1117, 1120, 1121, 1123, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1140, 1145, 1148, 1151, 1152, 1153, 1158, 1159, 1166, 1169, 1171, 1173, 1175, 1179, 1182, 1183, 1187, 1188, 1191, 1192, 1193, 1194, 1195, 1198, 1200, 1202, 1203, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1218, 1221, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1247, 1248], "arrang": [887, 1186, 1200, 1211, 1227], "array1": 1180, "array2": 1180, "array2str": [68, 416, 418, 750], "array3": 1180, "array4": 1180, "array_abstraction_level": 1107, "array_api": 1147, "array_equ": 1110, "array_equiv": 1110, "array_lik": [369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 445, 448, 450, 453, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 553, 554, 555, 557, 559, 560, 561, 564, 565, 566, 567, 568, 571, 572, 575, 579, 580, 587, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 600, 607, 608, 609, 610, 611, 612, 614, 615, 617, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 692, 693, 698, 699, 700, 701, 702, 703, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 741, 742, 746, 748, 751, 752, 753, 754, 755, 757, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 783, 785, 790, 791, 798, 799, 805, 808, 809, 810, 811, 816, 818, 882, 883, 884, 885, 886, 888, 890, 891, 892, 895, 896, 897, 899, 900, 901, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 928, 931, 932, 936, 939, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 955, 961, 962, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1010, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "array_m": [1199, 1212], "array_of_diagon": 485, "array_operand": 1199, "array_repr": 418, "array_seri": 1110, "array_shap": 1107, "array_split": 1211, "array_str": 416, "array_typ": [429, 1107, 1237], "arrayannot": 1185, "arrayimpl": [338, 339, 1185, 1199, 1212], "arrayinst": 1185, "arraylik": [91, 1179, 1185, 1199, 1212], "arraytyp": 1214, "arriv": 1152, "arrow": [13, 1107, 1195], "arrows": 1195, "artial_ev": [1199, 1208, 1212, 1233, 1238], "artifact": [1190, 1238], "artifici": [1183, 1188], "arug": 0, "arxiv": [120, 159, 160, 381, 839, 1145, 1186], "arys1": [426, 427, 428], "arys2": [426, 427, 428], "as_hashable_funct": 1110, "as_hlo_dot_graph": 1102, "as_hlo_text": [1102, 1110], "as_numpi": 1209, "as_serialized_hlo_module_proto": 1102, "as_supervis": 1209, "as_text": [0, 1104, 1110, 1176, 1201], "asarrai": [63, 64, 148, 149, 548, 550, 816, 1106, 1107, 1110, 1121, 1130, 1151, 1158, 1179, 1203, 1208, 1224, 1233, 1247, 1248], "asarray_chkfinit": 895, "ascend": [247, 620, 622, 688, 748, 773, 892, 893, 1166], "ascii": [552, 645], "ascii_lowercas": 1107, "asi": [1208, 1233], "asid": [1185, 1189, 1190, 1194, 1195, 1212], "ask": [825, 1108, 1112, 1114, 1152, 1183], "aspect": [958, 1216, 1219], "aspir": [71, 1214], "assembl": 441, "assert": [0, 57, 174, 208, 209, 339, 813, 848, 1076, 1104, 1107, 1110, 1114, 1116, 1151, 1182, 1185, 1186, 1195, 1202, 1204, 1205, 1208, 1211, 1212, 1214, 1226, 1227, 1233, 1236, 1237], "assert_allclos": [861, 1107, 1110, 1214, 1218, 1242], "assert_array_equ": 1221, "assert_equ": 719, "assert_gradient_neg": 1114, "assertallclos": 1110, "assign": [71, 150, 331, 472, 747, 1048, 1102, 1107, 1110, 1112, 1130, 1158, 1175, 1198, 1199, 1212, 1214, 1218, 1219], "assist": 1110, "associ": [28, 37, 38, 45, 71, 165, 195, 196, 217, 219, 285, 341, 429, 527, 546, 565, 567, 826, 847, 891, 956, 957, 1107, 1110, 1122, 1126, 1133, 1176, 1186, 1190, 1194, 1195, 1196, 1200, 1207, 1211, 1214, 1216, 1227, 1244, 1248], "assum": [77, 147, 208, 209, 255, 364, 429, 473, 480, 497, 588, 595, 633, 637, 641, 657, 688, 705, 712, 748, 751, 752, 773, 781, 813, 824, 837, 847, 886, 892, 908, 911, 1007, 1107, 1112, 1122, 1133, 1134, 1151, 1173, 1180, 1183, 1185, 1192, 1198, 1200, 1202, 1204, 1205, 1207, 1208, 1211, 1214, 1216, 1222, 1224, 1227, 1233, 1236, 1243], "assume_a": [907, 1110], "assume_uniqu": [91, 588, 595, 751, 752], "assume_unique_indic": 480, "assumet": 70, "assumpt": [1107, 1208, 1221, 1233], "ast": [645, 1107, 1199, 1216], "ast_node_interact": [1208, 1233], "astyp": [399, 644, 1110, 1122, 1199, 1208, 1210, 1212, 1213, 1216, 1219, 1233], "asymmetr": 1195, "asymmetri": 1191, "asymptot": 953, "async": [1110, 1114, 1186, 1208, 1233], "async_": [1208, 1233], "async_help": [1202, 1208, 1212, 1233, 1236], "asynchron": [30, 31, 32, 1110, 1120, 1122, 1125, 1130, 1131, 1152, 1183, 1210, 1212, 1215, 1219, 1221, 1223, 1238, 1242], "asynci": [1208, 1233], "asyncio": [1208, 1233], "asyncio_loop": [1208, 1233], "at_exit": 1152, "atan": 167, "atanh": 1204, "atch": [1208, 1233], "atexit": 1152, "ation": [1208, 1233], "atleast2d": 780, "atleast_1d": 692, "atol": [0, 391, 590, 924, 925, 926, 1205, 1211, 1212, 1227, 1242], "atom": [12, 1107, 1182, 1196, 1216, 1218, 1237], "atrou": [195, 196, 197, 198, 199], "attach": [1107, 1110, 1198, 1219], "attempt": [9, 22, 23, 72, 429, 485, 662, 677, 678, 680, 682, 685, 686, 689, 810, 1110, 1121, 1122, 1131, 1159, 1185, 1186, 1189, 1199, 1201, 1202, 1208, 1212, 1219, 1233, 1236, 1238], "attend": 1186, "attent": [1136, 1186, 1216], "attn": 1186, "attr": [1110, 1122], "attrgett": 1107, "attribut": [0, 1, 2, 3, 7, 9, 11, 12, 14, 39, 43, 50, 67, 70, 71, 73, 80, 81, 82, 83, 84, 85, 127, 332, 340, 442, 451, 455, 456, 458, 494, 499, 527, 530, 534, 535, 536, 539, 554, 556, 574, 578, 581, 582, 583, 584, 586, 619, 620, 634, 635, 637, 694, 695, 698, 747, 756, 792, 794, 795, 796, 797, 806, 818, 828, 829, 837, 913, 927, 928, 1007, 1075, 1102, 1104, 1107, 1110, 1120, 1122, 1135, 1137, 1152, 1159, 1179, 1180, 1185, 1194, 1202, 1206, 1214, 1234, 1236, 1238, 1239, 1242, 1244, 1246], "attributeerror": 1107, "attributekeypathentri": 1110, "attrs_track": [1199, 1202, 1208, 1212, 1233, 1236, 1238], "atupl": [1135, 1247], "audienc": 1187, "audio": [919, 923], "aug": 1128, "augment": [1186, 1211, 1216], "august": [1185, 1188, 1194], "author": [1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1185, 1203, 1209], "auto": [567, 813, 915, 917, 1112, 1119, 1133, 1182, 1198, 1211, 1237], "auto_batch_convolv": [1132, 1231], "auto_batch_convolve_v2": [1132, 1231], "auto_spmd_partit": 331, "auto_spmd_partitioning_mesh_id": 331, "auto_spmd_partitioning_mesh_shap": 331, "autoat": 1244, "autobatch": 1103, "autodesk": 1128, "autodidax": [1110, 1113], "autodiff": [7, 82, 84, 208, 229, 914, 1103, 1104, 1110, 1122, 1123, 1130, 1133, 1159, 1186, 1187, 1188, 1190, 1192, 1200, 1202, 1208, 1210, 1230, 1233, 1234, 1242], "autodifferenti": 1204, "autodoc": 1185, "autodoc_type_alias": 1185, "autograd": [1190, 1199, 1205, 1210, 1227], "autom": [567, 1110, 1119, 1128], "automag": 1199, "automat": [7, 13, 14, 15, 35, 57, 71, 148, 149, 208, 298, 317, 326, 331, 339, 565, 567, 630, 813, 819, 914, 915, 917, 920, 1007, 1107, 1108, 1110, 1112, 1114, 1115, 1116, 1119, 1123, 1125, 1126, 1134, 1138, 1139, 1152, 1153, 1158, 1173, 1175, 1180, 1183, 1184, 1186, 1188, 1190, 1196, 1198, 1199, 1200, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1214, 1216, 1218, 1221, 1223, 1225, 1233, 1234, 1235, 1236, 1239, 1240, 1242, 1243], "aux": [151, 333, 1081, 1100, 1130, 1135, 1208, 1233, 1247], "aux1": 129, "aux2": 129, "aux_arg": 9, "aux_data": [1080, 1082, 1122, 1135, 1224, 1247], "auxiliari": [127, 131, 144, 145, 148, 149, 151, 208, 209, 333, 1079, 1081, 1099, 1100, 1135, 1145, 1224, 1247], "auxiliary_data": [144, 148, 149, 1099], "avail": [2, 14, 16, 18, 33, 35, 120, 146, 147, 150, 157, 169, 231, 272, 279, 280, 331, 413, 419, 465, 719, 720, 746, 771, 804, 816, 824, 907, 909, 917, 975, 986, 993, 999, 1003, 1016, 1021, 1025, 1039, 1044, 1048, 1050, 1054, 1059, 1062, 1064, 1106, 1107, 1110, 1112, 1114, 1117, 1119, 1122, 1123, 1124, 1127, 1131, 1135, 1136, 1152, 1158, 1159, 1166, 1175, 1179, 1183, 1184, 1185, 1189, 1195, 1198, 1199, 1201, 1206, 1207, 1208, 1212, 1214, 1219, 1221, 1223, 1232, 1233, 1234, 1238, 1244, 1248], "aval": [1107, 1131, 1180, 1195, 1199, 1202, 1208, 1212, 1233, 1236, 1238], "avals_in": [1107, 1202, 1208, 1233, 1236], "avals_in2": [1208, 1233], "avals_out": [0, 1107, 1202, 1208, 1233, 1236], "averag": [364, 472, 662, 678, 919, 923, 1048, 1136], "averaged_inverted_cdf": [681, 683, 703, 724], "avg": 429, "avgpool": 1146, "avoid": [0, 7, 34, 38, 332, 333, 399, 427, 428, 489, 645, 747, 957, 1106, 1107, 1110, 1117, 1121, 1122, 1130, 1131, 1133, 1134, 1135, 1145, 1152, 1183, 1187, 1188, 1189, 1193, 1194, 1199, 1211, 1212, 1214, 1215, 1216, 1218, 1224, 1225, 1227, 1238, 1242, 1243, 1247], "avx": 1110, "avx512": 1110, "awad": [894, 895], "awai": [9, 1134, 1170, 1180, 1190, 1193, 1200, 1211, 1216, 1221, 1227], "await": [1208, 1233], "awar": [5, 6, 119, 125, 1121, 1219, 1242], "away_from_zero": 293, "aweight": 472, "awesom": [1108, 1192], "awkward": [1186, 1188], "ax": [71, 72, 73, 77, 96, 103, 198, 217, 219, 239, 262, 295, 353, 354, 355, 356, 357, 358, 364, 368, 369, 371, 378, 390, 392, 393, 395, 398, 407, 408, 429, 441, 471, 473, 485, 486, 503, 509, 511, 512, 515, 516, 517, 520, 521, 523, 525, 531, 559, 579, 624, 631, 636, 639, 641, 660, 662, 663, 666, 670, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 701, 703, 704, 720, 722, 724, 739, 740, 742, 767, 769, 771, 772, 777, 778, 779, 780, 783, 787, 810, 824, 837, 883, 885, 920, 924, 925, 926, 955, 1029, 1049, 1101, 1103, 1107, 1110, 1132, 1158, 1175, 1182, 1188, 1189, 1193, 1195, 1201, 1202, 1207, 1208, 1210, 1211, 1219, 1225, 1231, 1233, 1236, 1237, 1242, 1244, 1247], "axes3d": 1207, "axes_out": [1208, 1233], "axi": [31, 71, 78, 87, 103, 157, 158, 160, 161, 162, 165, 169, 190, 203, 204, 205, 206, 207, 214, 216, 217, 219, 238, 262, 271, 272, 273, 277, 278, 279, 280, 281, 289, 295, 311, 323, 339, 340, 346, 352, 353, 354, 355, 356, 357, 358, 361, 364, 368, 369, 371, 378, 382, 390, 392, 393, 394, 395, 396, 397, 398, 407, 408, 409, 410, 417, 429, 446, 459, 460, 461, 471, 473, 475, 476, 477, 480, 485, 486, 490, 492, 493, 503, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 531, 532, 533, 549, 557, 559, 569, 570, 576, 577, 580, 613, 615, 616, 631, 642, 643, 644, 656, 660, 662, 663, 666, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 700, 701, 702, 703, 720, 722, 723, 724, 725, 728, 733, 734, 739, 740, 742, 745, 761, 762, 764, 767, 768, 769, 771, 772, 773, 774, 778, 779, 780, 781, 799, 804, 807, 808, 810, 812, 814, 815, 820, 821, 822, 823, 824, 837, 844, 847, 865, 869, 874, 882, 883, 884, 885, 886, 912, 919, 921, 922, 923, 928, 938, 939, 955, 997, 998, 1014, 1029, 1030, 1031, 1032, 1033, 1048, 1049, 1101, 1102, 1107, 1110, 1117, 1121, 1122, 1132, 1133, 1136, 1146, 1151, 1158, 1175, 1182, 1185, 1186, 1188, 1198, 1199, 1201, 1202, 1203, 1207, 1209, 1211, 1212, 1213, 1216, 1218, 1219, 1221, 1224, 1227, 1231, 1236, 1244, 1247], "axis1": [485, 772, 779], "axis2": [485, 772, 779], "axis_": 1107, "axis_context": [1202, 1236], "axis_env": [340, 1102], "axis_group": 1110, "axis_index": [280, 1186, 1188, 1211, 1216], "axis_index_group": [157, 158, 271, 272, 273, 279, 280, 281, 1110, 1182, 1186], "axis_main": [1208, 1212, 1233], "axis_nam": [157, 158, 169, 270, 271, 272, 273, 277, 278, 279, 280, 281, 824, 1101, 1110, 1114, 1136, 1151, 1175, 1182, 1186, 1188, 1198, 1201, 1208, 1211, 1214, 1233], "axis_resourc": [71, 1110], "axis_s": [71, 158, 824, 1101, 1107, 1182, 1186, 1208, 1211, 1233, 1247], "axis_size_": [1208, 1233, 1247], "axis_size_env": [1202, 1236], "axisa": 473, "axisb": 473, "axisc": 473, "axisenv": 1110, "axiserror": [503, 740], "axisnam": [71, 1211], "azimuth": 965, "b": [0, 13, 32, 42, 71, 89, 110, 114, 121, 145, 165, 173, 191, 208, 255, 257, 292, 295, 319, 340, 369, 381, 385, 386, 391, 414, 430, 440, 473, 490, 493, 494, 541, 559, 562, 563, 570, 579, 590, 595, 604, 607, 624, 628, 633, 636, 640, 641, 658, 699, 721, 746, 777, 786, 811, 813, 815, 841, 868, 876, 887, 889, 892, 902, 907, 908, 912, 919, 924, 925, 926, 929, 930, 931, 932, 947, 955, 973, 974, 975, 976, 977, 978, 979, 980, 1007, 1044, 1045, 1052, 1053, 1054, 1055, 1056, 1057, 1067, 1083, 1101, 1107, 1110, 1112, 1117, 1119, 1130, 1131, 1135, 1136, 1137, 1152, 1182, 1186, 1187, 1190, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1212, 1214, 1221, 1224, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1246, 1247], "b0": 929, "b0_bar": [1200, 1227], "b1": [1107, 1145, 1201, 1248], "b19a2dc1abf7": [1200, 1227], "b1_": 1107, "b1_bar": [1200, 1227], "b1b1u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1248, "b1u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1248, "b2": [1107, 1145, 1201], "b2_": 1107, "b3": 1201, "b4": 1201, "b_": [699, 1130], "b_0": 699, "b_1": 699, "b_ax": 777, "b_block": [1186, 1211], "b_first": 1211, "b_frag": 1211, "b_grad": [1205, 1230], "b_grad_autodiff": [1205, 1230], "b_grad_numer": [1205, 1230], "b_init": 1146, "b_kei": [1203, 1205, 1209, 1227, 1230], "b_last": 1211, "ba": [452, 1199, 1206, 1214, 1234], "back": [16, 18, 31, 32, 56, 143, 289, 295, 452, 549, 728, 734, 740, 750, 786, 792, 1106, 1107, 1110, 1119, 1121, 1122, 1125, 1130, 1133, 1145, 1150, 1152, 1159, 1180, 1183, 1185, 1186, 1190, 1199, 1200, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1221, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "backend": [7, 16, 24, 28, 33, 71, 121, 150, 193, 195, 196, 197, 198, 199, 212, 213, 232, 296, 297, 298, 299, 300, 301, 329, 331, 334, 335, 336, 341, 342, 369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 751, 752, 754, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 799, 804, 805, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 824, 826, 827, 831, 832, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 958, 961, 962, 963, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1102, 1104, 1110, 1112, 1117, 1123, 1126, 1130, 1131, 1133, 1152, 1158, 1166, 1167, 1176, 1182, 1191, 1193, 1195, 1199, 1212, 1216, 1218, 1219, 1230, 1237], "backend_compil": 1110, "backend_config": 0, "backend_independent_test": 1119, "backend_or_nam": [1202, 1236], "backend_specific_transl": 1110, "background": [1205, 1219, 1227, 1248], "backpropag": [372, 1227], "backtrac": 1117, "backward": [7, 13, 208, 485, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 527, 559, 634, 728, 740, 882, 883, 884, 885, 900, 1107, 1110, 1114, 1117, 1130, 1133, 1150, 1152, 1158, 1184, 1185, 1186, 1187, 1190, 1196, 1199, 1200, 1202, 1204, 1206, 1211, 1214, 1227, 1234, 1236], "backward_pass": [1107, 1199], "bad": [1128, 1186, 1194, 1199, 1213], "bad_example_jit": 1199, "bag": 1185, "baggag": 1185, "bake": [1107, 1137, 1204, 1246], "balanc": [1195, 1196], "ball": 1110, "baltimor": [631, 699], "ban": 1110, "bandwidth": [1007, 1211, 1218, 1221], "bar": [19, 1107, 1134, 1191, 1204, 1213, 1243], "barrier": 79, "barrier_wait": 65, "bartlett": 923, "base": [0, 1, 40, 85, 101, 120, 150, 231, 251, 302, 319, 340, 419, 451, 458, 496, 527, 530, 538, 539, 556, 565, 567, 578, 586, 646, 647, 649, 651, 656, 694, 706, 717, 718, 756, 806, 903, 907, 909, 915, 917, 919, 920, 923, 953, 960, 1107, 1110, 1112, 1114, 1123, 1125, 1133, 1134, 1145, 1158, 1173, 1175, 1176, 1185, 1188, 1189, 1190, 1191, 1194, 1195, 1198, 1199, 1200, 1201, 1205, 1207, 1208, 1211, 1212, 1214, 1216, 1219, 1226, 1227, 1233, 1243, 1248], "base_dil": 287, "base_ev": [1208, 1233], "baseexcept": [1208, 1233], "bash": [1119, 1128], "bashtannyk": 1007, "basi": [120, 957, 965, 1133, 1184, 1189, 1196, 1203, 1205, 1209, 1214, 1227, 1239], "basic": [0, 447, 1075, 1112, 1122, 1130, 1188, 1189, 1190, 1192, 1205, 1212, 1214, 1219, 1221, 1236, 1247], "batch": [0, 71, 80, 81, 87, 92, 97, 102, 103, 104, 107, 108, 122, 146, 170, 191, 195, 196, 213, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 319, 643, 813, 837, 839, 849, 855, 865, 867, 926, 1014, 1101, 1104, 1110, 1122, 1123, 1126, 1130, 1132, 1133, 1136, 1146, 1151, 1152, 1166, 1173, 1179, 1182, 1184, 1186, 1187, 1188, 1191, 1194, 1198, 1199, 1205, 1206, 1207, 1208, 1210, 1212, 1214, 1216, 1218, 1227, 1231, 1233, 1234, 1237, 1242, 1244, 1247], "batch_": [1211, 1214], "batch_a": 1214, "batch_ax": [1202, 1236], "batch_axi": [353, 354, 355, 356, 357, 358, 364], "batch_convolve_v3": [1132, 1231], "batch_dim": [80, 1107, 1152], "batch_group_count": [195, 1110], "batch_jaxpr": [1208, 1233], "batch_jaxpr2": [1208, 1233], "batch_partition_spec": 1180, "batch_per_devic": 1136, "batch_sampl": 1203, "batch_singl": 1201, "batch_siz": [1201, 1203, 1209, 1211, 1213], "batchaxi": 1107, "batched_apply_matrix": [1210, 1242], "batched_f": 1107, "batched_kei": 1194, "batched_log_joint": 1213, "batched_pr": [1203, 1209], "batched_predict": [1203, 1209], "batched_primit": [1208, 1233], "batched_r_t": [1133, 1227], "batched_s_t": [1133, 1227], "batched_s_tm1": [1133, 1227], "batched_test_beta": 1213, "batched_theta": [1133, 1227], "batched_x": [1210, 1242], "batcher": 0, "batchnorm": [1110, 1137, 1146, 1246], "batchtrac": [1104, 1107, 1187, 1202, 1208, 1233, 1236], "bayesian": [1103, 1109], "baz": [1107, 1134, 1191, 1243], "bazel": [1110, 1152, 1196], "bazel_opt": 1119, "bb": [1199, 1206, 1234], "bc": [1110, 1199, 1206, 1234], "bchoic": 452, "bcoo": [82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 117, 118, 119, 122, 123, 125], "bcsr": [105, 106, 107, 108], "bct": [1202, 1236], "bd": [1107, 1199, 1206, 1234], "bdim": 1107, "bdim_out": 1107, "bdims_in": 1107, "bdims_out": 1107, "becam": [1185, 1193, 1194, 1212], "becaus": [0, 7, 17, 19, 50, 229, 325, 332, 341, 342, 399, 411, 438, 489, 498, 499, 526, 529, 548, 550, 576, 635, 692, 701, 706, 723, 737, 745, 751, 798, 799, 816, 824, 837, 888, 889, 890, 891, 892, 895, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 912, 1048, 1075, 1107, 1110, 1117, 1119, 1121, 1122, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1145, 1151, 1152, 1159, 1170, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1223, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1243, 1244, 1246, 1247], "becom": [180, 389, 405, 424, 428, 432, 435, 437, 438, 439, 452, 453, 466, 488, 489, 500, 538, 541, 542, 543, 544, 555, 560, 561, 564, 571, 608, 609, 610, 611, 612, 650, 651, 652, 654, 655, 661, 667, 668, 671, 691, 693, 717, 718, 732, 737, 770, 790, 1105, 1110, 1114, 1117, 1122, 1130, 1131, 1134, 1136, 1137, 1152, 1175, 1178, 1180, 1183, 1185, 1190, 1191, 1193, 1195, 1197, 1212, 1214, 1219, 1238, 1242, 1244, 1246, 1249], "been": [0, 34, 66, 71, 188, 493, 774, 815, 835, 914, 924, 925, 1048, 1109, 1110, 1112, 1119, 1121, 1122, 1135, 1138, 1147, 1152, 1171, 1173, 1180, 1182, 1184, 1185, 1188, 1189, 1193, 1194, 1199, 1201, 1203, 1204, 1207, 1214, 1218, 1221, 1226, 1237, 1244], "befor": [0, 35, 55, 69, 72, 110, 111, 114, 115, 195, 196, 197, 198, 199, 245, 247, 279, 362, 364, 396, 398, 409, 461, 464, 495, 532, 533, 580, 641, 701, 702, 739, 740, 748, 762, 778, 805, 811, 926, 1029, 1049, 1106, 1107, 1110, 1119, 1120, 1122, 1127, 1128, 1130, 1131, 1136, 1150, 1151, 1152, 1158, 1173, 1180, 1182, 1183, 1185, 1186, 1188, 1190, 1192, 1193, 1194, 1195, 1198, 1199, 1201, 1204, 1206, 1208, 1211, 1212, 1214, 1218, 1219, 1221, 1222, 1223, 1232, 1233, 1234, 1237, 1238, 1239, 1243], "before_1": 701, "before_n": 701, "began": [1189, 1195], "begin": [186, 195, 307, 343, 344, 350, 366, 374, 380, 409, 495, 557, 644, 656, 701, 702, 747, 750, 876, 934, 952, 953, 959, 963, 964, 1048, 1132, 1133, 1183, 1185, 1187, 1189, 1195, 1199, 1205, 1208, 1218, 1221, 1223, 1227, 1230, 1231, 1232, 1233, 1242, 1247], "begun": 1185, "behalf": 1183, "behav": [0, 14, 15, 30, 69, 333, 624, 723, 816, 1110, 1114, 1122, 1152, 1179, 1182, 1190, 1191, 1193, 1194, 1199, 1206, 1216, 1219, 1221, 1234, 1237], "behavior": [7, 17, 18, 26, 34, 37, 38, 49, 50, 71, 77, 104, 127, 150, 215, 232, 245, 280, 296, 297, 298, 299, 300, 301, 303, 384, 422, 485, 487, 503, 526, 546, 595, 624, 644, 692, 720, 735, 741, 750, 771, 778, 816, 837, 912, 919, 924, 925, 926, 1075, 1105, 1110, 1117, 1124, 1125, 1158, 1180, 1183, 1185, 1186, 1187, 1190, 1191, 1193, 1194, 1195, 1199, 1200, 1202, 1206, 1208, 1210, 1211, 1214, 1225, 1227, 1232, 1233, 1234, 1236, 1248], "behaviour": [672, 1131, 1238], "behind": [409, 702, 1107, 1110, 1130, 1179, 1180, 1190, 1195, 1199, 1211, 1238, 1239, 1244], "being": [0, 35, 150, 312, 341, 342, 399, 418, 468, 480, 494, 527, 542, 543, 556, 568, 661, 667, 710, 713, 733, 828, 829, 830, 871, 1068, 1069, 1070, 1071, 1072, 1075, 1084, 1086, 1088, 1090, 1091, 1107, 1109, 1110, 1119, 1121, 1122, 1127, 1128, 1130, 1131, 1134, 1135, 1136, 1137, 1152, 1183, 1185, 1186, 1188, 1189, 1190, 1193, 1196, 1197, 1199, 1200, 1201, 1202, 1205, 1206, 1211, 1214, 1216, 1221, 1223, 1227, 1228, 1229, 1230, 1232, 1234, 1235, 1236, 1240, 1241, 1243, 1246, 1248], "believ": [1190, 1191, 1196, 1219], "bell": 1190, "belong": [73, 77, 487, 566, 568, 844, 1193], "below": [0, 7, 13, 69, 120, 196, 197, 248, 252, 256, 332, 369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 751, 752, 754, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 799, 804, 805, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 824, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 958, 961, 962, 963, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1101, 1102, 1104, 1105, 1107, 1109, 1112, 1113, 1117, 1119, 1121, 1122, 1127, 1130, 1131, 1134, 1136, 1152, 1154, 1170, 1173, 1182, 1185, 1186, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1202, 1207, 1208, 1213, 1214, 1221, 1222, 1223, 1224, 1232, 1233, 1235, 1236, 1237, 1238, 1243, 1244, 1247, 1248], "benchmark": [1131, 1184, 1190, 1238, 1242], "benefici": [49, 1185, 1186, 1189], "benefit": [861, 922, 1109, 1110, 1122, 1184, 1185, 1188, 1195, 1222], "benign": 34, "bernoulli": 1191, "bernoulli_numb": 929, "bertseka": [1200, 1227], "besid": 1122, "bessel": [171, 172, 572, 606, 948, 949, 950, 951, 1208, 1233], "bessel_jn": 1189, "best": [497, 711, 1007, 1105, 1106, 1109, 1110, 1121, 1130, 1131, 1133, 1135, 1144, 1159, 1185, 1186, 1189, 1190, 1193, 1196, 1201, 1205, 1213, 1214, 1216, 1219, 1227, 1244], "beta": [173, 606, 931, 932, 1110, 1213], "beta_1": 1145, "beta_2": 1145, "beta_init": 1146, "beta_loc": 1213, "beta_loc_grad": 1213, "beta_log_scal": 1213, "beta_log_scale_grad": 1213, "beta_sampl": 1213, "betabinom": 1110, "betainc": [1110, 1189], "better": [72, 82, 84, 399, 552, 567, 861, 957, 1110, 1123, 1134, 1185, 1187, 1188, 1189, 1193, 1197, 1200, 1205, 1210, 1211, 1214, 1216, 1219, 1227, 1242, 1243], "between": [0, 13, 71, 94, 195, 196, 302, 380, 391, 399, 405, 417, 424, 447, 467, 486, 495, 527, 545, 552, 559, 590, 621, 644, 656, 681, 683, 701, 703, 710, 713, 724, 746, 781, 808, 886, 919, 921, 922, 923, 926, 928, 1009, 1104, 1107, 1110, 1117, 1120, 1122, 1125, 1128, 1130, 1131, 1134, 1137, 1145, 1152, 1166, 1167, 1173, 1178, 1183, 1186, 1187, 1188, 1190, 1191, 1195, 1198, 1199, 1205, 1206, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1226, 1227, 1234, 1238, 1242, 1243, 1246, 1248], "beyond": [487, 739, 912, 1114, 1185, 1186, 1194, 1195, 1221], "bf": [1199, 1206, 1234, 1248], "bf16": [0, 399, 1195], "bf16type": 0, "bfbfbfbfbfbfbfbfbfbfbff4f4f8c8c16bfbfc8": 1248, "bff2f4f8c8c16f": 1248, "bff2f4f8c8c16u8f": 1248, "bfg": [913, 914, 1110, 1159], "bfloat16": [0, 26, 42, 399, 593, 1110, 1125, 1166, 1186, 1195, 1219, 1248], "bfloat16_3x": 1166, "bg": [1206, 1234], "bh": [1206, 1234], "bi": [566, 924], "bia": [472, 527, 1049, 1136, 1137, 1206, 1211, 1234, 1244, 1246], "bias": [1135, 1203, 1209, 1211, 1247], "bias_kei": [1136, 1137, 1246], "bicgstab": 1189, "bicub": [146, 147], "bidirect": 1211, "bidirection": 1211, "big": [700, 804, 1107, 1125, 1130, 1173, 1184, 1186, 1189, 1193, 1199, 1210, 1216, 1218, 1221], "bigcrush": 1199, "bigger": 1188, "biggest": [1202, 1236], "bilinear": [146, 147], "billion": [1205, 1227], "bimod": 1007, "bin": [431, 487, 510, 524, 565, 566, 567, 568, 700, 804, 1029, 1120, 1128], "bin_area": 566, "bin_count": [566, 568], "bin_edg": [565, 567], "bin_volum": 568, "binari": [165, 432, 434, 435, 436, 437, 438, 439, 527, 552, 589, 610, 645, 700, 721, 737, 746, 747, 804, 831, 1110, 1127, 1159, 1188, 1195, 1199, 1248], "binary_r": 1207, "bind": [0, 35, 340, 1107, 1110, 1131, 1136, 1182, 1187, 1190, 1196, 1198, 1199, 1202, 1204, 1208, 1212, 1233, 1236, 1237], "bind1": 1107, "bind_al": 1223, "bind_cond": 1107, "bind_param": [1208, 1233], "bind_with_trac": [1208, 1212, 1233], "binder": [1107, 1237], "binom": 842, "binomi": [1205, 1227], "binop_abstract_ev": 1107, "binop_batching_rul": 1107, "bint": 1194, "biometrika": [430, 923], "bipartit": 1107, "bisect": 1128, "bit": [174, 275, 291, 409, 432, 434, 435, 436, 437, 438, 439, 527, 589, 610, 619, 682, 685, 700, 702, 722, 736, 737, 750, 804, 838, 858, 859, 881, 909, 1107, 1108, 1110, 1119, 1121, 1122, 1128, 1131, 1170, 1173, 1185, 1187, 1188, 1190, 1191, 1194, 1195, 1197, 1200, 1203, 1205, 1207, 1209, 1211, 1214, 1218, 1219, 1221, 1227, 1232, 1238, 1242, 1246, 1248], "bit_width": [137, 141, 142], "bitcast": 174, "bitcastconverttyp": 174, "bitord": [700, 804], "bitwise_count": 1110, "bitwise_or": 1199, "bj\u00f6rck": 909, "bla": 490, "black": 1207, "blackjax": 1109, "blackman": [562, 563], "ble1990": 165, "bleed": 1127, "blelloch": 165, "blob": 1110, "block": [30, 66, 120, 145, 333, 493, 570, 607, 719, 815, 834, 836, 887, 894, 906, 909, 1106, 1110, 1114, 1117, 1130, 1175, 1193, 1202, 1212, 1216, 1219, 1221, 1223, 1236], "block_arrai": 441, "block_dimens": 92, "block_host_until_readi": 1110, "block_indic": 1216, "block_k": 1216, "block_m": 1216, "block_n": 1216, "block_result": 1211, "block_shap": [1216, 1221], "block_spec": 1221, "block_until_readi": [829, 830, 1106, 1110, 1117, 1120, 1122, 1130, 1131, 1133, 1152, 1183, 1201, 1210, 1212, 1223, 1227, 1238, 1242], "blockenlarg": 895, "blocksiz": 909, "blockspec": [1216, 1217, 1218, 1220], "blow": 120, "bm": 1221, "bmatrix": [1205, 1218, 1227], "bmod": 288, "bn": [929, 1221], "bnk": 1214, "bnm": 1214, "bob": [1135, 1247], "bodi": [34, 1131, 1182, 1183, 1186, 1188, 1190, 1199, 1206, 1208, 1211, 1214, 1216, 1218, 1219, 1233, 1234, 1237, 1238], "body_fun": [229, 325, 1182, 1199, 1200, 1208, 1227, 1233, 1237], "body_jaxpr": [1182, 1237], "body_nconst": [1182, 1237], "boil": [1194, 1244], "boilerpl": [1190, 1212, 1221, 1244], "bold": [1206, 1234], "book": [1205, 1230], "bookkeep": [1107, 1182, 1183, 1192, 1203, 1209, 1237], "bool": [7, 16, 17, 19, 21, 34, 37, 38, 40, 42, 44, 51, 55, 64, 70, 72, 73, 75, 78, 80, 81, 82, 91, 93, 106, 107, 110, 111, 114, 115, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 189, 190, 192, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 325, 327, 328, 331, 333, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 390, 391, 392, 393, 394, 395, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 422, 426, 427, 428, 429, 433, 443, 447, 453, 459, 460, 461, 467, 471, 472, 477, 487, 492, 494, 497, 500, 526, 546, 558, 560, 561, 565, 566, 568, 569, 576, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 611, 612, 614, 616, 618, 620, 624, 625, 626, 628, 629, 631, 632, 633, 637, 638, 639, 642, 643, 644, 645, 652, 653, 654, 655, 658, 660, 662, 663, 664, 666, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 693, 703, 704, 705, 706, 710, 711, 713, 720, 722, 723, 724, 741, 743, 744, 745, 746, 749, 750, 751, 752, 755, 762, 769, 771, 773, 787, 799, 800, 801, 802, 803, 807, 809, 810, 812, 814, 816, 820, 821, 822, 823, 825, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 913, 919, 921, 922, 923, 930, 933, 937, 938, 942, 943, 952, 953, 955, 957, 959, 960, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1029, 1032, 1033, 1034, 1035, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1076, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1097, 1099, 1100, 1102, 1107, 1110, 1121, 1122, 1131, 1150, 1158, 1175, 1176, 1182, 1195, 1199, 1201, 1208, 1211, 1212, 1233, 1237, 1238, 1239, 1247], "bool_": [91, 106, 107, 138, 152, 153, 154, 155, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 189, 190, 192, 196, 197, 200, 201, 202, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 288, 289, 290, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 412, 417, 422, 426, 427, 428, 433, 443, 453, 460, 461, 477, 492, 569, 616, 618, 625, 626, 628, 629, 632, 638, 639, 642, 643, 658, 664, 704, 743, 744, 787, 800, 801, 802, 803, 807, 812, 814, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 887, 889, 902, 903, 930, 933, 937, 938, 943, 952, 953, 955, 959, 960, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1034, 1035, 1044, 1045, 1046, 1047, 1050, 1051, 1062, 1063, 1064, 1065, 1097, 1107, 1195, 1199, 1248], "bool_op": 1199, "boolean": [7, 37, 38, 56, 70, 110, 111, 114, 115, 122, 165, 191, 214, 229, 232, 238, 279, 280, 295, 302, 303, 312, 331, 340, 390, 395, 409, 432, 434, 436, 437, 439, 480, 505, 557, 577, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 605, 652, 653, 654, 655, 656, 657, 688, 700, 702, 705, 706, 773, 809, 834, 836, 837, 840, 847, 894, 1067, 1068, 1069, 1070, 1071, 1072, 1076, 1083, 1084, 1086, 1088, 1090, 1091, 1102, 1107, 1110, 1114, 1121, 1122, 1180, 1182, 1184, 1193, 1199, 1206, 1211, 1212, 1234, 1237, 1238, 1248], "boolean_sequ": 605, "boost": [944, 945], "borderlin": 1189, "bore": 1201, "borrow": [0, 1203, 1209, 1216], "bot": 1112, "both": [0, 1, 13, 56, 71, 88, 105, 150, 285, 295, 302, 333, 339, 348, 349, 376, 383, 389, 391, 396, 405, 424, 429, 432, 435, 437, 438, 439, 466, 472, 473, 485, 488, 489, 490, 500, 515, 538, 541, 542, 543, 544, 555, 560, 561, 564, 571, 579, 588, 590, 595, 608, 609, 610, 611, 612, 631, 634, 650, 651, 652, 654, 655, 658, 661, 667, 668, 671, 691, 693, 717, 718, 725, 732, 736, 737, 751, 752, 770, 777, 779, 786, 790, 824, 883, 885, 892, 904, 914, 919, 922, 924, 925, 926, 956, 957, 1007, 1099, 1107, 1109, 1110, 1114, 1121, 1122, 1130, 1134, 1135, 1136, 1152, 1158, 1173, 1175, 1182, 1183, 1185, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1200, 1202, 1204, 1206, 1208, 1211, 1212, 1214, 1216, 1218, 1221, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1243, 1244], "bottleneck": 1191, "bottom": [409, 702, 1107, 1116, 1183, 1188, 1223], "bought": 1185, "bounc": [1110, 1186], "bound": [57, 71, 215, 216, 217, 229, 232, 296, 297, 298, 299, 300, 301, 319, 325, 341, 352, 361, 362, 363, 487, 588, 688, 723, 729, 773, 774, 805, 820, 821, 822, 823, 877, 926, 1009, 1075, 1078, 1079, 1080, 1081, 1082, 1085, 1087, 1101, 1105, 1107, 1110, 1114, 1116, 1136, 1166, 1194, 1195, 1200, 1206, 1216, 1221, 1227, 1234], "bound_subjaxpr": 1110, "boundari": [9, 147, 464, 559, 587, 729, 912, 916, 918, 921, 922, 1121, 1122, 1145, 1165, 1166, 1183, 1191, 1200, 1207, 1224, 1227], "box": [1107, 1135, 1206, 1208, 1233, 1234, 1247], "boyd": [934, 952, 963], "brace": 1214, "bracket": [1182, 1237], "branch": [191, 302, 319, 405, 424, 939, 1110, 1112, 1119, 1122, 1131, 1182, 1188, 1195, 1199, 1201, 1210, 1237, 1238], "break": [750, 1105, 1107, 1110, 1160, 1183, 1185, 1187, 1188, 1193, 1195, 1204, 1208, 1216, 1219, 1233], "breakag": [1110, 1193, 1194], "breakpoint": [1110, 1115, 1116, 1140, 1190], "breakpoint_if_nonfinit": [1117, 1232], "bridg": 1167, "brief": [229, 295, 325, 1244], "briefli": 1239, "bring": [897, 1137, 1246], "brittl": 1185, "broad": [1185, 1190], "broadcast": [0, 31, 71, 75, 150, 157, 180, 181, 229, 295, 325, 369, 389, 390, 392, 393, 395, 405, 407, 408, 415, 424, 429, 432, 435, 437, 438, 439, 441, 443, 444, 445, 452, 453, 466, 471, 488, 489, 500, 538, 541, 542, 543, 544, 555, 560, 561, 564, 571, 595, 608, 609, 610, 611, 612, 628, 631, 633, 650, 651, 652, 653, 654, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 691, 693, 703, 717, 718, 720, 722, 724, 732, 733, 737, 769, 770, 771, 774, 778, 790, 810, 813, 816, 819, 824, 840, 841, 842, 844, 846, 849, 850, 852, 854, 856, 861, 863, 865, 868, 870, 872, 873, 875, 876, 877, 878, 879, 880, 955, 1029, 1049, 1101, 1107, 1110, 1136, 1152, 1158, 1182, 1188, 1193, 1208, 1213, 1216, 1225, 1233], "broadcast_abstract_ev": 1107, "broadcast_arrai": 1110, "broadcast_dimens": [86, 180, 1182, 1204, 1237], "broadcast_impl": 1107, "broadcast_in_dim": [86, 179, 1110, 1182, 1199, 1204, 1237], "broadcast_in_dim_p": 1159, "broadcast_p": 1107, "broadcast_shap": [865, 1208, 1233], "broadcast_to": [1107, 1110], "broadcast_transl": 1107, "broadcastindim": [180, 1107], "broader": 1112, "broadli": [1122, 1135, 1185, 1189, 1195, 1247], "broke": 1110, "broken": [1110, 1122, 1218], "bronshtein": 715, "browser": 1120, "bruno": 1153, "brute": 1128, "bt": 1117, "bte": 1186, "bthd": 1186, "btzd": 1186, "buck": [921, 922], "bucket": [820, 821, 822, 823, 1110, 1222], "bucket_s": [820, 821, 822, 823], "buf": 1107, "buffer": [0, 29, 37, 38, 71, 150, 546, 547, 824, 831, 1102, 1107, 1110, 1120, 1152, 1158, 1170, 1180, 1185, 1186, 1189, 1211, 1218, 1219, 1221, 1226], "buffer_from_pyv": 1107, "buffer_length": 1152, "buffer_lik": 547, "bufferdonationtestcas": 1110, "bug": [825, 912, 1125, 1128, 1131, 1184, 1185, 1189, 1192, 1194, 1213, 1219, 1225, 1238], "bugfix": 1110, "buggi": [1192, 1193], "build": [53, 54, 58, 59, 60, 61, 62, 189, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 576, 745, 926, 1110, 1112, 1113, 1128, 1130, 1144, 1151, 1156, 1182, 1187, 1189, 1193, 1194, 1196, 1203, 1205, 1207, 1209, 1212, 1218, 1227, 1230, 1237], "build_gpu_plugin": 1119, "build_jaxlib": 1119, "build_tre": 1247, "builder": [1107, 1191, 1216], "built": [0, 68, 399, 471, 489, 494, 926, 1102, 1104, 1107, 1109, 1110, 1112, 1115, 1119, 1121, 1126, 1127, 1128, 1135, 1136, 1152, 1165, 1170, 1173, 1185, 1186, 1187, 1188, 1189, 1195, 1196, 1203, 1205, 1209, 1211, 1216, 1224, 1227, 1232, 1242, 1247], "builtin": [262, 552, 603, 1107, 1117, 1122, 1179], "builtin_jacfwd": [1205, 1227], "builtin_jacrev": [1205, 1227], "bulk": [1135, 1186, 1219], "bullet": 1186, "bump": [1110, 1196], "bunch": 1205, "bundl": [1110, 1130, 1204, 1223], "burden": [1186, 1189, 1191], "busi": 66, "button": [1112, 1223], "bw_method": 1007, "bwd": [1114, 1192, 1206, 1234], "bx": 1214, "byte": [331, 447, 494, 547, 552, 645, 700, 831, 1110, 1221], "bytes_": 750, "bytes_in_us": 1110, "c": [110, 114, 145, 165, 195, 196, 197, 200, 295, 340, 405, 413, 419, 424, 432, 434, 436, 437, 439, 446, 452, 465, 467, 473, 494, 499, 544, 554, 572, 589, 615, 631, 645, 668, 692, 698, 699, 707, 725, 728, 729, 732, 734, 735, 736, 741, 778, 818, 876, 880, 887, 888, 889, 890, 894, 908, 911, 912, 1064, 1065, 1101, 1102, 1103, 1107, 1110, 1117, 1119, 1122, 1127, 1131, 1135, 1136, 1137, 1152, 1180, 1182, 1186, 1190, 1193, 1195, 1196, 1199, 1200, 1202, 1204, 1205, 1206, 1207, 1209, 1211, 1212, 1214, 1216, 1223, 1227, 1228, 1234, 1236, 1237, 1238, 1239, 1246, 1247, 1248], "c128": 1195, "c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16c16": 1248, "c64": 1195, "c8": 1248, "c8c8c8c16c8c16c": 1248, "c8c8c8c8c8c8c8c8c8c8c8c8c8c16c8c16c8c8c8": 1248, "c_": [467, 472, 725], "c_and_low": 889, "c_block": [1186, 1211], "c_k": 468, "c_partialsum": [1186, 1211], "c_ref": 1211, "ca": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648, 776, 935], "cach": [5, 6, 7, 8, 18, 150, 527, 1107, 1110, 1119, 1121, 1122, 1130, 1150, 1158, 1199, 1201, 1205, 1210, 1212, 1216, 1221, 1224, 1227, 1242, 1249], "cache_miss": [1131, 1199, 1202, 1208, 1212, 1233, 1236, 1238], "cached_primitive_low": [1202, 1236], "calc": 1122, "calc_q": 897, "calcul": [198, 332, 369, 385, 386, 429, 473, 486, 496, 501, 502, 504, 508, 517, 527, 559, 567, 588, 595, 620, 622, 624, 633, 644, 648, 650, 651, 684, 686, 701, 720, 731, 736, 751, 752, 758, 765, 769, 810, 811, 820, 821, 822, 823, 892, 893, 904, 907, 914, 915, 917, 924, 925, 926, 942, 953, 955, 975, 986, 993, 999, 1003, 1007, 1016, 1021, 1025, 1029, 1039, 1044, 1048, 1049, 1050, 1054, 1059, 1062, 1064, 1109, 1110, 1133, 1151, 1175, 1190, 1193, 1200, 1202, 1205, 1227, 1230, 1236, 1247], "calculu": [340, 1130, 1205, 1230], "call": [4, 7, 9, 13, 16, 17, 18, 19, 22, 23, 25, 30, 35, 55, 56, 57, 66, 69, 70, 71, 128, 150, 209, 213, 229, 325, 333, 339, 398, 399, 405, 409, 424, 452, 494, 496, 522, 527, 549, 630, 634, 635, 657, 681, 683, 692, 702, 703, 705, 724, 747, 750, 773, 778, 813, 824, 834, 835, 837, 907, 913, 915, 919, 924, 925, 926, 953, 956, 957, 958, 1067, 1068, 1069, 1070, 1071, 1072, 1081, 1083, 1084, 1086, 1088, 1090, 1091, 1104, 1107, 1109, 1110, 1111, 1114, 1116, 1117, 1120, 1121, 1122, 1127, 1130, 1131, 1134, 1135, 1136, 1137, 1150, 1154, 1158, 1170, 1173, 1176, 1178, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1221, 1222, 1223, 1224, 1226, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247, 1248], "call_bind": [1131, 1190], "call_func": 1075, "call_impl_cache_miss": 1212, "call_jax_other_devic": 1152, "call_jaxpr": [1110, 1182], "call_primit": 1110, "call_tf": [1110, 1152], "call_tf_full_ad": 1152, "call_with_devic": [67, 1152], "call_wrap": [1131, 1199, 1202, 1208, 1212, 1233, 1236, 1238], "callabl": [7, 9, 13, 14, 15, 17, 18, 21, 50, 57, 67, 70, 71, 119, 120, 125, 128, 136, 143, 144, 145, 148, 149, 150, 151, 165, 191, 253, 285, 287, 295, 298, 319, 325, 332, 333, 338, 340, 341, 496, 549, 551, 558, 657, 705, 750, 792, 824, 830, 837, 896, 914, 1007, 1068, 1069, 1070, 1071, 1072, 1076, 1079, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1102, 1104, 1107, 1110, 1117, 1145, 1151, 1158, 1186, 1190, 1192, 1199, 1200, 1206, 1211, 1214, 1216, 1227, 1234, 1247], "callback": [0, 18, 19, 65, 66, 67, 68, 69, 70, 338, 837, 1107, 1110, 1121, 1122, 1180, 1235, 1249], "callback_flavor": [67, 68, 69], "callback_func": 67, "callback_transform": 1110, "callbackexcept": [66, 1152], "callbackflavor": [67, 68, 69], "calle": 1120, "caller": [38, 75, 1107, 1117, 1176, 1186, 1187, 1188, 1191, 1194, 1208, 1211, 1233], "callgraph": 1120, "callsit": [1202, 1212, 1236], "cambridg": [430, 562, 563, 628, 741, 934, 952, 963], "camel": 1185, "can": [0, 5, 6, 7, 13, 16, 17, 18, 26, 33, 34, 42, 49, 50, 55, 56, 57, 67, 69, 71, 72, 73, 76, 77, 104, 150, 191, 208, 213, 229, 280, 295, 303, 325, 333, 336, 338, 339, 340, 341, 342, 364, 390, 395, 396, 397, 398, 399, 413, 415, 419, 429, 434, 436, 441, 443, 447, 472, 473, 482, 485, 487, 494, 496, 508, 509, 511, 514, 515, 516, 526, 527, 559, 567, 570, 576, 588, 589, 592, 595, 601, 602, 604, 605, 613, 624, 627, 628, 630, 633, 634, 641, 644, 645, 651, 663, 665, 679, 681, 683, 688, 696, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 724, 729, 734, 736, 741, 745, 746, 747, 748, 750, 751, 752, 773, 774, 777, 779, 788, 799, 811, 816, 820, 821, 822, 823, 824, 828, 830, 831, 833, 834, 836, 837, 854, 888, 903, 920, 922, 924, 925, 926, 927, 938, 957, 965, 1007, 1008, 1075, 1078, 1089, 1101, 1102, 1104, 1106, 1107, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1150, 1151, 1152, 1153, 1154, 1158, 1159, 1165, 1170, 1173, 1175, 1176, 1178, 1179, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "cancel": [120, 1188, 1200, 1227], "candid": [1189, 1195], "cannon": 1186, "cannot": [13, 37, 38, 49, 50, 56, 66, 97, 150, 159, 160, 332, 461, 498, 499, 526, 546, 570, 673, 674, 706, 723, 768, 815, 888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 1110, 1114, 1117, 1121, 1122, 1127, 1136, 1152, 1158, 1170, 1178, 1185, 1189, 1193, 1195, 1196, 1199, 1200, 1208, 1212, 1214, 1216, 1219, 1221, 1223, 1227, 1233, 1247], "canon": [13, 40, 194, 1188, 1190, 1200, 1227, 1244], "canonic": [1110, 1199, 1212, 1224, 1247], "canonical_name_cach": [1202, 1236], "canonicalize_dim": [1199, 1212], "canonicalize_dtyp": [0, 1247], "canonicalize_shap": [1199, 1212], "canonicalized_out_shardings_flat": [1199, 1212, 1238], "capabl": [429, 615, 1109, 1110, 1186, 1190, 1208, 1219, 1233], "capac": 1221, "capsul": 38, "captur": [9, 831, 834, 836, 1110, 1117, 1120, 1131, 1182, 1199, 1202, 1211, 1232, 1236, 1237, 1238], "care": [71, 548, 550, 816, 1117, 1122, 1130, 1135, 1137, 1152, 1183, 1205, 1218, 1219, 1223, 1224, 1227, 1246, 1247], "carefulli": [1121, 1137, 1189, 1200, 1206, 1214, 1219, 1227, 1234, 1246], "carnegi": 165, "carri": [9, 49, 71, 229, 295, 325, 838, 1107, 1122, 1134, 1173, 1176, 1182, 1185, 1186, 1190, 1194, 1195, 1199, 1200, 1211, 1214, 1219, 1227, 1237, 1243, 1248], "cartesian": 664, "carv": [1218, 1221], "case": [7, 14, 15, 18, 34, 35, 49, 71, 82, 84, 104, 120, 150, 159, 160, 186, 195, 196, 208, 215, 232, 281, 292, 295, 296, 297, 298, 299, 300, 301, 303, 307, 339, 343, 344, 350, 366, 374, 380, 390, 395, 399, 413, 422, 426, 427, 428, 429, 452, 473, 475, 476, 480, 481, 485, 486, 487, 513, 531, 532, 533, 557, 559, 604, 619, 624, 634, 635, 644, 645, 650, 651, 656, 664, 670, 675, 676, 679, 681, 682, 683, 685, 700, 707, 711, 720, 722, 728, 733, 734, 740, 742, 750, 764, 767, 771, 772, 780, 808, 816, 824, 847, 896, 903, 911, 912, 921, 934, 952, 953, 963, 965, 1007, 1076, 1100, 1102, 1104, 1107, 1109, 1110, 1112, 1114, 1117, 1119, 1120, 1121, 1122, 1131, 1132, 1133, 1135, 1136, 1137, 1151, 1152, 1158, 1166, 1180, 1182, 1183, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1224, 1227, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247, 1248], "cases_from_list": 1110, "cast": [174, 200, 230, 384, 422, 447, 480, 495, 538, 571, 619, 672, 717, 718, 721, 736, 920, 921, 1110, 1121, 1122, 1130, 1179, 1180, 1195, 1199, 1219, 1248], "catastroph": 120, "catch": [50, 1112, 1114, 1115, 1119, 1122, 1185, 1190, 1193, 1194, 1199, 1221], "categori": [57, 593, 1030, 1031, 1185, 1193, 1194, 1199, 1219, 1248], "cauchi": [939, 1205, 1227], "caught": [1199, 1213], "caus": [5, 6, 527, 747, 828, 829, 830, 1110, 1121, 1122, 1128, 1131, 1152, 1179, 1186, 1190, 1193, 1198, 1199, 1202, 1208, 1212, 1214, 1233, 1236, 1238, 1247], "caveat": [120, 1104, 1117, 1127, 1173, 1201], "cb": 338, "cb48f42": 1110, "cb732a921f0c4184995cbed82394931011d12bd4": 1110, "cbid": 1223, "cbm": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648, 776, 935], "cbo9780511804441": [934, 952, 963], "cc": [1122, 1186, 1223], "cclass": 446, "ccm": 120, "cct": [1202, 1236], "cd": [1112, 1119, 1128], "cdf": [953, 960, 972, 976, 978, 987, 989, 990, 994, 996, 1004, 1006, 1027, 1028, 1040, 1042, 1043, 1055, 1057, 1061], "cdot": [346, 348, 349, 370, 376, 383, 468, 903, 947, 1153, 1205, 1227], "cdoubl": 634, "cede": 1190, "ceil": [399, 894], "cell": [0, 1107, 1119, 1202, 1205, 1208, 1227, 1233, 1236, 1248], "cell_id": [1208, 1233], "cell_nam": [1208, 1233], "center": [147, 510, 512, 524, 850, 912, 915, 916, 917, 918, 920, 922, 1110, 1146, 1195], "central": [559, 1123, 1189, 1211], "ceph": [572, 948, 949, 950, 951], "certain": [657, 1110, 1112, 1122, 1135, 1183, 1188, 1199, 1202, 1206, 1218, 1219, 1224, 1232, 1234, 1236, 1247], "certainli": [1122, 1216, 1219], "cflag": 0, "cg": [924, 1110, 1189], "ch": 606, "chain": [630, 1107, 1133, 1206, 1208, 1230, 1233, 1234], "chain_compos": [1206, 1234], "challeng": [1109, 1183, 1186, 1187, 1191, 1195, 1246], "chang": [7, 17, 18, 28, 33, 71, 76, 83, 120, 150, 230, 232, 245, 296, 297, 298, 299, 300, 301, 336, 394, 398, 443, 447, 462, 463, 466, 480, 503, 531, 557, 624, 628, 633, 644, 645, 656, 664, 675, 676, 681, 683, 703, 706, 724, 728, 734, 740, 750, 772, 805, 808, 824, 827, 871, 922, 1102, 1105, 1109, 1117, 1119, 1120, 1130, 1131, 1132, 1136, 1137, 1154, 1158, 1159, 1160, 1166, 1173, 1183, 1185, 1187, 1188, 1194, 1195, 1197, 1199, 1206, 1208, 1212, 1213, 1214, 1215, 1216, 1218, 1224, 1231, 1233, 1234, 1238], "changelog": [1105, 1160, 1187], "channel": [146, 196, 197, 198, 493, 570, 815, 1121, 1127, 1207], "channel_id": 0, "channel_iter": [1202, 1236], "chao": 1199, "chapman": 1007, "chapter": 630, "char": 0, "charact": [195, 196, 695, 750, 1110], "character": [1200, 1227], "characterist": [707, 1122, 1210, 1219], "charl": 896, "cheap": [1191, 1196, 1219], "chebyshev": 572, "check": [1, 5, 6, 22, 23, 35, 46, 56, 57, 208, 209, 232, 296, 297, 298, 299, 300, 301, 339, 390, 395, 447, 453, 592, 601, 604, 614, 688, 848, 888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 1076, 1103, 1107, 1108, 1110, 1121, 1127, 1128, 1130, 1131, 1133, 1135, 1150, 1152, 1166, 1186, 1187, 1188, 1189, 1194, 1196, 1198, 1199, 1200, 1202, 1203, 1208, 1209, 1211, 1212, 1214, 1223, 1227, 1232, 1233, 1234, 1236, 1238, 1242, 1247], "check_arg": [1199, 1208, 1212, 1233, 1238], "check_arraylik": 1199, "check_arraylike_or_non": 1199, "check_bool_convers": [1199, 1212, 1238], "check_clos": 1110, "check_eq": 1110, "check_finit": [888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910], "check_grad": [0, 1110, 1205, 1230], "check_jaxpr": 1110, "check_rep": 1211, "check_scalar_convers": [1199, 1212, 1238], "check_shmap": 1211, "check_toposort": 1107, "check_tracer_leak": 1110, "check_user_dtype_support": [1199, 1247], "check_vmap": 1211, "checked_f": [55, 56, 1114, 1116], "checker": [1110, 1115, 1121, 1154, 1185, 1199], "checkifi": [1147, 1216], "checkify_of_jit": 1114, "checking_leak": 1121, "checkout": [1112, 1119, 1128], "checkpoint": [35, 1103, 1110, 1152, 1197, 1198, 1205, 1227, 1235], "checkpoint_dot": [1184, 1206, 1234], "checkpoint_dots_with_no_batch_dim": [1206, 1234], "checkpoint_nam": [1206, 1234], "checkpoint_polici": [7, 1184, 1206, 1234], "cherri": 1205, "chi2": [711, 1110], "chicest": 1007, "child": [1081, 1096, 1135, 1195], "child_count": 1107, "child_tre": 1107, "child_treedef": 1107, "childless_nod": 1107, "children": [1079, 1080, 1081, 1082, 1107, 1122, 1135, 1224, 1247], "children_flat": 1107, "children_it": 1107, "chip": [1123, 1180, 1219, 1221, 1242], "chisquar": 1110, "cho_factor": 889, "cho_solv": 888, "choic": [35, 452, 895, 1106, 1110, 1185, 1191, 1195, 1196, 1199, 1206, 1214, 1223, 1234], "choicelist": 749, "choleski": [865, 888, 889, 1110, 1205, 1227], "choos": [120, 150, 405, 424, 497, 816, 907, 915, 917, 920, 1110, 1130, 1158, 1185, 1199, 1205, 1206, 1207, 1211, 1214, 1230, 1234, 1244, 1247], "chose": [1107, 1186, 1195, 1201], "chosen": [18, 35, 303, 405, 424, 557, 565, 567, 644, 656, 711, 816, 904, 912, 957, 965, 1105, 1151, 1189, 1195, 1198], "chunk": [157, 158, 1122, 1131, 1186, 1211, 1214, 1238], "chunk_siz": 1186, "churn": 1105, "chw": 197, "ci": [1110, 1112, 1119, 1185, 1196], "cint": 1110, "circ": [1153, 1205, 1227], "circl": [387, 400, 402, 420, 635, 1107], "circular": [916, 918, 1107, 1186], "circumst": [1133, 1159, 1186, 1218, 1227], "circumv": 1187, "cl": [0, 1080, 1082, 1107, 1122, 1208, 1224, 1233], "cla": 1112, "claim": 1107, "clamp": [232, 296, 297, 298, 299, 300, 301, 319, 688, 1110, 1166, 1182, 1199, 1237], "clang": [1110, 1119], "clarif": 496, "clariti": [1136, 1190, 1195], "class": [0, 1, 2, 3, 11, 12, 14, 15, 32, 39, 41, 43, 51, 53, 54, 57, 58, 59, 60, 61, 62, 80, 81, 82, 83, 84, 85, 92, 107, 109, 113, 122, 127, 130, 131, 137, 141, 142, 291, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 390, 392, 393, 395, 419, 429, 442, 451, 455, 456, 458, 494, 527, 530, 534, 535, 536, 539, 547, 549, 552, 556, 574, 577, 578, 581, 582, 583, 584, 586, 645, 660, 662, 666, 677, 678, 679, 680, 681, 683, 684, 685, 694, 695, 711, 720, 722, 756, 769, 771, 792, 794, 795, 796, 797, 806, 810, 828, 829, 839, 841, 842, 845, 846, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 913, 927, 928, 1007, 1075, 1078, 1080, 1082, 1104, 1107, 1110, 1121, 1122, 1123, 1130, 1135, 1136, 1137, 1145, 1178, 1180, 1187, 1189, 1190, 1194, 1199, 1201, 1202, 1203, 1205, 1208, 1212, 1214, 1216, 1222, 1224, 1227, 1233, 1236, 1239, 1246, 1247, 1248], "classic": [496, 1110, 1205, 1230, 1248], "classmethod": [1080, 1082, 1107, 1122, 1175, 1224], "claus": 719, "clean": [1110, 1119, 1180, 1188, 1189, 1190, 1195], "cleaner": 1110, "cleanli": 1189, "cleanup": 1110, "clear": [8, 1137, 1185, 1187, 1189, 1190, 1192, 1199, 1246], "clear_backend": 1110, "clear_cach": 1110, "clearer": [1194, 1214], "clearli": 1189, "clenshaw": 572, "cli": 16, "click": [1112, 1116, 1127, 1130, 1223], "client": [28, 33, 330, 331, 335, 336, 826, 827, 1110, 1111, 1202, 1236], "clip": [216, 217, 232, 296, 297, 298, 299, 300, 301, 431, 452, 688, 723, 729, 805, 909, 965, 1110, 1133, 1145, 1166, 1192], "clip_grad": 1145, "clip_gradi": [1192, 1200, 1227], "clip_gradient_bwd": [1192, 1200, 1227], "clip_gradient_fwd": [1192, 1200, 1227], "clip_sin": [1200, 1227], "clipped_arrai": 453, "clock": 1211, "clone": [1112, 1119, 1128], "cloned_kei": 848, "close": [7, 13, 209, 402, 416, 418, 420, 440, 465, 644, 645, 746, 747, 861, 896, 1107, 1110, 1122, 1130, 1166, 1170, 1186, 1188, 1189, 1190, 1192, 1195, 1200, 1204, 1211, 1212, 1216, 1218, 1227], "closed_jaxpr": [1204, 1208, 1212, 1233], "closedjaxpr": [340, 1182, 1208, 1233], "closer": [791, 1130, 1189, 1206, 1234], "closest_observ": [681, 683, 703, 724], "closur": [9, 13, 50, 1075, 1107, 1121, 1188, 1190, 1192, 1199, 1205, 1206, 1210, 1212, 1216, 1227, 1234, 1238], "closure_convert": 1110, "cloud": [35, 1110, 1173, 1198, 1223], "clu": 1107, "cluster": [35, 893, 1110, 1127], "cm": 1207, "cmap": 1207, "cmu": 165, "cnhw": 197, "cnn": 196, "cnst": 1107, "co": [7, 14, 15, 49, 71, 333, 340, 387, 400, 470, 715, 775, 957, 965, 1100, 1102, 1107, 1117, 1122, 1153, 1184, 1186, 1190, 1200, 1202, 1205, 1206, 1207, 1212, 1214, 1216, 1219, 1227, 1232, 1234, 1236], "coars": 1196, "code": [56, 67, 69, 71, 120, 285, 333, 339, 441, 452, 576, 645, 695, 710, 711, 713, 745, 746, 824, 828, 829, 888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 913, 1105, 1106, 1107, 1108, 1110, 1114, 1115, 1116, 1117, 1119, 1121, 1123, 1126, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1144, 1152, 1158, 1170, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1202, 1204, 1206, 1208, 1210, 1211, 1212, 1213, 1216, 1219, 1221, 1223, 1224, 1225, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1247, 1248], "code_ast": [1208, 1233], "code_obj": [1208, 1233], "codebas": [1109, 1110, 1180, 1184, 1185, 1187, 1249], "codifi": 1185, "codomain": [1205, 1227], "coeff": [741, 1205, 1227], "coeffici": [467, 624, 636, 641, 707, 708, 709, 710, 711, 712, 713, 714, 715, 741, 891, 1110, 1145, 1153, 1184, 1205, 1206, 1227, 1230, 1234], "coerc": 1199, "coercibl": [603, 1195], "cognit": 1185, "cohes": 1183, "col": [110, 114, 147, 824], "col_norm": 824, "cola": [921, 922], "colab": [1110, 1119, 1122, 1127, 1130, 1136, 1137, 1202, 1236, 1244], "colatitud": [957, 965], "colatitudin": 965, "collabor": 1189, "collaps": [71, 197, 799, 1195], "collapsed_slice_dim": 1166, "collate_fn": 1203, "collect": [53, 54, 58, 59, 60, 61, 62, 72, 137, 141, 142, 150, 277, 340, 485, 604, 824, 831, 832, 834, 836, 1101, 1102, 1103, 1107, 1110, 1120, 1122, 1125, 1135, 1136, 1151, 1152, 1158, 1186, 1189, 1197, 1198, 1200, 1201, 1219, 1224, 1227, 1239, 1244, 1247], "collect_profil": [1110, 1223], "collective_backend_config": 0, "collective_matmul_allgather_lhs_non_contract": 1186, "collective_ref": 1211, "collectivepermut": [277, 1125], "collectivepermutereceivedon": 1125, "collectivepermutesenddon": 1125, "colon": 750, "color": [1201, 1207], "color_map": 21, "cols_sort": 82, "colsum": 1102, "column": [118, 121, 148, 339, 352, 361, 413, 419, 454, 467, 472, 506, 526, 532, 533, 569, 570, 573, 613, 619, 620, 624, 630, 634, 637, 711, 725, 728, 729, 780, 782, 809, 892, 893, 903, 910, 911, 1135, 1195, 1205, 1216, 1218, 1227, 1247], "column_axi": [352, 361], "com": [628, 758, 1110, 1112, 1119, 1120, 1127, 1128, 1199, 1202, 1203, 1242], "combin": [57, 165, 229, 295, 297, 299, 300, 301, 325, 494, 511, 516, 521, 525, 559, 566, 576, 745, 824, 1107, 1109, 1110, 1117, 1122, 1125, 1127, 1133, 1136, 1146, 1191, 1194, 1203, 1208, 1209, 1211, 1218, 1227, 1233, 1248], "combinatori": [497, 1119], "combine_threshold_byt": 1125, "come": [278, 712, 722, 799, 1107, 1109, 1122, 1130, 1134, 1135, 1137, 1185, 1187, 1188, 1195, 1196, 1199, 1201, 1202, 1204, 1206, 1210, 1218, 1219, 1234, 1243, 1247], "comfort": 1218, "comm1": 588, "comm2": 588, "comma": [494, 496, 750], "command": [35, 1110, 1112, 1115, 1117, 1119, 1124, 1127, 1128, 1134, 1199, 1223, 1225, 1226, 1232, 1243], "comment": [0, 150, 1110, 1158, 1185, 1200, 1205, 1212, 1227], "commit": [30, 37, 1110, 1119, 1122, 1128, 1182, 1199, 1201, 1205, 1227], "common": [7, 150, 339, 389, 405, 424, 432, 434, 435, 436, 437, 438, 439, 452, 466, 488, 489, 496, 500, 538, 541, 542, 543, 544, 548, 550, 555, 560, 561, 564, 571, 588, 589, 608, 609, 610, 611, 612, 650, 651, 652, 654, 655, 661, 667, 668, 671, 691, 693, 717, 718, 732, 737, 758, 770, 790, 1029, 1107, 1109, 1110, 1114, 1116, 1120, 1121, 1122, 1130, 1131, 1136, 1137, 1159, 1168, 1169, 1176, 1180, 1183, 1184, 1185, 1187, 1188, 1193, 1195, 1198, 1199, 1205, 1206, 1207, 1210, 1211, 1214, 1218, 1221, 1223, 1224, 1227, 1234, 1237, 1238, 1246], "common_lin": 1107, "commonli": [339, 567, 758, 1121, 1130, 1131, 1135, 1238, 1247], "commonmark": 1119, "commun": [0, 72, 73, 340, 824, 1102, 1105, 1108, 1110, 1112, 1113, 1117, 1118, 1157, 1185, 1186, 1188, 1189, 1198, 1201, 1211, 1219], "commut": 1195, "compact": [1170, 1195], "compactli": 1195, "compar": [0, 33, 391, 392, 393, 414, 542, 543, 590, 660, 661, 666, 667, 677, 680, 824, 1110, 1122, 1136, 1152, 1159, 1185, 1193, 1195, 1208, 1211, 1219, 1221, 1224, 1233, 1239], "compare_abstract_ev": 1107, "compare_al": 748, "comparison": [120, 263, 264, 500, 560, 561, 611, 612, 693, 751, 1110, 1122, 1131, 1188, 1196, 1210, 1211, 1219, 1224, 1238], "compat": [47, 48, 82, 84, 101, 123, 298, 338, 411, 480, 485, 527, 529, 551, 624, 634, 692, 728, 734, 740, 741, 746, 750, 751, 798, 799, 834, 836, 840, 841, 842, 844, 846, 849, 852, 854, 856, 861, 863, 865, 868, 870, 872, 873, 875, 876, 877, 878, 879, 900, 924, 925, 926, 1075, 1110, 1115, 1121, 1127, 1128, 1131, 1134, 1150, 1158, 1159, 1160, 1170, 1179, 1180, 1185, 1186, 1189, 1195, 1196, 1203, 1208, 1209, 1212, 1214, 1215, 1219, 1232, 1233, 1238, 1243], "compel": [1205, 1227], "compet": [229, 295], "competit": 1048, "compil": [0, 8, 18, 22, 23, 34, 49, 67, 90, 150, 191, 215, 229, 262, 295, 302, 325, 331, 337, 341, 342, 431, 494, 688, 710, 713, 715, 733, 748, 816, 820, 821, 822, 823, 824, 888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 914, 1107, 1108, 1109, 1110, 1115, 1116, 1117, 1119, 1120, 1121, 1123, 1126, 1127, 1130, 1132, 1133, 1136, 1137, 1138, 1139, 1150, 1151, 1152, 1154, 1158, 1170, 1173, 1175, 1176, 1182, 1184, 1186, 1187, 1188, 1190, 1191, 1194, 1195, 1199, 1201, 1204, 1206, 1208, 1210, 1211, 1212, 1216, 1219, 1227, 1231, 1232, 1233, 1234, 1235, 1237, 1239, 1243, 1244, 1246, 1247, 1248, 1249], "compilation_cach": [1110, 1147], "compiled_comput": 1183, "compiled_fun": 1131, "compiled_upd": [1173, 1191], "compileopt": 331, "compiler_ir": [1110, 1176], "compiler_opt": 1176, "compiler_param": 1221, "compiler_token": 1183, "complain": [1192, 1214, 1219], "complement": [434, 436, 589, 668, 732, 808], "complementari": [223, 236, 668, 732, 808, 936, 1186, 1195, 1211], "complet": [0, 5, 6, 30, 71, 198, 229, 295, 333, 464, 549, 556, 634, 740, 914, 1106, 1107, 1109, 1110, 1117, 1120, 1130, 1136, 1148, 1175, 1180, 1183, 1185, 1188, 1189, 1190, 1195, 1199, 1202, 1207, 1211, 1214, 1219, 1236], "complex": [91, 106, 107, 138, 144, 152, 153, 154, 155, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 190, 192, 196, 197, 200, 201, 202, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 288, 289, 290, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 332, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 394, 405, 412, 414, 417, 422, 424, 426, 427, 428, 433, 443, 447, 453, 458, 460, 461, 462, 463, 468, 477, 490, 492, 507, 508, 509, 511, 514, 515, 516, 518, 519, 522, 525, 527, 538, 542, 543, 569, 575, 576, 579, 587, 591, 592, 593, 600, 601, 616, 618, 619, 620, 621, 622, 625, 626, 628, 629, 632, 634, 635, 637, 638, 639, 642, 643, 658, 661, 664, 667, 672, 704, 707, 717, 718, 730, 741, 743, 744, 745, 750, 754, 763, 765, 787, 800, 801, 802, 803, 807, 811, 812, 814, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 887, 889, 891, 892, 896, 902, 903, 904, 905, 906, 907, 909, 919, 921, 922, 923, 930, 933, 935, 936, 937, 938, 939, 943, 947, 952, 953, 955, 959, 960, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1034, 1035, 1044, 1045, 1046, 1047, 1050, 1051, 1062, 1063, 1064, 1065, 1097, 1099, 1109, 1110, 1131, 1184, 1185, 1186, 1190, 1192, 1208, 1216, 1221, 1231, 1233, 1244, 1247, 1248], "complex128": [449, 457, 593, 619, 894, 909, 1110, 1195], "complex64": [474, 527, 593, 619, 741, 894, 909, 1110, 1151, 1195, 1248], "complex_arr": 1110, "complex_kind": 750, "complexfloat": 750, "compli": 1105, "complianc": [1110, 1203, 1209], "compliant": 1148, "complic": [0, 213, 232, 296, 297, 298, 299, 300, 301, 341, 342, 1121, 1122, 1128, 1131, 1133, 1135, 1152, 1159, 1182, 1189, 1190, 1199, 1205, 1208, 1210, 1227, 1233, 1237, 1238, 1242], "compon": [143, 414, 441, 473, 512, 524, 527, 575, 672, 730, 777, 997, 998, 1030, 1031, 1032, 1033, 1110, 1122, 1134, 1145, 1187, 1188, 1190, 1195, 1196, 1214, 1221, 1243], "compos": [0, 7, 750, 1107, 1114, 1123, 1126, 1131, 1132, 1146, 1186, 1190, 1199, 1200, 1202, 1204, 1210, 1211, 1218, 1231, 1236, 1242], "composit": [607, 715, 781, 886, 927, 1107, 1146, 1188, 1200, 1204, 1205, 1206, 1227, 1234, 1242], "composite_trapezoidal_rule_illustr": [781, 886], "composition": 1107, "comprehens": [1185, 1189, 1194, 1205, 1219, 1227], "compress": [505, 747, 1159], "compressed_arrai": 459, "compris": [9, 1112, 1135, 1187, 1193, 1200, 1227, 1247], "compromis": [1185, 1190], "comput": [0, 7, 13, 16, 17, 18, 19, 22, 23, 25, 26, 34, 35, 49, 50, 66, 69, 71, 89, 101, 109, 110, 111, 113, 114, 115, 119, 120, 125, 145, 148, 149, 150, 151, 159, 160, 161, 162, 165, 203, 204, 205, 206, 207, 208, 245, 246, 247, 250, 251, 252, 257, 262, 271, 272, 273, 279, 280, 285, 287, 295, 302, 317, 325, 326, 331, 332, 333, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 392, 393, 413, 419, 429, 432, 434, 436, 437, 439, 464, 465, 468, 475, 476, 496, 507, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 559, 564, 565, 566, 567, 568, 577, 589, 606, 607, 615, 617, 619, 620, 621, 622, 623, 624, 626, 627, 630, 631, 633, 634, 635, 636, 637, 640, 643, 652, 653, 654, 655, 660, 662, 663, 666, 668, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 699, 703, 724, 732, 769, 775, 776, 777, 781, 810, 820, 821, 822, 823, 824, 865, 882, 883, 884, 885, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 903, 904, 906, 909, 910, 919, 920, 922, 923, 929, 931, 932, 933, 934, 937, 952, 953, 955, 956, 957, 958, 963, 964, 965, 966, 967, 1007, 1009, 1011, 1029, 1049, 1100, 1102, 1106, 1107, 1108, 1110, 1114, 1116, 1117, 1119, 1121, 1123, 1125, 1127, 1130, 1131, 1132, 1133, 1134, 1136, 1139, 1145, 1151, 1152, 1153, 1158, 1159, 1166, 1173, 1176, 1179, 1180, 1182, 1183, 1184, 1186, 1188, 1189, 1190, 1191, 1195, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1215, 1216, 1218, 1221, 1223, 1224, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1243], "computation": [1109, 1131, 1191, 1219, 1238], "compute_70": 0, "compute_75": 0, "compute_80": 0, "compute_86": 0, "compute_expm": [895, 1214], "compute_left_eigenvector": 246, "compute_right_eigenvector": 246, "compute_schur_vector": 253, "compute_uv": [254, 637, 910], "concat": 78, "concat_axi": [158, 1211], "concaten": [78, 87, 143, 157, 158, 441, 446, 493, 570, 725, 815, 1107, 1146, 1159, 1180, 1188, 1199], "concatenate_p": 1159, "concentr": [849, 880, 997, 998], "concept": [1110, 1195, 1198, 1212, 1214, 1216, 1235], "conceptu": [824, 1107, 1108, 1114, 1136, 1182, 1195, 1198, 1202, 1221, 1236, 1237], "concern": [813, 1122, 1189, 1191], "concis": [1134, 1185, 1204, 1243], "conclud": [1216, 1218, 1227], "conclus": 1220, "concret": [34, 338, 1102, 1104, 1110, 1121, 1122, 1131, 1185, 1188, 1193, 1199, 1202, 1212, 1218, 1236, 1238, 1244], "concrete_or_error": 1199, "concretearrai": [1107, 1110, 1122, 1199, 1202, 1212, 1236], "concretevalu": 1202, "concretizationtypeerror": [7, 49, 1110, 1114, 1121, 1131, 1170, 1193], "concurr": [688, 1110, 1119, 1124, 1215], "cond": [34, 302, 319, 1110, 1115, 1122, 1131, 1152, 1182, 1188, 1208, 1219, 1221, 1232, 1233, 1238], "cond_abstract_ev": 1107, "cond_fun": [325, 1182, 1199, 1200, 1227, 1237], "cond_impl": 1107, "cond_jaxpr": [1182, 1237], "cond_jvp_rul": 1107, "cond_nconst": [1182, 1237], "cond_p": [1107, 1159], "cond_partial_ev": 1107, "cond_peval_eqn": 1107, "cond_transl": 1107, "cond_transpose_rul": 1107, "cond_vmap_rul": 1107, "conda": 1119, "condit": [7, 191, 319, 459, 505, 615, 652, 653, 654, 655, 705, 706, 711, 749, 816, 876, 895, 906, 916, 918, 1007, 1107, 1110, 1122, 1131, 1134, 1152, 1198, 1199, 1200, 1203, 1207, 1209, 1218, 1219, 1222, 1227, 1232, 1238, 1243], "condition": [191, 1221], "condlist": [705, 749], "conf": [1119, 1223], "confid": [1110, 1190], "config": [0, 5, 6, 22, 23, 25, 26, 27, 40, 46, 47, 48, 337, 819, 838, 858, 1110, 1115, 1116, 1119, 1124, 1154, 1180, 1184, 1193, 1195, 1199, 1201, 1208, 1209, 1212, 1222, 1225, 1226, 1233, 1238, 1248], "config_with_absl": 1199, "configproto": 1124, "configur": [25, 26, 364, 1104, 1105, 1110, 1112, 1119, 1124, 1125, 1151, 1152, 1154, 1158, 1194, 1199, 1201, 1215, 1220, 1222, 1225, 1226, 1248], "configure_onli": 1119, "confirm": 1199, "conflict": 688, "confluent": 947, "conform": [1110, 1185], "confus": [198, 452, 544, 668, 732, 1110, 1122, 1136, 1185, 1189, 1192, 1205, 1227, 1248], "congruent": 1201, "conj": 892, "conjug": [120, 192, 255, 462, 468, 490, 519, 579, 614, 619, 620, 707, 811, 911, 924, 925, 1205, 1227], "conjugate_a": 255, "conjunct": [3, 71, 1107], "connect": [35, 196, 833, 1146, 1195, 1198, 1203, 1206, 1209, 1223, 1234], "conquer": 1110, "consecut": [495, 928, 1219], "consequ": [556, 567, 811, 837, 1106, 1107, 1110, 1130, 1186, 1191, 1193, 1194, 1208, 1212, 1233], "conserv": [664, 1185], "consid": [7, 47, 48, 144, 145, 148, 149, 151, 262, 268, 333, 391, 399, 414, 471, 472, 496, 497, 524, 548, 550, 566, 590, 620, 622, 628, 645, 691, 710, 713, 715, 893, 947, 1079, 1080, 1081, 1082, 1099, 1100, 1106, 1107, 1110, 1114, 1120, 1121, 1122, 1125, 1131, 1132, 1133, 1134, 1135, 1152, 1153, 1159, 1178, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1195, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1211, 1212, 1214, 1218, 1219, 1224, 1227, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1247], "consider": [813, 1105, 1112, 1188, 1189, 1190, 1212, 1218, 1221, 1248], "consist": [13, 195, 196, 229, 295, 325, 331, 415, 527, 556, 604, 641, 644, 774, 915, 916, 917, 918, 920, 965, 1104, 1107, 1110, 1122, 1169, 1176, 1180, 1183, 1185, 1186, 1190, 1195, 1199, 1200, 1205, 1208, 1214, 1221, 1227, 1232, 1233], "consol": [1206, 1234], "const": [0, 11, 1107, 1131, 1182, 1199, 1204, 1208, 1212, 1233, 1237, 1238], "const_bind": 1107, "const_trac": 1107, "constant": [0, 12, 49, 150, 208, 360, 365, 531, 557, 559, 587, 701, 705, 712, 715, 736, 824, 911, 912, 919, 922, 923, 928, 1007, 1102, 1104, 1107, 1110, 1122, 1137, 1145, 1152, 1158, 1166, 1193, 1202, 1204, 1219, 1236, 1246, 1248], "constant_4_1": 0, "constant_8": 0, "constant_9": 0, "constant_valu": [701, 1110], "constantli": [1105, 1120], "constantliter": 1107, "constexpr": 0, "constid_to_var": 1107, "constrain": [326, 1137, 1189, 1191, 1195, 1224, 1247], "constraint": [326, 429, 921, 922, 1110, 1131, 1137, 1173, 1185, 1189, 1190, 1191, 1195, 1196, 1199, 1200, 1208, 1214, 1219, 1220, 1227, 1233, 1246], "constrecip": 1107, "construct": [37, 72, 73, 174, 197, 213, 295, 325, 441, 452, 481, 494, 546, 549, 552, 576, 605, 609, 645, 745, 778, 903, 906, 911, 1104, 1107, 1109, 1110, 1114, 1121, 1136, 1145, 1146, 1182, 1185, 1193, 1199, 1202, 1204, 1214, 1216, 1221, 1224, 1236, 1237, 1239, 1244], "constructor": [117, 118, 1110, 1146, 1173, 1180, 1182, 1185, 1194, 1237], "consts1": 1107, "consts2": 1107, "constval": 1107, "constvar": [12, 1107, 1110, 1182, 1204, 1237], "constvar_to_v": 1107, "consult": 1112, "consum": [38, 339, 548, 550, 838, 858, 1121, 1134, 1145, 1154, 1188, 1194, 1199, 1201, 1206, 1216, 1234, 1243], "consumpt": [1134, 1199, 1243], "contain": [0, 3, 7, 9, 29, 30, 31, 32, 50, 57, 67, 71, 75, 80, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 103, 105, 121, 144, 145, 147, 150, 151, 157, 158, 179, 180, 190, 193, 195, 196, 197, 199, 212, 214, 215, 216, 217, 218, 219, 229, 232, 247, 248, 249, 250, 251, 254, 256, 271, 272, 273, 279, 280, 281, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 311, 323, 325, 332, 333, 340, 352, 361, 369, 385, 386, 413, 429, 431, 448, 452, 453, 467, 472, 473, 480, 485, 494, 510, 514, 524, 529, 542, 543, 552, 559, 565, 566, 567, 577, 613, 620, 634, 645, 661, 662, 663, 667, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 692, 703, 707, 711, 724, 728, 741, 747, 765, 769, 777, 780, 784, 788, 810, 816, 824, 825, 831, 847, 888, 889, 897, 900, 901, 905, 906, 908, 915, 916, 917, 918, 920, 924, 925, 926, 928, 955, 956, 957, 965, 1048, 1049, 1074, 1085, 1087, 1093, 1099, 1100, 1101, 1102, 1103, 1107, 1108, 1110, 1112, 1114, 1119, 1120, 1123, 1128, 1135, 1145, 1152, 1153, 1154, 1158, 1166, 1175, 1177, 1178, 1182, 1185, 1187, 1188, 1189, 1192, 1194, 1195, 1196, 1205, 1206, 1211, 1215, 1217, 1224, 1230, 1234, 1236, 1237, 1247], "contend": 1188, "content": [101, 339, 431, 922, 1110, 1116, 1119, 1121, 1122, 1134, 1135, 1138, 1182, 1192, 1208, 1212, 1228, 1229, 1233, 1235, 1237, 1239, 1240, 1241, 1243], "context": [5, 6, 7, 22, 23, 25, 26, 27, 34, 46, 47, 48, 49, 63, 64, 71, 150, 195, 337, 341, 342, 719, 750, 819, 828, 829, 836, 848, 1075, 1107, 1110, 1117, 1121, 1122, 1133, 1136, 1152, 1154, 1158, 1170, 1175, 1185, 1188, 1193, 1199, 1200, 1202, 1205, 1207, 1208, 1212, 1214, 1223, 1225, 1226, 1227, 1230, 1233, 1236, 1238, 1246, 1247, 1248], "contextlib": 1107, "contextmanag": [1066, 1107], "contextu": 1151, "contigu": [72, 77, 419, 443, 445, 465, 664, 728, 734, 1158, 1180], "contiguous_submesh": 72, "continu": [77, 343, 430, 485, 740, 758, 923, 939, 943, 1104, 1110, 1122, 1185, 1188, 1189, 1194, 1199, 1205, 1214, 1222, 1223, 1227, 1230, 1234], "contract": [71, 88, 89, 105, 212, 213, 496, 497, 813, 1185, 1186, 1211, 1214], "contrari": 1134, "contrast": [191, 926, 1104, 1107, 1186, 1208, 1211, 1233, 1244], "contribut": [75, 429, 565, 567, 820, 821, 822, 823, 1113, 1119, 1122, 1128, 1153, 1185, 1189], "contributor": [1108, 1185, 1189], "contriv": [49, 1200, 1227], "control": [7, 13, 25, 26, 37, 49, 71, 262, 413, 419, 447, 464, 465, 468, 490, 496, 579, 658, 715, 748, 750, 774, 777, 811, 812, 819, 914, 1048, 1066, 1103, 1104, 1106, 1110, 1112, 1115, 1121, 1130, 1131, 1133, 1152, 1175, 1182, 1183, 1184, 1185, 1190, 1191, 1193, 1198, 1200, 1205, 1207, 1212, 1214, 1216, 1221, 1224, 1227, 1234, 1237, 1238, 1244], "conv": [26, 195, 196, 198, 1146], "conv1dtranspos": 1146, "conv2d": [195, 196], "conv2d_transpos": 1207, "conv2dtranspos": 198, "conv_convolut": [196, 197], "conv_dimension_numb": 1207, "conv_gener": 1216, "conv_general_dil": [26, 50, 193, 196, 197, 198, 199, 1110, 1189, 1212], "conv_general_dilated_p": 1159, "conv_sam": 50, "convdimensionnumb": [194, 195, 196, 197, 198, 1166, 1207], "convei": [0, 339], "conveni": [13, 14, 19, 44, 49, 71, 183, 193, 198, 199, 214, 216, 217, 219, 238, 278, 311, 665, 696, 813, 832, 1110, 1114, 1117, 1122, 1145, 1186, 1189, 1190, 1191, 1195, 1200, 1201, 1205, 1206, 1207, 1212, 1213, 1221, 1225, 1227, 1230, 1234, 1239, 1247, 1248], "convent": [0, 143, 198, 405, 424, 464, 468, 496, 516, 947, 964, 1107, 1110, 1134, 1182, 1185, 1190, 1195, 1204, 1207, 1212, 1214, 1237, 1243], "convention": 1173, "converg": [120, 251, 893, 913, 924, 925, 926, 1189, 1200, 1227], "convers": [9, 200, 429, 447, 576, 662, 677, 678, 680, 682, 685, 686, 689, 745, 810, 1110, 1121, 1183, 1185, 1199, 1212, 1224, 1226, 1238, 1247], "convert": [0, 9, 40, 71, 76, 77, 92, 102, 107, 108, 109, 112, 113, 116, 124, 191, 194, 279, 319, 341, 342, 390, 395, 399, 419, 426, 427, 428, 447, 478, 479, 494, 580, 613, 663, 679, 681, 683, 703, 724, 726, 727, 729, 736, 780, 805, 905, 911, 1078, 1106, 1107, 1110, 1121, 1130, 1131, 1134, 1135, 1136, 1137, 1145, 1151, 1159, 1173, 1179, 1180, 1182, 1183, 1185, 1197, 1199, 1207, 1209, 1214, 1216, 1224, 1226, 1237, 1239, 1243, 1246, 1247], "convert_element_typ": [422, 1182, 1199, 1212, 1237], "converted_fn": 9, "convertelementtyp": [200, 1107, 1199], "convertibletoint": 1185, "convex": [380, 934, 952, 963, 1205, 1227], "convgeneraldilateddimensionnumb": 1166, "convolut": [26, 193, 194, 195, 196, 197, 198, 199, 364, 464, 915, 916, 920, 1103, 1110, 1132, 1136, 1146, 1158, 1159, 1166, 1189, 1199, 1205, 1211, 1212, 1216, 1227, 1231], "convolv": [468, 916, 917, 920, 1110, 1132, 1136, 1158, 1189, 1207, 1212, 1231], "convolve2d": 1207, "convtranspos": 1146, "convwithgeneralpad": 1212, "coo": [80, 109, 110, 111, 112, 1159], "cook": 1188, "cookbook": [1103, 1133, 1200, 1202, 1206], "cool": 1218, "coolei": 508, "coord": [1136, 1244], "coordin": [35, 147, 196, 387, 400, 402, 405, 420, 424, 549, 559, 566, 568, 587, 664, 711, 805, 912, 965, 1211, 1214], "coordinator_address": [35, 1198], "coordinator_bind_address": [35, 1198], "copi": [29, 30, 37, 38, 145, 396, 413, 419, 422, 426, 427, 428, 441, 443, 459, 466, 480, 481, 485, 494, 531, 532, 533, 546, 580, 664, 670, 672, 688, 702, 728, 734, 735, 740, 742, 762, 764, 767, 772, 780, 783, 787, 919, 1110, 1112, 1117, 1119, 1122, 1127, 1136, 1175, 1180, 1183, 1186, 1188, 1191, 1201, 1203, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1221, 1222, 1226, 1227, 1233, 1247], "copt": 1119, "copy_sharded_x": 1180, "copyright": [1112, 1203, 1209], "copysign": 1110, "copyto": 706, "copytohostasync": 1122, "core": [0, 813, 824, 1007, 1103, 1105, 1108, 1110, 1113, 1119, 1123, 1125, 1131, 1138, 1158, 1159, 1170, 1173, 1180, 1182, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1198, 1199, 1200, 1202, 1204, 1208, 1212, 1219, 1223, 1227, 1233, 1236, 1238, 1239], "core_on_chip": [1136, 1244], "core_test": 1107, "coreutil": 1119, "cormen": 630, "corner": [515, 516, 1108, 1110, 1185, 1199], "coro": [1208, 1233], "corollari": 1191, "coroutin": [1208, 1233], "correct": [285, 362, 396, 715, 1103, 1107, 1110, 1122, 1127, 1132, 1133, 1166, 1185, 1188, 1194, 1208, 1210, 1211, 1216, 1219, 1221, 1227, 1231, 1233, 1242], "correctli": [0, 191, 369, 390, 392, 393, 395, 405, 407, 408, 424, 429, 471, 631, 660, 662, 663, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 720, 722, 724, 769, 771, 810, 816, 955, 1029, 1049, 1110, 1119, 1122, 1132, 1158, 1170, 1185, 1192, 1193, 1195, 1208, 1231, 1233], "correl": [467, 918, 1110, 1134, 1189, 1194, 1207, 1243], "correlate2d": 1207, "correspond": [0, 7, 9, 31, 32, 38, 41, 49, 57, 71, 77, 86, 103, 144, 145, 147, 150, 159, 160, 180, 195, 196, 198, 208, 247, 277, 295, 323, 338, 339, 340, 452, 453, 469, 478, 479, 484, 485, 509, 511, 515, 516, 519, 521, 525, 527, 538, 559, 568, 577, 587, 588, 598, 599, 605, 619, 620, 657, 681, 683, 700, 703, 705, 712, 717, 718, 724, 726, 727, 739, 747, 748, 749, 750, 753, 760, 775, 776, 777, 780, 781, 813, 824, 835, 837, 844, 881, 883, 885, 886, 892, 893, 905, 907, 912, 921, 922, 940, 954, 972, 984, 989, 1024, 1027, 1029, 1037, 1042, 1048, 1049, 1061, 1068, 1070, 1084, 1088, 1089, 1099, 1101, 1102, 1104, 1107, 1110, 1122, 1125, 1127, 1130, 1131, 1133, 1135, 1145, 1152, 1158, 1166, 1176, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1211, 1214, 1216, 1218, 1219, 1221, 1224, 1226, 1227, 1230, 1234, 1236, 1237, 1238, 1243, 1247], "correspondingli": [764, 1200, 1227], "corrupt": 645, "cos_jvp": 1107, "cos_p": 1107, "cos_x": [15, 1190, 1200, 1205, 1206, 1227, 1234], "cosh": 776, "cosin": [153, 154, 201, 202, 387, 388, 400, 401, 440, 469, 470, 562, 563, 882, 883, 884, 885, 1102, 1190], "cost": [7, 120, 333, 497, 715, 926, 1104, 1106, 1131, 1136, 1176, 1195, 1196, 1205, 1206, 1211, 1214, 1216, 1219, 1227, 1234, 1238], "cost_analysi": [1104, 1110, 1176], "costli": [497, 1195, 1218], "cotang": [13, 1100, 1107, 1110, 1152, 1200, 1202, 1205, 1206, 1227, 1234, 1236], "cotangents_in_flat": 1107, "cotangents_out": 1107, "cotangents_out_flat": 1107, "could": [0, 17, 195, 196, 209, 588, 813, 816, 834, 836, 1082, 1102, 1107, 1110, 1114, 1117, 1121, 1122, 1125, 1130, 1131, 1132, 1136, 1137, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1195, 1196, 1199, 1200, 1201, 1205, 1206, 1208, 1211, 1214, 1216, 1218, 1221, 1222, 1223, 1224, 1226, 1227, 1231, 1233, 1234, 1242, 1246, 1247], "couldn": [1183, 1184, 1188, 1205, 1227], "count": [120, 140, 187, 229, 275, 390, 395, 429, 431, 471, 531, 547, 552, 559, 565, 567, 720, 722, 761, 771, 804, 1029, 1107, 1110, 1137, 1152, 1191, 1195, 1202, 1219, 1236, 1246], "counter": [1173, 1189, 1191, 1195, 1199, 1201], "counterclockwis": [394, 742], "counterexampl": 1195, "counterintuit": 1183, "counterpart": [247, 475, 476, 675, 676, 1122, 1214], "counterst": [1137, 1246], "counterv2": [1137, 1246], "countrysid": 1199, "coupl": [1107, 1185], "cours": [1130, 1131, 1136, 1183, 1185, 1203, 1208, 1209, 1210, 1214, 1221, 1233, 1238], "cov": [467, 711, 865, 1010, 1032, 1033], "covari": [467, 472, 711, 865, 1010, 1032, 1033], "covector": [1205, 1227], "cover": [157, 158, 271, 272, 273, 279, 280, 281, 705, 816, 1112, 1130, 1185, 1186, 1188, 1199, 1204, 1205, 1221, 1222, 1227, 1230, 1232, 1236, 1239, 1244, 1247], "coverag": [1110, 1189, 1213], "cpp": 0, "cpu": [2, 25, 28, 33, 37, 38, 67, 69, 71, 150, 246, 248, 256, 336, 619, 748, 824, 827, 833, 834, 836, 837, 1102, 1104, 1106, 1107, 1109, 1110, 1112, 1117, 1119, 1122, 1123, 1124, 1126, 1130, 1131, 1136, 1152, 1158, 1173, 1196, 1198, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1219, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "cpu_runtim": 1152, "cpu_test": 1119, "cpu_transfer_manag": 1152, "cpudevic": [33, 1136], "cpython": 1118, "crack": 1183, "crash": [889, 897, 900, 905, 1110, 1128, 1152, 1186, 1208, 1211, 1233], "creat": [41, 72, 73, 77, 79, 80, 92, 107, 109, 113, 117, 118, 137, 141, 142, 144, 231, 331, 339, 340, 341, 342, 413, 415, 419, 446, 452, 465, 484, 494, 497, 498, 499, 546, 551, 652, 653, 654, 655, 665, 672, 696, 701, 702, 725, 772, 834, 836, 838, 858, 887, 898, 927, 1099, 1101, 1102, 1107, 1110, 1112, 1115, 1121, 1122, 1130, 1133, 1134, 1136, 1151, 1159, 1170, 1173, 1175, 1183, 1185, 1188, 1189, 1191, 1193, 1194, 1195, 1197, 1201, 1202, 1203, 1204, 1207, 1208, 1209, 1211, 1212, 1214, 1221, 1222, 1223, 1227, 1230, 1233, 1236, 1243, 1244], "create_device_mesh": [1186, 1201, 1211, 1244], "create_mesh": 1244, "create_perfetto_link": [834, 836, 1110, 1223], "create_perfetto_trac": [834, 836], "create_rms_norm_descriptor": 0, "create_us": 1195, "creation": [1, 497, 1110, 1121, 1122, 1130, 1193, 1242], "credit": [1208, 1233], "criteria": [1189, 1195], "criterion": [120, 1195], "critic": [1106, 1133, 1230], "crop": [508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525], "cross": [468, 567, 605, 917, 918, 919, 938, 1110, 1125, 1127, 1133, 1136, 1186, 1198, 1201, 1211, 1227, 1244], "cross_product": 813, "crucial": [1133, 1134, 1214, 1230, 1243], "crush": 1173, "csc": 1159, "csd": 1110, "cse": 7, "csingl": 527, "csr": [81, 113, 114, 115, 116, 121, 1110, 1159], "csrmetisnd": 121, "ct": [13, 508, 1107, 1152, 1190, 1200, 1202, 1205, 1227, 1236], "ct_b": 1152, "ct_env": 1107, "ct_x": [1202, 1236], "ct_y": [1202, 1236], "ctrl": 1223, "cts_in": 1107, "cts_out": 1107, "ctx": [0, 1187, 1202, 1212, 1236], "cu": 0, "cu12": 1122, "cube": [184, 448], "cubic": [146, 147, 497, 1165], "cuda": [121, 1103, 1107, 1110, 1119, 1196, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1216, 1223, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "cuda11": [1110, 1127], "cuda111": 1110, "cuda11_cudnn805": 1110, "cuda11_cudnn82": 1110, "cuda12_loc": 1127, "cuda12_pip": [1110, 1127, 1242], "cuda_12": 1122, "cuda_compute_cap": 1110, "cuda_path": 1119, "cuda_vers": 1119, "cuda_visible_devic": 1128, "cudadevic": 1122, "cudastream_t": 0, "cudatoolkit": 1127, "cudnn": [1110, 1119, 1127], "cudnn82": 1127, "cudnn88": 1110, "cudnn89": 1110, "cudnn_path": 1119, "cudnn_vers": 1119, "cufft": 1110, "culprit": 1188, "cumbersom": [1133, 1186, 1227], "cumprod": 1110, "cumproduct": 1110, "cumsum": [676, 1110], "cumsum_along_axi": 476, "cumul": [203, 204, 205, 206, 207, 475, 476, 675, 676, 931, 969, 973, 974, 983, 985, 991, 992, 1001, 1002, 1015, 1020, 1023, 1036, 1038, 1052, 1053, 1058], "cumulative_sum": 1110, "cupi": 1110, "cupti": 1223, "cupti_callbackfunc": 1223, "cupti_cb_domain_driver_api": 1223, "cupti_error_insufficient_privileg": 1223, "cupti_error_not_initi": 1223, "cupti_interface_": 1223, "cupti_trac": 1223, "cur_sublevel": [1199, 1208, 1212, 1233, 1238], "curat": 1108, "curiou": 1122, "curli": 1214, "current": [16, 35, 66, 71, 77, 103, 121, 230, 248, 256, 298, 443, 485, 558, 567, 624, 627, 719, 750, 824, 835, 895, 903, 912, 914, 1029, 1048, 1049, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1104, 1107, 1110, 1112, 1119, 1121, 1122, 1127, 1130, 1148, 1152, 1154, 1159, 1166, 1175, 1179, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1196, 1198, 1199, 1202, 1208, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1233, 1236, 1247], "current_name_stack": [1208, 1233], "curri": [333, 1110, 1190, 1208, 1233], "curs": 1188, "cursed_ident": 1188, "curv": [711, 781, 886, 1122], "curvatur": [1205, 1227], "curve_fit": 711, "cusolv": 1110, "custom": [9, 13, 14, 15, 47, 71, 229, 556, 624, 688, 750, 1085, 1087, 1103, 1110, 1122, 1133, 1151, 1152, 1184, 1186, 1187, 1192, 1197, 1202, 1205, 1207, 1208, 1211, 1214, 1216, 1217, 1218, 1228, 1230, 1233], "custom_cal": 0, "custom_call_target": 0, "custom_deriv": [372, 373, 572, 617, 633, 650, 651, 939, 941, 947, 953, 954, 961, 966, 967, 968], "custom_jvp": [48, 372, 373, 572, 617, 633, 650, 651, 939, 941, 947, 953, 954, 961, 966, 967, 968, 1107, 1110, 1152, 1190, 1192], "custom_jvp_cal": 1190, "custom_jvp_call_jaxpr": 1190, "custom_lin": 1190, "custom_linear_solv": [924, 925, 926], "custom_operation_for_gpu": [0, 1202, 1236], "custom_p": 0, "custom_p_loss": 0, "custom_p_out": 0, "custom_p_rms_norm": 0, "custom_p_rms_norm_bwd": 0, "custom_p_rms_norm_fwd": 0, "custom_parit": 1110, "custom_partit": [1110, 1147, 1216], "custom_root": [1200, 1227], "custom_transform": [1110, 1190], "custom_transpos": 48, "custom_vjp": [0, 9, 13, 48, 1110, 1114, 1117, 1152, 1184, 1186, 1190, 1211, 1216], "custom_vjp_cal": 1190, "custom_vmap": 1216, "customcal": [1152, 1202, 1216, 1236], "customcallop": 1151, "customcallwithlayout": 1110, "customcallwithoutlayout": 1110, "customiz": 1194, "customnod": [1224, 1239], "cut": [624, 939, 1117, 1186], "cutoff": [633, 710, 713], "cval": 912, "cve": 645, "cwh": 197, "cy": [1202, 1236], "cycl": [510, 524, 605, 1105, 1110, 1121, 1178, 1196, 1208, 1224, 1233], "cz": [1202, 1236], "d": [17, 25, 198, 247, 256, 257, 339, 340, 397, 428, 429, 454, 459, 467, 472, 476, 481, 483, 484, 485, 490, 493, 506, 510, 520, 523, 524, 526, 532, 533, 552, 559, 568, 569, 570, 579, 587, 605, 620, 630, 631, 635, 658, 664, 676, 677, 680, 685, 692, 700, 706, 711, 712, 728, 734, 748, 753, 764, 771, 778, 779, 780, 786, 799, 804, 809, 811, 815, 839, 847, 887, 893, 910, 911, 912, 914, 958, 1007, 1010, 1014, 1101, 1107, 1108, 1110, 1117, 1119, 1128, 1131, 1137, 1151, 1152, 1158, 1182, 1183, 1184, 1185, 1188, 1189, 1190, 1192, 1195, 1197, 1199, 1200, 1204, 1205, 1206, 1208, 1209, 1211, 1212, 1216, 1218, 1221, 1223, 1227, 1233, 1234, 1237, 1238, 1239, 1244, 1246], "d1": 1201, "d2": 1201, "d2fdx": [1133, 1230], "d3fdx": [1133, 1230], "d4fdx": [1133, 1230], "d7b9bc40de002332dd665ff2ab537b76": 0, "d_ff": 1186, "da": 1180, "da_object": 1212, "dag": [1107, 1151, 1195, 1224], "dai": [1104, 1128, 1185, 1187, 1222], "damnit": 1186, "danger": 1183, "daniel": [921, 922], "data": [0, 25, 30, 34, 41, 69, 71, 72, 73, 75, 77, 78, 80, 86, 89, 101, 106, 118, 121, 144, 145, 148, 149, 151, 208, 209, 229, 279, 295, 325, 333, 338, 339, 392, 393, 399, 409, 410, 411, 413, 418, 419, 429, 447, 450, 464, 465, 468, 472, 484, 490, 493, 494, 498, 499, 506, 507, 527, 529, 540, 546, 547, 549, 552, 553, 554, 557, 565, 566, 567, 568, 570, 573, 577, 579, 587, 593, 601, 644, 645, 656, 658, 660, 662, 663, 666, 672, 673, 674, 678, 679, 681, 682, 683, 685, 686, 692, 697, 698, 703, 705, 706, 711, 720, 722, 724, 728, 734, 735, 746, 747, 751, 761, 766, 767, 774, 777, 779, 782, 783, 786, 791, 798, 799, 810, 811, 815, 816, 817, 818, 820, 821, 822, 823, 824, 837, 848, 853, 859, 881, 888, 889, 892, 900, 907, 908, 909, 919, 921, 922, 923, 968, 1007, 1029, 1048, 1049, 1079, 1081, 1099, 1100, 1103, 1104, 1110, 1114, 1117, 1123, 1124, 1133, 1135, 1136, 1137, 1145, 1152, 1158, 1169, 1170, 1173, 1175, 1176, 1177, 1178, 1180, 1183, 1185, 1186, 1188, 1189, 1191, 1193, 1194, 1195, 1198, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1210, 1212, 1218, 1221, 1224, 1226, 1227, 1233, 1236, 1246, 1247], "data_batch": 1130, "data_callback": 338, "data_dir": 1209, "data_interchang": 546, "datafram": 1195, "dataload": 1203, "datapoint": 1007, "dataset": [565, 567, 711, 1007, 1014, 1103, 1135, 1159, 1203, 1205, 1207, 1227, 1230, 1244, 1247], "dataset_as_numpi": 1209, "datatyp": [193, 195, 197, 198, 199, 212, 213, 628, 907, 1201], "date": [1128, 1185], "datetim": 750, "datetime64": [486, 750], "davmr": 1213, "db": [159, 160, 1201, 1203, 1209], "dbg": [1199, 1212, 1238], "dblquad": 1189, "dcn": 73, "dcn_mesh_shap": 73, "dct": [145, 883, 884, 885, 1101, 1200, 1227], "ddf": 1153, "ddof": [472, 684, 686, 769, 810, 1049], "de": [1007, 1199, 1207], "dead": 1110, "deadlock": [66, 1110], "deadman": 909, "deal": [1048, 1107, 1131, 1137, 1183, 1202, 1214, 1221, 1236, 1238, 1246], "dealloc": 1124, "dealt": 1107, "debian": 1119, "debug": [34, 66, 70, 337, 341, 342, 907, 908, 1110, 1119, 1121, 1122, 1124, 1129, 1131, 1135, 1136, 1176, 1186, 1190, 1201, 1204, 1211, 1212, 1216, 1224, 1235, 1238, 1244, 1247], "debug_bwd": [1200, 1227], "debug_fwd": [1200, 1227], "debug_inf": 1110, "debug_info": [12, 127, 1131, 1199, 1208, 1212, 1233, 1238], "debug_info_fin": 1131, "debug_key_reus": [1121, 1154], "debug_nan": 1110, "debug_print": 19, "debugg": [5, 6, 16, 1117, 1190, 1199, 1200, 1227, 1232], "decai": 1145, "decay_r": 1145, "decay_step": 1145, "decemb": [1110, 1195], "decid": [0, 121, 150, 1158, 1180, 1187, 1190, 1201, 1214, 1216], "decim": [412, 527, 552, 743, 744, 1199, 1212], "decis": [1185, 1187, 1189, 1194, 1206, 1216, 1219, 1234, 1244], "deck": 1190, "declar": [0, 71, 1110, 1121, 1175, 1185, 1189], "decode_shard": [0, 1151], "decompos": [545, 888, 890, 900, 901, 904, 906, 910, 1125, 1188, 1190, 1205, 1227], "decomposit": [245, 250, 251, 252, 254, 614, 633, 637, 711, 888, 890, 897, 900, 901, 903, 904, 906, 910, 926, 1110, 1125, 1152, 1205, 1227], "decor": [7, 13, 14, 15, 123, 128, 150, 342, 830, 837, 1109, 1110, 1116, 1117, 1131, 1136, 1145, 1180, 1184, 1193, 1200, 1201, 1202, 1206, 1210, 1212, 1224, 1227, 1234, 1236, 1238, 1239], "decorator_kwarg": [830, 1199, 1208, 1212, 1233, 1238], "decreas": [487, 926, 1122, 1124], "decreasingli": [515, 516], "dedic": 907, "deem": [38, 1189], "deep": [441, 1107, 1123, 1131, 1200, 1205, 1207, 1211, 1212, 1219, 1227, 1238], "deepcopi": [1110, 1170], "deeper": [1133, 1230, 1249], "deepli": 1108, "deepmind": [1139, 1146, 1147, 1189], "def": [0, 1, 7, 9, 13, 14, 15, 18, 19, 34, 49, 50, 55, 56, 57, 71, 123, 148, 149, 150, 157, 159, 160, 169, 191, 229, 262, 280, 295, 319, 325, 333, 338, 340, 342, 630, 813, 824, 830, 1075, 1080, 1082, 1100, 1101, 1102, 1104, 1107, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1151, 1152, 1159, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247], "def_abstract_ev": [0, 1187, 1202, 1236], "def_impl": [0, 1187, 1202, 1208, 1212, 1233, 1236], "def_partit": [0, 1151], "default": [7, 16, 24, 25, 26, 27, 30, 33, 35, 47, 48, 57, 71, 72, 73, 75, 78, 91, 92, 107, 118, 121, 122, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 160, 193, 195, 196, 197, 198, 199, 208, 212, 213, 214, 216, 231, 232, 238, 251, 280, 281, 291, 295, 311, 312, 329, 331, 333, 334, 340, 341, 342, 343, 344, 346, 351, 352, 359, 361, 362, 363, 366, 369, 371, 390, 392, 393, 394, 395, 399, 407, 408, 409, 410, 411, 413, 416, 418, 419, 429, 431, 452, 459, 461, 464, 465, 467, 468, 471, 472, 473, 475, 476, 480, 481, 484, 485, 486, 487, 490, 496, 497, 498, 506, 509, 510, 512, 515, 517, 520, 524, 525, 526, 529, 531, 547, 549, 552, 553, 557, 559, 565, 566, 567, 568, 573, 577, 579, 587, 588, 590, 595, 613, 620, 622, 624, 631, 633, 634, 637, 640, 641, 644, 645, 652, 653, 654, 655, 656, 658, 660, 662, 663, 664, 666, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 697, 700, 701, 702, 703, 705, 706, 709, 711, 712, 720, 722, 723, 724, 728, 729, 733, 739, 740, 741, 742, 746, 747, 748, 749, 750, 751, 752, 761, 762, 764, 769, 771, 773, 774, 777, 779, 780, 781, 782, 783, 786, 798, 799, 804, 808, 809, 810, 811, 812, 813, 814, 816, 817, 820, 821, 822, 823, 824, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 882, 883, 884, 885, 886, 888, 890, 892, 893, 895, 896, 897, 900, 903, 904, 907, 908, 909, 910, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 926, 942, 955, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1099, 1100, 1102, 1107, 1110, 1114, 1119, 1120, 1122, 1124, 1125, 1130, 1131, 1135, 1145, 1151, 1154, 1158, 1166, 1170, 1173, 1175, 1180, 1184, 1186, 1188, 1194, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1215, 1216, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1233, 1234, 1239, 1243, 1247, 1248], "default_col": 1203, "default_devic": [1110, 1122], "default_input_handl": 1107, "default_layout": 0, "default_matmul_precis": [195, 1219], "default_mesh": 1201, "default_prng_impl": 1110, "default_rng": [1208, 1233, 1244], "defaultdict": 1107, "defeat": [7, 1114, 1121], "defens": [1188, 1191, 1195, 1205, 1230], "defer": [159, 160, 1107, 1150, 1152, 1195, 1200, 1227], "defici": [1208, 1233], "defin": [0, 9, 13, 14, 15, 47, 50, 57, 69, 70, 71, 77, 104, 119, 125, 150, 159, 160, 208, 209, 211, 232, 247, 288, 296, 297, 298, 299, 300, 301, 303, 364, 405, 416, 418, 424, 452, 468, 473, 480, 499, 542, 543, 554, 564, 565, 567, 580, 661, 667, 672, 681, 683, 688, 698, 703, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 724, 741, 742, 747, 813, 818, 824, 847, 907, 912, 930, 931, 935, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 961, 962, 964, 976, 987, 994, 1004, 1029, 1040, 1048, 1049, 1055, 1082, 1107, 1109, 1110, 1122, 1123, 1130, 1131, 1133, 1135, 1145, 1152, 1158, 1166, 1176, 1178, 1182, 1185, 1187, 1189, 1190, 1194, 1195, 1196, 1201, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1212, 1214, 1218, 1224, 1233, 1234, 1237, 1238, 1239, 1243, 1244, 1247], "define_": 1110, "definit": [0, 14, 15, 145, 245, 380, 452, 514, 516, 614, 645, 758, 781, 865, 886, 888, 890, 892, 903, 907, 915, 917, 925, 1032, 1033, 1109, 1110, 1122, 1130, 1137, 1145, 1158, 1169, 1185, 1190, 1195, 1200, 1202, 1205, 1206, 1208, 1211, 1214, 1227, 1233, 1234, 1236, 1239, 1246, 1247], "defjvp": [14, 1152, 1190, 1200, 1208, 1227, 1233], "defragment": 1110, "defvjp": [0, 9, 15, 1114, 1117, 1152, 1190, 1192, 1200, 1227], "defvjp_al": 1190, "deg": [394, 711], "deg2rad": 727, "degener": 909, "degrad": [1110, 1196, 1199], "degre": [394, 478, 684, 686, 707, 708, 711, 713, 715, 726, 727, 742, 757, 769, 810, 846, 852, 875, 956, 957, 965, 1049, 1153, 1185, 1189, 1205, 1227], "del": [0, 1107, 1131, 1134, 1199, 1208, 1212, 1224, 1233, 1238, 1243, 1247], "delai": [19, 49, 1107, 1110, 1117, 1118, 1146, 1184, 1190], "deleg": 1194, "delet": [158, 844, 1110, 1184, 1196, 1222], "deliber": [548, 550, 692, 1199], "delight": 1190, "delta": [352, 684, 686, 769, 808, 810, 871, 1049, 1133, 1227], "delta_theta": [1133, 1227], "delta_theta_original_calcul": [1133, 1227], "demand": [1124, 1186], "demo": [1186, 1190, 1207], "demonstr": [0, 1114, 1121, 1130, 1173, 1201, 1202, 1207, 1208, 1213, 1214, 1216, 1233, 1236, 1247], "denomin": [541, 710, 852], "denorm": [268, 527, 691], "denormal_numb": 527, "denot": [13, 75, 295, 450, 468, 540, 572, 894, 956, 957, 997, 998, 1030, 1031, 1032, 1033, 1122, 1152, 1182, 1195, 1205, 1214, 1227, 1237], "dens": [35, 80, 87, 88, 91, 92, 94, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 124, 145, 364, 577, 665, 696, 1048, 1104, 1125, 1146, 1159, 1189, 1202, 1203, 1205, 1209, 1227, 1236], "dense_dim": 80, "densegener": 1125, "densiti": [565, 566, 568, 841, 845, 846, 849, 850, 851, 852, 854, 855, 857, 860, 862, 863, 864, 865, 866, 868, 873, 875, 876, 877, 879, 880, 919, 923, 959, 975, 977, 986, 988, 993, 995, 997, 998, 999, 1000, 1003, 1005, 1007, 1010, 1011, 1016, 1017, 1021, 1022, 1025, 1026, 1031, 1032, 1033, 1039, 1041, 1044, 1045, 1050, 1051, 1054, 1056, 1059, 1060, 1062, 1063, 1064, 1065, 1207], "depart": 1199, "depend": [0, 7, 13, 34, 38, 44, 57, 69, 73, 78, 150, 174, 191, 339, 361, 398, 411, 419, 422, 431, 481, 484, 485, 529, 530, 615, 620, 624, 630, 631, 634, 636, 637, 644, 682, 685, 692, 749, 751, 798, 799, 811, 816, 824, 837, 900, 903, 910, 914, 921, 942, 1107, 1109, 1110, 1112, 1117, 1119, 1121, 1122, 1125, 1127, 1128, 1131, 1133, 1134, 1135, 1137, 1158, 1170, 1176, 1180, 1182, 1183, 1185, 1186, 1187, 1189, 1191, 1194, 1195, 1196, 1198, 1199, 1200, 1205, 1208, 1211, 1212, 1214, 1215, 1216, 1218, 1221, 1227, 1230, 1232, 1233, 1237, 1238, 1246, 1247], "deploi": 1249, "deprec": [0, 47, 48, 67, 68, 69, 71, 322, 409, 410, 443, 453, 485, 503, 552, 634, 681, 683, 692, 702, 703, 724, 762, 892, 1102, 1105, 1110, 1127, 1130, 1135, 1150, 1152, 1158, 1171, 1180, 1185, 1187, 1189, 1194, 1207, 1208, 1214, 1215, 1233, 1246], "deprecatedarg": 453, "deprecationwan": 1110, "deprecationwarn": [1105, 1110, 1199, 1205, 1207, 1227, 1246], "depriv": 1199, "depth": [333, 441, 492, 493, 953, 1068, 1084, 1103, 1119, 1135, 1205, 1211, 1227, 1239, 1247], "der": 709, "deriv": [0, 9, 14, 38, 198, 282, 331, 556, 559, 709, 895, 912, 924, 925, 933, 956, 962, 1103, 1107, 1110, 1130, 1190, 1192, 1194, 1202, 1203, 1205, 1208, 1209, 1230, 1233, 1236], "deriv1": 1107, "deriv2": 1107, "deriv3": 1107, "deriv4": 1107, "deriv5": 1107, "derivative_fn": [1210, 1242], "derivi": 1200, "descend": [410, 637, 762, 1110], "descent": [1130, 1137, 1145, 1246, 1247], "describ": [26, 67, 69, 71, 198, 230, 232, 247, 255, 256, 296, 297, 298, 299, 300, 301, 338, 339, 340, 381, 494, 503, 568, 613, 631, 740, 741, 750, 820, 821, 822, 823, 831, 903, 906, 909, 956, 957, 1074, 1093, 1110, 1137, 1140, 1152, 1166, 1172, 1173, 1175, 1180, 1182, 1186, 1190, 1191, 1192, 1195, 1199, 1200, 1202, 1211, 1214, 1215, 1216, 1218, 1219, 1223, 1227, 1236, 1237, 1244, 1246, 1248], "descript": [71, 127, 452, 514, 516, 558, 565, 645, 719, 746, 747, 965, 1107, 1110, 1112, 1135], "descriptor": [0, 2, 198, 645, 1152], "deseri": [1110, 1145], "desiderata": [1190, 1191], "desideratum": 1183, "design": [17, 35, 70, 440, 824, 919, 1107, 1110, 1117, 1123, 1126, 1130, 1131, 1132, 1134, 1144, 1158, 1159, 1170, 1183, 1186, 1187, 1189, 1190, 1193, 1197, 1199, 1208, 1212, 1215, 1217, 1219, 1221, 1231, 1233, 1238, 1242, 1243, 1244, 1248], "design_top": 546, "desir": [72, 73, 120, 332, 399, 413, 445, 498, 553, 662, 677, 678, 680, 682, 685, 686, 697, 750, 778, 810, 817, 919, 921, 922, 923, 1048, 1119, 1134, 1191, 1195, 1199, 1216, 1218, 1243, 1248], "despit": [120, 556, 1189, 1198], "destin": [277, 461, 570, 670, 768, 815, 1134, 1195, 1211, 1243], "destination_index": [277, 1211], "destroi": 1110, "destructure_tupl": 1107, "det": [635, 865], "detail": [0, 7, 14, 15, 30, 65, 66, 67, 68, 69, 71, 143, 150, 157, 158, 159, 160, 271, 272, 273, 277, 278, 279, 280, 281, 340, 390, 392, 393, 395, 399, 422, 467, 472, 481, 483, 496, 514, 546, 567, 645, 660, 662, 664, 666, 677, 678, 680, 682, 684, 685, 686, 688, 711, 720, 721, 769, 771, 784, 785, 787, 788, 789, 810, 824, 912, 914, 915, 917, 921, 943, 944, 945, 946, 947, 953, 961, 962, 1007, 1101, 1104, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1120, 1122, 1123, 1127, 1130, 1131, 1133, 1137, 1153, 1158, 1166, 1173, 1175, 1180, 1182, 1185, 1187, 1188, 1190, 1191, 1193, 1195, 1198, 1199, 1201, 1204, 1205, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1230, 1232, 1233, 1237, 1238, 1239, 1242, 1243, 1246], "detailed_log": 331, "detect": [22, 23, 1104, 1110, 1115, 1116, 1117, 1121, 1122, 1127, 1151, 1154, 1192, 1199, 1200, 1227], "determin": [9, 18, 137, 141, 142, 143, 145, 150, 159, 160, 229, 252, 295, 303, 312, 485, 490, 549, 552, 579, 617, 624, 634, 635, 636, 652, 654, 655, 658, 711, 712, 729, 749, 750, 777, 779, 809, 811, 820, 821, 822, 823, 838, 858, 891, 903, 904, 909, 912, 915, 916, 917, 918, 920, 997, 998, 1007, 1110, 1121, 1122, 1123, 1134, 1158, 1173, 1186, 1194, 1195, 1211, 1212, 1214, 1216, 1218, 1221, 1239, 1243, 1247, 1248], "determinist": [853, 1068, 1084, 1110, 1134, 1173, 1191, 1198, 1201, 1243], "detour": 1214, "detrend": [919, 922, 923], "dev": [18, 67, 69, 77, 834, 836, 1119, 1152, 1205, 1210, 1212, 1223, 1227, 1238, 1242], "develop": [527, 1108, 1109, 1110, 1112, 1119, 1126, 1127, 1139, 1154, 1159, 1188, 1189, 1190, 1195, 1196, 1200, 1201, 1216, 1219, 1227], "deviat": [120, 359, 362, 364, 684, 769, 863, 914, 1107], "devic": [18, 25, 28, 30, 31, 32, 35, 37, 38, 66, 67, 68, 69, 70, 71, 72, 73, 77, 79, 150, 157, 158, 169, 272, 279, 280, 281, 331, 335, 336, 338, 339, 413, 419, 464, 465, 468, 490, 496, 498, 499, 546, 553, 554, 579, 658, 697, 698, 777, 811, 812, 817, 818, 824, 828, 831, 832, 833, 834, 836, 837, 1103, 1104, 1106, 1107, 1110, 1114, 1117, 1119, 1123, 1125, 1130, 1131, 1151, 1156, 1158, 1170, 1175, 1180, 1182, 1183, 1185, 1189, 1191, 1193, 1195, 1197, 1199, 1208, 1210, 1214, 1219, 1221, 1223, 1226, 1233, 1237, 1241, 1243, 1244, 1248, 1249], "device0": 279, "device1": 279, "device2": 279, "device3": 279, "device_assign": [331, 1202, 1236], "device_buff": [1110, 1180, 1199], "device_count": [33, 339, 1198], "device_fun": 1152, "device_get": [1136, 1226], "device_index": [67, 68, 69], "device_indices_map": 1175, "device_memory_profil": 832, "device_or_backend_set": [1199, 1212, 1238], "device_put": [29, 31, 32, 339, 413, 419, 465, 1110, 1122, 1180, 1186, 1201, 1210, 1211, 1226, 1244], "device_put_repl": [29, 32, 1110], "device_put_shard": [29, 31], "device_set": [339, 1175, 1180], "device_to_devic": 1226, "device_to_host": 1226, "device_typ": 1209, "device_under_test": 1110, "device_variance_typ": 1188, "devicearrai": [1104, 1110, 1180, 1185, 1226, 1248], "deviceassign": [150, 1158], "deviceassignmentmismatcherror": [1208, 1212, 1233], "devices_indices_map": 1175, "dex": 1216, "df": [846, 852, 875, 991, 992, 993, 994, 995, 996, 1050, 1051, 1122, 1153], "dfden": 852, "dfdx": [1133, 1230], "dfm": 1187, "dfnum": 852, "dft": [508, 514, 522, 919, 921, 922, 923], "dg": 1122, "di": [35, 1153, 1199, 1205, 1227], "diaconi": 567, "diag": [637, 1110], "diag_indic": 483, "diagnos": 1105, "diagnost": [208, 209, 711], "diagon": [118, 250, 255, 256, 257, 481, 482, 483, 484, 506, 526, 573, 614, 620, 622, 711, 779, 782, 783, 784, 785, 787, 788, 789, 887, 893, 897, 900, 901, 904, 905, 906, 907, 908, 910, 911, 1207], "diagram": [1175, 1221], "dialect": [1110, 1176, 1190, 1202, 1216, 1236], "dict": [0, 7, 9, 50, 51, 71, 150, 191, 229, 295, 325, 331, 332, 340, 494, 558, 645, 705, 750, 824, 1101, 1107, 1110, 1122, 1123, 1130, 1131, 1135, 1145, 1152, 1158, 1176, 1178, 1185, 1198, 1199, 1208, 1209, 1212, 1221, 1224, 1233, 1238, 1247], "dictat": 1153, "dictionari": [3, 71, 494, 558, 747, 914, 1101, 1122, 1135, 1204, 1214, 1224, 1239, 1247], "dictkei": [1110, 1135, 1247], "did": [0, 1110, 1122, 1133, 1186, 1191, 1211, 1227], "didact": [1136, 1137, 1246], "didn": [71, 1075, 1112, 1131, 1137, 1186, 1188, 1191, 1205, 1206, 1211, 1213, 1227, 1234, 1238, 1246], "diff": [1119, 1133], "diff_bas": 1120, "differ": [13, 28, 37, 56, 67, 77, 150, 158, 231, 292, 325, 333, 339, 391, 398, 409, 417, 418, 422, 465, 484, 486, 494, 495, 496, 517, 526, 527, 532, 533, 538, 559, 568, 580, 590, 613, 615, 619, 621, 622, 624, 631, 633, 681, 683, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 723, 724, 735, 736, 741, 742, 746, 750, 751, 770, 774, 808, 811, 813, 824, 896, 909, 912, 914, 919, 924, 925, 926, 964, 1075, 1101, 1104, 1105, 1107, 1110, 1112, 1114, 1117, 1119, 1120, 1121, 1123, 1127, 1128, 1131, 1133, 1134, 1135, 1136, 1137, 1145, 1152, 1158, 1170, 1173, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1198, 1199, 1200, 1201, 1204, 1206, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1226, 1227, 1232, 1233, 1234, 1237, 1238, 1239, 1242, 1243, 1246, 1247, 1248], "differenc": 486, "differenti": [7, 9, 13, 14, 15, 144, 145, 148, 149, 151, 208, 209, 298, 317, 325, 333, 343, 372, 373, 709, 758, 816, 914, 924, 925, 1099, 1100, 1107, 1108, 1110, 1122, 1123, 1126, 1130, 1139, 1152, 1153, 1180, 1182, 1184, 1190, 1192, 1199, 1206, 1208, 1210, 1211, 1216, 1233, 1234, 1235, 1237, 1239, 1242], "difficult": [1121, 1122, 1132, 1152, 1185, 1186, 1189, 1191, 1195, 1199, 1214, 1221, 1231, 1242], "dig": 1242, "digamma": [962, 1189], "digest": 1197, "digit": [527, 606, 750, 919, 930, 931, 933, 938, 939, 941, 943, 944, 945, 946, 947, 961, 962, 968], "digraph": 1195, "dilat": [195, 196, 197, 198, 199, 269, 1110], "dilogarithm": 964, "dim": [0, 446, 725, 729, 805, 1007, 1110, 1208, 1214, 1233], "dim_out": [1208, 1233], "dim_var_valu": [1202, 1236], "dime": 1214, "dimens": [0, 71, 86, 87, 90, 92, 97, 100, 103, 104, 107, 120, 122, 146, 147, 150, 157, 158, 159, 160, 165, 179, 180, 182, 183, 188, 190, 194, 195, 196, 197, 198, 199, 212, 213, 215, 216, 217, 218, 219, 225, 232, 269, 280, 285, 289, 290, 296, 297, 298, 299, 300, 301, 311, 312, 313, 316, 346, 353, 354, 355, 356, 357, 358, 364, 369, 371, 378, 390, 392, 393, 395, 397, 398, 407, 408, 413, 426, 427, 428, 429, 431, 441, 446, 452, 454, 471, 473, 482, 485, 486, 492, 493, 499, 503, 528, 554, 559, 566, 568, 570, 577, 579, 598, 599, 605, 631, 634, 637, 659, 660, 662, 663, 664, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 692, 698, 700, 703, 720, 722, 724, 725, 729, 734, 742, 750, 753, 761, 764, 767, 768, 769, 771, 774, 777, 778, 779, 780, 784, 785, 788, 804, 805, 810, 813, 814, 815, 818, 824, 837, 839, 849, 855, 865, 867, 881, 882, 883, 885, 891, 894, 915, 916, 917, 918, 920, 926, 927, 955, 958, 1008, 1029, 1049, 1101, 1107, 1110, 1114, 1132, 1133, 1136, 1151, 1152, 1158, 1166, 1169, 1173, 1175, 1180, 1186, 1189, 1193, 1194, 1199, 1201, 1202, 1206, 1210, 1211, 1212, 1214, 1216, 1221, 1227, 1231, 1234, 1236, 1242, 1244], "dimension": [111, 115, 118, 193, 195, 196, 197, 198, 199, 209, 214, 215, 216, 217, 218, 219, 238, 310, 311, 323, 409, 410, 413, 426, 441, 464, 468, 472, 480, 483, 484, 487, 496, 508, 509, 511, 514, 515, 516, 519, 521, 522, 523, 525, 526, 547, 559, 566, 568, 587, 604, 624, 634, 637, 640, 664, 665, 689, 696, 699, 722, 725, 758, 778, 781, 813, 839, 886, 914, 915, 916, 917, 918, 920, 997, 998, 1029, 1123, 1132, 1151, 1185, 1189, 1194, 1211, 1212, 1214, 1219, 1221, 1231, 1244], "dimension_numb": [88, 89, 93, 105, 194, 195, 196, 197, 198, 213, 232, 296, 297, 298, 299, 300, 301, 1146, 1204, 1206, 1207, 1234], "dimension_semant": [1219, 1221], "dimenson": 664, "dims_compl": 1107, "dims_in": [1107, 1208, 1233], "dimsiz": [1199, 1212], "dir": [1119, 1128], "dirac": 871, "direct": [56, 120, 121, 268, 291, 331, 446, 486, 532, 533, 691, 725, 742, 895, 915, 917, 920, 1104, 1107, 1110, 1122, 1130, 1131, 1186, 1193, 1195, 1198, 1200, 1202, 1205, 1208, 1211, 1212, 1216, 1226, 1227, 1230, 1233, 1236, 1247], "direct_transl": 1107, "directli": [0, 1, 9, 19, 50, 198, 208, 213, 232, 339, 409, 549, 557, 576, 615, 702, 745, 813, 816, 837, 888, 915, 917, 919, 921, 922, 923, 927, 953, 1007, 1075, 1107, 1109, 1110, 1117, 1119, 1121, 1122, 1127, 1130, 1131, 1133, 1134, 1137, 1152, 1159, 1166, 1175, 1176, 1182, 1185, 1189, 1194, 1195, 1198, 1199, 1200, 1202, 1205, 1206, 1212, 1214, 1216, 1219, 1223, 1227, 1234, 1236, 1237, 1238, 1239, 1242, 1246], "directori": [834, 836, 1112, 1119, 1150, 1222, 1223], "dirichlet": 1110, "disabl": [5, 6, 34, 63, 496, 723, 750, 889, 897, 900, 905, 1110, 1115, 1116, 1121, 1124, 1127, 1185, 1188, 1202, 1205, 1223, 1225, 1227, 1236, 1248], "disable_jit": 1186, "disable_omnistag": 1193, "disable_x64": 1110, "disadvantag": 1195, "disagre": [1122, 1188], "disallow": [645, 746, 1104, 1110, 1194, 1226], "disallow_explicit": 1226, "disappear": 1199, "disastr": 1199, "discard": [384, 431, 733, 791, 1107, 1128, 1134, 1166, 1195, 1205, 1206, 1227, 1234, 1243], "discharg": [1107, 1114], "disconnect": 1183, "discont": 808, "discontinu": [681, 683, 703, 724, 808, 1122], "discourag": [291, 292, 1185], "discov": 35, "discover": [1122, 1189, 1197], "discret": [430, 440, 464, 468, 486, 508, 509, 510, 511, 514, 515, 516, 519, 521, 522, 524, 525, 587, 882, 883, 884, 885, 915, 916, 917, 918, 920, 921, 922, 1151, 1189], "discrete_cosine_transform": 882, "discuss": [773, 774, 1048, 1108, 1110, 1112, 1119, 1121, 1122, 1123, 1131, 1132, 1134, 1136, 1152, 1185, 1188, 1189, 1190, 1191, 1195, 1197, 1199, 1201, 1206, 1215, 1216, 1231, 1234, 1238, 1239, 1243, 1244, 1246], "disjoint": [1216, 1218], "disk": [364, 645, 1120, 1122, 1150, 1208, 1210, 1222, 1233], "disp": [896, 909], "dispatch": [0, 1110, 1120, 1122, 1130, 1180, 1183, 1186, 1193, 1199, 1208, 1210, 1212, 1215, 1223, 1233, 1238, 1242], "dispatch_queu": [1208, 1233], "dispatch_registri": 1212, "dispatch_shel": [1208, 1233], "displai": [750, 1124, 1135, 1195], "dispos": 1214, "disrupt": 1114, "dissect": 1218, "dist": [159, 160, 1119, 1128, 1130, 1131], "distanc": [160, 399, 527, 559, 1189], "distil": [1182, 1188, 1237], "distinct": [195, 196, 542, 543, 661, 667, 824, 1048, 1107, 1117, 1152, 1195, 1198, 1212, 1214, 1216], "distinguish": [146, 1107, 1175, 1194, 1208, 1226, 1233], "distr": 1214, "distr_matmul": 1214, "distribut": [71, 77, 159, 160, 291, 292, 326, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 464, 572, 684, 686, 769, 810, 840, 841, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 857, 860, 861, 862, 863, 864, 868, 870, 871, 873, 875, 876, 879, 880, 931, 953, 959, 960, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1103, 1105, 1110, 1120, 1127, 1129, 1134, 1138, 1175, 1180, 1187, 1189, 1191, 1196, 1198, 1203, 1209, 1211, 1214, 1240, 1242, 1243, 1244], "distributed_arrays_and_automatic_parallel": [1173, 1175], "distributed_out": 71, "div": [57, 1131, 1182, 1199, 1200, 1227, 1238], "div_check": 57, "div_p": 1199, "dive": [1183, 1195, 1210, 1218, 1249], "diverg": [952, 963, 1166, 1189, 1219], "divers": 1216, "divid": [77, 158, 280, 382, 417, 438, 493, 570, 688, 737, 764, 790, 815, 854, 923, 1110, 1114, 1122, 1186, 1199, 1200, 1201, 1211, 1218, 1227], "dividend": [288, 488, 489, 544, 668, 710, 732, 790], "divis": [57, 211, 288, 346, 489, 541, 544, 668, 710, 732, 1110, 1114, 1180, 1188, 1199, 1211, 1214, 1219], "divisionbyzeroerror": [53, 54, 58, 59], "divisor": [288, 488, 489, 544, 555, 668, 684, 686, 710, 732, 769, 790, 810], "divmod": 1211, "djv_dz": [1208, 1233], "dl": 257, "dl_devic": 38, "dl_device_typ": 38, "dldevicetyp": 38, "dlerror": 1223, "dlmanagedtensorvers": 38, "dlmf": [930, 931, 933, 938, 939, 941, 943, 944, 945, 946, 947, 961, 962, 968], "dlpack": [546, 1105, 1110, 1129], "dlpackmanagedtensor": 38, "dlpackmanagedtensortobuff": 1110, "dm": 1189, "dma": 1219, "dmlc": [38, 546], "dn": 1207, "dndebug": 0, "do": [0, 9, 50, 71, 97, 120, 333, 339, 340, 410, 429, 464, 526, 527, 576, 657, 684, 706, 723, 740, 745, 762, 820, 821, 822, 823, 889, 897, 900, 905, 915, 916, 917, 918, 920, 924, 925, 926, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1114, 1116, 1117, 1119, 1121, 1124, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1150, 1152, 1159, 1173, 1179, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247, 1248], "do_execut": [1208, 1212, 1233], "do_execute_arg": [1208, 1233], "doan": 567, "doc": [0, 19, 195, 652, 653, 654, 655, 658, 944, 945, 1105, 1110, 1119, 1126, 1130, 1135, 1173, 1180, 1185, 1188, 1190, 1192, 1193, 1197, 1211, 1223, 1227], "docker": 1128, "docstr": [26, 71, 196, 197, 229, 340, 369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 690, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 751, 752, 754, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 799, 804, 805, 808, 809, 810, 811, 814, 815, 816, 817, 818, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 958, 961, 962, 963, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1101, 1102, 1107, 1110, 1119, 1199, 1202, 1208, 1233, 1236], "doctest": 76, "doctre": 1119, "document": [38, 65, 66, 67, 68, 69, 71, 157, 158, 213, 271, 272, 273, 277, 278, 279, 280, 281, 417, 467, 481, 492, 546, 569, 628, 705, 711, 787, 814, 816, 832, 912, 1104, 1105, 1108, 1110, 1112, 1120, 1121, 1122, 1125, 1126, 1127, 1128, 1131, 1135, 1152, 1166, 1175, 1182, 1184, 1188, 1189, 1190, 1195, 1197, 1198, 1199, 1202, 1204, 1207, 1212, 1214, 1216, 1220, 1223, 1224, 1228, 1229, 1230, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1248], "docutil": 1119, "doe": [0, 19, 35, 36, 67, 69, 73, 103, 146, 232, 277, 296, 297, 298, 299, 300, 301, 341, 342, 362, 390, 392, 393, 395, 396, 399, 417, 443, 445, 447, 480, 487, 496, 505, 526, 567, 580, 624, 660, 662, 666, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 706, 715, 720, 722, 746, 769, 771, 773, 780, 810, 811, 813, 816, 888, 889, 890, 891, 892, 895, 897, 899, 900, 901, 902, 904, 905, 907, 908, 909, 910, 914, 926, 935, 938, 1102, 1104, 1106, 1107, 1110, 1117, 1120, 1121, 1122, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1151, 1152, 1153, 1159, 1173, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1195, 1199, 1201, 1202, 1204, 1205, 1209, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1227, 1230, 1231, 1236, 1237, 1238, 1243], "doesn": [0, 7, 18, 71, 72, 73, 339, 824, 834, 836, 1107, 1110, 1114, 1117, 1130, 1131, 1134, 1135, 1137, 1173, 1180, 1186, 1187, 1188, 1190, 1191, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1209, 1211, 1213, 1214, 1216, 1218, 1227, 1234, 1238, 1243, 1247], "dof": 711, "doi": [120, 527, 882, 894, 934, 952, 963], "domain": [387, 400, 430, 705, 841, 842, 845, 846, 851, 852, 854, 855, 856, 863, 864, 866, 868, 871, 873, 876, 877, 879, 880, 937, 1108, 1123, 1189, 1205, 1216, 1219, 1227], "domin": 1120, "don": [0, 71, 73, 120, 485, 1107, 1112, 1114, 1117, 1122, 1125, 1130, 1131, 1134, 1135, 1137, 1180, 1183, 1188, 1189, 1190, 1191, 1198, 1199, 1200, 1201, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1227, 1232, 1233, 1234, 1238, 1242, 1246, 1247], "donat": [71, 150, 824, 1102, 1110, 1158], "donate_argnam": [150, 1110, 1158], "donate_argnum": [71, 150, 824, 1102, 1110, 1122, 1158], "donated_argnum": 1212, "donated_invar": [1131, 1182, 1208, 1212, 1233], "done": [0, 66, 104, 362, 447, 531, 620, 622, 641, 700, 804, 919, 922, 923, 960, 1107, 1110, 1122, 1128, 1130, 1131, 1132, 1151, 1152, 1183, 1185, 1196, 1203, 1212, 1216, 1221, 1222, 1223, 1224, 1231, 1247, 1248], "dot": [26, 50, 159, 160, 213, 342, 623, 630, 777, 811, 824, 829, 830, 1101, 1106, 1117, 1130, 1132, 1133, 1136, 1159, 1182, 1184, 1186, 1201, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1219, 1227, 1230, 1231, 1234, 1237, 1242], "dot_gener": [212, 496, 813, 1110, 1204, 1206, 1212, 1219, 1234], "dot_general_p": 1159, "dot_product": [159, 342], "dot_with_no_batch_dim": 1206, "dot_with_no_batch_dims_sav": 1234, "dotgener": 213, "dots_sav": [1206, 1234], "dots_with_no_batch_dims_sav": [1206, 1234], "doubl": [0, 339, 429, 634, 850, 909, 947, 953, 1110, 1122, 1133, 1227], "double_out": 1180, "doubly_norm": 824, "doubt": [1104, 1122, 1199], "dougalm": [1188, 1190, 1199, 1212, 1238], "dover": [402, 404, 420, 423, 440, 469, 501, 562, 563, 572, 760, 775, 776, 935], "down": [35, 36, 143, 533, 824, 1107, 1117, 1120, 1121, 1134, 1136, 1183, 1185, 1194, 1200, 1205, 1210, 1216, 1219, 1223, 1227, 1244], "download": [1119, 1203], "downsampl": [146, 147], "downsid": [1189, 1195], "downstream": [339, 1188, 1194, 1224], "downward": 1122, "dozen": [1137, 1246], "dp": 1211, "dr": [1114, 1115, 1116, 1117, 1127, 1232, 1234], "draft": 1107, "drag": 1223, "dram": 1218, "dramat": [924, 925, 926, 1193], "drastic": 1122, "draw": [1188, 1191, 1195, 1201, 1243], "draw_sampl": 1191, "drawback": 1194, "drawn": [364, 749, 847], "driven": [1119, 1189], "driver": [1110, 1127], "drop": [17, 101, 150, 232, 296, 297, 298, 299, 300, 301, 688, 820, 821, 822, 823, 912, 1110, 1118, 1127, 1158, 1185, 1186, 1191, 1193, 1195, 1196, 1205, 1212, 1214, 1230], "drop_last": 1203, "dropdown": 1223, "dropout": [1146, 1191], "dso_load": 1223, "dsplit": 493, "dst": [1107, 1211], "dt": [781, 886, 930, 931, 938, 939, 941, 943, 944, 945, 959, 964, 1194, 1247], "dtdloss_dtheta": [1133, 1227], "dtype": [0, 3, 7, 13, 18, 29, 34, 50, 63, 64, 67, 70, 71, 80, 92, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 125, 140, 143, 144, 145, 149, 150, 161, 162, 165, 169, 174, 183, 193, 195, 198, 199, 200, 212, 213, 214, 215, 216, 217, 218, 219, 229, 230, 231, 238, 241, 245, 247, 250, 255, 268, 269, 279, 289, 291, 295, 302, 303, 310, 311, 317, 325, 332, 333, 340, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 372, 384, 394, 399, 413, 414, 416, 419, 422, 429, 446, 447, 450, 461, 462, 463, 464, 468, 475, 476, 477, 490, 493, 496, 498, 499, 500, 506, 510, 524, 527, 530, 538, 547, 549, 552, 553, 554, 557, 560, 561, 565, 567, 570, 572, 573, 577, 579, 593, 603, 611, 612, 633, 644, 656, 658, 662, 665, 672, 675, 676, 677, 678, 680, 682, 684, 685, 686, 688, 691, 693, 696, 697, 698, 707, 717, 718, 720, 721, 725, 736, 741, 750, 753, 766, 768, 769, 771, 777, 779, 782, 810, 811, 812, 815, 817, 818, 820, 821, 822, 823, 837, 839, 840, 841, 842, 843, 844, 845, 846, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 887, 896, 909, 911, 953, 959, 960, 964, 1075, 1098, 1099, 1101, 1102, 1104, 1106, 1107, 1110, 1117, 1121, 1122, 1125, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1148, 1151, 1152, 1158, 1159, 1169, 1173, 1179, 1185, 1186, 1187, 1188, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1221, 1224, 1227, 1230, 1232, 1233, 1236, 1238, 1239, 1243, 1244, 1247], "dtype1": 1195, "dtype2": 1195, "dtype_lik": 603, "dtype_to_etyp": 1107, "dtypelik": [1110, 1179, 1185, 1199], "du": 257, "dual": 1188, "duchi11a": 1145, "duck": [50, 332, 1107, 1212], "ducktypedarrai": 231, "due": [526, 688, 706, 710, 713, 723, 914, 1107, 1110, 1118, 1122, 1127, 1131, 1152, 1185, 1186, 1189, 1190, 1193, 1199, 1202, 1212, 1216, 1219, 1230, 1238], "dummi": [1183, 1247], "dump": [834, 836, 1110, 1212, 1223], "dump_module_messag": 1212, "duplic": [0, 17, 80, 86, 91, 101, 298, 820, 821, 822, 823, 1208, 1223, 1233], "durat": [828, 829, 1222], "duration_in_m": 1223, "dure": [0, 9, 150, 231, 285, 317, 926, 1079, 1081, 1107, 1110, 1114, 1117, 1121, 1122, 1131, 1133, 1136, 1137, 1152, 1158, 1182, 1183, 1184, 1185, 1190, 1193, 1196, 1199, 1200, 1202, 1208, 1219, 1222, 1224, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1247, 1248], "durran": 559, "dw": [1201, 1203, 1209], "dx": [559, 712, 781, 886], "dy": 559, "dyn_arg": [1208, 1233, 1247], "dynam": [0, 34, 50, 90, 214, 215, 216, 217, 251, 559, 903, 1109, 1110, 1117, 1121, 1122, 1151, 1182, 1185, 1189, 1190, 1193, 1194, 1205, 1208, 1212, 1216, 1223, 1224, 1227, 1232, 1233, 1237, 1238, 1242], "dynamax": 1109, "dynamic_idx": [1199, 1212], "dynamic_index_in_dim": [215, 216, 217, 238, 1186, 1199, 1212], "dynamic_shap": 251, "dynamic_slic": [90, 214, 216, 310, 1216], "dynamic_slice_in_dim": [214, 215, 219, 311, 1199, 1211, 1212], "dynamic_slice_p": 1159, "dynamic_slice_s": 0, "dynamic_trac": 1107, "dynamic_update_index_in_dim": [218, 219], "dynamic_update_slic": [217, 219, 1186], "dynamic_update_slice_in_dim": 218, "dynamicjaxprtrac": [34, 1075, 1107, 1122, 1131, 1193, 1199, 1202, 1208, 1212, 1232, 1233, 1236, 1238, 1239], "dynamicslic": 215, "dynamicupdateslic": 218, "dz": 559, "e": [2, 7, 9, 13, 17, 19, 25, 30, 31, 32, 33, 35, 38, 49, 50, 67, 69, 71, 72, 73, 76, 77, 78, 104, 117, 118, 143, 144, 145, 147, 150, 157, 158, 165, 171, 172, 188, 195, 197, 208, 224, 226, 229, 232, 256, 260, 268, 271, 272, 273, 279, 281, 293, 295, 307, 332, 333, 338, 340, 367, 374, 375, 376, 379, 383, 405, 416, 418, 424, 430, 431, 452, 485, 487, 498, 509, 513, 514, 515, 516, 519, 521, 527, 553, 559, 562, 563, 571, 606, 624, 635, 636, 640, 646, 688, 691, 697, 705, 707, 711, 715, 722, 747, 773, 774, 779, 780, 813, 817, 824, 837, 838, 846, 847, 850, 851, 854, 855, 857, 858, 860, 862, 864, 865, 866, 870, 877, 882, 884, 893, 895, 919, 921, 922, 923, 938, 939, 941, 943, 944, 945, 953, 959, 1029, 1049, 1068, 1075, 1084, 1101, 1104, 1106, 1107, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1130, 1131, 1135, 1136, 1145, 1152, 1158, 1159, 1166, 1169, 1173, 1175, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1239, 1247, 1248], "e1": [938, 943], "e2": [941, 947, 963], "e4": [944, 945], "e48aedf368ad": 1206, "e4m3": 1110, "e5": 939, "e5m2": 1110, "e_1": 938, "e_n": 941, "ea": 894, "each": [0, 12, 14, 18, 26, 31, 32, 33, 35, 68, 71, 72, 75, 77, 78, 86, 92, 98, 107, 137, 141, 142, 145, 147, 157, 158, 165, 180, 195, 196, 197, 198, 199, 232, 242, 247, 248, 269, 271, 272, 273, 275, 277, 278, 279, 280, 281, 295, 296, 297, 298, 299, 300, 301, 303, 337, 338, 339, 341, 342, 371, 385, 386, 397, 398, 402, 420, 426, 427, 428, 429, 431, 443, 448, 450, 452, 459, 464, 467, 468, 472, 482, 487, 490, 496, 497, 509, 511, 515, 516, 521, 525, 532, 533, 538, 540, 549, 557, 559, 565, 566, 567, 568, 571, 572, 579, 595, 605, 619, 620, 621, 622, 624, 637, 658, 670, 672, 692, 701, 705, 708, 711, 713, 715, 717, 718, 729, 733, 739, 747, 750, 757, 765, 768, 770, 773, 774, 777, 778, 781, 784, 788, 791, 799, 804, 805, 809, 811, 812, 820, 821, 822, 823, 824, 828, 831, 837, 847, 869, 871, 886, 891, 892, 893, 909, 912, 914, 919, 921, 922, 923, 926, 958, 1008, 1029, 1030, 1031, 1048, 1049, 1068, 1069, 1070, 1071, 1072, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1100, 1101, 1102, 1104, 1107, 1109, 1110, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1144, 1145, 1146, 1151, 1152, 1158, 1166, 1175, 1180, 1182, 1183, 1185, 1187, 1188, 1189, 1190, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1212, 1214, 1216, 1218, 1221, 1224, 1227, 1231, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1247, 1248], "eafp": 1185, "eager": [34, 49, 1184, 1186, 1190, 1199], "eagerli": [49, 1114, 1115, 1122, 1183, 1186, 1188, 1190, 1211], "earli": [18, 120, 926, 1110, 1189, 1197, 1198], "earlier": [634, 740, 772, 1128, 1198, 1208, 1216, 1233, 1237], "eas": [1126, 1185], "easi": [71, 1103, 1109, 1115, 1133, 1152, 1186, 1188, 1191, 1192, 1194, 1196, 1199, 1201, 1204, 1205, 1210, 1212, 1216, 1218, 1219, 1227, 1230, 1242], "easier": [7, 773, 1110, 1119, 1121, 1133, 1135, 1186, 1187, 1188, 1190, 1195, 1196, 1211, 1213, 1214, 1216, 1219, 1227, 1244, 1247], "easiest": [1108, 1112, 1119, 1122, 1180, 1193, 1195, 1202, 1236, 1244], "easili": [1115, 1121, 1127, 1128, 1176, 1182, 1189, 1190, 1191, 1201, 1216, 1237], "echo": [1128, 1223], "econom": [634, 904, 1107, 1110], "economi": 904, "ecosystem": [1112, 1189, 1242], "ed": [619, 620, 633, 636, 699, 715, 837, 896, 935, 1101, 1117, 1136, 1186, 1200, 1216, 1227], "edg": [453, 487, 565, 566, 567, 568, 701, 912, 1127, 1130, 1184, 1188, 1204, 1205, 1207, 1227], "edge_ord": 559, "edgeitem": [558, 750], "edit": [628, 707, 1112, 1206, 1211, 1234], "editor": [606, 1112, 1119], "edu": [120, 929, 935, 936], "edvin": 909, "effect": [12, 17, 25, 29, 34, 55, 56, 69, 146, 147, 150, 238, 255, 311, 464, 497, 542, 543, 548, 550, 661, 667, 711, 715, 804, 808, 837, 924, 925, 926, 1075, 1107, 1110, 1114, 1117, 1121, 1122, 1123, 1130, 1131, 1137, 1150, 1152, 1158, 1178, 1184, 1185, 1186, 1190, 1194, 1195, 1196, 1197, 1199, 1200, 1208, 1212, 1214, 1227, 1233, 1238, 1239, 1243, 1246], "effects_barri": [1117, 1183], "effectul": 1183, "effici": [70, 280, 333, 409, 508, 522, 633, 637, 688, 702, 773, 813, 1110, 1122, 1125, 1130, 1131, 1132, 1133, 1145, 1173, 1180, 1186, 1189, 1191, 1197, 1200, 1205, 1210, 1211, 1212, 1216, 1221, 1227, 1230, 1231, 1238, 1242, 1243], "effort": [1105, 1122, 1185], "eg": [55, 57, 896, 1114], "ei": 939, "eig": [621, 1110, 1152], "eigen": [1110, 1152], "eigendecomposit": [246, 247, 619, 1110], "eigenpair": 120, "eigenvalu": [120, 246, 247, 619, 620, 621, 622, 892, 893, 903, 906, 1110], "eigenvector": [120, 246, 247, 619, 620, 621, 622, 892, 893], "eigh": [120, 619, 622, 865, 1110], "eigh_tridiagon": 1110, "eighresult": 620, "eight": [631, 804, 1211, 1244], "eigval": [892, 1152], "eigvals_onli": [892, 893], "einop": 1214, "einstein": [496, 1159], "einsum": [71, 213, 497, 1110, 1186], "einsum_path": 496, "either": [37, 38, 57, 71, 73, 88, 105, 146, 147, 150, 151, 191, 193, 195, 196, 197, 198, 199, 212, 213, 229, 245, 255, 285, 303, 368, 378, 398, 405, 414, 415, 424, 429, 473, 490, 556, 559, 631, 634, 682, 685, 708, 713, 714, 729, 747, 748, 750, 798, 804, 816, 824, 903, 904, 906, 915, 916, 917, 918, 920, 953, 1101, 1106, 1107, 1110, 1119, 1121, 1122, 1124, 1127, 1135, 1152, 1153, 1158, 1175, 1182, 1185, 1188, 1191, 1193, 1202, 1203, 1208, 1209, 1211, 1212, 1216, 1221, 1223, 1233, 1236, 1237, 1248], "elapsed_tim": 1212, "elbo_v": 1213, "elbo_val_and_grad": 1213, "electroacoust": [919, 923], "elem": 165, "element": [0, 13, 32, 53, 54, 57, 58, 59, 60, 61, 62, 71, 92, 94, 95, 96, 101, 107, 122, 137, 141, 142, 143, 144, 145, 146, 148, 149, 151, 161, 162, 165, 188, 195, 196, 197, 232, 242, 246, 248, 250, 256, 262, 275, 295, 296, 297, 298, 299, 300, 301, 303, 333, 340, 343, 344, 345, 347, 348, 349, 350, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 414, 415, 420, 421, 423, 424, 425, 429, 432, 434, 436, 437, 439, 441, 443, 445, 448, 450, 452, 453, 462, 463, 466, 469, 470, 471, 472, 475, 476, 480, 485, 486, 488, 489, 494, 495, 500, 501, 502, 504, 505, 506, 507, 509, 515, 521, 525, 528, 529, 531, 532, 533, 538, 540, 542, 543, 544, 545, 552, 560, 561, 564, 565, 567, 568, 571, 572, 573, 575, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 602, 609, 611, 612, 614, 627, 646, 647, 648, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 666, 667, 668, 669, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 690, 691, 692, 693, 700, 702, 703, 706, 715, 716, 717, 718, 720, 723, 728, 730, 731, 732, 733, 734, 735, 738, 739, 748, 749, 750, 751, 753, 754, 755, 757, 760, 761, 765, 766, 769, 770, 771, 773, 775, 776, 777, 779, 781, 783, 787, 790, 791, 792, 798, 799, 804, 805, 808, 809, 810, 816, 847, 849, 869, 871, 883, 885, 886, 893, 897, 900, 901, 908, 914, 915, 916, 917, 918, 920, 937, 940, 954, 955, 956, 957, 964, 1029, 1048, 1049, 1068, 1076, 1084, 1085, 1099, 1100, 1101, 1102, 1104, 1107, 1114, 1122, 1130, 1134, 1135, 1136, 1158, 1159, 1166, 1173, 1175, 1182, 1191, 1194, 1195, 1199, 1200, 1201, 1202, 1205, 1212, 1214, 1216, 1218, 1219, 1224, 1227, 1236, 1237, 1244, 1247], "element_count": 761, "element_typ": 0, "element_type_to_descriptor_type_map": 0, "elementari": [248, 249, 256], "elementtyp": 0, "elementwis": [7, 152, 153, 154, 155, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 189, 192, 200, 201, 202, 210, 211, 220, 221, 222, 223, 224, 226, 228, 233, 234, 235, 236, 237, 240, 242, 243, 244, 258, 259, 260, 261, 263, 264, 265, 266, 267, 274, 275, 276, 282, 283, 284, 288, 293, 294, 304, 305, 306, 307, 308, 309, 314, 315, 318, 320, 321, 328, 934, 952, 963, 1146, 1159, 1184, 1199, 1201, 1212, 1216], "elid": [302, 1122, 1170, 1182, 1208, 1233, 1237, 1243], "elif": [7, 1107, 1195, 1199, 1202, 1206, 1212, 1234, 1236, 1238], "elimin": [0, 7, 280, 397, 1110, 1193, 1208, 1233], "ellipsi": [71, 1214, 1218], "els": [0, 7, 35, 49, 69, 78, 110, 111, 114, 115, 191, 624, 635, 754, 824, 840, 841, 844, 846, 849, 852, 854, 856, 861, 865, 868, 870, 873, 875, 876, 877, 879, 1107, 1117, 1119, 1121, 1122, 1131, 1134, 1135, 1182, 1184, 1186, 1188, 1190, 1191, 1194, 1195, 1196, 1199, 1200, 1202, 1205, 1206, 1208, 1211, 1212, 1224, 1227, 1233, 1234, 1236, 1237, 1238, 1247], "elsewher": [506, 652, 653, 654, 655, 782, 816, 1186, 1194], "eltwise_kernel": 1216, "elu": 374, "emb": [1186, 1216], "emb_dim": 0, "embarrass": 1188, "embarrassingli": 1221, "embed": [1110, 1216, 1219], "emerg": 1186, "emit": [443, 1110, 1120, 1216], "emit_diagnostic_info": 1212, "emitt": 1125, "emphas": 1243, "emphasi": 1134, "empir": 1173, "emploi": [362, 922, 1107, 1186, 1190], "employ": 1112, "empti": [53, 54, 58, 59, 60, 61, 62, 71, 143, 295, 303, 392, 393, 430, 440, 471, 562, 563, 567, 606, 624, 660, 666, 675, 676, 677, 679, 680, 681, 682, 683, 685, 701, 706, 764, 1107, 1110, 1214], "empty_arrai": 1110, "empty_ref": 1216, "emul": [1136, 1219], "en": [143, 209, 388, 401, 403, 406, 413, 419, 421, 425, 430, 434, 436, 464, 465, 501, 527, 562, 563, 589, 606, 630, 646, 647, 648, 711, 758, 776, 781, 816, 882, 886, 928, 929, 935, 941, 963, 1048, 1066, 1101, 1110, 1119, 1130, 1131, 1173, 1175, 1179, 1193, 1195, 1199, 1202, 1212, 1236, 1238], "enabl": [5, 6, 17, 18, 47, 48, 57, 63, 64, 73, 120, 295, 331, 633, 637, 750, 828, 831, 837, 922, 947, 1102, 1107, 1109, 1110, 1114, 1115, 1116, 1119, 1121, 1122, 1124, 1125, 1130, 1131, 1133, 1140, 1150, 1152, 1154, 1159, 1178, 1185, 1187, 1190, 1191, 1198, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1222, 1225, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "enable_check": [1110, 1208, 1212, 1233], "enable_cuda": 1119, "enable_march_n": 1110, "enable_rocm": 1119, "enable_x64": [63, 1110, 1208, 1233], "enable_xla": 1110, "enablecallback": 1223, "encapsul": [38, 1110, 1121, 1182, 1202, 1204, 1236, 1237], "encapsulatefunct": 0, "enclos": [150, 828, 829, 1182, 1186, 1237], "encod": [277, 278, 371, 552, 645, 1107, 1182, 1186, 1188, 1195, 1203, 1209, 1211, 1212, 1224, 1237, 1239], "encompass": [158, 281], "encound": 1170, "encount": [9, 342, 675, 676, 677, 680, 749, 1114, 1121, 1131, 1152, 1170, 1190, 1193, 1194, 1199, 1202, 1223, 1236, 1247], "encourag": [159, 160, 1133, 1230], "encrypt": 1222, "end": [71, 98, 186, 188, 195, 247, 307, 311, 312, 343, 344, 350, 366, 374, 380, 396, 399, 405, 424, 430, 443, 464, 485, 487, 495, 557, 644, 656, 700, 701, 719, 746, 750, 804, 834, 876, 922, 926, 934, 952, 953, 959, 963, 964, 1107, 1109, 1110, 1112, 1120, 1126, 1128, 1130, 1133, 1152, 1182, 1183, 1185, 1186, 1188, 1189, 1193, 1199, 1204, 1205, 1206, 1208, 1210, 1211, 1214, 1218, 1219, 1223, 1224, 1227, 1230, 1233, 1234, 1237], "end_valu": 701, "endpoint": [557, 644, 656, 725, 1110, 1199], "endswith": 1107, "enforc": [16, 17, 19, 71, 1110, 1134, 1194, 1196, 1199, 1208, 1214, 1233], "eng": 715, "engend": 1107, "engin": [1122, 1123, 1126, 1139, 1185, 1191], "enhanc": [707, 1113, 1151, 1195, 1215], "enorm": [1137, 1246], "enough": [0, 447, 813, 1110, 1122, 1125, 1128, 1130, 1134, 1136, 1159, 1189, 1190, 1191, 1193, 1195, 1216, 1221, 1223], "enqueu": [66, 1106], "ensur": [0, 35, 49, 71, 72, 380, 453, 928, 1107, 1110, 1112, 1117, 1119, 1120, 1122, 1132, 1152, 1158, 1166, 1173, 1183, 1184, 1185, 1186, 1188, 1191, 1195, 1202, 1205, 1207, 1209, 1210, 1211, 1214, 1222, 1224, 1227, 1231], "ensure_compile_time_ev": [7, 1110, 1184], "ensure_typed_key_arrai": 1194, "entail": [18, 1190], "enter": [16, 342, 1107, 1115, 1116, 1190, 1223], "entir": [565, 567, 645, 701, 804, 1105, 1107, 1110, 1119, 1122, 1130, 1131, 1134, 1135, 1136, 1152, 1166, 1175, 1183, 1187, 1190, 1195, 1205, 1208, 1211, 1214, 1222, 1224, 1227, 1233, 1238, 1243, 1247], "entireti": [1110, 1130, 1221], "entri": [0, 31, 32, 80, 109, 113, 121, 231, 302, 323, 409, 459, 480, 498, 505, 526, 531, 532, 533, 568, 593, 702, 764, 847, 888, 892, 898, 907, 940, 954, 997, 998, 1029, 1049, 1102, 1110, 1135, 1136, 1152, 1187, 1188, 1193, 1195, 1199, 1205, 1212, 1216, 1219, 1221, 1224, 1227, 1247], "entropi": [934, 963, 1199], "entry_computation_layout": 0, "enum": [0, 193, 195, 196, 197, 198, 199, 212, 213, 464, 468, 490, 496, 579, 658, 777, 811, 812, 1110, 1166], "enum_": 0, "enumer": [1107, 1195, 1206, 1212, 1234], "env": [1107, 1110, 1190, 1199, 1202, 1204, 1208, 1212, 1233, 1236, 1238, 1247], "env_options_overrid": 331, "env_trace_todo": 1131, "environ": [0, 35, 268, 340, 691, 825, 1102, 1103, 1110, 1115, 1119, 1121, 1122, 1124, 1125, 1127, 1133, 1136, 1138, 1152, 1170, 1180, 1184, 1190, 1193, 1196, 1199, 1204, 1211, 1214, 1223, 1225, 1227, 1240, 1243], "envisag": 1196, "enzym": 1216, "ep": [0, 251, 527, 628, 633, 711, 750, 893, 903, 1145, 1205, 1210, 1230, 1242], "episode_step": [1135, 1247], "epoch": [1203, 1209], "epoch_tim": [1203, 1209], "epsilon": [120, 382, 628, 903, 1130, 1145, 1146, 1213], "epsilon_shap": 1213, "epsneg": 527, "eq": 930, "eqn": [12, 1107, 1182, 1204, 1208, 1233, 1237], "eqn1": 1107, "eqn2": 1107, "eqnarrai": [1208, 1233], "eqns1": 1107, "eqns2": 1107, "equal": [32, 33, 42, 71, 72, 73, 87, 90, 91, 146, 147, 150, 151, 157, 158, 159, 160, 190, 195, 197, 215, 220, 231, 232, 233, 243, 247, 266, 281, 303, 333, 339, 391, 397, 414, 415, 417, 429, 430, 431, 441, 485, 492, 506, 541, 557, 559, 565, 566, 567, 568, 590, 592, 601, 603, 624, 633, 635, 641, 644, 650, 651, 652, 653, 654, 655, 656, 701, 702, 707, 710, 714, 715, 750, 757, 758, 764, 782, 824, 840, 842, 844, 846, 849, 852, 854, 856, 861, 863, 868, 870, 873, 875, 876, 879, 881, 942, 960, 1007, 1048, 1100, 1101, 1107, 1110, 1122, 1134, 1135, 1136, 1153, 1158, 1166, 1180, 1186, 1188, 1191, 1196, 1198, 1200, 1211, 1214, 1224, 1227, 1243, 1247], "equal_nan": [391, 414, 590, 799], "equat": [12, 165, 208, 255, 559, 624, 636, 641, 889, 902, 907, 908, 909, 964, 1107, 1182, 1200, 1204, 1205, 1227, 1237], "equip": [1130, 1135, 1247], "equiv": 447, "equival": [56, 86, 87, 157, 158, 191, 196, 214, 216, 238, 271, 272, 273, 277, 278, 279, 281, 295, 310, 311, 312, 332, 339, 397, 399, 415, 429, 435, 438, 453, 459, 470, 489, 490, 492, 493, 497, 505, 527, 529, 541, 544, 568, 569, 570, 571, 595, 605, 610, 668, 688, 689, 723, 732, 737, 753, 760, 773, 775, 776, 814, 815, 824, 854, 1110, 1117, 1131, 1134, 1136, 1145, 1158, 1166, 1170, 1175, 1178, 1185, 1186, 1191, 1195, 1199, 1200, 1205, 1207, 1210, 1211, 1212, 1214, 1216, 1221, 1224, 1227, 1238, 1247, 1248], "er": [1208, 1233], "erf": [222, 223, 345, 936, 937, 953, 959], "erfc": 959, "ergo": 1219, "eric": 758, "err": [55, 56, 57, 896, 909, 1104, 1114, 1116, 1247], "errest": [896, 909], "erron": [645, 947], "error": [0, 13, 35, 37, 38, 49, 50, 55, 56, 57, 67, 71, 104, 120, 150, 209, 221, 222, 223, 345, 399, 431, 443, 485, 495, 526, 567, 624, 673, 674, 706, 710, 711, 713, 723, 729, 764, 824, 896, 909, 924, 925, 926, 935, 936, 937, 1048, 1049, 1102, 1104, 1110, 1111, 1114, 1115, 1117, 1119, 1122, 1124, 1127, 1130, 1131, 1132, 1135, 1136, 1137, 1152, 1158, 1159, 1180, 1185, 1186, 1188, 1190, 1192, 1194, 1195, 1199, 1200, 1202, 1205, 1208, 1211, 1212, 1213, 1214, 1216, 1219, 1223, 1224, 1225, 1227, 1231, 1233, 1236, 1238, 1242, 1246, 1247, 1249], "error_diagnost": 1212, "error_funct": 935, "errorcategori": 57, "erroreffect": 51, "escap": [1121, 1186, 1188, 1193, 1216], "escaped_tracer_error": 1193, "eshel": [1208, 1233], "especi": [7, 399, 645, 1110, 1114, 1122, 1136, 1183, 1184, 1186, 1190, 1193, 1194, 1219], "essenc": [1182, 1192, 1200, 1227, 1237], "essenti": [19, 280, 1107, 1122, 1134, 1136, 1137, 1185, 1186, 1187, 1188, 1189, 1199, 1200, 1204, 1205, 1208, 1211, 1227, 1230, 1233, 1239, 1242, 1243, 1246], "establish": [0, 1189, 1223], "estim": [120, 472, 567, 681, 683, 703, 711, 724, 894, 895, 896, 909, 913, 915, 917, 919, 920, 921, 922, 923, 926, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1049, 1104, 1109, 1145, 1176, 1205, 1213], "et": [944, 945], "etc": [1, 56, 144, 413, 509, 511, 515, 516, 521, 525, 613, 645, 688, 722, 747, 837, 1099, 1110, 1121, 1122, 1135, 1159, 1171, 1176, 1179, 1185, 1187, 1189, 1190, 1194, 1196, 1199, 1204, 1205, 1208, 1210, 1216, 1223, 1233, 1239, 1246, 1247], "etyp": [1208, 1233], "euclidean": [624, 1205, 1227], "euler": 927, "eval": [333, 1107, 1190, 1208, 1233], "eval_jaxpr": [1107, 1204, 1208, 1233], "eval_jaxpr_transpos": 1107, "eval_shap": 3, "evaltrac": 1107, "evalu": [7, 13, 49, 50, 57, 144, 145, 148, 149, 151, 159, 160, 280, 302, 332, 333, 390, 395, 459, 471, 496, 497, 572, 587, 592, 601, 630, 664, 705, 715, 749, 896, 909, 912, 913, 914, 933, 953, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 986, 987, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1067, 1075, 1083, 1099, 1100, 1106, 1108, 1114, 1117, 1122, 1133, 1139, 1153, 1188, 1190, 1191, 1198, 1199, 1200, 1201, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1227, 1232, 1233, 1234, 1242, 1243], "evan": [1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "even": [7, 34, 37, 55, 69, 91, 157, 208, 251, 295, 332, 472, 510, 512, 514, 517, 522, 524, 557, 592, 601, 644, 656, 701, 710, 713, 715, 750, 903, 907, 919, 921, 922, 923, 924, 925, 1104, 1106, 1107, 1110, 1112, 1114, 1117, 1122, 1130, 1131, 1135, 1136, 1166, 1176, 1180, 1182, 1183, 1185, 1186, 1188, 1189, 1190, 1191, 1193, 1196, 1198, 1199, 1200, 1201, 1204, 1205, 1208, 1210, 1211, 1214, 1216, 1219, 1221, 1223, 1227, 1233, 1237, 1238, 1239, 1242, 1243, 1247], "evenli": [399, 557, 644, 656, 781, 886, 1136, 1186, 1201, 1211], "event": [650, 651, 828, 829, 830, 1208, 1212, 1233], "event_nam": 830, "eventu": [38, 1110, 1152, 1183, 1186, 1187, 1212, 1219], "ever": [71, 120, 1107, 1133, 1196, 1205, 1218, 1219, 1227], "everi": [7, 22, 23, 71, 91, 150, 278, 337, 339, 434, 436, 521, 589, 750, 824, 892, 915, 916, 917, 918, 920, 1107, 1114, 1121, 1122, 1130, 1131, 1152, 1158, 1187, 1188, 1190, 1191, 1194, 1195, 1196, 1199, 1204, 1210, 1212, 1214, 1216, 1219, 1224, 1238, 1239, 1247], "everyon": 1112, "everyth": [7, 711, 1105, 1107, 1119, 1128, 1130, 1132, 1135, 1188, 1191, 1192, 1193, 1203, 1206, 1209, 1211, 1214, 1223, 1231, 1234, 1247], "everything_sav": [1206, 1234], "everywher": [34, 758, 1114, 1122, 1185, 1191, 1194, 1205, 1227], "evict": 1222, "evidenc": 1185, "evolut": [1186, 1211], "evolv": [295, 1105, 1122, 1186], "ex1": 1193, "exact": [332, 345, 505, 624, 636, 706, 924, 925, 942, 1105, 1110, 1121, 1125, 1185, 1213], "exactli": [157, 158, 271, 272, 273, 278, 279, 280, 281, 319, 552, 750, 824, 912, 922, 942, 1107, 1117, 1122, 1124, 1130, 1133, 1135, 1152, 1170, 1183, 1186, 1191, 1193, 1195, 1197, 1204, 1205, 1208, 1211, 1214, 1216, 1221, 1227, 1232, 1233, 1247], "examin": [80, 472, 736, 1200, 1227], "examine_jaxpr": 1204, "exampl": [0, 1, 7, 9, 13, 14, 15, 18, 19, 26, 29, 31, 32, 34, 35, 43, 49, 50, 55, 56, 57, 71, 76, 77, 80, 119, 123, 125, 144, 145, 150, 151, 157, 159, 160, 165, 169, 188, 195, 196, 197, 214, 215, 216, 217, 218, 219, 229, 231, 238, 247, 268, 272, 279, 280, 289, 295, 310, 311, 317, 325, 326, 332, 333, 338, 339, 340, 342, 352, 353, 354, 355, 356, 357, 358, 361, 372, 416, 418, 428, 446, 447, 452, 453, 471, 494, 496, 527, 538, 549, 571, 576, 604, 641, 665, 688, 689, 691, 696, 707, 717, 718, 719, 722, 725, 728, 736, 745, 746, 747, 750, 753, 761, 764, 768, 780, 813, 820, 821, 822, 823, 824, 828, 829, 830, 837, 848, 891, 927, 965, 1048, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1083, 1084, 1086, 1088, 1090, 1091, 1092, 1093, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1127, 1128, 1130, 1131, 1132, 1134, 1144, 1145, 1146, 1148, 1151, 1152, 1153, 1158, 1170, 1175, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1189, 1190, 1192, 1194, 1196, 1198, 1199, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1212, 1214, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1248], "example_arg": [9, 1247], "example_contain": 1224, "example_fun": 1199, "example_librari": [1105, 1110, 1129], "example_tre": [1135, 1247], "exc": [1208, 1233], "exc_info": [1208, 1233], "exce": [650, 651, 764, 804, 1136, 1219], "exceed": [783, 787], "excel": [567, 1189, 1205, 1230], "except": [0, 14, 15, 35, 52, 56, 65, 66, 87, 126, 158, 159, 160, 190, 231, 262, 280, 372, 373, 384, 390, 392, 393, 395, 397, 399, 413, 430, 452, 486, 506, 521, 569, 570, 604, 660, 662, 666, 677, 678, 680, 682, 685, 711, 720, 722, 723, 728, 733, 769, 771, 810, 921, 1102, 1107, 1110, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1128, 1131, 1134, 1135, 1152, 1183, 1185, 1190, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1219, 1224, 1226, 1227, 1233, 1234, 1236, 1238, 1243, 1247], "excepthook": [1208, 1233], "excit": [1210, 1242], "exclud": [396, 399, 644, 813, 849, 865, 1014, 1119, 1130, 1131, 1211], "exclude_pattern": 1119, "exclus": [178, 188, 229, 752, 872, 878, 1110, 1180, 1186, 1188], "exdb": 1203, "exec": [1208, 1233], "execut": [0, 9, 34, 35, 69, 70, 71, 150, 191, 341, 342, 397, 549, 645, 688, 705, 746, 773, 824, 830, 831, 833, 837, 1104, 1106, 1107, 1108, 1110, 1114, 1116, 1117, 1119, 1120, 1122, 1123, 1126, 1128, 1130, 1131, 1134, 1136, 1137, 1138, 1158, 1173, 1175, 1176, 1182, 1183, 1184, 1188, 1189, 1190, 1191, 1193, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1208, 1210, 1211, 1212, 1214, 1218, 1219, 1221, 1223, 1227, 1232, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1246], "execute_compil": 1107, "execute_request": [1208, 1212, 1233], "executioninfo": [1208, 1233], "exercis": [1137, 1184, 1214, 1221, 1246], "exhaust": [1105, 1199], "exhibit": [919, 1188], "exist": [9, 17, 43, 157, 292, 340, 461, 895, 903, 953, 1107, 1110, 1119, 1125, 1133, 1151, 1152, 1173, 1175, 1180, 1185, 1187, 1188, 1190, 1191, 1193, 1195, 1196, 1199, 1200, 1201, 1211, 1214, 1216, 1227, 1232, 1246], "existenti": 1107, "exit": [120, 1117, 1190, 1198], "exp": [150, 343, 344, 368, 369, 378, 470, 504, 635, 646, 650, 760, 861, 863, 879, 880, 935, 940, 949, 951, 955, 957, 965, 1122, 1131, 1189, 1200, 1204, 1210, 1213, 1216, 1219, 1227, 1238, 1239, 1242], "exp_p": 1204, "expand": [86, 486, 503, 1110, 1112, 1199, 1200, 1212, 1227], "expand_dim": [289, 1107], "expans": 953, "expect": [0, 67, 70, 71, 127, 146, 147, 362, 519, 813, 816, 1109, 1121, 1122, 1131, 1135, 1136, 1151, 1152, 1179, 1183, 1184, 1186, 1190, 1193, 1194, 1195, 1199, 1200, 1202, 1205, 1208, 1211, 1212, 1213, 1219, 1222, 1226, 1227, 1233, 1236, 1238, 1242, 1247], "expectnotimplementederror": [1202, 1236], "expedi": 1188, "expens": [7, 50, 527, 748, 1109, 1110, 1114, 1131, 1183, 1188, 1219, 1238], "experi": [1119, 1133, 1159, 1185, 1187, 1190, 1201, 1206, 1214, 1227, 1234], "experiment": [0, 17, 18, 28, 33, 150, 156, 291, 292, 295, 326, 336, 341, 342, 824, 827, 848, 1102, 1104, 1105, 1110, 1121, 1122, 1124, 1127, 1129, 1144, 1173, 1175, 1180, 1186, 1187, 1189, 1190, 1194, 1200, 1201, 1211, 1214, 1216, 1218, 1219, 1221, 1227, 1233, 1244], "experimental_cpp_jit": 1110, "experimental_cpp_pjit": 1110, "experimental_cpp_pmap": 1110, "expert": [1211, 1216], "expit": [1110, 1190, 1213], "explain": [0, 128, 511, 516, 521, 525, 637, 773, 907, 1119, 1128, 1130, 1131, 1133, 1135, 1137, 1153, 1175, 1180, 1190, 1193, 1198, 1199, 1202, 1205, 1212, 1214, 1216, 1227, 1236, 1238, 1247], "explain_cache_miss": [1199, 1212, 1238], "explan": [0, 17, 70, 634, 681, 683, 703, 724, 1110, 1122, 1133, 1230], "explanatori": [1203, 1209], "explicit": [9, 34, 57, 496, 1104, 1107, 1110, 1121, 1122, 1173, 1176, 1180, 1183, 1186, 1188, 1189, 1191, 1192, 1194, 1195, 1199, 1200, 1211, 1212, 1226, 1227, 1242, 1248], "explicitli": [27, 80, 104, 250, 485, 566, 568, 645, 692, 752, 924, 925, 926, 1075, 1101, 1104, 1107, 1114, 1121, 1122, 1134, 1137, 1159, 1176, 1180, 1183, 1187, 1190, 1191, 1195, 1199, 1201, 1208, 1211, 1212, 1216, 1233, 1237, 1242, 1243, 1244, 1246, 1248], "explod": 1116, "exploit": [285, 1186, 1188, 1191, 1200, 1211, 1227], "explor": [71, 120, 497, 1107, 1108, 1120, 1131, 1137, 1152, 1183, 1185, 1189, 1214, 1216, 1238, 1242, 1244], "expm_a": 895, "expm_frechet": 1214, "expm_frechet_a": 895, "expon": [527, 538, 545, 609, 627, 717, 718, 1110, 1195], "exponent_bit": 286, "exponenti": [171, 172, 224, 343, 344, 369, 374, 497, 501, 504, 646, 650, 651, 894, 895, 938, 939, 941, 949, 951, 955, 1110, 1131, 1145, 1200, 1227, 1238], "exponential_decai": 1145, "exponential_funct": 501, "export": [1110, 1128, 1173, 1179, 1185, 1223], "expos": [0, 71, 291, 413, 547, 556, 1105, 1110, 1114, 1183, 1187, 1196, 1198, 1216, 1219, 1221, 1223], "expr": [1182, 1237], "express": [0, 7, 49, 71, 158, 397, 399, 497, 576, 664, 688, 745, 824, 1105, 1107, 1110, 1114, 1117, 1119, 1121, 1122, 1123, 1131, 1133, 1135, 1175, 1182, 1185, 1186, 1187, 1189, 1190, 1191, 1193, 1195, 1196, 1199, 1200, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1221, 1225, 1227, 1230, 1234, 1237, 1239, 1247, 1248], "expt": 0, "ext": 1119, "extend": [0, 71, 701, 912, 921, 922, 939, 943, 1079, 1080, 1081, 1082, 1105, 1107, 1110, 1122, 1129, 1135, 1188, 1191, 1197, 1199, 1208, 1214, 1217, 1233, 1247], "extendeddtyp": [40, 1194], "extens": [42, 552, 746, 747, 896, 922, 1110, 1152, 1160, 1178, 1185, 1188, 1197, 1202, 1214, 1216, 1217, 1218, 1224, 1236], "extent": 912, "extern": [17, 37, 38, 67, 68, 69, 70, 546, 1110, 1121, 1122, 1152, 1176, 1185, 1187, 1189, 1199, 1223, 1232, 1235, 1249], "external_arrai": 37, "extra": [0, 7, 127, 195, 464, 468, 490, 496, 552, 579, 658, 705, 725, 741, 777, 811, 812, 824, 914, 965, 1101, 1107, 1133, 1134, 1136, 1173, 1179, 1182, 1187, 1193, 1196, 1199, 1210, 1212, 1216, 1219, 1223, 1227, 1237, 1242, 1243, 1244], "extract": [9, 91, 106, 197, 237, 283, 459, 481, 706, 773, 1102, 1135, 1145, 1183, 1203, 1212, 1239, 1247], "extract_head": [1208, 1233], "extrapol": 587, "extrem": [1199, 1206, 1234], "extrud": 906, "ey": [623, 753, 1107, 1205, 1210, 1227, 1242], "ezd": 1186, "f": [1, 9, 13, 14, 15, 18, 19, 34, 49, 50, 55, 56, 57, 123, 127, 132, 145, 148, 149, 157, 169, 209, 262, 280, 295, 332, 333, 340, 341, 397, 413, 419, 465, 510, 524, 532, 559, 606, 631, 681, 683, 699, 703, 705, 724, 728, 729, 734, 746, 786, 824, 830, 840, 841, 842, 845, 846, 849, 850, 851, 854, 855, 856, 857, 860, 862, 863, 864, 865, 866, 868, 870, 871, 873, 875, 876, 877, 879, 880, 896, 919, 921, 922, 923, 1070, 1075, 1088, 1089, 1100, 1101, 1102, 1104, 1107, 1110, 1111, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1127, 1130, 1131, 1133, 1135, 1136, 1151, 1152, 1153, 1158, 1159, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1190, 1191, 1192, 1193, 1195, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1247, 1248], "f0": [494, 1153], "f1": [7, 494, 824, 1153, 1186, 1188, 1206, 1208, 1211, 1233, 1234], "f16": [0, 1195], "f16type": 0, "f1_better": 1188, "f1_transpos": 1188, "f1a46f": 1182, "f2": [7, 494, 824, 1153, 1186, 1188, 1206, 1208, 1211, 1233, 1234, 1248], "f2e2c413b437": 1199, "f2f2f2f2f2f2f2f2f2f2f4f2f4f8c8c16f2f2c8": 1248, "f3": [1186, 1206, 1211, 1234], "f32": [0, 159, 340, 1102, 1107, 1122, 1131, 1182, 1186, 1188, 1195, 1200, 1202, 1204, 1206, 1211, 1212, 1214, 1221, 1227, 1234, 1236, 1237, 1238, 1239], "f32type": 0, "f4": [447, 1186, 1188, 1206, 1211, 1234], "f4_better": 1188, "f4_transpos": 1188, "f4f4f4f4f4f4f4f4f4f4f4f4f4f8c8c16f4f4c8": 1248, "f5": [1186, 1188, 1211], "f510dde58e22": 1206, "f5_transpos": 1188, "f6": 1211, "f64": [0, 120, 1107, 1195], "f64type": 0, "f7": 1211, "f77_src": 929, "f8": [447, 494, 1211], "f811": 1107, "f8f8f8f8f8f8f8f8f8f8f8f8f8f8c16c16f8f8c16": 1248, "f9": 1211, "f_": [18, 1206, 1234], "f_0": 1153, "f_1": 1153, "f_bwd": [15, 1152, 1190, 1200, 1206, 1227, 1234], "f_bwd2": [1206, 1234], "f_check": 1114, "f_checkpoint": [1206, 1234], "f_checkpoint_grad": [1206, 1234], "f_contract": 1244, "f_contract_2": 1244, "f_elementwis": 1244, "f_elementwise_shard": 1244, "f_ex": 1201, "f_flat": 1107, "f_fwd": [15, 1152, 1190, 1200, 1227], "f_grad_bad": [1206, 1234], "f_grad_bad2": [1206, 1234], "f_host": [1208, 1233], "f_inv": 1204, "f_jaxpr1": 1107, "f_jaxpr2": 1107, "f_jit": [1107, 1122, 1131], "f_jit_correct": [1131, 1238], "f_jvp": [14, 333, 1107, 1190, 1200, 1208, 1227, 1233], "f_k": 1153, "f_lin": 1107, "f_lin_flat": 1107, "f_nre": 1107, "f_out_uk": 1107, "f_part1": 1211, "f_part2": 1211, "f_partial": [1208, 1233, 1247], "f_primit": 1190, "f_shmap": 1211, "f_shmapped_ref": 1211, "f_sp": 1159, "f_transpos": 332, "f_vjp": [1100, 1107, 1190, 1200, 1205, 1206, 1227, 1234], "f_vjp_checkpoint": [1206, 1234], "f_vjp_flat": 1107, "face": [1107, 1185, 1195, 1207], "facil": 1136, "facilit": [120, 1110], "fact": [69, 485, 1105, 1107, 1117, 1122, 1130, 1131, 1182, 1185, 1186, 1188, 1189, 1190, 1194, 1201, 1202, 1205, 1211, 1212, 1214, 1218, 1219, 1227, 1232, 1236, 1237, 1238, 1248], "factor": [7, 121, 195, 196, 197, 198, 199, 248, 249, 256, 364, 369, 614, 634, 637, 758, 865, 888, 889, 890, 902, 903, 904, 910, 955, 957, 965, 1007, 1110, 1189, 1194, 1211, 1219], "factori": [953, 961], "faddeeva": [935, 936], "fail": [0, 9, 55, 56, 57, 245, 246, 645, 913, 1110, 1114, 1116, 1119, 1121, 1124, 1127, 1131, 1152, 1185, 1186, 1189, 1193, 1195, 1199, 1208, 1212, 1223, 1224, 1233, 1247], "fail_messag": 74, "failedcheckerror": [53, 55, 57, 62], "failur": [56, 82, 84, 245, 1110, 1112, 1152, 1190], "fair": [1122, 1131, 1238], "fairli": [1107, 1183, 1186, 1189, 1216, 1219], "faith": 921, "fake": [1152, 1199], "fall": [16, 566, 567, 568, 1030, 1031, 1107, 1110, 1130, 1185, 1188, 1190, 1194, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1210, 1211, 1212, 1213, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "fallback": [73, 1135], "fals": [0, 5, 6, 7, 16, 17, 19, 37, 38, 40, 44, 55, 57, 67, 68, 69, 70, 72, 73, 78, 80, 81, 82, 91, 93, 110, 111, 114, 115, 119, 122, 123, 125, 131, 144, 145, 148, 149, 150, 151, 157, 158, 159, 160, 165, 191, 198, 203, 204, 205, 206, 207, 208, 209, 214, 229, 232, 238, 245, 247, 251, 252, 253, 254, 255, 256, 280, 295, 296, 297, 298, 299, 300, 301, 302, 331, 333, 340, 345, 369, 390, 391, 392, 393, 394, 395, 410, 413, 414, 415, 416, 418, 429, 443, 447, 459, 471, 472, 477, 480, 487, 494, 496, 497, 526, 557, 565, 566, 568, 576, 577, 588, 590, 593, 594, 595, 596, 597, 598, 599, 601, 602, 604, 614, 624, 626, 631, 633, 637, 643, 644, 645, 652, 653, 654, 655, 656, 660, 662, 663, 664, 665, 666, 672, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 705, 706, 710, 711, 713, 720, 722, 723, 724, 741, 745, 749, 750, 751, 752, 762, 769, 771, 773, 792, 799, 809, 810, 820, 821, 822, 823, 825, 834, 836, 837, 847, 869, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 904, 907, 908, 909, 910, 919, 921, 922, 923, 942, 955, 1029, 1032, 1033, 1049, 1067, 1068, 1083, 1084, 1099, 1100, 1102, 1104, 1107, 1110, 1115, 1119, 1121, 1122, 1124, 1125, 1145, 1158, 1176, 1180, 1182, 1184, 1185, 1186, 1193, 1194, 1199, 1201, 1202, 1203, 1205, 1206, 1208, 1211, 1212, 1214, 1226, 1230, 1233, 1234, 1236, 1237], "false_bodi": [1182, 1237], "false_comp": 1107, "false_const": 1107, "false_fn": [1107, 1117, 1232], "false_fun": [191, 1107, 1199], "false_jaxpr": 1107, "falsei": [1180, 1193], "familar": 1239, "famili": 1207, "familiar": [0, 296, 297, 298, 299, 300, 301, 1122, 1126, 1130, 1159, 1182, 1186, 1188, 1192, 1198, 1200, 1201, 1205, 1210, 1211, 1212, 1214, 1216, 1227, 1233, 1237, 1242], "famililar": 1208, "fan": [681, 683, 703, 724, 1146], "fan_avg": [353, 354, 364], "fan_in": [355, 356, 357, 358, 364], "fan_out": 364, "fanci": [773, 1128], "faninconcat": 1146, "faninsum": 1146, "fanout": 1146, "faq": [30, 71, 150, 413, 419, 465, 816, 824, 1108, 1158, 1193, 1201], "far": [1107, 1122, 1130, 1133, 1135, 1136, 1185, 1193, 1195, 1201, 1206, 1212, 1216, 1218, 1227, 1234], "fare": 1189, "fashion": [496, 650, 651, 1191, 1208, 1233], "fast": [0, 508, 509, 511, 515, 516, 521, 522, 525, 882, 917, 919, 920, 923, 1110, 1123, 1137, 1189, 1196, 1205, 1208, 1210, 1227, 1233, 1246], "fast_count": [1137, 1246], "fast_f": 1204, "fastcach": 1110, "faster": [73, 157, 208, 397, 453, 489, 595, 915, 917, 920, 1081, 1105, 1106, 1110, 1128, 1130, 1131, 1136, 1152, 1184, 1210, 1212, 1219, 1238], "fastest": [26, 195, 630, 728, 734, 1130, 1131, 1166, 1173, 1201, 1205, 1227], "fastpath": 1110, "fat": 0, "fatal": [1110, 1186], "faulti": 1185, "favor": [120, 1110, 1185, 1189, 1195, 1208, 1219, 1233], "favorit": 1112, "favour": 892, "fa\u00e0": 1153, "fb": 786, "fc0ed1c14b8d": 1206, "fce65eb843c7": 1130, "fct": [1202, 1236], "fd": 567, "fdo_profil": 331, "fear": 1221, "feasibl": 1130, "feat": 1211, "featur": [28, 33, 71, 150, 195, 196, 295, 336, 824, 827, 833, 1102, 1104, 1105, 1107, 1109, 1110, 1119, 1120, 1125, 1130, 1131, 1133, 1140, 1144, 1145, 1146, 1166, 1172, 1180, 1182, 1185, 1186, 1187, 1189, 1193, 1194, 1195, 1198, 1201, 1209, 1210, 1211, 1214, 1218, 1219, 1221, 1223, 1230, 1237, 1238, 1242], "feature_group_count": 195, "feature_length": 339, "fed": [72, 73, 1136, 1188, 1205, 1227], "feed": [1133, 1134, 1188, 1227, 1243], "feedback": [331, 1104, 1112], "feedforward": 1186, "feel": [1130, 1185, 1205], "fell": 1221, "fetch": [338, 1112, 1186, 1189, 1209, 1218, 1226], "few": [0, 71, 231, 340, 576, 745, 813, 920, 1107, 1110, 1112, 1114, 1117, 1119, 1121, 1122, 1128, 1133, 1135, 1152, 1153, 1159, 1166, 1185, 1186, 1189, 1190, 1194, 1195, 1199, 1200, 1203, 1205, 1209, 1210, 1211, 1212, 1214, 1218, 1227, 1230, 1242, 1247], "fewer": [397, 411, 529, 692, 750, 751, 798, 799, 816, 824, 847, 924, 925, 926, 1186, 1190, 1193, 1211], "ff": 1186, "fft": [915, 917, 919, 920, 921, 922, 923, 1110, 1151, 1205, 1227], "fft2": [515, 1110], "fft_length": 227, "fft_type": 227, "fftconvolv": 915, "fftfreq": [524, 1110], "fftn": 516, "fftpack": 524, "fftshift": 517, "ffttype": 227, "fidel": 1110, "field": [197, 364, 447, 494, 664, 750, 804, 1104, 1107, 1110, 1119, 1135, 1145, 1182, 1185, 1237, 1247], "fig": [1195, 1207], "figsiz": [1195, 1207, 1213], "figur": [150, 1107, 1120, 1199, 1207, 1213], "file": [0, 71, 548, 645, 746, 747, 781, 825, 832, 834, 836, 886, 1110, 1112, 1115, 1119, 1122, 1125, 1128, 1178, 1180, 1185, 1189, 1193, 1197, 1199, 1202, 1203, 1209, 1219, 1222, 1223, 1236], "file1": 1112, "file2": 1112, "filenam": [746, 747, 832], "fileobj": [1208, 1233], "fill": [101, 121, 230, 231, 232, 277, 296, 297, 298, 299, 300, 301, 351, 396, 411, 526, 527, 529, 553, 554, 565, 567, 664, 672, 688, 692, 697, 735, 751, 773, 782, 798, 799, 816, 817, 912, 916, 918, 1110, 1121, 1130, 1152, 1166, 1195, 1199, 1201], "fill_diagon": 1110, "fill_or_drop": [1110, 1166], "fill_valu": [93, 230, 231, 232, 411, 529, 553, 554, 688, 692, 751, 773, 798, 799, 816, 1110, 1194, 1199, 1212], "fillvalu": [916, 918], "filt": 786, "filter": [16, 146, 147, 606, 1110, 1189, 1207], "filter_fram": 16, "filter_shap": [196, 197, 1146], "filteredstacktrac": 1130, "final": [0, 71, 97, 213, 229, 251, 289, 295, 325, 409, 521, 525, 557, 656, 702, 733, 783, 787, 903, 904, 913, 928, 1101, 1110, 1112, 1114, 1121, 1131, 1151, 1173, 1185, 1186, 1187, 1190, 1191, 1200, 1204, 1208, 1211, 1212, 1214, 1218, 1225, 1227, 1233, 1238, 1244], "final_b": [1203, 1209], "final_const": [1199, 1212, 1238], "final_step_s": 1145, "final_w": [1203, 1209], "find": [9, 120, 150, 209, 411, 507, 588, 633, 637, 691, 707, 708, 713, 722, 748, 751, 752, 798, 799, 892, 893, 912, 1029, 1109, 1110, 1122, 1127, 1130, 1131, 1133, 1135, 1136, 1158, 1185, 1187, 1194, 1195, 1200, 1208, 1210, 1214, 1223, 1227, 1228, 1229, 1233, 1238, 1240, 1241, 1242, 1246], "find_top_trac": [1107, 1208, 1212, 1233], "fine": [1112, 1137, 1188, 1190, 1195, 1196, 1197, 1199, 1246], "finer": [1196, 1199, 1212], "finess": 1136, "finfo": [268, 633, 691, 750], "fingerprint_before_lh": 0, "finish": [71, 150, 824, 1102, 1107, 1152, 1158, 1183, 1198, 1211, 1212, 1221, 1223], "finit": [559, 594, 672, 889, 897, 900, 905, 1110, 1122, 1205, 1210, 1230, 1242], "first": [0, 7, 13, 18, 42, 57, 68, 71, 75, 91, 128, 143, 144, 145, 148, 149, 151, 157, 158, 165, 195, 196, 213, 248, 256, 262, 271, 272, 273, 279, 280, 281, 295, 312, 333, 339, 340, 390, 395, 398, 405, 411, 424, 429, 430, 440, 443, 446, 452, 454, 464, 473, 485, 486, 490, 493, 494, 515, 516, 529, 531, 538, 542, 543, 552, 559, 565, 566, 567, 568, 570, 572, 580, 588, 603, 607, 630, 634, 637, 640, 661, 664, 667, 681, 683, 692, 699, 701, 703, 706, 711, 712, 717, 718, 720, 722, 724, 725, 728, 734, 739, 742, 748, 749, 751, 763, 768, 771, 772, 774, 777, 779, 798, 799, 809, 811, 814, 815, 816, 824, 841, 888, 897, 911, 912, 915, 916, 917, 918, 920, 922, 948, 950, 956, 957, 1048, 1068, 1070, 1084, 1085, 1088, 1089, 1099, 1100, 1101, 1102, 1104, 1107, 1110, 1112, 1119, 1120, 1122, 1124, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1151, 1152, 1153, 1173, 1175, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1195, 1197, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247], "first_finite_differ": [1210, 1242], "first_param": 1211, "fist": 1199, "fit": [218, 219, 711, 733, 736, 922, 1107, 1109, 1135, 1137, 1158, 1159, 1180, 1191, 1195, 1216, 1218, 1221, 1246], "fit_logreg": 1159, "fit_logreg_sp": 1159, "five": 1110, "fix": [34, 229, 240, 295, 325, 339, 494, 750, 912, 914, 928, 1105, 1107, 1112, 1119, 1120, 1121, 1122, 1124, 1133, 1137, 1182, 1184, 1188, 1189, 1192, 1199, 1200, 1201, 1205, 1216, 1227, 1237, 1246, 1247], "fix_import": [645, 746], "fixed_point": [1190, 1200, 1227], "fixed_point_fwd": [1200, 1227], "fixed_point_rev": [1200, 1227], "fl": [615, 619, 620, 633, 636], "flag": [7, 47, 48, 331, 443, 494, 838, 858, 888, 916, 918, 1105, 1110, 1112, 1119, 1121, 1122, 1136, 1152, 1173, 1180, 1184, 1185, 1187, 1193, 1194, 1199, 1201, 1208, 1223, 1225, 1226, 1233, 1248], "flanneri": [430, 562, 563, 628], "flat": [446, 495, 723, 725, 729, 733, 805, 1048, 1076, 1107, 1135, 1204, 1224], "flat_arg": [1208, 1233], "flat_cont": 1135, "flat_fun": [1107, 1131, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "flat_result_av": [1208, 1233], "flat_shape_dtyp": [1208, 1233], "flat_val": 1107, "flatbuff": 1110, "flatten": [143, 145, 197, 392, 393, 396, 407, 408, 409, 410, 459, 461, 471, 475, 476, 480, 484, 495, 526, 529, 565, 567, 580, 588, 595, 660, 662, 663, 666, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 699, 700, 702, 703, 722, 723, 724, 728, 729, 733, 739, 752, 762, 769, 773, 774, 798, 799, 804, 805, 810, 811, 1048, 1069, 1070, 1071, 1072, 1074, 1079, 1081, 1082, 1084, 1085, 1086, 1088, 1090, 1091, 1093, 1110, 1135, 1145, 1182, 1186, 1191, 1204, 1219, 1224, 1237, 1247], "flatten_ax": [1208, 1233, 1247], "flatten_fun": [1107, 1208, 1233], "flatten_fun_for_vmap": 1247, "flatten_fun_nokwarg": [1208, 1233], "flatten_fun_nokwargs2": [1208, 1233], "flatten_func": [1079, 1081], "flatten_mycontain": 1135, "flatten_pytre": 145, "flatten_up_to": 1247, "flatten_util": [145, 1110, 1129], "flatten_with_kei": 1081, "flatten_with_keys_mykeypathcontain": 1135, "flattenandcast": 1203, "flavor": [67, 68, 69, 1185, 1195, 1232], "flaw": 1186, "flax": [16, 1108, 1109, 1125, 1126, 1144, 1146], "flaxform": 1184, "fledg": 1185, "flexibl": [494, 496, 1110, 1122, 1131, 1135, 1145, 1146, 1180, 1182, 1185, 1206, 1207, 1212, 1214, 1219, 1232, 1234, 1237, 1247], "flip": [198, 532, 533, 1205, 1227], "float": [0, 21, 39, 57, 91, 106, 107, 120, 138, 144, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 189, 190, 192, 196, 197, 200, 201, 202, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 288, 289, 290, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 332, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 391, 399, 412, 416, 417, 418, 422, 426, 427, 428, 433, 443, 447, 450, 453, 458, 460, 461, 477, 492, 507, 510, 524, 527, 528, 538, 545, 547, 549, 552, 557, 565, 567, 569, 572, 573, 575, 578, 587, 590, 593, 606, 609, 615, 616, 618, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 638, 639, 640, 642, 643, 644, 650, 651, 656, 658, 662, 663, 664, 672, 679, 681, 683, 684, 686, 691, 703, 704, 710, 711, 713, 724, 730, 736, 743, 744, 750, 769, 781, 782, 787, 800, 801, 802, 803, 807, 808, 810, 811, 812, 814, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 886, 887, 889, 891, 893, 896, 902, 903, 904, 909, 914, 919, 920, 921, 922, 923, 924, 925, 926, 930, 933, 937, 938, 942, 943, 948, 949, 950, 951, 952, 953, 955, 959, 960, 963, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1034, 1035, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1062, 1063, 1064, 1065, 1097, 1107, 1110, 1119, 1122, 1145, 1179, 1184, 1191, 1193, 1199, 1200, 1202, 1208, 1212, 1214, 1216, 1221, 1227, 1233, 1236, 1239, 1248], "float0": [144, 149, 1099], "float16": [0, 538, 593, 1110, 1195, 1248], "float32": [0, 7, 13, 18, 26, 29, 50, 63, 80, 119, 125, 143, 145, 217, 218, 219, 268, 317, 332, 333, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 371, 372, 447, 527, 538, 593, 665, 688, 691, 696, 725, 759, 839, 841, 842, 845, 846, 849, 851, 852, 854, 855, 857, 860, 861, 862, 863, 865, 866, 867, 868, 873, 875, 876, 877, 878, 879, 894, 953, 956, 957, 959, 960, 964, 1101, 1102, 1104, 1106, 1107, 1110, 1121, 1122, 1130, 1131, 1132, 1133, 1135, 1136, 1152, 1158, 1159, 1166, 1173, 1179, 1182, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1216, 1219, 1221, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1244, 1248], "float64": [63, 64, 122, 332, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 394, 429, 447, 491, 498, 527, 537, 538, 593, 662, 663, 678, 679, 681, 683, 684, 686, 697, 703, 707, 724, 769, 810, 817, 839, 841, 842, 845, 846, 849, 851, 852, 854, 855, 857, 860, 861, 862, 863, 865, 866, 867, 868, 873, 875, 876, 877, 878, 879, 894, 953, 956, 957, 959, 960, 964, 1107, 1110, 1166, 1170, 1185, 1195, 1199, 1237], "float8": 1110, "float8_": 593, "float_": [371, 1247], "float_check": [57, 1114, 1116], "float_kind": 750, "floatingpointerror": [1115, 1116, 1199], "floatmod": 750, "floor": [489, 541, 1110], "floor_divid": [668, 732, 1199], "floordiv": 1110, "flop": [7, 50, 1104, 1110, 1188, 1200, 1205, 1206, 1211, 1221, 1227, 1234], "flota64": 1179, "flow": [7, 13, 49, 262, 317, 1115, 1121, 1122, 1131, 1152, 1182, 1183, 1185, 1186, 1190, 1191, 1193, 1200, 1202, 1206, 1212, 1216, 1224, 1227, 1234, 1236, 1237, 1238], "flto": 0, "fluid": 559, "flush": [268, 691, 1208, 1233], "fmt": [19, 1117], "fmt_arg": 55, "fmt_kwarg": 55, "fn": [165, 549, 747, 1211], "fname_context": 1131, "fno": 0, "focu": [1122, 1134, 1186, 1188, 1189, 1195, 1204, 1211, 1243], "focus": [1113, 1125, 1130, 1185, 1186, 1189, 1198, 1203, 1209, 1219], "foil": [7, 1206, 1234], "fold": [49, 150, 824, 853, 1104, 1110, 1158, 1187, 1193], "fold_in": [136, 137, 141, 142, 838, 858, 874, 1173, 1194], "folder": 1135, "follow": [0, 7, 9, 13, 17, 18, 35, 47, 48, 146, 147, 150, 159, 160, 174, 194, 198, 209, 213, 214, 216, 280, 310, 319, 339, 362, 397, 413, 429, 452, 464, 468, 519, 527, 619, 620, 622, 635, 637, 681, 683, 701, 703, 720, 724, 740, 750, 771, 773, 824, 861, 912, 914, 919, 927, 928, 1048, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1127, 1130, 1131, 1132, 1134, 1136, 1151, 1152, 1159, 1166, 1170, 1179, 1180, 1182, 1183, 1187, 1188, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1202, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1226, 1231, 1233, 1236, 1237, 1243, 1244, 1247, 1248], "fontsiz": 1195, "foo": [7, 1101, 1107, 1134, 1135, 1184, 1191, 1200, 1204, 1206, 1227, 1234, 1243, 1247], "foot": [1131, 1186, 1238], "footgun": [1110, 1186], "footnot": 1190, "footprint": [1117, 1124, 1219], "footstep": 1186, "for_loop": 1219, "foral": 1195, "forbid": [1110, 1196], "forbidden": 503, "forc": [0, 496, 746, 1106, 1110, 1117, 1119, 1128, 1133, 1184, 1185, 1206, 1227, 1234], "force_jupyt": [1206, 1234], "forev": [1134, 1243], "forg": 1127, "forget": 1213, "fori": 1182, "fori_loop": [1122, 1182, 1186, 1189, 1211, 1219, 1237], "fork": [1112, 1119, 1191, 1199, 1209], "form": [9, 31, 32, 38, 69, 72, 77, 88, 89, 105, 145, 194, 195, 196, 208, 213, 246, 248, 256, 262, 285, 419, 440, 446, 454, 472, 485, 493, 496, 519, 562, 563, 568, 570, 605, 606, 701, 707, 708, 709, 710, 711, 712, 713, 714, 715, 725, 735, 741, 815, 816, 843, 853, 897, 903, 905, 906, 914, 957, 965, 1102, 1107, 1110, 1132, 1137, 1145, 1152, 1158, 1173, 1182, 1185, 1186, 1188, 1190, 1191, 1199, 1202, 1205, 1211, 1214, 1216, 1227, 1231, 1236, 1237, 1246], "formal": 9, "format": [19, 38, 55, 80, 86, 88, 92, 94, 95, 96, 103, 105, 107, 109, 112, 113, 116, 117, 118, 121, 194, 339, 435, 438, 494, 552, 610, 737, 746, 747, 750, 831, 904, 1110, 1114, 1117, 1119, 1120, 1130, 1159, 1173, 1187, 1189, 1190, 1199, 1200, 1202, 1203, 1205, 1208, 1209, 1212, 1213, 1219, 1224, 1227, 1233, 1236, 1247], "format_shape_dtype_str": 1110, "formatt": [558, 750], "former": [160, 774, 919, 1119, 1188, 1191], "formul": 345, "formula": [501, 559, 935, 1107, 1153], "fornberg": 559, "forth": [9, 809], "forthcom": 1184, "fortran": [413, 419, 465, 634, 728, 729, 734], "fortun": [1122, 1131, 1132, 1231, 1238], "forty_two_subkei": [1134, 1243], "forward": [7, 13, 15, 148, 151, 198, 295, 317, 332, 333, 496, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 559, 750, 882, 883, 884, 885, 1110, 1114, 1117, 1123, 1127, 1130, 1133, 1135, 1136, 1137, 1152, 1184, 1185, 1186, 1189, 1190, 1194, 1196, 1206, 1210, 1211, 1223, 1232, 1234, 1242, 1246, 1247], "found": [0, 431, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 741, 748, 912, 926, 1110, 1122, 1128, 1130, 1165, 1185, 1186, 1192, 1193, 1202, 1204, 1208, 1212, 1223, 1233, 1236, 1247], "fountain": 1199, "four": [251, 681, 683, 703, 724, 1110, 1195, 1201], "fourier": [508, 509, 510, 511, 514, 515, 516, 519, 521, 522, 524, 525, 915, 917, 919, 920, 921, 922, 923, 1151], "fp": [587, 1130], "fp8": 399, "fpic": 0, "frac": [245, 247, 260, 307, 343, 345, 346, 347, 364, 368, 375, 376, 377, 378, 380, 381, 383, 467, 712, 781, 845, 852, 860, 862, 863, 865, 866, 870, 871, 875, 876, 879, 886, 903, 930, 931, 938, 939, 941, 944, 945, 947, 948, 950, 953, 959, 961, 964, 965, 1130, 1133, 1200, 1227], "fraction": [122, 198, 669, 750, 791, 1110], "fragment": [645, 1110, 1124, 1193], "frame": [16, 1110, 1117, 1121, 1130, 1131, 1185, 1190, 1199, 1208, 1212, 1233, 1238], "framework": [1112, 1119, 1127, 1133, 1134, 1152, 1195, 1196, 1214, 1216, 1227, 1243, 1248], "francois": 894, "frechet": 895, "fredrik": 933, "free": [208, 820, 821, 822, 823, 837, 926, 1107, 1130, 1131, 1135, 1182, 1183, 1184, 1189, 1204, 1208, 1211, 1214, 1219, 1233, 1237, 1238, 1243, 1244, 1247], "freedman": 567, "freedom": [150, 684, 686, 769, 810, 846, 852, 875, 1049, 1110, 1131, 1158, 1190, 1205, 1227, 1238, 1243], "freeli": [1135, 1196, 1205, 1227], "freevar": 1110, "freq_axi": 921, "frequenc": [430, 472, 510, 512, 514, 515, 516, 519, 524, 919, 921, 922, 923], "frequent": [861, 1108, 1185, 1189], "fresh": [157, 1119, 1183, 1244], "freshli": [650, 651, 652, 653, 654, 655, 658], "friendli": [120, 291, 1112, 1135, 1152, 1189, 1195, 1205, 1227, 1247], "friendlier": 1110, "fro": [615, 626, 631], "frobeniu": [615, 909], "from": [0, 7, 9, 16, 18, 33, 37, 38, 40, 43, 49, 50, 55, 56, 57, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 80, 91, 92, 100, 101, 106, 107, 109, 113, 119, 120, 123, 125, 146, 147, 150, 169, 174, 181, 189, 196, 197, 200, 209, 229, 231, 232, 251, 277, 278, 279, 282, 288, 289, 296, 297, 298, 299, 300, 301, 303, 316, 325, 331, 332, 338, 339, 364, 390, 394, 395, 399, 409, 419, 429, 441, 447, 452, 459, 478, 479, 484, 485, 489, 490, 494, 496, 505, 514, 525, 531, 538, 546, 547, 551, 552, 556, 557, 559, 567, 579, 580, 604, 605, 619, 622, 644, 645, 656, 658, 664, 701, 702, 707, 708, 710, 711, 713, 715, 717, 718, 719, 720, 722, 726, 727, 729, 734, 735, 736, 742, 746, 747, 749, 758, 767, 770, 771, 773, 774, 777, 779, 786, 799, 804, 805, 808, 809, 811, 813, 816, 820, 821, 822, 823, 824, 830, 837, 839, 844, 847, 850, 853, 854, 855, 864, 867, 871, 874, 880, 887, 892, 896, 906, 909, 912, 914, 915, 917, 921, 922, 924, 925, 926, 927, 959, 960, 1007, 1014, 1070, 1073, 1074, 1075, 1088, 1092, 1093, 1096, 1100, 1101, 1102, 1104, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1128, 1131, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1148, 1151, 1152, 1153, 1158, 1159, 1166, 1169, 1173, 1175, 1177, 1179, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "from_": [447, 927], "from_ansi": [1206, 1234], "from_callback": 1180, "from_dict_of_list": 1195, "from_dlpack": 1110, "from_gda": 1110, "from_it": 1107, "from_iter": 1107, "frombuff": [552, 1110], "fromdens": [80, 119, 123, 125, 1159], "fromfunct": 1110, "frompyfunc": 1110, "fromstr": 1110, "front": [179, 725, 786, 1107, 1110, 1131, 1190, 1238], "frontend": [1167, 1187, 1216], "frontend_attribut": 0, "frostig": 1194, "froystig": 1187, "frozen": [1202, 1236], "frozenset": [12, 53, 54, 57, 58, 59, 60, 61, 62, 813, 1211], "frustrat": [1185, 1189], "fry": [141, 1173, 1194, 1199, 1243], "fst": 1107, "fsu": 929, "ft": [1202, 1236], "fulfil": 876, "full": [1, 26, 231, 232, 245, 246, 251, 252, 279, 332, 351, 360, 365, 413, 419, 452, 464, 465, 468, 483, 554, 558, 624, 634, 636, 700, 711, 719, 750, 785, 789, 904, 915, 916, 917, 918, 920, 926, 1109, 1110, 1119, 1122, 1127, 1133, 1152, 1158, 1184, 1186, 1189, 1193, 1194, 1195, 1199, 1200, 1203, 1205, 1209, 1210, 1211, 1212, 1214, 1219, 1223, 1227, 1232, 1242, 1244], "full_low": [1107, 1131, 1208, 1212, 1233], "full_matric": [252, 254, 637, 910], "full_rais": [1107, 1131, 1199, 1208, 1212, 1233, 1238], "full_random_st": [1134, 1243], "fulli": [78, 339, 452, 664, 1104, 1110, 1131, 1144, 1145, 1146, 1148, 1175, 1180, 1185, 1186, 1188, 1194, 1203, 1206, 1209, 1219, 1234, 1238, 1244], "fun": [7, 9, 13, 14, 15, 50, 57, 71, 119, 125, 130, 131, 144, 145, 148, 149, 150, 151, 332, 333, 340, 341, 824, 913, 914, 1099, 1100, 1101, 1102, 1110, 1117, 1131, 1146, 1151, 1153, 1158, 1186, 1199, 1200, 1202, 1204, 1205, 1206, 1208, 1210, 1212, 1227, 1233, 1234, 1236, 1238, 1242, 1247], "fun_kwarg": 1146, "fun_nam": [1199, 1212], "fun_vjp": [1205, 1227], "fun_with_nested_calls_2": 1107, "func": [90, 97, 98, 100, 209, 298, 398, 551, 792, 830, 896, 1075, 1104, 1110, 1121, 1122, 1185, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "func1": [1120, 1182, 1237], "func10": [1182, 1237], "func11": [1182, 1199, 1237], "func12": [1182, 1237], "func13": 1182, "func1d": 397, "func2": [1120, 1182, 1237], "func3": [1182, 1237], "func4": [1182, 1237], "func7": [1182, 1237], "func8": [1182, 1237], "func_wrapp": [1202, 1236], "funclist": 705, "function": [1, 7, 9, 13, 14, 15, 17, 18, 19, 25, 30, 31, 32, 34, 38, 44, 49, 50, 55, 56, 57, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 82, 84, 90, 122, 123, 127, 128, 130, 131, 132, 137, 141, 142, 144, 145, 148, 149, 150, 151, 157, 158, 165, 171, 172, 191, 192, 194, 195, 196, 198, 208, 209, 213, 215, 221, 222, 223, 229, 235, 236, 257, 260, 262, 268, 271, 272, 273, 277, 278, 279, 281, 292, 295, 298, 299, 300, 302, 317, 319, 325, 326, 328, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 362, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 411, 413, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 452, 464, 465, 468, 469, 471, 481, 485, 489, 493, 496, 501, 507, 508, 509, 511, 512, 514, 515, 516, 517, 519, 521, 522, 525, 526, 527, 529, 531, 532, 533, 538, 541, 544, 548, 549, 550, 551, 552, 559, 562, 563, 564, 565, 566, 567, 568, 570, 572, 587, 605, 606, 615, 624, 630, 631, 646, 647, 648, 650, 651, 657, 664, 665, 668, 670, 679, 681, 683, 684, 688, 691, 692, 696, 701, 705, 710, 713, 715, 722, 728, 732, 734, 740, 741, 742, 750, 751, 754, 758, 760, 764, 767, 772, 773, 774, 775, 776, 778, 780, 792, 798, 799, 805, 811, 813, 815, 816, 820, 821, 822, 823, 824, 830, 834, 836, 837, 838, 840, 841, 842, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 868, 870, 871, 873, 875, 876, 877, 879, 880, 888, 891, 896, 903, 904, 909, 912, 913, 914, 919, 921, 922, 923, 924, 925, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1075, 1076, 1079, 1080, 1081, 1082, 1084, 1086, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1102, 1103, 1105, 1109, 1110, 1111, 1115, 1117, 1119, 1120, 1121, 1123, 1126, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1145, 1146, 1150, 1151, 1153, 1154, 1158, 1159, 1166, 1169, 1170, 1171, 1173, 1175, 1176, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1201, 1202, 1206, 1207, 1208, 1211, 1212, 1214, 1218, 1219, 1221, 1223, 1231, 1232, 1233, 1234, 1236, 1237, 1239, 1242, 1243, 1244, 1246], "functionaliz": 56, "functool": [0, 6, 7, 50, 130, 131, 150, 159, 160, 169, 630, 813, 824, 830, 1075, 1107, 1110, 1121, 1122, 1131, 1136, 1152, 1159, 1184, 1186, 1192, 1200, 1201, 1202, 1204, 1206, 1208, 1211, 1212, 1213, 1214, 1218, 1227, 1233, 1234, 1236, 1238, 1244], "fundament": [494, 1123, 1130, 1185, 1189, 1190, 1195, 1200, 1211, 1212, 1227, 1230, 1238, 1239], "funzional": 1199, "further": [71, 295, 496, 681, 683, 703, 705, 724, 774, 787, 1048, 1112, 1131, 1136, 1152, 1185, 1189, 1190, 1191, 1193, 1195, 1197, 1202, 1208, 1210, 1211, 1233, 1236, 1238, 1242, 1243], "furthermor": [71, 443, 445, 664, 1117, 1152, 1183, 1186, 1198, 1204, 1216, 1219, 1221, 1236], "fuse": [150, 196, 1186, 1188, 1193, 1212, 1216, 1218, 1219, 1243], "fused_comput": 0, "fused_matmul": 1216, "fused_multipli": 0, "fusion": [0, 1117, 1125, 1186], "futur": [18, 47, 48, 71, 150, 230, 232, 245, 296, 297, 298, 299, 300, 301, 443, 485, 567, 624, 924, 925, 926, 1106, 1107, 1110, 1125, 1130, 1135, 1154, 1158, 1179, 1183, 1184, 1185, 1186, 1189, 1190, 1194, 1196, 1199, 1205, 1208, 1214, 1216, 1227, 1233, 1247], "futurewarn": [485, 624, 1110, 1135, 1247], "fvisibl": 0, "fwd": [9, 1114, 1192, 1199, 1206, 1234], "fweight": 472, "g": [0, 2, 7, 9, 13, 15, 19, 25, 33, 38, 49, 71, 72, 73, 117, 118, 145, 150, 157, 158, 195, 208, 209, 232, 271, 272, 273, 279, 281, 293, 332, 338, 340, 416, 418, 493, 498, 527, 553, 570, 615, 619, 620, 631, 633, 636, 688, 697, 699, 707, 722, 747, 773, 774, 780, 813, 815, 817, 837, 838, 847, 858, 935, 936, 1007, 1029, 1049, 1075, 1102, 1104, 1106, 1107, 1110, 1111, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1124, 1130, 1131, 1135, 1136, 1137, 1145, 1152, 1153, 1158, 1159, 1169, 1173, 1175, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1196, 1198, 1199, 1200, 1202, 1204, 1205, 1206, 1208, 1211, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1239, 1246, 1247], "g_": [1206, 1234], "g_aot": 1104, "g_info": 0, "g_inner_jit": [1131, 1238], "g_inner_jitted_lambda": [1131, 1238], "g_inner_jitted_norm": [1131, 1238], "g_inner_jitted_parti": [1131, 1238], "g_jit": [1104, 1131], "g_jit_correct": [1131, 1238], "g_jit_decor": [1131, 1238], "g_vjp": [1206, 1234], "gain": [889, 897, 900, 905, 1186, 1199, 1227], "gamma": [235, 236, 244, 282, 861, 930, 931, 933, 942, 944, 945, 946, 958, 961, 1110, 1145], "gamma_init": 1146, "gammaln": 1189, "gap": [527, 1199], "garbag": [1107, 1110, 1221], "gate": 346, "gather": [0, 78, 93, 157, 277, 278, 1104, 1151, 1166, 1185, 1186, 1199, 1216], "gather_p": 1159, "gatherdimensionnumb": [93, 232, 1166], "gatherscattermod": [93, 232, 296, 297, 298, 299, 300, 301, 688, 774, 820, 821, 822, 823, 1166], "gauss": [1205, 1227], "gaussian": [345, 567, 959, 1007, 1010, 1207], "gaussian_kd": [1110, 1189], "gave": 1190, "gc": [1110, 1222], "gcc": 1110, "gcloud": 1223, "gda": [76, 77], "gda1": 1180, "gda2": 1180, "gda_seri": 1110, "ge": [366, 952, 963, 1182, 1237], "gelu": 1216, "gemm": 1125, "gemm_tp": 1211, "gen": [127, 130, 131, 907, 1186, 1199, 1208, 1212, 1233, 1238], "gen_static_arg": [127, 130, 131, 1199, 1208, 1212, 1233, 1238], "gender": 494, "gene": 896, "gener": [0, 7, 33, 47, 57, 70, 71, 82, 84, 88, 105, 120, 122, 127, 130, 145, 147, 195, 196, 212, 213, 246, 285, 291, 292, 302, 303, 331, 333, 339, 342, 364, 399, 409, 410, 429, 430, 452, 468, 493, 514, 546, 557, 559, 567, 570, 621, 633, 634, 644, 645, 656, 665, 696, 702, 725, 809, 813, 815, 828, 829, 830, 834, 836, 838, 847, 855, 858, 892, 907, 914, 919, 920, 921, 922, 923, 924, 929, 941, 958, 1007, 1102, 1103, 1104, 1105, 1107, 1110, 1112, 1114, 1116, 1119, 1121, 1122, 1123, 1124, 1131, 1132, 1134, 1135, 1136, 1144, 1145, 1146, 1151, 1152, 1159, 1166, 1169, 1170, 1173, 1178, 1180, 1182, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1237, 1238, 1239, 1242, 1243, 1247, 1248], "generalconv": 1146, "generalconvtranspos": 1146, "generalized_norm": 1110, "generatortyp": 1199, "genexpr": 1247, "gennorm": 1110, "geometr": [557, 809], "geometri": [1205, 1230], "geomspac": 1110, "geophys": [430, 559, 562, 563, 606], "geq": [233, 941, 944, 945], "gesdd": 910, "get": [0, 19, 57, 77, 150, 513, 519, 521, 526, 527, 538, 556, 557, 644, 656, 688, 717, 718, 750, 824, 1069, 1072, 1086, 1087, 1091, 1107, 1110, 1113, 1114, 1116, 1117, 1121, 1122, 1126, 1128, 1131, 1133, 1134, 1135, 1136, 1137, 1150, 1152, 1158, 1159, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1192, 1193, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1213, 1214, 1216, 1219, 1221, 1223, 1227, 1230, 1233, 1234, 1235, 1236, 1238, 1242, 1243, 1244, 1246, 1247], "get_av": 1107, "get_backend": 1107, "get_executable_and_tim": 1150, "get_fram": [1208, 1233], "get_includ": 0, "get_known": [1208, 1233], "get_neg": 1212, "get_nowait": [1208, 1233], "get_or_make_const_trac": 1107, "get_param": 1145, "get_primitive_batch": [1208, 1233], "get_primitive_transpos": [1202, 1236], "get_printopt": [416, 418, 719, 750], "get_rms_norm_registr": 0, "get_runtime_token": 1183, "get_shap": 1107, "get_stat": [1134, 1199, 1243], "get_train_batch": 1209, "get_window": [919, 921, 922, 923], "getattr": [1107, 1199, 1208, 1212, 1233], "getattrkei": [1082, 1110, 1135, 1247], "getitemkeypathentri": 1110, "gettupleel": 1107, "getvar": 1107, "gg": [305, 306], "ghcr": 1128, "gigant": 1130, "git": [1112, 1119, 1128], "github": [38, 546, 1108, 1110, 1119, 1120, 1122, 1127, 1128, 1184, 1185, 1189, 1196, 1199], "give": [0, 117, 150, 179, 182, 195, 196, 197, 198, 199, 269, 296, 297, 298, 299, 300, 301, 340, 369, 431, 484, 568, 705, 719, 725, 734, 753, 761, 799, 844, 889, 897, 900, 905, 926, 955, 1075, 1104, 1107, 1110, 1112, 1114, 1122, 1124, 1131, 1133, 1134, 1135, 1136, 1166, 1175, 1180, 1183, 1184, 1186, 1187, 1191, 1195, 1199, 1200, 1204, 1205, 1207, 1209, 1211, 1214, 1216, 1221, 1223, 1227, 1230, 1232, 1238, 1243, 1244], "given": [0, 9, 26, 30, 33, 34, 37, 68, 69, 71, 89, 96, 106, 145, 158, 159, 160, 165, 197, 229, 247, 262, 280, 295, 298, 319, 325, 336, 340, 341, 342, 369, 371, 387, 390, 391, 395, 396, 397, 399, 400, 409, 410, 412, 413, 414, 429, 441, 445, 452, 453, 454, 459, 464, 465, 468, 471, 472, 475, 476, 485, 486, 490, 493, 497, 498, 499, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 526, 531, 553, 554, 557, 559, 565, 567, 568, 570, 571, 579, 580, 587, 590, 613, 623, 624, 644, 645, 656, 657, 658, 664, 669, 675, 676, 681, 682, 683, 685, 697, 698, 699, 703, 705, 707, 711, 712, 714, 720, 722, 723, 724, 733, 739, 740, 741, 743, 744, 748, 761, 771, 773, 777, 778, 779, 780, 781, 782, 811, 813, 815, 817, 818, 824, 838, 840, 841, 842, 844, 845, 846, 847, 849, 851, 852, 854, 856, 857, 858, 860, 861, 862, 863, 865, 866, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 883, 885, 886, 887, 889, 902, 903, 911, 924, 925, 926, 934, 935, 955, 958, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1070, 1076, 1088, 1089, 1102, 1105, 1107, 1110, 1120, 1122, 1130, 1131, 1133, 1135, 1136, 1137, 1146, 1152, 1153, 1158, 1176, 1180, 1185, 1186, 1188, 1189, 1191, 1195, 1196, 1199, 1201, 1202, 1204, 1205, 1206, 1210, 1211, 1214, 1216, 1218, 1227, 1234, 1236, 1238, 1239, 1246, 1247, 1248], "glanc": [1122, 1195], "global": [71, 76, 77, 338, 339, 828, 1107, 1110, 1117, 1122, 1134, 1154, 1158, 1173, 1175, 1180, 1183, 1190, 1191, 1193, 1194, 1199, 1202, 1208, 1224, 1225, 1226, 1233, 1236, 1243, 1244, 1246, 1247, 1248], "global_arg_shap": [824, 1110], "global_array_to_host_local_arrai": [77, 1110, 1180], "global_axis_s": 1182, "global_constant_comput": [1202, 1236], "global_data": 1107, "global_inp": 1180, "global_input": [76, 77], "global_input_data": 338, "global_list": [1131, 1238], "global_loss": 1188, "global_mesh": [76, 77, 338, 1175], "global_out": [76, 77, 1180], "global_out_av": [1199, 1212, 1238], "global_output": 1180, "global_rng": [1208, 1233], "global_shap": [339, 1175], "global_step": 828, "global_weight": 0, "globaldevicearrai": [1110, 1180], "glorot": [353, 354], "gmre": 1189, "gnash": [1116, 1199], "go": [0, 1107, 1117, 1120, 1127, 1130, 1131, 1133, 1183, 1185, 1188, 1189, 1190, 1191, 1192, 1194, 1200, 1202, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1214, 1216, 1223, 1224, 1227, 1230, 1234, 1236, 1238, 1239, 1242], "goal": [1105, 1107, 1122, 1159, 1183, 1185, 1188, 1189, 1191, 1202, 1204, 1214, 1221], "goe": [0, 56, 1104, 1107, 1108, 1110, 1182, 1183, 1205, 1227, 1237], "gold": 919, "golub": [631, 699, 896], "gone": [1110, 1186, 1201], "good": [72, 567, 1108, 1112, 1121, 1125, 1128, 1131, 1145, 1183, 1184, 1189, 1190, 1193, 1195, 1198, 1199, 1200, 1201, 1205, 1206, 1208, 1211, 1213, 1214, 1216, 1219, 1227, 1233, 1234, 1238], "good_example_jit": 1199, "googl": [49, 67, 68, 69, 71, 1110, 1119, 1120, 1128, 1146, 1152, 1173, 1184, 1185, 1193, 1199, 1202, 1219, 1223], "googleapi": [1110, 1127, 1242], "gopath": 1120, "gopher": 1186, "got": [813, 1114, 1128, 1179, 1184, 1199, 1201, 1205, 1212, 1227], "gotcha": [548, 550, 1199, 1200, 1210, 1224, 1227], "gov": [930, 931, 933, 938, 939, 941, 943, 944, 945, 946, 947, 961, 962, 968], "govern": [715, 1203, 1209], "gperftool": 1120, "gpipe": 1211, "gpu": [2, 7, 28, 33, 35, 37, 38, 71, 121, 150, 256, 336, 748, 824, 827, 833, 834, 836, 926, 1102, 1103, 1104, 1107, 1109, 1110, 1112, 1117, 1122, 1123, 1126, 1128, 1130, 1131, 1152, 1158, 1166, 1173, 1180, 1193, 1195, 1196, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218, 1219, 1221, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247, 1248, 1249], "gpu_memory_fract": 1124, "gpu_plugin_cuda_vers": 1119, "gpu_test": 1119, "gpudevic": 33, "grab": [1183, 1203, 1209], "gracefulli": 1196, "grad": [0, 7, 13, 14, 15, 82, 84, 317, 340, 816, 1100, 1104, 1109, 1110, 1111, 1121, 1122, 1123, 1131, 1133, 1135, 1136, 1137, 1145, 1152, 1159, 1185, 1186, 1188, 1190, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1208, 1209, 1211, 1224, 1232, 1233, 1234, 1236, 1237, 1239, 1246, 1247], "grad_f": [1114, 1202, 1208, 1233, 1236], "grad_input": 0, "grad_output": 0, "grad_tanh": [144, 1205, 1230], "grad_tre": 1145, "grad_weight": 0, "gradfun": [1107, 1201], "gradient": [0, 13, 119, 120, 125, 144, 149, 198, 208, 209, 295, 317, 624, 816, 913, 914, 924, 925, 1099, 1110, 1114, 1115, 1116, 1130, 1136, 1137, 1145, 1192, 1199, 1202, 1206, 1208, 1210, 1211, 1233, 1235, 1236, 1239, 1242, 1246, 1247], "gradual": 1185, "grai": 1007, "grain": [1112, 1196, 1199], "grammar": [1182, 1188, 1237], "granul": 73, "granular": [1196, 1219], "graph": [0, 501, 707, 935, 1107, 1133, 1151, 1195, 1202, 1204, 1224, 1227, 1236], "graph_view": 1223, "graphic": 1123, "graphviz": 1120, "grasp": 1186, "grayscal": 1207, "great": [1109, 1183, 1186, 1187, 1190, 1199, 1203, 1205, 1209, 1210, 1211, 1219, 1223, 1227, 1230], "greater": [159, 160, 233, 234, 380, 399, 452, 492, 624, 628, 634, 702, 722, 781, 808, 886, 1107, 1110, 1117, 1122, 1127, 1196, 1232, 1242], "greater_jvp": 1107, "greater_p": 1107, "greatest": [441, 555], "greedi": [496, 497], "green": [1206, 1234, 1248], "grep": 1128, "grid": [559, 577, 664, 665, 696, 912, 1195, 1216, 1244], "grid_indic": 1216, "grid_spec": 1219, "griffin": [921, 922], "grok": 1130, "ground": [1187, 1212], "group": [157, 158, 271, 272, 273, 279, 280, 281, 411, 692, 750, 820, 821, 822, 823, 867, 1211], "grow": [1120, 1188, 1199, 1222], "growth": [1120, 1124], "gspmd": [150, 326, 1110, 1125, 1158], "gspmdshard": [1110, 1151, 1175], "gt": [1107, 1193, 1199, 1206, 1208, 1212, 1233, 1234, 1238, 1239, 1247], "guarante": [38, 232, 296, 297, 298, 299, 300, 301, 480, 688, 734, 1104, 1105, 1117, 1122, 1131, 1134, 1160, 1176, 1182, 1187, 1188, 1191, 1199, 1200, 1208, 1211, 1216, 1219, 1227, 1233, 1237, 1238, 1243], "guard": [1066, 1241, 1249], "guard_level": 1226, "guardrail": 1215, "guess": [209, 914, 924, 925, 926, 1130, 1205, 1227], "gui": 165, "guid": [707, 708, 709, 710, 711, 712, 713, 714, 715, 741, 1110, 1113, 1119, 1126, 1130, 1136, 1138, 1180, 1187, 1189, 1193, 1198, 1204, 1207, 1208, 1218, 1221, 1223, 1235, 1236], "guidanc": 1119, "guidelin": [1112, 1185], "gumbel": 1105, "gx": 0, "gz": [834, 836, 1203], "h": [0, 196, 245, 247, 251, 430, 562, 563, 566, 568, 614, 628, 631, 634, 681, 683, 699, 703, 724, 893, 894, 895, 896, 897, 898, 902, 906, 908, 1128, 1133, 1153, 1182, 1184, 1199, 1205, 1206, 1207, 1209, 1227, 1234, 1237, 1239], "h0": 1153, "h1": 1153, "h2": 1153, "h2d": 1110, "h_": 903, "h_0": 1153, "h_1": 1153, "h_2": 1153, "h_k": 1153, "h_vjp": [1206, 1234], "ha": [0, 7, 13, 29, 34, 37, 67, 69, 71, 72, 73, 76, 77, 82, 84, 120, 143, 144, 145, 146, 147, 150, 151, 157, 165, 191, 197, 255, 280, 319, 333, 338, 398, 404, 407, 408, 423, 435, 467, 472, 475, 476, 485, 487, 513, 518, 544, 549, 559, 575, 591, 592, 595, 600, 601, 604, 610, 624, 635, 668, 675, 676, 682, 685, 700, 720, 730, 732, 733, 749, 758, 768, 771, 773, 778, 779, 805, 813, 824, 837, 847, 871, 887, 897, 903, 911, 912, 919, 922, 923, 924, 925, 926, 939, 965, 1070, 1088, 1089, 1099, 1102, 1104, 1106, 1107, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1127, 1130, 1131, 1133, 1135, 1145, 1147, 1152, 1153, 1158, 1159, 1175, 1176, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1226, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1247], "habit": 1187, "hack": 1186, "had": [65, 487, 774, 1075, 1107, 1114, 1152, 1180, 1184, 1185, 1186, 1189, 1193, 1195, 1200, 1205, 1206, 1208, 1210, 1211, 1214, 1221, 1227, 1233, 1234], "hadamard": 497, "haiku": [1108, 1144, 1146], "half": [147, 280, 399, 512, 515, 516, 644, 912, 921, 1110, 1186, 1188, 1206, 1207, 1211, 1234], "half_db_norm": 160, "half_db_norm_sq": 160, "halfwai": 293, "hall": [430, 440, 707, 919, 921, 922, 1007], "hallei": [251, 903], "halo": 1211, "halt": 926, "halv": 1188, "hammarl": 909, "hamper": [1185, 1243], "hand": [77, 121, 257, 641, 889, 902, 907, 908, 924, 925, 926, 1107, 1119, 1122, 1185, 1186, 1187, 1189, 1190, 1195, 1200, 1208, 1210, 1211, 1214, 1216, 1218, 1227, 1233, 1242], "handbook": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 469, 501, 572, 646, 647, 648, 715, 760, 775, 776, 935], "handi": [1107, 1130, 1135, 1190, 1199], "handl": [0, 42, 82, 84, 208, 232, 296, 297, 298, 299, 300, 301, 432, 434, 436, 437, 439, 507, 589, 645, 729, 750, 774, 811, 813, 820, 821, 822, 823, 837, 916, 918, 953, 1029, 1048, 1049, 1107, 1110, 1115, 1122, 1123, 1130, 1137, 1152, 1159, 1166, 1178, 1183, 1186, 1188, 1190, 1191, 1192, 1194, 1199, 1203, 1204, 1207, 1208, 1209, 1210, 1212, 1213, 1216, 1219, 1220, 1233, 1239, 1244, 1246], "handle_rag": [1208, 1233], "handle_result": [1107, 1199], "handler": [1152, 1208, 1233], "handler_func": [1208, 1233], "hang": [1110, 1152, 1198], "hann": [919, 921, 922, 923], "happen": [18, 55, 71, 339, 429, 781, 886, 1104, 1105, 1117, 1121, 1122, 1128, 1131, 1135, 1158, 1180, 1183, 1187, 1192, 1195, 1199, 1204, 1205, 1210, 1211, 1212, 1216, 1218, 1219, 1221, 1224, 1227, 1238, 1244, 1247], "happi": [1193, 1199, 1200, 1227], "happili": 1114, "hard": [347, 348, 349, 350, 1110, 1134, 1135, 1152, 1186, 1190, 1193, 1199, 1205, 1206, 1214, 1223, 1227, 1234, 1243, 1247], "hard_sigmoid": [348, 349], "hard_silu": 349, "hard_swish": 348, "harder": [1186, 1196], "hardwar": [7, 71, 688, 1119, 1127, 1134, 1175, 1186, 1191, 1196, 1198, 1201, 1208, 1211, 1216, 1218, 1219, 1233, 1243], "harm": 1214, "harmless": [1117, 1200, 1227], "harmon": [957, 965], "has_aux": [119, 125, 144, 145, 148, 149, 151, 208, 209, 333, 1099, 1100, 1130, 1202, 1208, 1233, 1236, 1247], "has_explicit_shard": 1212, "has_opaque_dtyp": 1110, "has_rais": [1208, 1233], "has_side_effect": 1110, "hasattr": 1195, "hash": [140, 150, 1107, 1110, 1122, 1131, 1158, 1173, 1187, 1191, 1224, 1238], "hashabl": [71, 136, 144, 150, 157, 158, 169, 271, 272, 273, 277, 278, 279, 280, 281, 340, 371, 824, 1078, 1079, 1081, 1085, 1087, 1099, 1101, 1102, 1107, 1110, 1122, 1135, 1158, 1214, 1247], "hashable_const": 1107, "hashable_jaxpr": 1107, "hashable_pytre": [1199, 1212, 1238], "hashablefunct": [1199, 1212, 1238], "haskel": [13, 229, 295, 325, 1107, 1182, 1200, 1205, 1227, 1237], "hasn": [835, 1184, 1190, 1191], "hat": 1130, "hatch": [1186, 1188, 1216], "have": [0, 2, 5, 6, 13, 18, 32, 34, 35, 50, 66, 67, 70, 71, 74, 75, 77, 78, 87, 90, 91, 104, 120, 144, 145, 149, 150, 158, 188, 190, 213, 214, 215, 231, 269, 277, 281, 295, 302, 303, 326, 332, 339, 361, 397, 398, 407, 408, 409, 411, 413, 414, 422, 427, 428, 429, 440, 452, 454, 461, 464, 465, 471, 473, 485, 487, 493, 515, 516, 525, 526, 527, 570, 624, 637, 650, 651, 652, 653, 654, 655, 658, 659, 679, 681, 683, 684, 702, 705, 706, 711, 715, 720, 728, 741, 746, 750, 768, 771, 778, 808, 813, 815, 816, 824, 837, 887, 893, 903, 907, 910, 914, 915, 916, 917, 918, 920, 924, 925, 926, 965, 1048, 1070, 1073, 1075, 1088, 1092, 1099, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1116, 1117, 1118, 1119, 1121, 1122, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1145, 1158, 1159, 1166, 1170, 1171, 1173, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247, 1248], "have_kwarg": [1199, 1212, 1238], "haven": [1107, 1173, 1186, 1214, 1216, 1223, 1227, 1236], "hazen": [681, 683, 703, 724], "hbm": [1218, 1219, 1221], "hcb": [1110, 1152], "hde": 1186, "he": [355, 356], "head": [1112, 1186, 1196, 1216], "header": 645, "health": [35, 1198], "heap": 1110, "heard": 1118, "heart": [1192, 1212], "heavi": [1122, 1182, 1185, 1186, 1221, 1237], "heavili": [1122, 1185, 1195], "heavisid": 1122, "hed": 1186, "height": [493, 570, 815, 1107, 1207], "hello": [19, 494, 1183, 1208, 1217, 1233], "help": [0, 628, 926, 1104, 1105, 1110, 1112, 1117, 1119, 1128, 1130, 1131, 1135, 1137, 1152, 1153, 1180, 1183, 1184, 1185, 1186, 1187, 1193, 1196, 1199, 1205, 1212, 1214, 1227, 1232, 1234, 1238, 1243, 1246, 1247], "helper": [0, 688, 1078, 1107, 1182, 1201, 1202, 1203, 1205, 1207, 1209, 1221, 1227, 1236, 1237, 1244], "helpfulli": [1130, 1199], "henc": [71, 559, 900, 1125, 1136, 1152, 1186, 1190, 1191, 1193, 1206, 1211, 1234], "her": [572, 907], "here": [0, 7, 9, 13, 34, 49, 127, 214, 215, 216, 217, 218, 219, 238, 310, 311, 333, 340, 444, 452, 494, 519, 624, 633, 746, 747, 813, 852, 947, 965, 1075, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1112, 1114, 1116, 1117, 1119, 1121, 1122, 1125, 1127, 1128, 1131, 1133, 1136, 1137, 1152, 1154, 1159, 1173, 1179, 1182, 1183, 1184, 1185, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1221, 1224, 1225, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247], "hermitian": [120, 245, 247, 251, 256, 513, 518, 519, 614, 619, 620, 622, 633, 637, 888, 890, 892, 903, 907, 911, 925, 1110], "hesit": 1199, "hess1": 1107, "hess2": 1107, "hess3": 1107, "hess4": 1107, "hess5": 1107, "hess6": 1107, "hess7": 1107, "hess_inv": 913, "hessel": [1132, 1133, 1134], "hessenberg": 1110, "hessian": [913, 1133, 1208, 1210, 1233, 1242], "heterogen": 262, "heurist": 1244, "hex": [1199, 1212, 1238], "hfft": 1110, "hi": [892, 1107, 1110, 1192, 1200, 1211, 1227], "hidden": [0, 1135, 1199, 1214, 1243, 1247], "hide": [1106, 1125, 1128, 1189, 1194, 1199, 1216], "hierarch": 1189, "hierarchi": [42, 603, 1178, 1194, 1195, 1216, 1219], "high": [7, 85, 193, 195, 196, 197, 198, 199, 212, 213, 269, 464, 468, 490, 496, 579, 658, 715, 777, 811, 812, 947, 1009, 1125, 1153, 1159, 1166, 1189, 1191, 1198, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1242], "higham": [894, 895, 909], "higher": [9, 17, 34, 208, 213, 399, 426, 486, 579, 637, 681, 683, 703, 715, 724, 725, 813, 1107, 1110, 1122, 1123, 1152, 1153, 1159, 1183, 1188, 1190, 1193, 1194, 1195, 1199, 1200, 1204, 1205, 1208, 1211, 1216, 1218, 1230, 1233], "highest": [16, 146, 147, 193, 195, 196, 197, 198, 199, 212, 213, 464, 468, 490, 496, 579, 658, 707, 708, 711, 712, 713, 715, 777, 811, 812, 1048, 1107, 1166], "highli": [1207, 1219], "highlight": [1195, 1214, 1218, 1248], "hindsight": 1197, "hint": [326, 1119, 1186, 1201], "hip": 1119, "hipbla": 1119, "hipfft": 1119, "hipsolv": 1119, "hipspars": 1119, "hirsch": 715, "hist": 565, "histogram": [566, 567, 568], "histor": [1107, 1109, 1185, 1196, 1201, 1218], "histori": 1128, "hit": [1107, 1110, 1117, 1128, 1199, 1216], "hline": 1199, "hlo": [0, 7, 195, 277, 1102, 1104, 1107, 1110, 1114, 1151, 1183, 1187, 1188, 1193, 1200, 1202, 1216, 1227, 1236], "hlo_cal": 1190, "hlo_help": 0, "hlo_modul": [0, 1151], "hlo_shard": 1186, "hlomodul": [0, 1102], "hoc": 1195, "hoist": [9, 49, 1182, 1237], "hold": [229, 295, 325, 413, 475, 476, 542, 543, 631, 661, 663, 667, 675, 676, 679, 682, 685, 722, 861, 913, 1107, 1122, 1145, 1182, 1188, 1195, 1196, 1200, 1214, 1219, 1227, 1237], "hollow": 1104, "holomorph": [144, 145, 148, 149, 1099, 1205, 1208, 1227, 1233, 1247], "home": [1193, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "homogen": 494, "hon": 1212, "hood": [213, 1107, 1117, 1133, 1183, 1199, 1210, 1211, 1212, 1218, 1230], "hook": [1183, 1223], "hope": [1194, 1196, 1200, 1205, 1227], "hopefulli": 1187, "hopkin": [631, 699], "hopper": 1110, "horizon": 1107, "horizont": [569, 570], "horn": 741, "host": [29, 35, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 339, 1103, 1106, 1110, 1114, 1117, 1121, 1125, 1138, 1157, 1186, 1189, 1191, 1193, 1199, 1208, 1212, 1218, 1223, 1226, 1232, 1233, 1239, 1240], "host_callback": [1110, 1147, 1183, 1202, 1208, 1212, 1233, 1236], "host_callback_test": 1152, "host_callback_to_tf_test": 1152, "host_count": 1110, "host_eig": 1152, "host_func": 1152, "host_id": [77, 336, 1110, 1136], "host_local_array_to_global_arrai": [76, 1110, 1180], "host_local_input": [76, 77], "host_local_output": [76, 77], "host_log": 1152, "host_side_random_lik": [1208, 1233], "host_sin": 1152, "host_to_devic": 1226, "hostcallbackidtaptest": 1152, "hostcallbacktaptest": 1152, "hot": [371, 1203, 1205, 1209, 1227], "hour": 1128, "hous": 1130, "household": [248, 249, 256, 634, 1110], "householder_product": 1110, "how": [0, 7, 71, 150, 229, 232, 277, 295, 296, 297, 298, 299, 300, 301, 326, 338, 339, 452, 471, 723, 729, 740, 774, 780, 813, 820, 821, 822, 823, 831, 912, 916, 918, 919, 922, 923, 1029, 1048, 1049, 1082, 1102, 1103, 1107, 1108, 1109, 1110, 1112, 1114, 1117, 1119, 1121, 1127, 1128, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1144, 1145, 1151, 1152, 1153, 1158, 1159, 1166, 1172, 1175, 1182, 1183, 1185, 1187, 1189, 1190, 1191, 1192, 1194, 1198, 1199, 1200, 1204, 1206, 1207, 1208, 1210, 1214, 1215, 1216, 1218, 1224, 1230, 1231, 1233, 1234, 1236, 1237, 1239, 1242, 1243, 1244, 1246, 1247], "howev": [0, 13, 18, 28, 34, 50, 71, 77, 104, 120, 191, 317, 319, 333, 390, 392, 393, 395, 527, 576, 619, 645, 660, 662, 666, 688, 720, 722, 745, 769, 771, 773, 810, 824, 926, 1106, 1107, 1109, 1110, 1114, 1121, 1122, 1124, 1130, 1131, 1132, 1133, 1134, 1136, 1151, 1158, 1159, 1170, 1176, 1183, 1185, 1189, 1190, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1205, 1208, 1210, 1212, 1214, 1216, 1219, 1221, 1224, 1227, 1230, 1231, 1233, 1236, 1238, 1242, 1243, 1247], "hparam": 1186, "hsplit": 570, "hstack": 454, "htm": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648, 776, 935], "html": [38, 143, 413, 419, 465, 546, 628, 758, 816, 929, 944, 945, 1066, 1101, 1110, 1119, 1127, 1130, 1131, 1173, 1175, 1179, 1185, 1193, 1195, 1199, 1202, 1206, 1212, 1234, 1236, 1238, 1242], "http": [13, 38, 120, 143, 159, 160, 196, 197, 209, 291, 381, 387, 388, 400, 401, 402, 403, 404, 406, 413, 419, 420, 421, 423, 425, 430, 434, 436, 464, 465, 501, 527, 546, 562, 563, 572, 589, 606, 628, 630, 646, 647, 648, 711, 758, 776, 781, 816, 834, 836, 839, 882, 886, 928, 929, 930, 931, 933, 934, 935, 936, 938, 939, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 961, 962, 963, 968, 1048, 1066, 1101, 1110, 1112, 1119, 1123, 1127, 1128, 1130, 1131, 1145, 1173, 1175, 1179, 1186, 1193, 1195, 1199, 1202, 1203, 1209, 1212, 1223, 1236, 1238, 1242], "human": 1176, "hundr": [1122, 1185, 1221], "hurdl": [1202, 1236], "hurt": 1201, "hurwitz": [328, 968], "hvp": [1205, 1227], "hvp_revfwd": [1205, 1227], "hvp_revrev": [1205, 1227], "hwdio": 1207, "hwio": [195, 196, 1207], "hybrid": 73, "hyndman": [681, 683, 703, 724, 1007], "hyperbol": [154, 164, 168, 202, 309, 321, 388, 401, 403, 406, 421, 425, 470, 760, 776], "hyperbolic_funct": 776, "hypergeometr": 947, "hypervisor": 1110, "hypot": 1110, "hypotenus": 571, "hypothesi": 1189, "hypothet": [1189, 1190], "hz": [919, 923], "i": [0, 1, 3, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 49, 50, 55, 56, 57, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 82, 84, 87, 88, 96, 101, 103, 104, 105, 118, 119, 120, 121, 124, 125, 127, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 165, 169, 180, 188, 191, 195, 196, 197, 198, 199, 208, 209, 214, 215, 216, 217, 218, 219, 229, 231, 232, 238, 240, 242, 245, 246, 247, 250, 251, 252, 254, 255, 256, 257, 262, 268, 271, 272, 273, 277, 278, 279, 280, 281, 285, 288, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 311, 312, 317, 319, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 346, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 365, 369, 371, 380, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 447, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 619, 620, 622, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 760, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 790, 791, 792, 798, 799, 804, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 834, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 903, 904, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 935, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968, 970, 979, 981, 1007, 1014, 1018, 1029, 1032, 1033, 1034, 1046, 1048, 1049, 1068, 1070, 1075, 1076, 1080, 1081, 1082, 1084, 1085, 1088, 1089, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1144, 1145, 1146, 1148, 1150, 1151, 1152, 1153, 1154, 1158, 1159, 1166, 1167, 1169, 1170, 1173, 1175, 1176, 1178, 1179, 1182, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1197, 1198, 1199, 1200, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248], "i0": [171, 1110], "i1": [172, 447, 494], "i16": 1195, "i1i1i2i4i8f": 1248, "i1i2i4i8bff2f4f8c8c16i1f": 1248, "i2": [494, 1248], "i2i2i2i4i8f": 1248, "i2i2i4i8bff2f4f8c8c16i2f": 1248, "i32": [159, 1104, 1107, 1131, 1182, 1188, 1195, 1199, 1204, 1212, 1214, 1237, 1238], "i32_scalar": 1104, "i4": [447, 494, 753], "i4i4i4i4i8f": 1248, "i4i4i4i8bff2f4f8c8c16i4f": 1248, "i64": [1107, 1195], "i8": [447, 494, 1195], "i8i8i8i8bff2f4f8c8c16i8f": 1248, "i8i8i8i8i8f": 1248, "i_0": [572, 948], "i_1": 950, "i_x": 931, "ib": [385, 386], "ici": [73, 1186], "id": [0, 35, 157, 331, 1107, 1110, 1122, 1136, 1170, 1185, 1198, 1201, 1202, 1204, 1236, 1244], "id_": 1107, "id_print": [1110, 1152, 1183], "id_psumrev": [1186, 1188], "id_tap": [68, 1110], "idct": 885, "idea": [1107, 1125, 1133, 1136, 1144, 1184, 1186, 1187, 1188, 1195, 1196, 1199, 1200, 1205, 1206, 1211, 1214, 1216, 1219, 1221, 1227, 1230, 1234], "ideal": [120, 711, 1131, 1195, 1238], "ident": [30, 69, 77, 118, 198, 285, 289, 317, 397, 517, 526, 551, 627, 636, 640, 792, 824, 848, 892, 893, 1107, 1110, 1122, 1133, 1134, 1135, 1136, 1151, 1173, 1178, 1182, 1185, 1188, 1192, 1194, 1198, 1200, 1202, 1204, 1205, 1206, 1208, 1212, 1216, 1227, 1233, 1234, 1236, 1237, 1243, 1247], "identif": [1186, 1191, 1205, 1211, 1227], "identifi": [22, 23, 33, 165, 195, 196, 824, 1101, 1107, 1112, 1120, 1122, 1128, 1133, 1186, 1191, 1193, 1205, 1211, 1216, 1227], "idhash": 1107, "idiosyncrasi": 1130, "idl": 1219, "idx": [239, 688, 1110, 1121, 1130, 1135, 1188, 1211, 1212, 1214, 1216, 1247], "idx1": 1203, "idx3": 1203, "iec": [405, 424], "ieee": [405, 424, 527, 668, 732, 882, 919, 921, 922, 923, 1248], "ieeestd": 527, "iexp": 527, "if_fals": 816, "if_tru": 816, "ifft": [515, 516], "ifft2": 1110, "ifftn": 521, "ifs": 1210, "igamma": [944, 945], "igammagrada": 1110, "ignor": [17, 146, 230, 232, 245, 247, 255, 256, 322, 353, 354, 355, 356, 357, 358, 360, 364, 365, 431, 473, 485, 542, 543, 552, 565, 567, 587, 645, 673, 674, 677, 678, 679, 680, 681, 683, 684, 686, 688, 711, 720, 750, 771, 773, 892, 903, 907, 911, 1032, 1033, 1048, 1107, 1110, 1128, 1130, 1133, 1151, 1158, 1178, 1185, 1188, 1190, 1195, 1199, 1208, 1212, 1227, 1233, 1238, 1247], "ignorekei": [1199, 1212, 1238], "ihfft": 1110, "ii": [9, 397, 467, 472, 773], "iii": [707, 961], "iinfo": 527, "ij": [467, 472, 664], "ill": [711, 847, 1189], "illeg": 1110, "illus": 1183, "illustr": [781, 886, 1133, 1211, 1214, 1230], "im": 237, "imag": [197, 754, 781, 886, 1105, 1110, 1123, 1129, 1166, 1189, 1203, 1205, 1207, 1209, 1214, 1227], "image_rel_amd64_addr32nb": 1110, "imagin": [1107, 1114, 1183, 1187, 1195, 1216], "imaginari": [189, 237, 263, 264, 312, 384, 414, 462, 463, 527, 542, 543, 575, 591, 592, 601, 619, 620, 622, 661, 665, 667, 672, 696, 725, 763, 896, 907, 919, 1195, 1205, 1227], "imath": [948, 950], "imbalanc": 1186, "img": 1207, "immedi": [18, 30, 31, 32, 1048, 1069, 1070, 1071, 1072, 1086, 1088, 1090, 1091, 1106, 1112, 1117, 1130, 1134, 1185, 1187, 1199, 1205, 1206, 1227, 1234, 1242, 1243], "immut": [37, 38, 53, 54, 58, 59, 60, 61, 62, 150, 526, 546, 701, 706, 723, 824, 1122, 1130, 1158, 1170, 1199, 1212, 1216, 1218], "impact": [5, 6, 527, 715, 1180, 1185, 1219], "impati": 1130, "impenetr": 1107, "imper": 1117, "impl": [0, 138, 838, 858, 881, 1107, 1110, 1131, 1173, 1194, 1208, 1212, 1233], "impl_rul": 1107, "impl_static_arg": 0, "implement": [0, 14, 15, 19, 27, 34, 47, 48, 56, 67, 69, 71, 80, 81, 82, 83, 84, 87, 90, 97, 98, 100, 120, 121, 137, 141, 142, 150, 159, 160, 165, 191, 208, 211, 229, 232, 246, 247, 248, 256, 262, 288, 292, 295, 296, 297, 298, 299, 300, 301, 303, 325, 369, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 751, 752, 754, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 799, 804, 805, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 824, 838, 858, 861, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 958, 960, 961, 962, 963, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1100, 1101, 1107, 1110, 1111, 1112, 1121, 1122, 1123, 1130, 1131, 1132, 1133, 1137, 1145, 1148, 1151, 1152, 1153, 1158, 1159, 1166, 1170, 1173, 1180, 1183, 1184, 1186, 1187, 1191, 1192, 1195, 1196, 1197, 1199, 1201, 1202, 1204, 1206, 1207, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1230, 1231, 1232, 1233, 1234, 1236, 1238, 1239, 1242, 1243, 1247], "implementaion": 0, "impli": [472, 499, 554, 698, 700, 804, 818, 924, 925, 926, 1110, 1121, 1122, 1158, 1180, 1195, 1196, 1203, 1209, 1214], "implic": [1134, 1196, 1205, 1227, 1243], "implicit": [34, 208, 209, 496, 924, 925, 1110, 1121, 1166, 1175, 1180, 1189, 1191, 1195, 1199, 1215, 1226, 1243, 1248], "implicit_function_theorem": 209, "implicitli": [71, 208, 1179, 1185, 1189, 1194, 1195, 1200, 1212, 1214, 1227, 1246], "import": [0, 7, 18, 29, 31, 32, 34, 43, 49, 50, 55, 56, 57, 71, 76, 77, 119, 123, 125, 144, 145, 148, 149, 150, 151, 159, 160, 169, 332, 333, 338, 339, 340, 342, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 472, 527, 542, 543, 604, 624, 661, 667, 719, 746, 747, 813, 820, 821, 822, 823, 824, 830, 848, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1083, 1084, 1086, 1088, 1090, 1091, 1092, 1093, 1100, 1101, 1102, 1104, 1106, 1107, 1109, 1110, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1125, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1148, 1151, 1152, 1153, 1154, 1158, 1159, 1173, 1175, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247], "importantli": [1131, 1190, 1204, 1214, 1238, 1243], "impos": [1137, 1195, 1208, 1233], "imposs": [1122, 1131, 1152, 1185, 1186, 1199, 1205, 1227], "imprecis": 1107, "impress": 1190, "improv": [120, 232, 296, 297, 298, 299, 300, 301, 567, 715, 822, 823, 854, 889, 897, 900, 924, 925, 926, 1105, 1110, 1112, 1125, 1153, 1180, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1196, 1199, 1200, 1206, 1211, 1212, 1219, 1227, 1234, 1247], "impur": [17, 70, 1131, 1189, 1208, 1233, 1238], "impure_func": 1122, "impure_print_side_effect": 1199, "impure_saves_glob": 1199, "impure_uses_glob": 1199, "imshow": 1207, "in1": [145, 915, 916, 917, 918, 920], "in1d": 1110, "in2": [145, 915, 916, 917, 918, 920], "in_1_1": 145, "in_1_2": 145, "in_2_1": 145, "in_2_2": 145, "in_arr": [1182, 1237], "in_av": [1107, 1131, 1199, 1208, 1212, 1233, 1238], "in_ax": [71, 824, 1101, 1107, 1110, 1132, 1133, 1182, 1186, 1188, 1194, 1202, 1203, 1205, 1208, 1209, 1211, 1214, 1224, 1227, 1231, 1233, 1236, 1247], "in_axes2": [1208, 1233], "in_axes_flat": [1107, 1208, 1233, 1247], "in_axi": [353, 354, 355, 356, 357, 358, 364], "in_axis_resourc": [1110, 1175, 1180], "in_bind": 1107, "in_featur": 71, "in_layout": [1199, 1212, 1238], "in_part": [1102, 1110], "in_place_modifi": 1130, "in_pspec": [76, 77, 1180], "in_pval": [1208, 1233], "in_shard": [0, 18, 150, 326, 1110, 1114, 1151, 1152, 1158, 1175, 1180, 1208, 1212, 1233], "in_shardings_leav": [1199, 1212, 1238], "in_shardings_treedef": [1199, 1212, 1238], "in_spec": [1188, 1216, 1218, 1221, 1244], "in_tang": 333, "in_trac": [1107, 1131, 1199, 1208, 1212, 1233, 1238], "in_tracers_": [1199, 1208, 1212, 1233, 1238], "in_tre": [0, 74, 75, 78, 1107, 1176, 1199, 1206, 1208, 1212, 1233, 1234, 1238, 1247], "in_tree2": 1107, "in_typ": [127, 1107, 1199, 1212, 1238], "in_uk": 1107, "in_unknown": 1107, "in_val": 1107, "inaccuraci": [1185, 1214], "inadvert": [1110, 1121, 1195], "inc": [615, 619, 620, 633, 636], "incident": [1137, 1246], "includ": [0, 7, 9, 13, 34, 50, 67, 69, 71, 144, 146, 150, 246, 278, 339, 368, 378, 390, 395, 399, 419, 487, 496, 527, 557, 565, 567, 576, 633, 644, 645, 656, 662, 678, 682, 684, 685, 686, 707, 710, 714, 715, 720, 725, 745, 746, 750, 769, 771, 810, 824, 825, 834, 836, 904, 922, 1007, 1099, 1105, 1110, 1112, 1114, 1115, 1119, 1121, 1122, 1123, 1126, 1130, 1131, 1133, 1135, 1137, 1145, 1146, 1148, 1152, 1158, 1159, 1170, 1173, 1175, 1179, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1219, 1221, 1223, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247], "include_initi": 477, "inclus": [188, 229, 467, 681, 683, 703, 724, 872, 878, 929, 1189, 1195], "incom": 1152, "incompat": [1104, 1105, 1110, 1121, 1185, 1189, 1191, 1196, 1199, 1201, 1212, 1213], "incomplet": [173, 235, 236, 931, 944, 945, 1110, 1188], "inconclus": 1110, "inconsist": [710, 713, 1110, 1176, 1190], "inconveni": [1191, 1206, 1234], "incorpor": [1196, 1216], "incorrect": [588, 1110, 1122, 1127, 1185, 1186, 1194, 1198, 1199, 1205, 1211, 1221, 1227], "incorrectli": [1110, 1213], "increas": [7, 55, 72, 73, 104, 120, 295, 487, 503, 514, 519, 565, 568, 587, 701, 715, 809, 904, 910, 926, 1110, 1117, 1120, 1122, 1158, 1186, 1190, 1191, 1196, 1206, 1231, 1234], "increasingli": [1185, 1196], "increment": [229, 926, 1107, 1128, 1137, 1182, 1196, 1237, 1246], "incur": [0, 7, 333, 1117, 1136, 1184, 1189], "ind": [640, 723, 784, 788], "inde": [333, 1186, 1188, 1211], "indefinit": 712, "indent": [1107, 1202, 1236], "indented_block": 1107, "independ": [120, 464, 485, 624, 869, 914, 1110, 1134, 1152, 1183, 1186, 1191, 1194, 1196, 1198, 1199, 1205, 1211, 1221, 1227, 1243], "index": [0, 57, 73, 78, 91, 101, 117, 118, 157, 161, 162, 169, 197, 214, 215, 216, 217, 218, 219, 229, 232, 238, 277, 278, 296, 297, 298, 299, 300, 301, 311, 319, 336, 338, 339, 371, 407, 408, 409, 410, 431, 452, 459, 480, 485, 487, 506, 509, 515, 576, 577, 580, 605, 664, 673, 674, 688, 702, 723, 728, 729, 734, 745, 748, 764, 768, 773, 774, 805, 824, 827, 927, 1101, 1110, 1114, 1116, 1119, 1121, 1127, 1130, 1135, 1145, 1154, 1159, 1166, 1170, 1182, 1190, 1195, 1202, 1211, 1212, 1216, 1218, 1236, 1237, 1238, 1242, 1247], "index_": 1130, "index_add": [1110, 1171, 1199], "index_arrai": [407, 408, 409, 410, 411, 673, 674], "index_check": [57, 1114, 1116], "index_dtyp": [92, 107, 109, 113, 117, 118, 161, 162], "index_exp": 745, "index_in_dim": [214, 310, 311], "index_map": [1216, 1221], "index_trick": [446, 452, 576, 665, 696, 725, 745], "index_upd": [1110, 1171], "index_vector_dim": 1166, "indexerror": 1199, "indexexpress": [576, 745], "indic": [7, 16, 17, 19, 38, 71, 77, 80, 89, 90, 91, 92, 98, 99, 101, 106, 107, 109, 113, 121, 122, 144, 145, 148, 149, 150, 151, 157, 158, 159, 160, 191, 193, 195, 196, 197, 198, 199, 208, 209, 212, 213, 215, 218, 232, 247, 271, 272, 273, 277, 279, 280, 281, 296, 297, 298, 299, 300, 301, 310, 319, 323, 331, 333, 336, 338, 371, 397, 407, 408, 409, 410, 411, 452, 464, 468, 472, 480, 482, 483, 487, 490, 496, 505, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 526, 529, 576, 579, 580, 587, 588, 593, 613, 640, 641, 657, 658, 665, 673, 674, 688, 692, 696, 711, 723, 729, 736, 745, 748, 750, 751, 754, 764, 773, 774, 777, 780, 784, 785, 788, 789, 798, 799, 805, 811, 812, 816, 820, 821, 822, 823, 824, 837, 858, 867, 874, 888, 893, 900, 901, 915, 916, 917, 918, 920, 929, 937, 1068, 1069, 1070, 1071, 1072, 1076, 1084, 1086, 1088, 1090, 1091, 1099, 1100, 1101, 1102, 1104, 1107, 1110, 1121, 1122, 1132, 1136, 1158, 1159, 1166, 1180, 1185, 1186, 1188, 1192, 1194, 1195, 1199, 1200, 1206, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1227, 1231, 1234, 1244], "indices_are_sort": [93, 232, 296, 297, 298, 299, 300, 301, 688, 773, 820, 821, 822, 823, 1110, 1199, 1212], "indices_dtyp": 122, "indices_or_sect": [417, 492, 569, 764, 814], "indices_sort": [80, 81], "indirect": [409, 410, 613, 1107], "indirectify_ragged_ax": [1208, 1233], "indirectli": [198, 613], "indistinguish": 1214, "individu": [29, 34, 464, 750, 837, 842, 856, 869, 1122, 1123, 1134, 1136, 1194, 1199, 1212, 1243], "indptr": [106, 121], "inductor": 1216, "industri": 1219, "ineffici": [104, 1133, 1205, 1206, 1227, 1234], "inefficient_perex_grad": [1133, 1227], "inequ": 1110, "inevit": [1122, 1216], "inexact": [144, 232, 464, 468, 538, 672, 678, 682, 685, 688, 707, 773, 1208, 1233], "inf": [22, 57, 391, 404, 405, 423, 424, 596, 615, 631, 635, 644, 673, 674, 750, 954, 1110, 1114, 1116, 1117, 1122, 1195, 1200, 1216, 1227], "infe": [1152, 1200, 1227], "infeed_thunk": 1152, "infer": [0, 50, 71, 150, 399, 419, 557, 644, 656, 734, 1073, 1092, 1101, 1103, 1104, 1110, 1158, 1186, 1188, 1211, 1224, 1247], "infer_sharding_from_operand": [0, 1151], "infin": [594, 596, 598, 599, 672, 750, 889, 897, 900, 905, 959, 1145], "infinit": [615, 631, 758, 926, 1190], "infinitesim": 1122, "infix": 1107, "influenc": [372, 1214], "info": [924, 925, 926, 1102, 1130, 1152, 1199, 1208, 1209, 1212, 1233, 1238], "inform": [0, 18, 25, 35, 41, 229, 231, 289, 331, 339, 341, 342, 343, 345, 369, 370, 372, 374, 399, 413, 418, 419, 465, 527, 548, 550, 634, 705, 711, 816, 825, 831, 832, 900, 904, 924, 925, 926, 955, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1107, 1110, 1112, 1117, 1119, 1120, 1121, 1122, 1128, 1131, 1136, 1145, 1173, 1176, 1179, 1180, 1185, 1188, 1193, 1195, 1199, 1201, 1207, 1212, 1216, 1221, 1223, 1232, 1236, 1238, 1242, 1243, 1247], "infrastructur": [1183, 1193, 1194, 1196, 1216], "infrequ": 1105, "infstr": [558, 750], "infti": [242, 368, 845, 846, 851, 852, 854, 855, 864, 866, 868, 873, 879, 880, 934, 938, 939, 941, 943, 945, 947, 948, 950, 952, 959, 960, 963, 1200, 1227], "ing": 1117, "ingest": 1158, "ingredi": [1107, 1191, 1203, 1209, 1211], "inher": [1117, 1185], "inherit": [150, 331, 1158, 1186, 1190, 1199], "init": [295, 1136, 1137, 1145, 1146, 1182, 1193, 1211, 1237, 1246], "init_carri": [1182, 1237], "init_fn": 1145, "init_fun": [1145, 1146, 1191], "init_lay": [1201, 1211], "init_mlp_param": [1135, 1247], "init_model": 1201, "init_network_param": [1203, 1209], "init_st": [1208, 1212, 1233], "init_v": [229, 325, 1199], "init_valu": [285, 287], "initi": [120, 209, 229, 295, 325, 368, 378, 392, 393, 498, 499, 527, 552, 660, 666, 677, 680, 682, 685, 720, 771, 912, 914, 927, 928, 1071, 1090, 1104, 1110, 1121, 1133, 1134, 1136, 1137, 1145, 1150, 1168, 1175, 1182, 1185, 1186, 1187, 1190, 1199, 1201, 1202, 1203, 1205, 1208, 1209, 1211, 1214, 1216, 1219, 1221, 1223, 1227, 1230, 1233, 1236, 1237, 1243, 1246], "initial_guess": 209, "initialis": 1136, "initialization_timeout": 35, "initialize_cach": [1110, 1150], "initio": [935, 936], "initramf": 1223, "inject": [56, 1183], "inlin": [12, 150, 1107, 1131, 1152, 1158, 1182, 1185, 1190, 1199, 1208, 1211, 1212, 1216, 1233, 1237, 1238], "inner": [0, 71, 73, 159, 397, 490, 497, 824, 1073, 1092, 1107, 1110, 1117, 1121, 1122, 1131, 1135, 1136, 1152, 1182, 1186, 1205, 1211, 1227, 1237, 1238, 1247], "inner_p": 0, "inner_param": 1211, "inner_primit": 0, "inner_structur": [1073, 1092], "inner_treedef": [1073, 1092, 1110, 1135, 1247], "innermost": 441, "innocu": [17, 1117], "inp": 1175, "inp_data": 339, "inp_shard": 338, "inplac": [526, 706, 723], "input": [0, 4, 7, 12, 14, 19, 26, 32, 38, 50, 56, 71, 76, 77, 78, 87, 88, 97, 104, 105, 109, 113, 124, 143, 144, 145, 147, 149, 150, 158, 159, 160, 165, 174, 188, 191, 193, 194, 195, 196, 197, 198, 199, 209, 212, 213, 214, 231, 238, 247, 256, 262, 278, 279, 280, 281, 289, 295, 307, 312, 319, 332, 333, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 388, 390, 391, 392, 393, 395, 397, 398, 399, 401, 403, 406, 407, 408, 411, 413, 414, 415, 416, 418, 419, 421, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 450, 462, 463, 464, 465, 468, 469, 470, 471, 473, 475, 476, 480, 481, 484, 485, 486, 487, 490, 497, 500, 501, 502, 503, 504, 505, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 538, 540, 541, 546, 551, 552, 555, 559, 560, 561, 564, 565, 567, 575, 579, 580, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 608, 610, 611, 612, 614, 617, 619, 620, 624, 631, 634, 635, 637, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 662, 663, 664, 666, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 685, 689, 690, 692, 693, 699, 700, 703, 705, 706, 707, 708, 710, 713, 716, 717, 718, 720, 722, 724, 725, 728, 730, 731, 733, 734, 737, 738, 739, 740, 742, 748, 751, 752, 753, 754, 755, 758, 760, 761, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 786, 791, 798, 799, 804, 808, 809, 810, 811, 813, 816, 824, 837, 847, 853, 882, 883, 884, 885, 886, 887, 889, 891, 892, 894, 897, 900, 903, 905, 907, 909, 912, 915, 916, 917, 918, 919, 920, 921, 922, 933, 934, 935, 942, 943, 947, 953, 955, 961, 962, 963, 968, 1029, 1048, 1049, 1070, 1076, 1088, 1089, 1099, 1101, 1102, 1104, 1105, 1110, 1121, 1122, 1123, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1145, 1146, 1151, 1152, 1158, 1159, 1175, 1176, 1179, 1182, 1183, 1189, 1190, 1191, 1192, 1195, 1198, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1209, 1212, 1214, 1216, 1218, 1219, 1224, 1226, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "input_buf": 1107, "input_data": 1114, "input_handl": 1107, "input_onesid": 921, "input_s": 1193, "input_shap": [338, 1182, 1191, 1237], "ins": [1212, 1239], "ins1": 1107, "ins2": 1107, "insert": [158, 225, 269, 289, 398, 416, 418, 441, 485, 503, 557, 576, 644, 656, 700, 745, 748, 749, 750, 1107, 1110, 1151, 1166, 1188, 1190, 1195, 1198, 1200, 1201, 1214, 1227], "inserted_window_dim": 1166, "insertionpoint": [1202, 1236], "insid": [1, 7, 17, 18, 71, 90, 215, 326, 342, 527, 688, 715, 747, 1107, 1110, 1111, 1114, 1117, 1120, 1121, 1122, 1128, 1131, 1135, 1140, 1144, 1152, 1175, 1183, 1186, 1188, 1190, 1196, 1198, 1199, 1201, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1233, 1238, 1247], "insight": [1200, 1227, 1244], "inspect": [16, 18, 150, 340, 1106, 1110, 1122, 1134, 1140, 1151, 1158, 1182, 1190, 1199, 1200, 1201, 1202, 1206, 1208, 1211, 1227, 1232, 1233, 1234, 1236, 1237, 1239, 1243], "inspect_array_callback": 18, "inspir": [1144, 1212, 1213], "inst": 1107, "instal": [0, 746, 825, 1107, 1110, 1112, 1113, 1122, 1128, 1196, 1199, 1200, 1202, 1203, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1246, 1247], "instanc": [1, 4, 9, 14, 15, 31, 32, 34, 41, 146, 147, 338, 339, 399, 429, 493, 510, 513, 524, 527, 570, 576, 588, 633, 645, 715, 745, 815, 927, 928, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1079, 1081, 1104, 1107, 1110, 1112, 1122, 1133, 1134, 1135, 1136, 1175, 1176, 1182, 1183, 1186, 1187, 1188, 1190, 1194, 1200, 1201, 1207, 1208, 1211, 1218, 1219, 1224, 1227, 1233, 1237, 1239, 1243, 1247], "instanti": [43, 527, 530, 927, 1107, 1125, 1170, 1188, 1194, 1205, 1208, 1227, 1233], "instantiate_const": 1107, "instantiate_const_output": [1102, 1110], "instead": [0, 1, 7, 14, 15, 19, 49, 50, 68, 70, 77, 120, 160, 197, 213, 262, 291, 340, 431, 441, 464, 468, 475, 485, 548, 550, 565, 567, 577, 587, 644, 651, 663, 675, 679, 681, 683, 688, 703, 705, 712, 724, 725, 729, 735, 824, 837, 888, 892, 896, 924, 925, 1104, 1106, 1107, 1109, 1110, 1114, 1117, 1119, 1121, 1122, 1124, 1130, 1134, 1135, 1137, 1144, 1145, 1150, 1151, 1152, 1158, 1166, 1170, 1171, 1180, 1182, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1216, 1218, 1219, 1223, 1226, 1227, 1234, 1236, 1237, 1238, 1242, 1243, 1246, 1247, 1248], "institut": 1007, "instruct": [0, 1110, 1119, 1120, 1127, 1128, 1219, 1221, 1223, 1236, 1247], "instrument": [831, 1114, 1196, 1223], "insuffici": [35, 1029, 1049, 1110, 1122], "int": [0, 7, 14, 15, 16, 21, 28, 35, 38, 51, 71, 72, 73, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 113, 117, 118, 119, 120, 125, 136, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 331, 335, 336, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 390, 392, 393, 395, 396, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 422, 426, 427, 428, 429, 430, 431, 433, 438, 440, 443, 445, 452, 453, 459, 460, 461, 471, 472, 473, 475, 476, 477, 480, 481, 482, 484, 485, 486, 487, 492, 494, 498, 499, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 531, 547, 549, 551, 552, 553, 554, 555, 557, 558, 559, 562, 563, 565, 566, 567, 568, 569, 573, 577, 580, 606, 608, 609, 613, 616, 618, 624, 625, 626, 627, 628, 629, 631, 632, 637, 638, 639, 640, 641, 642, 643, 644, 645, 656, 657, 658, 660, 662, 663, 664, 666, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 692, 697, 698, 700, 701, 702, 703, 704, 709, 711, 712, 715, 720, 722, 724, 729, 732, 733, 734, 735, 737, 739, 740, 743, 744, 748, 750, 751, 753, 761, 762, 764, 767, 768, 769, 771, 772, 773, 774, 777, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 792, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 820, 821, 822, 823, 824, 826, 827, 833, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 889, 892, 894, 898, 902, 903, 904, 906, 912, 913, 914, 919, 920, 921, 922, 923, 929, 930, 933, 937, 938, 942, 943, 952, 953, 955, 956, 957, 958, 959, 960, 963, 965, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1029, 1030, 1031, 1034, 1035, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1062, 1063, 1064, 1065, 1097, 1099, 1101, 1102, 1104, 1107, 1110, 1119, 1122, 1130, 1135, 1137, 1145, 1158, 1166, 1175, 1179, 1182, 1185, 1186, 1188, 1191, 1195, 1199, 1201, 1212, 1216, 1218, 1219, 1221, 1237, 1239, 1246, 1247, 1248], "int128": 1195, "int16": [494, 593, 722, 1110, 1195, 1248], "int256": 1191, "int32": [34, 71, 80, 92, 107, 109, 113, 117, 118, 123, 150, 165, 169, 214, 215, 216, 238, 250, 289, 310, 311, 416, 446, 447, 494, 577, 593, 665, 682, 685, 696, 725, 820, 821, 822, 823, 856, 870, 872, 1075, 1104, 1107, 1110, 1121, 1130, 1131, 1135, 1148, 1159, 1179, 1182, 1187, 1191, 1193, 1194, 1195, 1199, 1204, 1208, 1212, 1213, 1214, 1216, 1218, 1233, 1237, 1239, 1244, 1247, 1248], "int4": [593, 1219], "int64": [447, 494, 585, 593, 682, 685, 856, 870, 872, 1107, 1110, 1195, 1237, 1248], "int8": [494, 498, 593, 697, 722, 817, 1110, 1152, 1195, 1248], "int_": [939, 959], "int_0": [930, 931, 943, 944, 964], "int_1": 964, "int_etyp": 1107, "int_kind": 750, "int_liter": 1188, "int_smin": [211, 288], "int_t": [781, 886], "int_typ": 574, "int_x": [941, 945], "int_z": 938, "integ": [3, 87, 90, 97, 98, 100, 101, 117, 120, 140, 144, 145, 146, 147, 148, 149, 159, 160, 165, 169, 179, 193, 194, 195, 196, 197, 198, 199, 211, 215, 229, 230, 232, 238, 240, 269, 277, 278, 279, 280, 288, 289, 291, 293, 295, 303, 307, 312, 319, 323, 332, 336, 340, 368, 378, 397, 398, 399, 409, 417, 432, 434, 435, 436, 437, 438, 439, 445, 447, 450, 452, 472, 475, 476, 480, 527, 528, 538, 540, 541, 545, 551, 557, 589, 593, 605, 610, 613, 627, 631, 640, 644, 656, 662, 663, 675, 676, 678, 679, 681, 682, 683, 684, 685, 686, 700, 702, 703, 707, 717, 718, 720, 722, 723, 724, 729, 734, 736, 737, 738, 742, 748, 756, 764, 769, 771, 779, 791, 805, 806, 808, 810, 813, 820, 821, 822, 823, 824, 827, 838, 840, 841, 842, 843, 844, 845, 846, 849, 851, 852, 853, 854, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 909, 913, 922, 924, 925, 926, 941, 942, 953, 961, 1014, 1099, 1101, 1102, 1107, 1110, 1121, 1132, 1145, 1146, 1166, 1173, 1182, 1185, 1191, 1192, 1194, 1196, 1199, 1200, 1208, 1212, 1214, 1216, 1218, 1221, 1227, 1231, 1233, 1237, 1248], "integer_lik": 777, "integr": [173, 429, 538, 565, 567, 593, 669, 712, 717, 718, 781, 931, 935, 938, 939, 941, 958, 959, 962, 964, 1009, 1010, 1011, 1109, 1110, 1185, 1216], "intel": 1127, "intellisens": 1185, "intend": [209, 664, 1110, 1130, 1145, 1146, 1176, 1189, 1192, 1225], "intens": [72, 73, 1122, 1221], "intent": [538, 1110, 1119, 1187], "intention": [120, 1105, 1115, 1194], "intenum": 1110, "inter": [193, 195, 196, 197, 199, 1211], "interact": [16, 1104, 1110, 1131, 1133, 1183, 1186, 1190, 1195, 1200, 1206, 1208, 1215, 1216, 1218, 1223, 1227, 1233, 1234, 1238], "interactiv": [1208, 1233], "interactiveshel": [1202, 1212, 1236], "intercept": 1107, "interchang": [546, 772, 901, 1205, 1212, 1227], "interconnect": [1198, 1211], "interest": [331, 1102, 1108, 1133, 1136, 1152, 1182, 1189, 1190, 1191, 1195, 1200, 1205, 1206, 1210, 1214, 1216, 1219, 1223, 1227, 1230, 1234, 1237, 1243], "interestingli": [1122, 1188, 1205, 1227], "interfac": [0, 1, 35, 180, 413, 547, 813, 914, 924, 925, 927, 1080, 1082, 1107, 1110, 1119, 1138, 1159, 1173, 1176, 1182, 1185, 1189, 1198, 1199, 1201, 1202, 1207, 1212, 1236, 1237, 1242], "interfer": [1117, 1134, 1183, 1243], "interior": [269, 559], "interleav": [1110, 1152, 1183, 1211], "intermedi": [7, 13, 18, 26, 340, 496, 497, 662, 678, 1104, 1107, 1116, 1117, 1121, 1122, 1123, 1130, 1131, 1135, 1182, 1184, 1186, 1187, 1199, 1200, 1202, 1204, 1205, 1206, 1208, 1211, 1219, 1227, 1233, 1234, 1236, 1237, 1238, 1239, 1247], "intermediate_dtyp": 1186, "intern": [7, 16, 46, 47, 48, 80, 209, 319, 340, 342, 435, 438, 587, 610, 737, 904, 1079, 1080, 1081, 1082, 1104, 1107, 1110, 1112, 1113, 1121, 1122, 1123, 1130, 1131, 1160, 1167, 1180, 1182, 1185, 1187, 1188, 1190, 1194, 1199, 1202, 1204, 1205, 1206, 1223, 1227, 1234, 1235, 1238, 1239, 1247], "interoper": 1178, "interpol": [71, 146, 147, 587, 681, 683, 703, 711, 724, 912, 928, 1110, 1165], "interpolated_inverted_cdf": [681, 683, 703, 724], "interpret": [0, 50, 71, 419, 445, 465, 547, 552, 568, 605, 613, 657, 709, 712, 723, 740, 750, 831, 912, 921, 1103, 1104, 1105, 1110, 1119, 1120, 1122, 1131, 1182, 1186, 1193, 1194, 1199, 1202, 1205, 1208, 1211, 1212, 1214, 1218, 1219, 1230, 1233, 1236, 1237, 1238, 1243, 1247], "interrupt": [1199, 1208, 1212, 1233, 1238], "intersect": [387, 400, 588], "intersect1d": [1110, 1189], "interspers": [824, 1158], "interv": [364, 399, 402, 420, 453, 487, 545, 557, 644, 656, 877, 893, 939], "intp": [682, 685], "introduc": [7, 12, 71, 104, 739, 1107, 1110, 1114, 1122, 1131, 1135, 1136, 1152, 1173, 1180, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1199, 1211, 1216, 1232, 1237, 1238, 1239, 1247], "introduct": [14, 15, 72, 165, 630, 1108, 1130, 1172, 1185, 1200, 1217, 1227, 1233, 1235, 1239], "introductori": [1199, 1230], "introspect": [1204, 1208, 1233], "intuit": [736, 1114, 1117, 1130, 1188, 1211, 1218], "inu": 1117, "inval": [1107, 1204], "invalid": [773, 774, 1104, 1110, 1122, 1195, 1199, 1203, 1209], "invalidargumenterror": 1195, "invar": [12, 1182, 1204, 1208, 1233, 1237], "invari": [46, 71, 208, 464, 1110, 1145, 1191, 1211, 1214], "invers": [56, 147, 154, 164, 168, 222, 387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 434, 436, 510, 514, 515, 516, 517, 518, 519, 520, 521, 524, 589, 623, 627, 633, 640, 641, 646, 711, 884, 885, 899, 913, 921, 924, 925, 926, 927, 937, 940, 960, 972, 984, 989, 1024, 1027, 1037, 1042, 1061, 1074, 1093, 1110, 1122, 1145, 1199], "inverse_jaxpr": 1204, "inverse_registri": 1204, "inverse_time_decai": 1145, "invert": [208, 434, 436, 595, 623, 633, 640, 899], "inverted_cdf": [681, 683, 703, 724], "invest": 1216, "investig": 1113, "invis": [1117, 1136, 1183], "invoc": [66, 67, 68, 69, 1104, 1121, 1152, 1176, 1182, 1198, 1202, 1218, 1219, 1236, 1237], "invok": [67, 69, 70, 837, 1104, 1119, 1122, 1131, 1152, 1199, 1200, 1202, 1214, 1218, 1227, 1236, 1238], "involv": [7, 9, 26, 49, 71, 145, 340, 640, 1101, 1102, 1104, 1107, 1110, 1117, 1119, 1121, 1122, 1132, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1198, 1199, 1200, 1201, 1205, 1211, 1216, 1227, 1231, 1246], "invvar": 0, "invvar_info": 0, "invvar_shard": 0, "io": [38, 143, 413, 419, 465, 546, 816, 1066, 1101, 1110, 1122, 1128, 1130, 1131, 1173, 1175, 1179, 1193, 1195, 1199, 1202, 1208, 1212, 1233, 1236, 1238], "io_callback": [17, 67, 68, 69, 1110, 1122], "io_callback_batching_rul": [1208, 1233], "io_callback_jvp_rul": [1208, 1233], "io_callback_p": [1208, 1233], "io_loop": [1208, 1233], "iohw": 1207, "iota": [183, 1193, 1218], "iota_dimens": 1193, "iota_kernel": 1218, "ip": [35, 1198, 1202, 1236], "ipi": 1212, "ipkernel": [1208, 1212, 1233], "ipyk": 1212, "ipykernel": [1208, 1212, 1233], "ipykernel_11722": 1236, "ipykernel_11740": 1199, "ipykernel_14115": 1227, "ipykernel_176355": 1212, "ipykernel_18149": 1238, "ipykernel_202099": 1246, "ipykernel_25235": 0, "ipykernel_27185": 1202, "ipykernel_29465": 1205, "ipykernel_58152": 1207, "ipykernel_72882": 1234, "ipykernel_94597": 1135, "ipykernel_launch": [1202, 1208, 1233, 1236], "ipynb": 1209, "ipyt": 1212, "ipython": [1110, 1122, 1130, 1131, 1195, 1199, 1200, 1202, 1206, 1208, 1212, 1223, 1227, 1233, 1236, 1242], "ipythonkernel": 1212, "ir": [0, 1110, 1187, 1202, 1211, 1216, 1236, 1237], "iren": 935, "irfft": [521, 524, 1110], "irfft2": 1110, "irfftn": 1110, "irrelev": [556, 1107], "irrespect": [409, 410, 620, 622], "is_": 1107, "is_congru": 1201, "is_converg": 251, "is_equivalent_to": 1175, "is_explicit_global_axis_s": 1182, "is_finit": [1117, 1232], "is_fully_address": [1175, 1180], "is_fully_repl": 1175, "is_hermitian": 251, "is_initi": 1150, "is_known": [1107, 1208, 1233], "is_leaf": [1068, 1069, 1070, 1071, 1072, 1076, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1110, 1247], "is_loc": 1175, "is_norm": 957, "is_nz_l": [1208, 1233], "is_nz_tangents_in": [1208, 1233], "is_nz_tangents_out": [1208, 1233], "is_opaque_dtyp": 1110, "is_poly_dim": 1110, "is_readi": 1110, "is_schedul": 0, "is_sourc": 75, "is_stabl": [312, 313, 1110], "is_symbolic_dim": 1110, "is_sync": 0, "is_train": [7, 1184], "is_undefined_prim": [1202, 1236], "is_unknown": 1107, "is_user_file_cach": [1202, 1236], "is_vmapp": 1247, "is_weakly_typ": 1247, "isalignedstruct": 494, "isawait": [1208, 1233], "isclos": 1110, "isfinit": [242, 1117, 1232], "isin": 1110, "isinst": [1, 604, 1107, 1110, 1122, 1131, 1179, 1180, 1185, 1199, 1202, 1208, 1212, 1224, 1233, 1236, 1239, 1247], "ismanu": 1186, "isn": [1106, 1107, 1110, 1122, 1130, 1133, 1135, 1137, 1186, 1188, 1190, 1191, 1192, 1194, 1195, 1198, 1199, 1200, 1205, 1206, 1213, 1216, 1223, 1227, 1230, 1234, 1246], "isnan": [1115, 1199], "iso": [405, 424], "isol": [1205, 1211, 1227], "isomorph": [1145, 1205, 1227], "isscalar": 1179, "issn": 895, "issu": [71, 485, 495, 514, 515, 516, 635, 1105, 1107, 1110, 1112, 1121, 1122, 1127, 1128, 1134, 1152, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1194, 1195, 1197, 1198, 1199, 1206, 1219, 1234, 1243], "issubclass": 603, "issubdtyp": [43, 1110, 1194, 1208, 1233, 1247], "issubsctyp": 1110, "ist": 1117, "itali": 1199, "item": [0, 339, 411, 547, 750, 799, 958, 1107, 1110, 1130, 1187, 1195, 1199, 1203, 1205, 1209, 1212, 1227], "items": 174, "iter": [53, 54, 58, 59, 60, 61, 62, 120, 150, 229, 251, 295, 325, 340, 550, 735, 774, 824, 903, 913, 914, 924, 925, 926, 1066, 1074, 1076, 1079, 1081, 1093, 1096, 1102, 1107, 1120, 1122, 1128, 1131, 1135, 1145, 1152, 1158, 1182, 1185, 1189, 1196, 1198, 1199, 1206, 1209, 1211, 1212, 1216, 1218, 1221, 1224, 1234, 1237, 1238, 1243, 1247], "iter_operand": 1199, "itertool": [1107, 1110, 1213, 1216], "ith": [577, 883, 885], "its": [0, 4, 7, 9, 13, 14, 16, 18, 34, 71, 72, 73, 78, 120, 128, 150, 151, 196, 209, 231, 232, 247, 250, 255, 291, 292, 295, 296, 297, 298, 299, 300, 301, 340, 364, 384, 398, 409, 418, 429, 431, 452, 462, 463, 466, 481, 526, 527, 548, 550, 565, 567, 571, 573, 578, 613, 619, 620, 621, 622, 624, 633, 641, 652, 653, 654, 655, 702, 705, 706, 711, 721, 723, 734, 747, 779, 780, 781, 782, 816, 820, 821, 822, 823, 824, 832, 837, 847, 869, 886, 892, 893, 901, 909, 911, 912, 919, 921, 922, 923, 924, 925, 926, 931, 1081, 1085, 1087, 1101, 1102, 1104, 1105, 1107, 1109, 1110, 1114, 1117, 1119, 1120, 1122, 1123, 1126, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1146, 1147, 1152, 1153, 1158, 1167, 1170, 1175, 1176, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1220, 1222, 1224, 1226, 1227, 1232, 1233, 1234, 1236, 1238, 1239, 1242, 1246, 1247], "itself": [0, 213, 452, 494, 635, 672, 767, 1089, 1107, 1110, 1114, 1130, 1131, 1133, 1152, 1185, 1187, 1189, 1197, 1202, 1206, 1208, 1211, 1216, 1221, 1233, 1234, 1236, 1238], "iv": [1133, 1230], "iv_dtyp": 0, "iv_element_typ": 0, "iv_typ": 0, "j": [169, 440, 490, 562, 563, 606, 681, 683, 699, 703, 712, 724, 741, 774, 782, 882, 894, 895, 898, 909, 958, 1007, 1102, 1119, 1130, 1133, 1136, 1151, 1182, 1186, 1188, 1199, 1205, 1206, 1211, 1214, 1216, 1218, 1221, 1227, 1234, 1237, 1239], "j0": 452, "j1": [452, 1208, 1233], "j_": [1208, 1233], "j_0": 948, "j_1": [950, 1208, 1233], "j_dict": [1205, 1227], "jac": [913, 1247], "jac_tre": 1247, "jacfun": [1205, 1227, 1247], "jacfwd": [1107, 1133, 1202, 1210, 1236, 1242], "jacobi": 1110, "jacobian": [148, 149, 151, 209, 333, 913, 1100, 1123, 1133, 1184, 1200, 1202, 1206, 1210, 1224, 1234, 1236, 1242, 1247], "jacrev": [1133, 1210, 1242], "jae": [921, 922], "jake": [1108, 1189, 1194, 1195], "jakevdp": [1185, 1187, 1247], "jame": 508, "januari": 1186, "jargon": 1107, "jax": [1104, 1105, 1106, 1111, 1113, 1118, 1124, 1125, 1128, 1135, 1138, 1182, 1186, 1188, 1192, 1203, 1209, 1211, 1213, 1214, 1215, 1218, 1219, 1221, 1222, 1225, 1226, 1228, 1229, 1231, 1233, 1240, 1241, 1244, 1245, 1246, 1249], "jax2tf": [341, 342, 1110, 1152], "jax2tf_associative_scan_reduct": 1110, "jax2tf_default_experimental_native_low": 1110, "jax2tf_native_seri": 1110, "jax_accelerator_count": 1119, "jax_arrai": [1110, 1180, 1199], "jax_array_migr": 1110, "jax_check_tracer_leak": [5, 6, 1121], "jax_compilation_cache_dir": 1222, "jax_coordination_servic": 1110, "jax_cpp_pmap": 1110, "jax_cpu_enable_async_dispatch": 1110, "jax_cuda_releas": [1127, 1242], "jax_cuda_visible_devic": 1110, "jax_debug_inf": 22, "jax_debug_key_reus": [1121, 1154], "jax_debug_nan": [23, 1116, 1199], "jax_default_devic": 25, "jax_default_matmul_precis": 26, "jax_default_prng_impl": [27, 838, 858, 1173], "jax_disable_jit": 1116, "jax_dump_ir_to": [1110, 1212], "jax_enable_check": 46, "jax_enable_custom_prng": 47, "jax_enable_custom_vjp_by_custom_transpos": 48, "jax_enable_x64": [839, 841, 842, 843, 845, 846, 849, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 865, 866, 867, 868, 870, 872, 873, 875, 876, 877, 878, 879, 1110, 1119, 1195, 1199], "jax_experimental_name_stack": 1110, "jax_fn": 49, "jax_host_callback_ad_transform": 1110, "jax_host_callback_inlin": 1152, "jax_host_callback_legaci": [67, 68, 69, 1110], "jax_host_callback_max_queue_byte_s": 1152, "jax_host_callback_outfe": [67, 69], "jax_in_place_modifi": 1130, "jax_jit": 1212, "jax_jit_pjit_api_merg": 1110, "jax_legacy_prng_kei": 1194, "jax_log_compil": 337, "jax_new_checkpoint": 1184, "jax_nightly_releas": 1127, "jax_num_generated_cas": 1119, "jax_numpy_dtype_promot": [1247, 1248], "jax_numpy_dtype_promt": 1248, "jax_numpy_rank_promot": [819, 1110, 1225], "jax_omnistag": 1193, "jax_parallel_functions_output_gda": 1110, "jax_persistent_cache_min_compile_time_sec": 1110, "jax_platform": [1110, 1122], "jax_raise_persistent_cache_error": 1110, "jax_releas": [1110, 1127], "jax_serialization_vers": 1110, "jax_skip_cuda_constraints_check": 1127, "jax_skip_slow_test": [1110, 1119], "jax_tests_per_acceler": 1119, "jax_threefry_partition": [1173, 1201], "jax_traceback_filt": 1110, "jax_transfer_guard": 1226, "jax_transfer_guard_host_to_devic": 1226, "jax_triton_compile_via_xla": 1110, "jax_typ": 1107, "jax_use_pjrt_c_api_on_tpu": 1110, "jaxcomputationbuild": [1202, 1236], "jaxexcept": 57, "jaxlib": [0, 291, 1107, 1125, 1130, 1176, 1187, 1197, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "jaxlib_nightly_cuda12_releas": 1127, "jaxlib_nightly_releas": 1127, "jaxopt": [1109, 1145, 1189], "jaxpr": [11, 150, 340, 1103, 1104, 1110, 1123, 1131, 1186, 1187, 1188, 1190, 1199, 1200, 1202, 1206, 1208, 1212, 1227, 1233, 1234, 1235, 1236, 1238, 1249], "jaxpr1": 1107, "jaxpr1_typ": 1107, "jaxpr1ti": 1107, "jaxpr2": 1107, "jaxpr2_typ": 1107, "jaxpr2ti": 1107, "jaxpr_as_fun": [1107, 1208, 1233], "jaxpr_comput": 1102, "jaxpr_computation__1": 1102, "jaxpr_has_prim_requiring_devic": 1212, "jaxpr_jvp": [1208, 1233], "jaxpr_out": [1208, 1233], "jaxpr_stack": [1199, 1208, 1212, 1233, 1238], "jaxpr_subcomp": 1107, "jaxpr_to_mlir_module_ev": 1212, "jaxpr_typ": 1107, "jaxpr_util": 1110, "jaxprbuild": 1107, "jaxprdebuginfo": 12, "jaxpreqn": [12, 1107, 1208, 1233], "jaxpreqnrecip": 1107, "jaxprrecip": 1107, "jaxprti": 1107, "jaxprtrac": [1107, 1202, 1208, 1233, 1236], "jaxprtyp": 1107, "jaxruntimeerror": [55, 56, 57], "jaxspars": 124, "jaxstacktracebeforetransform": [1110, 1202, 1208, 1233, 1236], "jaxtestcas": 1110, "jaxtestload": 1110, "jaxtyp": [1145, 1185, 1190, 1247], "jburkardt": 929, "jekbradburi": 1186, "jep": [1110, 1113, 1160, 1173, 1179, 1185, 1188, 1211, 1214, 1215, 1243], "jet": [1110, 1147], "jex": 1187, "jianm": 929, "jin": 929, "jit": [0, 7, 18, 22, 23, 25, 34, 49, 55, 56, 57, 90, 101, 159, 160, 215, 229, 230, 231, 295, 325, 326, 337, 338, 339, 340, 342, 411, 480, 529, 548, 550, 624, 688, 692, 741, 751, 798, 799, 816, 820, 821, 822, 823, 824, 837, 914, 1075, 1102, 1104, 1105, 1109, 1110, 1111, 1115, 1116, 1117, 1120, 1121, 1123, 1130, 1132, 1133, 1134, 1135, 1137, 1138, 1150, 1152, 1154, 1158, 1159, 1170, 1176, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1193, 1195, 1196, 1200, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1213, 1214, 1216, 1218, 1219, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1239, 1243, 1246, 1247, 1248], "jit_f": [1104, 1193], "jit_info": [1199, 1208, 1212, 1233, 1238], "jit_of_checkifi": 1114, "jit_select_tril": 1193, "jit_sharded_f": 1186, "jittable_f": [1114, 1116], "jitted_batch_convolv": [1132, 1231], "jitter": 1186, "jitwrap": [150, 1158], "jj": [397, 467, 773], "jm": 452, "jmlr": 1145, "jmp": 1128, "jnp": [0, 1, 7, 14, 15, 18, 43, 49, 50, 55, 57, 63, 64, 71, 80, 119, 120, 123, 125, 145, 148, 149, 150, 165, 214, 215, 216, 217, 218, 219, 238, 268, 289, 310, 311, 333, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 371, 399, 411, 446, 529, 548, 550, 587, 633, 665, 688, 691, 692, 696, 725, 741, 751, 798, 799, 813, 820, 821, 822, 823, 824, 829, 830, 837, 850, 861, 864, 871, 880, 928, 965, 1075, 1101, 1104, 1106, 1110, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1158, 1159, 1179, 1180, 1182, 1184, 1185, 1186, 1188, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1224, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247, 1248], "jnp_dtype": 1195, "jnp_dtype_to_cod": 1195, "jnp_result_cod": 1195, "job": [1110, 1216], "jobs_per_acc": 1119, "johansson": 933, "john": [508, 606, 631, 699, 921, 922, 929, 1007], "johnson": [741, 935, 936], "join": [196, 197, 461, 768, 1078, 1107, 1145, 1195, 1202, 1212, 1236, 1248], "joinpoint": 1145, "jokingli": 1107, "journal": [895, 1007], "json": [834, 836], "jsp": [1207, 1213], "jt": [1205, 1227], "jtu": [0, 1110], "judg": [1185, 1189], "judgment": 1189, "jump": [1108, 1186], "jupyt": [1119, 1206, 1234], "jupyterrender": [1206, 1234], "jupytext": 1119, "just": [0, 44, 71, 150, 198, 229, 295, 325, 341, 342, 454, 485, 494, 711, 805, 1104, 1107, 1108, 1110, 1114, 1116, 1117, 1119, 1122, 1123, 1128, 1130, 1133, 1134, 1135, 1136, 1137, 1139, 1145, 1151, 1152, 1158, 1176, 1180, 1182, 1183, 1186, 1188, 1190, 1191, 1192, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1225, 1227, 1230, 1232, 1234, 1235, 1236, 1237, 1239, 1243, 1246], "justifi": 1195, "jv": [1208, 1233], "jv_minus_1": [1208, 1233], "jv_plus_1": [1208, 1233], "jvp": [14, 333, 624, 1110, 1122, 1123, 1152, 1153, 1166, 1192, 1197, 1202, 1206, 1208, 1210, 1216, 1233, 1234, 1236], "jvp_flat": 1107, "jvp_jaxpr": [1107, 1208, 1233], "jvp_rule": 1107, "jvp_traceabl": 1107, "jvp_v1": 1107, "jvpfun": [1208, 1233], "jvpfun_flat": [1208, 1233], "jvptrace": 1107, "jvptracer": [1107, 1187, 1202, 1208, 1233, 1236], "jy": 189, "k": [118, 120, 137, 141, 142, 147, 159, 160, 165, 249, 323, 409, 413, 419, 465, 468, 481, 484, 490, 499, 506, 554, 613, 624, 634, 636, 637, 657, 658, 698, 702, 711, 712, 715, 728, 742, 782, 783, 784, 785, 787, 788, 789, 808, 813, 818, 840, 842, 846, 849, 856, 865, 870, 871, 900, 901, 903, 904, 910, 912, 940, 947, 948, 950, 969, 970, 971, 972, 979, 980, 981, 982, 1018, 1019, 1034, 1035, 1046, 1047, 1101, 1107, 1110, 1112, 1131, 1153, 1182, 1186, 1189, 1191, 1199, 1203, 1205, 1206, 1207, 1209, 1211, 1213, 1214, 1216, 1234, 1237, 1238, 1239], "k1": [1135, 1201, 1211, 1218, 1224, 1247], "k2": [1135, 1201, 1211, 1218, 1224, 1247], "k_": 712, "k_0": 712, "kaggl": 1136, "kaim": [355, 356], "kaiser": 440, "kanasewich": [430, 562, 563, 606], "kappa": [1062, 1063], "kde": [1007, 1011], "keep": [71, 72, 150, 342, 419, 499, 554, 624, 698, 818, 1101, 1106, 1107, 1110, 1112, 1119, 1122, 1128, 1130, 1134, 1136, 1137, 1144, 1145, 1151, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1199, 1205, 1208, 1210, 1211, 1212, 1214, 1219, 1224, 1227, 1233, 1238, 1243, 1246, 1248], "keep_input": [1199, 1208, 1212, 1233, 1238], "keep_unus": [150, 1158, 1208, 1212, 1233], "keepal": [1110, 1202, 1212, 1236], "keepdim": [214, 238, 369, 390, 392, 393, 395, 407, 408, 429, 471, 626, 631, 643, 660, 662, 663, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 720, 722, 724, 769, 771, 810, 955, 1029, 1049, 1186, 1199, 1201, 1212, 1214, 1244], "kei": [43, 49, 68, 71, 73, 122, 128, 137, 140, 141, 142, 146, 147, 150, 165, 291, 312, 313, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 558, 613, 747, 750, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 907, 1014, 1078, 1081, 1082, 1085, 1087, 1089, 1105, 1106, 1107, 1109, 1110, 1120, 1121, 1122, 1131, 1134, 1136, 1137, 1158, 1165, 1169, 1180, 1185, 1187, 1188, 1190, 1191, 1193, 1195, 1197, 1198, 1199, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1216, 1218, 1223, 1224, 1227, 1230, 1233, 1235, 1238, 1242, 1243, 1246, 1248], "kepler": [1110, 1127], "kept": [0, 12, 527, 645, 1182, 1195, 1197, 1200, 1227, 1237], "kera": [198, 1169], "kernel": [0, 50, 146, 147, 150, 193, 194, 195, 196, 197, 198, 199, 352, 364, 1007, 1011, 1110, 1152, 1165, 1210, 1212, 1218, 1220, 1223, 1228, 1242, 1249], "kernel1": 1216, "kernel2": 1216, "kernel_help": 0, "kernel_rot": 1207, "kernelapp": [1208, 1233], "kernelbas": [1208, 1233], "key1": [1194, 1242], "key2": [1194, 1242], "key_arr": 1194, "key_bits_arrai": 881, "key_data": [1110, 1173, 1194], "key_path": [1135, 1247], "key_reus": [848, 1147], "key_shap": [136, 137, 141, 142], "keyarrai": [1110, 1185, 1194], "keyboardinterrupt": [1208, 1233], "keyentri": [1078, 1081, 1085, 1087], "keyerror": [1202, 1236], "keypair": 140, "keyreuseerror": [1121, 1154], "keystr": [1110, 1135, 1247], "keyword": [7, 16, 17, 19, 50, 55, 67, 68, 69, 70, 117, 118, 122, 127, 409, 410, 472, 496, 650, 651, 652, 653, 654, 655, 658, 672, 681, 683, 703, 705, 724, 747, 816, 824, 828, 837, 892, 1101, 1107, 1110, 1152, 1173, 1176, 1190, 1200, 1205, 1227, 1230], "kib": 1221, "kick": [1107, 1121], "killer": 1214, "kind": [0, 67, 409, 410, 418, 447, 527, 572, 593, 762, 948, 950, 956, 957, 1107, 1117, 1121, 1130, 1137, 1152, 1175, 1180, 1185, 1190, 1191, 1195, 1200, 1203, 1208, 1209, 1211, 1219, 1227, 1232, 1233, 1242, 1246], "kk": [397, 773], "kl": 952, "kloop": 0, "km": 1214, "know": [0, 1104, 1107, 1110, 1112, 1114, 1121, 1122, 1127, 1130, 1131, 1133, 1136, 1152, 1159, 1185, 1188, 1190, 1191, 1194, 1196, 1199, 1202, 1205, 1206, 1210, 1214, 1216, 1218, 1227, 1234, 1236, 1238], "knowledg": [0, 1112, 1133, 1191, 1227], "known": [82, 84, 90, 195, 196, 197, 198, 199, 215, 229, 232, 296, 297, 298, 299, 300, 301, 333, 645, 711, 820, 821, 822, 823, 907, 928, 940, 964, 1107, 1110, 1119, 1121, 1123, 1127, 1146, 1170, 1182, 1188, 1195, 1199, 1204, 1212, 1218, 1234, 1237, 1239], "known_trac": 1107, "known_val": 1107, "kp": 1089, "kroneck": 607, "krylov": [120, 926], "kth": [409, 702], "kullback": [952, 963], "kuo": 606, "kv": 1186, "kv_cach": 1186, "kvcach": 1186, "kw": [705, 1075, 1208, 1233, 1247], "kwarg": [2, 16, 17, 19, 20, 50, 67, 68, 69, 70, 119, 125, 397, 548, 549, 550, 645, 652, 653, 654, 655, 657, 658, 679, 681, 683, 684, 701, 719, 828, 829, 837, 1075, 1110, 1117, 1131, 1137, 1152, 1175, 1176, 1190, 1199, 1202, 1204, 1206, 1208, 1212, 1233, 1234, 1236, 1238, 1246, 1247], "kwargs_": 1212, "kwd": [117, 118, 122, 747], "l": [0, 245, 250, 417, 614, 620, 622, 888, 890, 900, 901, 956, 957, 965, 1107, 1117, 1121, 1133, 1182, 1199, 1205, 1206, 1208, 1211, 1223, 1227, 1230, 1233, 1234, 1237], "l1": [894, 1107, 1216], "l1789": 1194, "l1802": 1194, "l2": [120, 160, 1107, 1145], "l2_ann": 160, "l2_norm": 1145, "l2phy": 1186, "l_max": [956, 957], "la": 1242, "label": [195, 196, 496, 1131, 1135, 1136, 1137, 1197, 1203, 1205, 1209, 1213, 1214, 1227, 1230, 1238, 1246], "label_prob": [1205, 1230], "laboratori": 572, "lack": [1188, 1189, 1191, 1219], "lai": [1187, 1201], "laid": [188, 338, 339, 1175, 1195, 1244], "lam": 870, "lambda": [0, 7, 13, 19, 50, 119, 120, 125, 145, 157, 209, 272, 279, 280, 317, 332, 339, 340, 374, 705, 750, 824, 837, 870, 1070, 1088, 1101, 1107, 1110, 1121, 1131, 1133, 1135, 1136, 1137, 1151, 1152, 1153, 1158, 1175, 1180, 1182, 1186, 1187, 1188, 1190, 1195, 1198, 1199, 1200, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1221, 1224, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1246, 1247], "lambda_": [1131, 1238, 1239], "lambdabindingrecip": 1107, "lanczo": [146, 147, 1165], "lanczos3": [146, 147, 1165], "lanczos5": [146, 147, 1165], "land": [1185, 1188], "lane": 1219, "languag": [71, 340, 405, 424, 736, 1104, 1119, 1131, 1176, 1182, 1185, 1190, 1199, 1203, 1204, 1209, 1214, 1216, 1228, 1235, 1239, 1249], "lapack": 904, "lapack_driv": [893, 910], "laptop": [1127, 1196, 1214], "larg": [0, 71, 120, 209, 218, 219, 295, 325, 472, 567, 633, 635, 645, 672, 723, 748, 808, 896, 915, 916, 917, 918, 920, 1107, 1110, 1112, 1119, 1120, 1122, 1126, 1131, 1136, 1145, 1159, 1184, 1185, 1189, 1193, 1195, 1196, 1199, 1200, 1205, 1206, 1210, 1211, 1216, 1219, 1227, 1234, 1238], "larger": [71, 82, 84, 101, 104, 409, 431, 453, 508, 509, 511, 514, 515, 516, 518, 521, 522, 525, 527, 645, 733, 735, 779, 804, 808, 824, 876, 926, 1108, 1110, 1112, 1122, 1133, 1195, 1197, 1205, 1206, 1207, 1211, 1214, 1218, 1219, 1222, 1227, 1234, 1249], "largest": [232, 247, 431, 497, 527, 540, 541, 615, 624, 672, 688, 711, 773, 1131, 1193, 1195, 1214, 1216, 1238], "largest_singular_valu": 633, "laser": [1203, 1209], "last": [0, 55, 56, 57, 157, 158, 271, 272, 273, 279, 280, 281, 323, 390, 395, 399, 409, 410, 429, 430, 441, 446, 473, 486, 490, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 525, 531, 557, 559, 579, 613, 630, 637, 644, 656, 659, 681, 683, 688, 701, 702, 703, 720, 722, 723, 724, 725, 728, 734, 739, 748, 762, 768, 771, 777, 808, 813, 849, 865, 882, 883, 884, 885, 891, 894, 912, 919, 921, 922, 923, 926, 997, 998, 1014, 1030, 1031, 1032, 1033, 1105, 1107, 1110, 1121, 1122, 1130, 1131, 1135, 1151, 1152, 1154, 1166, 1186, 1190, 1193, 1196, 1198, 1199, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1219, 1221, 1227, 1233, 1234, 1236, 1238, 1247, 1248], "last_execution_succeed": [1208, 1233], "last_param": 1211, "lastli": 1199, "late": 1107, "latenc": [1125, 1186, 1219], "later": [16, 37, 546, 685, 1107, 1112, 1117, 1121, 1125, 1130, 1134, 1136, 1152, 1176, 1185, 1187, 1195, 1197, 1204, 1205, 1214, 1216, 1219, 1227, 1239, 1243], "latest": [38, 143, 413, 419, 465, 546, 816, 1066, 1101, 1110, 1119, 1120, 1130, 1131, 1173, 1175, 1179, 1193, 1195, 1199, 1202, 1212, 1236, 1238], "latin1": 645, "latter": [195, 196, 542, 543, 661, 667, 774, 919, 1107, 1119, 1152, 1187, 1188, 1191, 1200, 1202, 1227, 1236], "lattic": 1248, "lattice_result_typ": 1247, "launch": [0, 35], "launch_inst": [1208, 1233], "launch_new_inst": [1202, 1208, 1233, 1236], "laundri": 1185, "law": [1203, 1209], "lawrenc": 919, "lax": [0, 26, 49, 50, 86, 87, 90, 93, 97, 98, 100, 369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 751, 752, 754, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 799, 804, 805, 808, 809, 810, 811, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 958, 961, 962, 963, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1101, 1102, 1105, 1107, 1110, 1115, 1122, 1123, 1129, 1131, 1133, 1136, 1147, 1152, 1159, 1170, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1198, 1199, 1200, 1201, 1202, 1204, 1206, 1208, 1211, 1213, 1214, 1216, 1219, 1221, 1224, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1244, 1247], "lax_control_flow": 1190, "lax_descript": 1247, "lax_linalg": 1110, "lax_nump": [1199, 1212, 1247], "lax_numpi": [1110, 1119, 1130, 1199, 1212, 1247], "lax_numpy_test": 1119, "lax_scipy_test": 1112, "layer": [196, 198, 342, 364, 1107, 1117, 1125, 1135, 1137, 1146, 1169, 1186, 1188, 1190, 1191, 1203, 1206, 1209, 1211, 1214, 1234, 1244, 1246, 1247], "layer0_output": [1206, 1234], "layer1_output": [1206, 1234], "layer_auto": 1244, "layer_s": [1201, 1203, 1209, 1211], "layer_shard": 1244, "layer_width": [1135, 1247], "layerparam": [1206, 1234], "layout": [30, 104, 338, 413, 419, 465, 728, 734, 1186, 1201, 1211, 1216, 1244], "lazi": [1122, 1193], "lazili": [1110, 1204], "lceil": [185, 450], "lcudadevrt": 0, "lcudart_stat": 0, "ld": 1122, "ld_library_path": [1110, 1122, 1127, 1223], "ldexp": 1110, "ldl": 0, "ldot": [346, 712], "le": [343, 344, 350, 374, 840, 841, 849, 851, 854, 864, 868], "lead": [7, 31, 37, 38, 70, 71, 104, 179, 180, 182, 187, 262, 295, 302, 325, 399, 441, 527, 546, 664, 675, 676, 688, 707, 710, 713, 741, 773, 786, 813, 820, 821, 822, 823, 824, 837, 874, 881, 947, 1101, 1107, 1110, 1121, 1122, 1127, 1136, 1152, 1173, 1180, 1189, 1190, 1191, 1192, 1194, 1195, 1198, 1199, 1202, 1206, 1208, 1211, 1219, 1221, 1225, 1233, 1234, 1236, 1244, 1248], "leaf": [32, 70, 143, 145, 157, 158, 271, 272, 273, 277, 278, 279, 281, 1068, 1069, 1070, 1071, 1072, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1107, 1110, 1135, 1178, 1208, 1224, 1233, 1239, 1247], "leak": [5, 6, 645, 1110, 1121], "leakag": 440, "leaki": 366, "lean": [1189, 1195], "learn": [444, 651, 1107, 1109, 1116, 1123, 1126, 1127, 1130, 1131, 1133, 1134, 1135, 1137, 1144, 1145, 1173, 1182, 1199, 1201, 1204, 1205, 1210, 1211, 1214, 1216, 1219, 1221, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "learning_r": [1135, 1136, 1137, 1145, 1246, 1247], "least": [4, 26, 69, 160, 339, 426, 427, 428, 429, 431, 483, 493, 497, 526, 532, 542, 543, 592, 624, 634, 661, 667, 711, 815, 915, 916, 917, 918, 920, 926, 928, 1101, 1107, 1110, 1118, 1122, 1125, 1127, 1131, 1136, 1137, 1166, 1183, 1186, 1187, 1188, 1191, 1195, 1196, 1198, 1199, 1200, 1211, 1214, 1219, 1221, 1227, 1238, 1246], "leav": [4, 32, 50, 70, 75, 143, 145, 146, 150, 229, 295, 325, 340, 567, 837, 1067, 1068, 1070, 1071, 1072, 1074, 1076, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1102, 1110, 1122, 1133, 1136, 1145, 1158, 1176, 1178, 1180, 1185, 1186, 1189, 1199, 1210, 1211, 1212, 1224, 1227, 1239], "lectur": 909, "lecun": [357, 358, 1203], "led": 1122, "left": [71, 120, 185, 228, 229, 246, 254, 280, 295, 304, 343, 344, 345, 346, 368, 369, 390, 392, 393, 395, 407, 408, 429, 435, 471, 487, 526, 532, 548, 550, 587, 610, 631, 660, 662, 663, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 706, 720, 722, 723, 724, 748, 769, 771, 781, 809, 810, 852, 863, 875, 876, 879, 886, 903, 910, 955, 965, 1029, 1049, 1068, 1084, 1122, 1136, 1186, 1188, 1190, 1195, 1200, 1208, 1211, 1214, 1216, 1219, 1221, 1223, 1227, 1233], "left_shift": 435, "left_sid": 255, "leftmost": 566, "leg": 571, "legaci": [37, 750, 921, 922, 924, 925, 926, 1173, 1194], "legal": 580, "legend": [1135, 1136, 1137, 1213, 1246], "legendr": [956, 957, 1189], "leibler": [952, 963], "lemma": [1133, 1227], "len": [0, 7, 31, 32, 122, 303, 319, 336, 339, 392, 393, 459, 487, 511, 512, 516, 519, 521, 525, 577, 660, 664, 666, 705, 711, 753, 809, 883, 885, 911, 956, 957, 1070, 1088, 1089, 1107, 1132, 1135, 1136, 1151, 1180, 1185, 1191, 1199, 1201, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1218, 1227, 1231, 1233, 1234, 1242, 1247], "length": [0, 13, 32, 33, 90, 97, 98, 143, 146, 147, 151, 195, 196, 197, 215, 232, 289, 295, 333, 371, 399, 417, 429, 431, 447, 459, 464, 486, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 524, 525, 530, 552, 557, 559, 565, 568, 570, 587, 619, 650, 651, 652, 653, 654, 655, 656, 664, 699, 701, 705, 715, 733, 734, 741, 748, 749, 753, 767, 774, 777, 778, 815, 824, 882, 883, 884, 885, 919, 921, 922, 923, 1101, 1110, 1135, 1146, 1152, 1153, 1158, 1175, 1182, 1194, 1198, 1199, 1200, 1201, 1202, 1206, 1214, 1219, 1221, 1227, 1234, 1236, 1237, 1247], "leq": [243, 380, 876, 931], "less": [160, 243, 261, 288, 380, 398, 430, 440, 452, 459, 472, 475, 476, 527, 562, 563, 565, 567, 606, 624, 633, 675, 676, 682, 685, 702, 720, 755, 771, 779, 824, 926, 942, 1107, 1110, 1122, 1130, 1131, 1137, 1166, 1170, 1173, 1185, 1186, 1189, 1196, 1205, 1206, 1211, 1213, 1221, 1227, 1234, 1238, 1242, 1246, 1248], "less_jvp": 1107, "less_p": 1107, "lesson": 1219, "let": [71, 340, 1104, 1107, 1110, 1114, 1116, 1122, 1123, 1127, 1128, 1130, 1131, 1133, 1135, 1136, 1137, 1153, 1159, 1180, 1182, 1183, 1190, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1227, 1232, 1233, 1237, 1238, 1239, 1242, 1244, 1246], "letter": [634, 1214], "level": [7, 26, 34, 71, 85, 208, 209, 213, 291, 337, 340, 441, 472, 527, 683, 724, 1066, 1107, 1110, 1131, 1145, 1159, 1173, 1178, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1200, 1202, 1206, 1208, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1239], "leverag": 1216, "levskaya": 1199, "lexic": [13, 1192, 1205, 1227], "lexicograph": [122, 263, 264, 312, 1196, 1219], "lexsort": 1110, "lfloor": [228, 540], "lh": [88, 89, 94, 95, 105, 170, 193, 195, 196, 197, 198, 199, 212, 213, 1107, 1186, 1201, 1211], "lhs_batch_dim": [88, 89, 105, 213], "lhs_block": 1211, "lhs_contracting_dim": [88, 89, 105, 213], "lhs_dilat": [195, 196, 197, 199], "lhs_shape": 194, "lhs_spec": [195, 196, 197, 1166, 1207, 1211], "li": [545, 740, 893], "lib": [0, 452, 572, 576, 745, 746, 747, 944, 945, 1105, 1107, 1119, 1130, 1131, 1187, 1196, 1199, 1202, 1203, 1208, 1212, 1233, 1236, 1238, 1247], "lib64": [0, 1223], "libcupti": 1223, "libdevic": 1110, "librari": [16, 34, 490, 544, 746, 930, 931, 933, 938, 939, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 961, 962, 968, 1076, 1110, 1112, 1119, 1121, 1126, 1127, 1130, 1133, 1135, 1137, 1144, 1145, 1146, 1152, 1165, 1166, 1168, 1170, 1173, 1178, 1180, 1185, 1187, 1189, 1190, 1191, 1195, 1196, 1199, 1200, 1202, 1203, 1206, 1209, 1210, 1211, 1216, 1223, 1227, 1234, 1236, 1242, 1246], "libtpu": [1110, 1127], "libtpu_releas": 1127, "licens": [1203, 1209], "liebler": 952, "lieven": [934, 952, 963], "life": [1110, 1121], "lifecycl": 1222, "lifegiv": 1199, "lift": [1107, 1180, 1182, 1188, 1212, 1214, 1218, 1221, 1237], "light": 1189, "lightgrai": [1195, 1207], "lightweight": [1188, 1189, 1197], "like": [0, 3, 7, 13, 14, 15, 16, 17, 19, 26, 28, 30, 33, 34, 35, 42, 49, 56, 57, 68, 69, 71, 97, 137, 141, 142, 150, 198, 208, 209, 213, 216, 229, 231, 262, 280, 295, 325, 333, 336, 338, 341, 342, 369, 394, 399, 427, 428, 441, 446, 447, 454, 480, 521, 524, 526, 557, 593, 595, 603, 634, 644, 645, 656, 657, 664, 688, 725, 728, 734, 736, 747, 748, 774, 824, 827, 837, 847, 874, 924, 925, 926, 955, 1048, 1081, 1085, 1087, 1097, 1102, 1104, 1107, 1110, 1111, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1127, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1144, 1145, 1146, 1152, 1154, 1158, 1159, 1166, 1170, 1177, 1178, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247, 1248], "likelihood": [1109, 1205, 1230], "lim": [921, 922], "limit": [231, 310, 338, 341, 342, 453, 527, 645, 758, 876, 931, 1049, 1102, 1104, 1107, 1110, 1111, 1112, 1124, 1127, 1128, 1131, 1152, 1182, 1186, 1191, 1195, 1199, 1200, 1202, 1203, 1207, 1208, 1209, 1212, 1214, 1216, 1219, 1227, 1232, 1233, 1236, 1237, 1238], "limit_index": [238, 311], "limit_indic": [98, 310, 1185], "lin_fn": 333, "linalg": [160, 209, 490, 711, 1110, 1152, 1205, 1214, 1227], "line": [0, 71, 750, 913, 914, 1107, 1110, 1115, 1119, 1121, 1122, 1128, 1137, 1144, 1186, 1189, 1190, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1206, 1212, 1225, 1226, 1227, 1234, 1236, 1246], "line2d": [1200, 1227], "linear": [7, 13, 71, 121, 146, 147, 191, 208, 209, 257, 332, 343, 344, 345, 346, 366, 372, 373, 374, 380, 464, 496, 587, 615, 619, 620, 624, 633, 636, 656, 681, 683, 701, 703, 707, 724, 813, 889, 907, 909, 912, 915, 916, 917, 918, 920, 924, 925, 926, 928, 1109, 1110, 1117, 1123, 1130, 1131, 1133, 1159, 1165, 1182, 1186, 1187, 1188, 1189, 1190, 1200, 1202, 1205, 1206, 1208, 1212, 1227, 1233, 1234, 1236, 1237, 1238], "linear_ramp": 701, "linear_transpos": 1110, "linear_util": [1105, 1107, 1110, 1131, 1160, 1199, 1202, 1208, 1212, 1233, 1236, 1238], "linearize_flat": 1107, "linearli": [120, 624, 1182, 1199, 1202, 1206, 1234, 1236, 1237], "linearoper": [924, 925], "lineax": 1189, "linen": 1125, "linewidth": [416, 418, 558, 750], "link": [834, 836, 1101, 1110, 1116, 1119, 1127, 1133, 1195, 1197, 1198, 1204, 1223], "linker": 1122, "linspac": [399, 665, 696, 725, 750, 1110, 1170, 1185, 1200, 1207, 1212, 1227, 1239], "linter": 1119, "linux": [1110, 1118, 1127, 1242], "lir": 1212, "list": [7, 9, 12, 19, 32, 33, 50, 51, 71, 90, 96, 103, 127, 150, 151, 157, 158, 191, 194, 215, 218, 229, 246, 271, 272, 273, 277, 278, 279, 280, 281, 293, 295, 303, 325, 331, 332, 336, 340, 417, 419, 426, 427, 428, 441, 443, 452, 464, 468, 490, 492, 496, 497, 512, 526, 559, 567, 568, 569, 579, 658, 664, 705, 712, 747, 749, 764, 777, 780, 811, 812, 814, 824, 894, 919, 921, 922, 923, 1068, 1069, 1084, 1085, 1086, 1087, 1094, 1101, 1104, 1105, 1107, 1108, 1110, 1120, 1121, 1122, 1123, 1128, 1130, 1132, 1135, 1145, 1148, 1152, 1153, 1158, 1170, 1176, 1182, 1183, 1185, 1189, 1194, 1199, 1201, 1204, 1206, 1208, 1211, 1212, 1214, 1218, 1219, 1224, 1231, 1233, 1234, 1237, 1238, 1239, 1247], "list_of_list": [1135, 1247], "list_of_tre": [1135, 1247], "listedcolormap": 1207, "listen": [35, 66], "lit": 1107, "lit_bind": 1107, "lit_val": 1107, "liter": [12, 229, 364, 1107, 1182, 1188, 1204, 1237, 1248], "literal_ev": 645, "literals_out": [1208, 1233], "littl": [17, 82, 84, 700, 804, 1107, 1128, 1131, 1189, 1206, 1213, 1214, 1221, 1234, 1238], "live": [334, 1120, 1179, 1183, 1196, 1204, 1218, 1221], "ll": [304, 876, 953, 1107, 1114, 1117, 1122, 1125, 1130, 1136, 1137, 1183, 1185, 1188, 1189, 1192, 1193, 1195, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1227, 1233, 1236, 1239, 1242, 1244, 1246], "ll128": 1125, "llm": [339, 1184, 1188], "llo": 1216, "llvm": [1110, 1196], "lm1b": 1125, "lmbda": [150, 1210, 1242], "lmpn": 1189, "ln": [656, 932, 946], "ln_2": [1131, 1238], "ln_x": [1131, 1238], "lo": [892, 1110, 1192, 1200, 1227], "load": [339, 746, 747, 834, 836, 1103, 1124, 1189, 1190, 1198, 1207, 1219, 1221, 1223], "loadabl": 746, "loader": [1203, 1209], "loan": [631, 699, 896], "lobpcg": 120, "loc": [850, 880, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1202, 1212, 1213, 1236], "local": [0, 33, 35, 71, 72, 76, 77, 120, 196, 336, 339, 824, 825, 1066, 1110, 1112, 1114, 1119, 1130, 1131, 1136, 1146, 1152, 1154, 1158, 1183, 1186, 1188, 1194, 1202, 1211, 1214, 1223, 1225, 1226, 1234, 1236, 1242, 1244, 1248], "local_batch": 1211, "local_data": 1180, "local_devic": [0, 31, 32, 339, 1110, 1152, 1175, 1198, 1201, 1214], "local_device_count": [0, 28, 77, 824, 1136, 1198], "local_device_id": [35, 1198], "local_hardware_id": 38, "local_inp": 1180, "local_input": [77, 1180, 1216], "local_loss": [1188, 1211], "local_matmul": 1214, "local_out": 1180, "local_output": 1216, "local_param": 1211, "local_shard": 1180, "local_test_job": 1119, "localhost": [35, 1223], "locat": [147, 179, 196, 443, 445, 526, 650, 651, 652, 653, 654, 655, 657, 658, 664, 688, 748, 850, 879, 921, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1101, 1110, 1121, 1122, 1132, 1137, 1195, 1222, 1223, 1231, 1246], "location_cach": [1202, 1236], "lock": 120, "log": [19, 66, 244, 259, 331, 337, 367, 368, 369, 379, 557, 635, 648, 650, 656, 834, 836, 844, 854, 861, 863, 934, 946, 952, 953, 954, 955, 958, 963, 964, 967, 970, 974, 975, 976, 979, 981, 985, 986, 987, 992, 993, 994, 997, 999, 1002, 1003, 1004, 1012, 1016, 1018, 1021, 1025, 1030, 1032, 1034, 1038, 1039, 1040, 1044, 1046, 1050, 1053, 1054, 1055, 1059, 1062, 1064, 1114, 1115, 1119, 1122, 1130, 1131, 1136, 1152, 1159, 1183, 1200, 1204, 1205, 1208, 1223, 1226, 1227, 1230, 1232, 1233, 1238], "log1p": [966, 1159], "log1pexp": [1200, 1227], "log1pexp_jvp": [1200, 1227], "log2": [651, 894, 1131, 1238], "log2_if_rank_2": [1131, 1238], "log2_with_print": [1131, 1238], "log_2": [1206, 1234], "log_bas": 656, "log_compil": 1110, "log_dir": [834, 835, 836, 1223], "log_elapsed_tim": 1212, "log_explicit": 1226, "log_joint": 1213, "log_prob": 1213, "log_sigmoid": 375, "log_softmax": [378, 1110], "log_valu": [1183, 1208, 1232, 1233], "logabsdet": 635, "logaddexp": 1110, "logaddexp2": 1110, "logarithm": [258, 368, 369, 635, 646, 647, 648, 649, 650, 651, 932, 933, 946, 955, 1110, 1122], "logdir": 1223, "loggamma": [854, 1110], "logging_nam": 66, "logic": [0, 72, 73, 150, 158, 174, 306, 331, 390, 395, 652, 653, 654, 655, 700, 1107, 1121, 1122, 1151, 1158, 1175, 1180, 1186, 1188, 1190, 1194, 1199, 1201, 1211, 1212, 1214, 1216, 1221, 1224, 1232, 1247], "logical_to_phys": 1186, "logist": [940, 1205], "logit": [342, 844, 940, 1110, 1117, 1190, 1203, 1205, 1209, 1214, 1227], "logpcg_test": 1119, "logpdf": [1110, 1213], "logpmf": 1110, "logspac": 557, "logsumexp": [203, 1110, 1203, 1209, 1214], "lollipop": 1107, "london": [572, 1007], "long": [35, 71, 447, 627, 750, 942, 1107, 1110, 1119, 1122, 1135, 1136, 1183, 1185, 1187, 1188, 1189, 1193, 1195, 1196, 1198, 1199, 1200, 1202, 1214, 1216, 1221, 1223, 1227, 1236, 1247], "long_vector": 1130, "longcomplexfloat": 750, "longer": [18, 71, 150, 416, 418, 431, 464, 513, 519, 824, 1102, 1105, 1110, 1118, 1121, 1122, 1124, 1127, 1130, 1131, 1136, 1137, 1138, 1158, 1180, 1184, 1190, 1194, 1195, 1197, 1201, 1205, 1215, 1223, 1227, 1244, 1246], "longfloat": 750, "longitud": [957, 965], "longitudin": 965, "look": [73, 452, 691, 774, 1107, 1109, 1110, 1121, 1122, 1126, 1127, 1130, 1131, 1135, 1137, 1144, 1145, 1150, 1179, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1195, 1198, 1200, 1201, 1204, 1205, 1206, 1208, 1211, 1212, 1214, 1216, 1223, 1227, 1232, 1233, 1234, 1237, 1238, 1244, 1246, 1247], "loop": [229, 262, 295, 325, 397, 813, 1110, 1120, 1121, 1122, 1131, 1132, 1133, 1136, 1152, 1158, 1182, 1186, 1191, 1198, 1199, 1200, 1201, 1204, 1205, 1208, 1210, 1212, 1216, 1219, 1223, 1227, 1231, 1233, 1237, 1238, 1242, 1243], "loop_bodi": [1131, 1238], "loop_indic": 1216, "loop_jmp": [1205, 1227], "loop_mjp": [1205, 1227], "loop_multiply_fus": 0, "loop_v": [1205, 1227], "loopi": 1189, "loos": [495, 1107], "lose": [495, 1145, 1183, 1195], "loss": [0, 71, 1130, 1133, 1136, 1137, 1159, 1188, 1201, 1205, 1206, 1211, 1214, 1227, 1230, 1234, 1246, 1247], "loss2": [1205, 1230], "loss_checkpoint": [1206, 1234], "loss_checkpoint2": [1206, 1234], "loss_dp": 1211, "loss_fn": [1130, 1133, 1135, 1136, 1145, 1227, 1247], "loss_fsdp": 1211, "loss_fsdp_tp": 1211, "loss_grad": 0, "loss_jit": 1201, "loss_pp": 1211, "loss_spmd": 1211, "loss_tp": 1211, "loss_valu": [1205, 1230], "losslessli": 736, "lost": [1117, 1185], "lot": [576, 630, 745, 1107, 1114, 1145, 1184, 1188, 1189, 1196, 1199, 1203, 1204, 1209, 1218, 1221], "loud": [1192, 1193], "love": [1108, 1144], "low": [195, 196, 197, 199, 209, 269, 291, 515, 516, 624, 712, 1009, 1110, 1187, 1189, 1200, 1216, 1219, 1223, 1227, 1236], "lower": [18, 42, 71, 118, 229, 245, 247, 249, 250, 255, 256, 257, 280, 295, 325, 340, 362, 399, 506, 565, 567, 568, 603, 614, 620, 622, 681, 683, 703, 724, 782, 783, 784, 785, 876, 877, 888, 889, 890, 892, 900, 901, 907, 908, 944, 953, 965, 972, 989, 1009, 1027, 1042, 1061, 1102, 1105, 1107, 1110, 1114, 1122, 1124, 1151, 1152, 1159, 1176, 1183, 1186, 1187, 1188, 1189, 1193, 1195, 1196, 1201, 1202, 1212, 1214, 1218, 1219, 1221, 1228, 1236, 1249], "lower_fn": 1151, "lower_fun": 0, "lower_jaxpr_to_modul": 1212, "lower_seg": 953, "lower_sharding_comput": 1212, "lower_xla_cal": 1131, "lowered_with_x": 1104, "lowering_paramet": [1202, 1212, 1236], "lowering_result": 1212, "loweringparamet": [1202, 1212, 1236], "loweringresult": 1212, "loweringrulecontext": [1202, 1236], "lowest": [188, 429, 497, 608, 707, 708, 713, 1216, 1219], "lp": 839, "lpmn": [957, 1110, 1189], "lpmn_valu": [1110, 1189], "lpthread": 0, "lr": [1130, 1133, 1227], "lrt": 0, "lru_cach": 1107, "lst": 1107, "lst1": 1107, "lst2": 1107, "lstsq": 711, "lt": [1107, 1182, 1199, 1206, 1208, 1212, 1233, 1234, 1237, 1238, 1247], "lto": 0, "lu": [901, 902, 1110, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "lu_and_piv": 902, "luck": 1107, "luckili": [1205, 1227], "lurk": [1200, 1227], "lvert": 946, "lwork": 904, "lx": 1196, "ly": 1196, "lz": 1196, "m": [0, 80, 118, 120, 123, 249, 250, 251, 252, 255, 257, 274, 387, 388, 397, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 428, 430, 440, 464, 469, 472, 490, 493, 501, 506, 509, 511, 513, 515, 516, 519, 521, 525, 531, 532, 533, 562, 563, 572, 606, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 633, 634, 635, 636, 637, 646, 647, 648, 658, 662, 678, 699, 707, 709, 711, 712, 742, 749, 760, 773, 774, 775, 776, 782, 783, 784, 787, 788, 813, 847, 888, 890, 891, 892, 893, 897, 900, 901, 903, 904, 905, 906, 908, 910, 923, 924, 925, 926, 956, 957, 961, 965, 1007, 1106, 1110, 1112, 1119, 1122, 1128, 1130, 1131, 1133, 1152, 1159, 1175, 1182, 1186, 1199, 1201, 1203, 1205, 1206, 1209, 1210, 1211, 1212, 1214, 1221, 1223, 1227, 1234, 1237, 1238], "m1": 1110, "m_": [1182, 1237], "m_i": [1205, 1227], "m_sp": [80, 1159], "ma": [394, 416, 1186, 1202, 1236], "mac": [1110, 1119], "machep": 527, "machin": [508, 527, 624, 651, 893, 1107, 1110, 1119, 1126, 1127, 1130, 1131, 1133, 1134, 1135, 1137, 1144, 1182, 1199, 1200, 1201, 1202, 1204, 1205, 1207, 1208, 1210, 1211, 1212, 1213, 1216, 1219, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "machineri": [50, 1130, 1160, 1182, 1183, 1187, 1188, 1190, 1200, 1204, 1208, 1227, 1233, 1237], "maco": [1127, 1242], "maddock": [944, 945], "made": [0, 413, 426, 458, 607, 645, 672, 728, 1105, 1110, 1120, 1130, 1152, 1159, 1173, 1190, 1191, 1194, 1195, 1196, 1202, 1214, 1216, 1221, 1236], "magic": [1122, 1199, 1239], "magnitud": [507, 923, 1133, 1184, 1195, 1212, 1227], "mai": [2, 5, 6, 7, 9, 15, 18, 19, 34, 35, 37, 38, 49, 70, 90, 122, 150, 208, 215, 232, 245, 251, 255, 262, 285, 289, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 332, 369, 384, 390, 395, 399, 409, 422, 426, 427, 428, 443, 445, 447, 452, 464, 468, 480, 481, 484, 485, 490, 494, 496, 527, 531, 532, 533, 546, 548, 550, 552, 559, 567, 579, 615, 624, 634, 635, 645, 650, 651, 658, 664, 670, 672, 688, 702, 710, 713, 722, 723, 728, 734, 740, 742, 746, 750, 764, 767, 772, 777, 778, 780, 811, 812, 834, 836, 837, 889, 896, 897, 900, 905, 906, 914, 926, 955, 1076, 1105, 1107, 1109, 1111, 1112, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1127, 1132, 1133, 1134, 1145, 1151, 1152, 1158, 1170, 1173, 1175, 1176, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1216, 1218, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247], "main": [0, 1, 71, 118, 481, 482, 483, 484, 485, 506, 526, 573, 621, 622, 779, 782, 783, 910, 1104, 1107, 1110, 1112, 1115, 1117, 1119, 1127, 1128, 1130, 1131, 1159, 1180, 1183, 1184, 1185, 1188, 1189, 1191, 1193, 1194, 1196, 1197, 1199, 1201, 1202, 1208, 1210, 1212, 1216, 1219, 1221, 1224, 1233, 1236, 1238, 1247], "main_typ": [1208, 1233], "mainli": [333, 1188, 1189, 1208, 1233], "mainlin": 1107, "maintain": [120, 485, 634, 748, 1110, 1112, 1119, 1137, 1152, 1183, 1184, 1189, 1191, 1194, 1195, 1196, 1216, 1219, 1246, 1248], "mainten": 1189, "maintrac": 1107, "majesti": 572, "major": [38, 188, 413, 419, 692, 715, 728, 729, 1107, 1110, 1134, 1135, 1185, 1186, 1194, 1196, 1216, 1247], "make": [0, 7, 16, 46, 67, 71, 123, 150, 189, 198, 218, 219, 295, 325, 339, 341, 342, 441, 443, 454, 493, 494, 527, 570, 624, 664, 710, 713, 758, 815, 824, 847, 904, 922, 1075, 1096, 1102, 1104, 1105, 1107, 1110, 1112, 1114, 1116, 1119, 1121, 1124, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1145, 1152, 1153, 1158, 1172, 1175, 1180, 1182, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1203, 1205, 1207, 1208, 1209, 1210, 1212, 1213, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1227, 1230, 1232, 1233, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247], "make_alpha": 1207, "make_array_from_callback": [77, 1180], "make_array_from_single_device_arrai": [77, 1110, 1180], "make_classif": 1159, "make_comp": 1107, "make_device_arrai": 1180, "make_jaxpr": [1104, 1107, 1122, 1131, 1182, 1187, 1199, 1200, 1204, 1206, 1212, 1227, 1234, 1237, 1238, 1239], "make_jaxpr_v1": 1107, "make_jnp_zero": 1195, "make_kernel": 1216, "make_lay": 1146, "make_np_zero": 1195, "make_schedul": 1145, "make_sharded_device_arrai": [1110, 1180], "make_tf_zero": 1195, "make_torch_zero": 1195, "make_z": 1104, "make_zero": [1202, 1236], "maketupl": [576, 745], "makhoul": 882, "malici": 645, "maml": [1133, 1227], "manag": [5, 6, 22, 23, 25, 26, 27, 34, 46, 47, 48, 49, 63, 64, 71, 150, 195, 337, 342, 719, 750, 819, 828, 829, 836, 1110, 1121, 1122, 1130, 1136, 1137, 1152, 1154, 1158, 1175, 1192, 1196, 1198, 1199, 1202, 1208, 1212, 1214, 1222, 1223, 1225, 1226, 1233, 1236, 1238, 1246, 1248], "mani": [7, 71, 104, 229, 251, 262, 295, 303, 333, 471, 496, 556, 681, 683, 703, 707, 724, 750, 804, 903, 1049, 1105, 1110, 1117, 1119, 1121, 1122, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1152, 1166, 1180, 1182, 1183, 1185, 1186, 1187, 1189, 1190, 1193, 1195, 1196, 1198, 1199, 1205, 1206, 1212, 1214, 1216, 1218, 1219, 1221, 1224, 1227, 1230, 1234, 1237, 1238, 1239, 1243, 1246, 1247], "manifesto": 1214, "manifold": [1205, 1230], "manipul": [1111, 1130, 1189, 1194, 1196, 1204, 1214, 1216], "manner": [120, 159, 160, 480, 1075, 1121, 1170, 1176, 1185, 1212, 1239, 1242, 1243, 1244], "mantissa": [527, 545, 609, 1195], "mantissa_bit": 286, "manual": [0, 778, 1104, 1110, 1114, 1117, 1121, 1128, 1130, 1133, 1136, 1137, 1170, 1186, 1196, 1198, 1199, 1206, 1210, 1211, 1214, 1221, 1222, 1227, 1234, 1242, 1246], "manual_clip": 1121, "manually_batched_convolv": [1132, 1231], "manually_vectorized_convolv": [1132, 1231], "manylinux2010": 1110, "manylinux2014": 1110, "map": [0, 147, 157, 158, 169, 208, 271, 272, 273, 277, 278, 279, 280, 281, 295, 340, 452, 496, 645, 746, 824, 837, 912, 914, 924, 925, 926, 1071, 1076, 1081, 1088, 1089, 1090, 1101, 1102, 1104, 1107, 1110, 1114, 1117, 1131, 1135, 1145, 1147, 1151, 1170, 1175, 1178, 1182, 1191, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1204, 1205, 1208, 1210, 1212, 1216, 1218, 1219, 1221, 1224, 1227, 1232, 1233, 1238, 1239, 1242, 1244, 1246], "map_coordin": 1189, "mapped_av": 1107, "mapsto": [1133, 1200, 1205, 1227], "mar": 1200, "march": [67, 68, 69, 1122, 1152, 1180], "margin": [1205, 1227], "mark": [37, 38, 150, 443, 546, 824, 828, 1110, 1112, 1119, 1121, 1145, 1158, 1185, 1190, 1195, 1212], "markdown": 1119, "marked_pytre": 1145, "marker": 1224, "mask": [480, 605, 657, 706, 728, 1110, 1121, 1190, 1193, 1199, 1216, 1225], "mask_func": 657, "maskedarrai": 416, "mass": [565, 840, 842, 856, 870, 871, 970, 971, 979, 980, 981, 982, 1018, 1019, 1030, 1031, 1034, 1035, 1046, 1047, 1145], "mat": [80, 86, 90, 92, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 165, 1210, 1242], "mat_bcoo": 92, "mat_bcsr": 107, "mat_coo": [109, 113], "mat_dens": [102, 112, 116], "mat_out": [99, 101, 104], "match": [70, 71, 75, 97, 104, 120, 150, 165, 195, 196, 217, 219, 280, 289, 303, 332, 339, 369, 419, 441, 465, 475, 476, 486, 494, 549, 559, 579, 593, 658, 675, 676, 710, 713, 741, 774, 777, 837, 908, 914, 921, 924, 925, 955, 956, 957, 1074, 1093, 1101, 1107, 1109, 1110, 1112, 1119, 1122, 1125, 1135, 1151, 1158, 1175, 1186, 1189, 1202, 1211, 1212, 1214, 1224, 1236, 1244, 1247], "materi": [158, 1114, 1182, 1193, 1205, 1227, 1237], "materialis": 1133, "math": [338, 339, 387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 508, 572, 646, 647, 648, 668, 732, 776, 839, 935, 944, 945, 1110, 1122, 1130, 1199, 1200, 1212], "math_toolkit": [944, 945], "mathbb": [1133, 1200, 1205, 1227], "mathbf": [1133, 1227], "mathcal": [532, 533, 1206, 1234], "mathemat": [13, 144, 145, 148, 149, 151, 333, 387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 469, 501, 559, 572, 646, 647, 648, 715, 758, 760, 775, 776, 930, 931, 933, 935, 938, 939, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 958, 961, 962, 968, 1099, 1100, 1109, 1110, 1122, 1189, 1190, 1195, 1200, 1202, 1205, 1227, 1230, 1236], "mathit": [186, 242, 255, 307, 903, 953], "mathrm": [153, 154, 163, 164, 166, 167, 168, 171, 172, 186, 201, 202, 221, 222, 223, 237, 242, 244, 258, 259, 263, 264, 283, 307, 308, 309, 320, 321, 343, 344, 345, 346, 347, 348, 349, 350, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 952, 953, 959, 963], "mathsf": [1200, 1205, 1227], "mathwork": 628, "mathworld": 758, "matlab": [544, 628, 668, 732], "matmul": [26, 165, 213, 490, 813, 837, 903, 924, 925, 926, 1186, 1202, 1211, 1218, 1236], "matmul_2d_wg_manu": 1186, "matmul_allgath": 1211, "matmul_allgather_overlap": 1211, "matmul_allgather_overlapped_bidi": 1211, "matmul_bas": [1186, 1211], "matmul_kernel": [1216, 1218], "matmul_psumscatt": 1211, "matmul_psumscatter_overlap": 1211, "matmul_psumscatter_overlapped_bidi": 1211, "matmul_reduce_scatt": 1186, "matmul_reducescatt": 1186, "matmul_refer": 1211, "matmul_sharded_x": 1180, "matplotlib": [1119, 1128, 1130, 1135, 1136, 1137, 1195, 1200, 1207, 1212, 1213, 1227, 1246], "matric": [123, 165, 245, 246, 247, 248, 249, 250, 252, 255, 256, 361, 441, 526, 615, 619, 620, 621, 626, 627, 628, 629, 630, 631, 633, 634, 664, 728, 865, 889, 891, 896, 904, 906, 910, 927, 1110, 1152, 1189, 1205, 1206, 1211, 1218, 1221, 1227, 1242], "matrix": [26, 71, 80, 81, 82, 83, 84, 92, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 170, 208, 212, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 429, 464, 467, 468, 472, 485, 490, 496, 579, 614, 615, 620, 621, 622, 623, 624, 626, 627, 628, 629, 631, 633, 634, 635, 636, 658, 664, 699, 707, 711, 728, 741, 777, 780, 809, 811, 812, 813, 865, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 924, 925, 926, 1010, 1032, 1033, 1101, 1106, 1110, 1122, 1133, 1159, 1184, 1186, 1189, 1201, 1206, 1210, 1212, 1214, 1216, 1218, 1221, 1234, 1242, 1244], "matrix_chain_multipl": 630, "matrix_pow": 1110, "matrix_rank": 1110, "matrix_vector_product": 813, "matteo": [1132, 1133, 1134], "matter": [35, 1110, 1122, 1134, 1186, 1188, 1195, 1200, 1205, 1207, 1211, 1212, 1214, 1227, 1239, 1243], "mattjj": [1186, 1188, 1192, 1193, 1199, 1200, 1205, 1212, 1238, 1247], "matur": [1105, 1127, 1185, 1216, 1249], "matvec": 208, "max": [159, 186, 271, 299, 372, 373, 392, 431, 453, 464, 527, 565, 567, 615, 624, 628, 633, 677, 688, 778, 808, 820, 821, 822, 823, 893, 894, 913, 924, 925, 926, 965, 1048, 1107, 1110, 1121, 1122, 1198, 1214, 1219], "max_cache_size_": 1110, "max_dim": 1110, "max_header_s": 645, "max_iter": [251, 903], "max_line_width": [416, 418], "max_norm": 1145, "max_shared_dim": 1151, "max_squar": 894, "max_vers": 38, "max_width": 21, "maxexp": 527, "maxim": [71, 159, 1201, 1210], "maxima": [542, 661], "maximum": [38, 120, 161, 204, 251, 263, 392, 393, 407, 430, 440, 447, 453, 497, 542, 562, 563, 567, 568, 606, 645, 660, 666, 673, 677, 680, 688, 701, 722, 750, 808, 820, 872, 878, 914, 924, 925, 926, 953, 956, 957, 965, 1048, 1109, 1110, 1122, 1130, 1131, 1145, 1195, 1201, 1203, 1206, 1209, 1219, 1234, 1238], "maxit": [914, 924, 925, 926], "maxlen": 1186, "maxpool": 1146, "maxprec": 750, "maxprec_equ": 750, "maxsiz": 750, "maxtext": [1125, 1126], "maxval": [872, 878], "maxwel": [850, 1127], "mayb": [1107, 1122, 1128, 1183, 1187, 1191, 1192, 1205, 1216, 1227], "maybe_fastpath_data": [1199, 1208, 1212, 1233, 1238], "mcmc": 1109, "md": [631, 699, 1105, 1110, 1173, 1197], "mdl": [72, 73], "me": [1186, 1188, 1211], "mean": [0, 9, 17, 18, 35, 37, 71, 77, 150, 193, 195, 196, 197, 198, 199, 212, 213, 229, 268, 272, 295, 333, 338, 359, 362, 364, 382, 415, 419, 441, 447, 464, 465, 468, 471, 490, 496, 509, 511, 515, 516, 521, 522, 525, 547, 553, 559, 579, 615, 631, 658, 678, 679, 681, 683, 684, 685, 688, 691, 701, 722, 723, 728, 734, 742, 769, 777, 804, 811, 812, 820, 821, 822, 823, 824, 837, 840, 865, 870, 879, 913, 919, 923, 1010, 1032, 1033, 1049, 1075, 1104, 1107, 1110, 1114, 1117, 1118, 1121, 1122, 1124, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1145, 1146, 1152, 1158, 1159, 1166, 1176, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1224, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247, 1248], "meaning": [1122, 1136, 1224, 1239], "meaningfulli": 1104, "meant": [14, 15, 73, 1104, 1107, 1110, 1144, 1173, 1178, 1188, 1194, 1200, 1201, 1208, 1212, 1214, 1216, 1219, 1221, 1227, 1233], "meantim": 1185, "meanwhil": [1186, 1236], "measur": [440, 562, 563, 684, 686, 769, 810, 919, 922, 923, 1049, 1106, 1122, 1189], "mechan": [7, 34, 67, 69, 76, 326, 1107, 1110, 1114, 1117, 1119, 1121, 1122, 1152, 1186, 1187, 1190, 1191, 1194, 1200, 1205, 1211, 1216, 1222, 1227, 1230], "median": [679, 701, 919, 923], "median_unbias": [681, 683, 703, 724], "medium": 1219, "meet": [413, 1189], "megacor": 1220, "mellon": 165, "member": [1122, 1133, 1166, 1185, 1189, 1216, 1227], "memmap": 645, "memoiz": [128, 1188], "memoized_fun": [1131, 1199, 1212, 1238], "memori": [7, 31, 32, 37, 55, 71, 150, 262, 295, 325, 333, 413, 419, 443, 445, 465, 645, 664, 728, 734, 824, 831, 832, 1102, 1104, 1107, 1110, 1117, 1122, 1136, 1145, 1158, 1175, 1176, 1184, 1186, 1193, 1200, 1205, 1206, 1209, 1210, 1211, 1214, 1215, 1216, 1218, 1220, 1227, 1234, 1241, 1249], "memory1": 1120, "memory9": 1120, "memory_analysi": 1176, "memory_kind": 1175, "memory_stat": 1110, "memory_view": [1120, 1223], "memoryview": [1110, 1247], "mental": [1183, 1214], "mention": [71, 1104, 1109, 1122, 1131, 1134, 1135, 1180, 1185, 1186, 1188, 1189, 1195, 1201, 1211, 1214, 1243], "menu": 1223, "merg": [156, 452, 1110, 1114, 1138, 1144, 1180, 1186], "merge_list": 1107, "merged_arrai": 452, "mersenn": 1199, "mesh": [0, 18, 71, 72, 73, 76, 77, 150, 331, 338, 339, 605, 1110, 1114, 1151, 1152, 1156, 1158, 1175, 1180, 1186, 1188, 1198, 1201, 1211, 1214, 1244], "mesh1d": 1211, "mesh2d": 1211, "mesh_col": 339, "mesh_def": 1214, "mesh_devic": 1214, "mesh_row": 339, "mesh_shap": [72, 73], "mesh_shard": 1201, "mesh_util": [1147, 1186, 1201, 1211, 1244], "meshgrid": [665, 696], "meshpspecshard": 1110, "mess": 1188, "messag": [55, 56, 57, 337, 1110, 1112, 1114, 1121, 1152, 1192, 1199, 1202, 1208, 1219, 1223, 1233, 1236], "messi": [1132, 1231], "met": [921, 922], "meta": [1133, 1227], "meta_grad": [1133, 1227], "meta_loss_fn": [1133, 1227], "metaclass": 1185, "metacpan": 572, "metadata": [0, 71, 341, 342, 494, 1107, 1110, 1119, 1188, 1194, 1224], "metal": 1127, "meth": 1212, "method": [0, 1, 2, 3, 4, 11, 12, 14, 15, 37, 39, 43, 51, 80, 81, 82, 83, 84, 85, 120, 127, 146, 147, 293, 390, 392, 393, 395, 413, 429, 434, 436, 442, 451, 455, 456, 458, 471, 494, 527, 530, 534, 535, 536, 539, 546, 556, 559, 567, 574, 578, 581, 582, 583, 584, 586, 589, 604, 628, 633, 635, 637, 645, 660, 662, 666, 677, 678, 680, 681, 683, 685, 688, 689, 694, 695, 703, 711, 720, 722, 724, 748, 753, 756, 769, 771, 792, 794, 795, 796, 797, 806, 810, 828, 865, 894, 895, 903, 909, 913, 914, 915, 917, 919, 920, 923, 926, 927, 928, 1007, 1048, 1075, 1102, 1104, 1106, 1107, 1109, 1110, 1114, 1121, 1127, 1128, 1130, 1133, 1135, 1137, 1145, 1159, 1165, 1170, 1183, 1185, 1189, 1190, 1198, 1199, 1200, 1201, 1202, 1207, 1212, 1223, 1224, 1227, 1230, 1232, 1236, 1239, 1242, 1244, 1246, 1247], "metric": 1189, "mgrid": [696, 1207], "mhlo": 1110, "mi": [1195, 1205, 1227], "microbatch": 1211, "microbenchmark": [1106, 1122, 1223], "microsoft": [1127, 1185], "mid": 1185, "middl": [257, 515, 516, 1186], "midpoint": [681, 683, 703, 724], "might": [19, 34, 49, 50, 56, 71, 77, 230, 232, 296, 297, 298, 299, 300, 301, 339, 452, 496, 909, 947, 1105, 1107, 1108, 1112, 1114, 1117, 1119, 1121, 1122, 1127, 1131, 1133, 1137, 1145, 1179, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1219, 1227, 1232, 1233, 1234, 1238, 1239, 1242, 1246], "migrat": [1110, 1215], "mikulik": [1130, 1131, 1133, 1135, 1136, 1137], "million": [1131, 1205, 1227, 1238], "millisecond": 1223, "milton": 935, "mimic": [700, 804], "min": [35, 160, 186, 249, 250, 252, 273, 300, 373, 393, 453, 464, 527, 565, 567, 615, 624, 634, 637, 680, 688, 821, 893, 900, 901, 904, 910, 1048, 1110, 1121, 1151, 1214, 1219], "min_dim": 1110, "min_width": 21, "mind": [71, 1112, 1117, 1119, 1122, 1135, 1136, 1185, 1187, 1195, 1208, 1214, 1216, 1218, 1221, 1233, 1244, 1248], "mindless": 1213, "minexp": 527, "ming": 1188, "mini": [1144, 1203, 1204, 1209], "minibatch": 1136, "miniconda": 1119, "minim": [9, 82, 84, 440, 624, 1105, 1107, 1117, 1124, 1144, 1159, 1183, 1189, 1190, 1199, 1205, 1208, 1212, 1227], "minima": [543, 667], "minimis": 711, "minimum": [162, 205, 264, 392, 393, 408, 413, 431, 446, 453, 538, 543, 568, 660, 666, 674, 677, 680, 688, 701, 722, 725, 750, 798, 799, 820, 821, 822, 823, 872, 878, 1048, 1110, 1121, 1186, 1196, 1219], "minlength": 431, "minor": [38, 188, 914, 1110, 1118, 1196], "minormost": 1221, "minu": [504, 959], "minuend": 714, "minumum": 1121, "minval": [872, 878], "miopen": 1119, "mip": 159, "mirror": [701, 912, 1166, 1189, 1212, 1216], "misc": 1207, "mislead": 1106, "mismatch": [1104, 1152, 1188, 1199], "miss": [1107, 1110, 1114, 1127, 1128, 1185, 1202, 1206, 1214, 1234, 1236], "mistak": 1192, "mistakenli": 1110, "misus": 1194, "mit": [935, 936], "mitig": [1199, 1206, 1234], "mix": [97, 1109, 1130, 1180, 1183, 1185, 1189, 1205, 1210, 1211, 1212, 1214, 1227, 1242, 1248], "mixtur": [1185, 1211], "mkdir": [0, 1119], "mkvirtualenv": 1119, "ml": [1133, 1216, 1227], "ml_dtype": 1110, "mlir": [1107, 1110, 1160, 1187, 1190, 1196, 1202, 1212, 1216, 1236], "mlirerror": 1212, "mlp": [1130, 1135, 1136, 1186, 1203, 1209, 1247], "mlperf": 1184, "mlup": 1128, "mlups3d": 1128, "mm": 1101, "mm2": 1101, "mmap_mod": 645, "mnist": [1203, 1209], "mnist_data": 1209, "mnist_dataset": 1203, "mnist_dataset_test": 1203, "mock": [1110, 1119], "mod": [452, 732, 1110, 1208, 1233], "modal": [1007, 1029], "mode": [0, 7, 9, 13, 15, 63, 64, 93, 148, 149, 151, 208, 229, 230, 232, 296, 297, 298, 299, 300, 301, 317, 325, 333, 353, 354, 355, 356, 357, 358, 364, 447, 452, 464, 468, 496, 552, 634, 637, 645, 688, 701, 723, 729, 750, 773, 774, 816, 820, 821, 822, 823, 876, 882, 883, 884, 885, 904, 912, 915, 916, 917, 918, 920, 1100, 1110, 1112, 1119, 1122, 1123, 1133, 1146, 1153, 1166, 1186, 1189, 1190, 1191, 1199, 1201, 1202, 1204, 1207, 1208, 1210, 1212, 1233, 1236, 1238, 1242, 1244, 1247, 1248], "model": [71, 464, 824, 1108, 1109, 1110, 1121, 1122, 1123, 1127, 1130, 1131, 1133, 1136, 1137, 1145, 1158, 1159, 1173, 1175, 1180, 1183, 1184, 1185, 1186, 1189, 1195, 1199, 1203, 1205, 1206, 1209, 1211, 1214, 1215, 1216, 1217, 1227, 1230, 1234, 1238, 1246], "moder": 1221, "moderesult": 1029, "modern": [1133, 1135, 1185, 1199, 1230, 1247, 1248], "modif": [0, 688, 1114, 1130, 1195], "modifi": [37, 171, 172, 526, 546, 572, 688, 701, 706, 723, 919, 921, 922, 923, 927, 948, 949, 950, 951, 1104, 1112, 1121, 1130, 1134, 1136, 1137, 1151, 1159, 1173, 1189, 1195, 1199, 1214, 1216, 1219, 1221, 1243, 1246], "modprob": 1223, "modul": [65, 66, 67, 68, 69, 127, 527, 645, 746, 938, 1104, 1105, 1110, 1119, 1122, 1125, 1128, 1129, 1130, 1131, 1134, 1182, 1183, 1185, 1189, 1190, 1197, 1199, 1201, 1202, 1207, 1208, 1212, 1219, 1233, 1236, 1237, 1238, 1243, 1244, 1247], "modular": 452, "module_context": [1202, 1236], "module_nam": [1152, 1212], "modulecontext": [1202, 1236], "modulu": [544, 668, 732], "mohi": [894, 895], "mojav": 1110, "moment": [71, 467, 895, 1107, 1145, 1185, 1195, 1199, 1214, 1219], "momentum": 1145, "monograph": 1007, "monoid": 285, "monoton": [370, 380, 487, 565, 568, 587], "monotoni": 1199, "month": [1105, 1110, 1118, 1184], "moor": 633, "moral": [1188, 1190], "more": [0, 7, 9, 14, 15, 17, 22, 23, 25, 30, 35, 49, 66, 67, 68, 69, 70, 71, 130, 131, 150, 156, 157, 158, 208, 212, 229, 271, 272, 273, 277, 278, 279, 280, 281, 291, 333, 343, 345, 369, 370, 372, 374, 399, 409, 410, 413, 419, 426, 427, 428, 443, 444, 445, 465, 467, 481, 485, 493, 496, 546, 548, 550, 567, 570, 619, 630, 633, 634, 635, 637, 664, 688, 702, 705, 711, 742, 748, 750, 758, 768, 773, 779, 808, 813, 815, 816, 824, 831, 832, 894, 914, 915, 917, 943, 946, 947, 955, 961, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1081, 1089, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1114, 1115, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1133, 1134, 1137, 1144, 1145, 1146, 1152, 1153, 1158, 1159, 1165, 1166, 1173, 1175, 1176, 1179, 1180, 1182, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1218, 1219, 1221, 1222, 1223, 1226, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "moreov": [333, 1107, 1137, 1186, 1191, 1192, 1200, 1201, 1211, 1227], "mortem": 1199, "mosaic": [1218, 1221], "most": [0, 28, 55, 56, 57, 71, 72, 73, 150, 213, 232, 291, 292, 296, 297, 298, 299, 300, 301, 339, 413, 434, 436, 486, 493, 497, 514, 527, 552, 556, 570, 589, 604, 672, 711, 748, 750, 758, 813, 815, 827, 1029, 1107, 1110, 1111, 1117, 1121, 1122, 1123, 1124, 1125, 1127, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1148, 1154, 1158, 1159, 1166, 1170, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1193, 1194, 1196, 1197, 1199, 1202, 1205, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1227, 1230, 1231, 1233, 1236, 1237, 1238, 1242, 1247, 1248], "mostli": [0, 120, 209, 1107, 1188, 1189, 1196, 1211, 1216, 1223], "motiv": [1185, 1189, 1191, 1195, 1200, 1227, 1248], "move": [77, 409, 670, 702, 1107, 1110, 1122, 1137, 1147, 1180, 1185, 1186, 1187, 1189, 1201, 1207, 1223, 1246], "move_batch_axi": 1107, "moveaxi": [740, 1107], "movement": [1186, 1208, 1211, 1233], "mpi": [35, 1198], "mpi4jax": 1198, "mpiexec": 1198, "mpirun": 1198, "mpl": 1207, "mpl_toolkit": 1207, "mplot3d": 1207, "mpmath": 933, "mpmd": 331, "msg": [55, 1121, 1130, 1193, 1199, 1202, 1208, 1212, 1233, 1236], "msg_line": 1212, "msg_queue": [1208, 1233], "msort": 1110, "msvc": 1119, "msys2": 1119, "mt19937": [1134, 1199, 1243], "mu": [850, 865, 879, 1046, 1047], "much": [7, 17, 104, 208, 229, 333, 430, 590, 920, 926, 1107, 1108, 1110, 1119, 1122, 1123, 1127, 1128, 1130, 1131, 1133, 1146, 1152, 1182, 1184, 1186, 1188, 1189, 1191, 1192, 1194, 1195, 1199, 1200, 1201, 1205, 1206, 1210, 1212, 1214, 1216, 1219, 1221, 1227, 1234, 1237, 1238], "muirhead": 958, "mul": [0, 340, 1107, 1114, 1122, 1182, 1187, 1188, 1190, 1200, 1202, 1206, 1219, 1227, 1234, 1236, 1237, 1239], "mul_add": 1187, "mul_add_abstract": 1187, "mul_add_mlir": 1187, "mul_add_p": 1187, "mul_jvp": 1107, "mul_p": [1107, 1159, 1204], "mul_transpose_rul": 1107, "mulop": [1187, 1202, 1236], "mult_transpos": [1202, 1236], "multi": [0, 25, 28, 35, 71, 496, 665, 696, 729, 758, 824, 827, 914, 1007, 1070, 1088, 1089, 1103, 1110, 1123, 1125, 1127, 1138, 1158, 1173, 1175, 1180, 1186, 1188, 1191, 1207, 1212, 1214, 1216, 1221, 1240, 1243, 1244, 1247], "multi_device_test": 1122, "multi_dot": 1110, "multi_gpu": 1119, "multi_index": 729, "multi_process": 1175, "multiacceler": 1119, "multicontrol": 1110, "multidimension": [568, 811, 883, 885, 1110, 1175, 1216], "multihost": 1110, "multihost_util": [1110, 1147, 1180], "multipl": [26, 35, 57, 71, 94, 95, 150, 170, 212, 247, 265, 295, 296, 298, 301, 303, 317, 333, 339, 398, 417, 447, 464, 467, 468, 472, 490, 492, 496, 509, 511, 515, 516, 521, 557, 569, 579, 588, 605, 608, 613, 619, 620, 621, 622, 623, 624, 627, 630, 658, 665, 681, 683, 688, 696, 703, 707, 713, 724, 749, 764, 777, 799, 804, 811, 812, 813, 814, 824, 837, 892, 893, 900, 927, 1070, 1088, 1104, 1106, 1107, 1110, 1111, 1112, 1114, 1119, 1122, 1124, 1125, 1126, 1135, 1136, 1152, 1157, 1158, 1175, 1180, 1182, 1183, 1186, 1188, 1191, 1193, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1213, 1214, 1216, 1218, 1221, 1224, 1227, 1233, 1234, 1236, 1237, 1239, 1244, 1247], "multiple_result": [0, 1110, 1204, 1208, 1212, 1233], "multipli": [0, 157, 158, 301, 362, 435, 475, 490, 609, 610, 675, 688, 720, 854, 966, 967, 1010, 1104, 1107, 1114, 1184, 1188, 1193, 1200, 1202, 1205, 1218, 1219, 1227, 1236], "multiply_add": [1202, 1236], "multiply_add_abstract_ev": [1202, 1236], "multiply_add_batch": [1202, 1236], "multiply_add_impl": [1202, 1236], "multiply_add_lax": [1202, 1236], "multiply_add_low": [1202, 1236], "multiply_add_numpi": [1202, 1236], "multiply_add_p": [1202, 1236], "multiply_add_prim": [1202, 1236], "multiply_add_transpos": [1202, 1236], "multiply_add_value_and_jvp": [1202, 1236], "multiply_add_xla_transl": [1202, 1236], "multiprocess": 339, "multistream": 1191, "multivalu": 937, "multivari": [865, 958, 1007, 1010, 1032, 1033, 1133, 1227], "mung": [1107, 1203, 1209], "must": [0, 7, 9, 13, 30, 32, 35, 37, 38, 56, 67, 69, 70, 75, 77, 87, 90, 97, 101, 120, 122, 144, 150, 157, 158, 159, 160, 165, 190, 191, 208, 215, 229, 232, 245, 255, 269, 271, 272, 273, 279, 280, 281, 285, 289, 295, 302, 303, 325, 331, 332, 338, 339, 346, 352, 369, 389, 392, 393, 396, 398, 399, 405, 411, 424, 429, 431, 432, 435, 437, 438, 439, 441, 452, 454, 466, 486, 488, 489, 493, 500, 513, 519, 521, 526, 529, 532, 538, 541, 542, 543, 544, 552, 555, 559, 560, 561, 564, 565, 567, 570, 571, 579, 587, 608, 609, 610, 611, 612, 613, 614, 630, 631, 634, 640, 641, 644, 645, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 666, 667, 668, 670, 671, 677, 680, 681, 682, 683, 685, 691, 692, 693, 703, 705, 706, 707, 708, 713, 717, 718, 723, 724, 732, 733, 737, 739, 741, 742, 748, 751, 768, 770, 774, 777, 780, 790, 798, 799, 804, 813, 815, 820, 821, 822, 823, 824, 837, 840, 841, 842, 844, 846, 849, 852, 854, 856, 861, 865, 868, 870, 873, 875, 876, 877, 879, 896, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 955, 962, 965, 968, 1007, 1074, 1081, 1085, 1087, 1093, 1099, 1101, 1104, 1106, 1107, 1110, 1111, 1112, 1114, 1119, 1121, 1122, 1127, 1131, 1134, 1135, 1136, 1137, 1152, 1158, 1166, 1180, 1182, 1183, 1185, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1205, 1206, 1211, 1212, 1216, 1219, 1221, 1223, 1224, 1227, 1234, 1236, 1237, 1243, 1246, 1247], "mustn": 1131, "mutabl": [1107, 1122, 1212, 1216], "mutat": [37, 38, 546, 1110, 1122, 1170, 1183, 1199, 1212, 1218], "mutual": [1186, 1188], "mv": 1101, "mv1": 1101, "mv2": 1101, "mx": 1196, "mxu": [1219, 1221], "my": [1190, 1196], "my_cmap": 1207, "my_fft": 1151, "my_func": 1214, "my_funct": 1179, "my_label": 829, "my_lay": 1186, "my_log": 1122, "my_log_or_i": 1122, "mycontain": 1135, "mykeypathcontain": 1135, "myothercontain": [1135, 1247], "mypi": [1110, 1112, 1119], "myriad": 1224, "myst": 1119, "mysteri": [1110, 1111], "mytestcas": 1110, "mytre": [1224, 1247], "mz": 1196, "n": [103, 118, 120, 150, 193, 195, 196, 197, 198, 199, 245, 246, 247, 249, 250, 251, 252, 255, 278, 323, 346, 364, 411, 417, 428, 431, 434, 436, 452, 464, 468, 472, 482, 483, 486, 490, 493, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 526, 549, 559, 566, 568, 573, 589, 605, 613, 615, 624, 627, 628, 631, 633, 634, 637, 640, 657, 658, 664, 684, 686, 699, 701, 706, 707, 715, 722, 741, 748, 753, 764, 769, 777, 780, 781, 782, 783, 784, 788, 789, 809, 810, 813, 815, 842, 847, 849, 865, 867, 882, 884, 886, 892, 894, 895, 896, 898, 900, 901, 903, 904, 907, 908, 909, 910, 914, 915, 917, 920, 928, 929, 941, 942, 953, 956, 957, 962, 965, 979, 980, 981, 982, 1029, 1030, 1031, 1034, 1035, 1106, 1107, 1110, 1112, 1119, 1123, 1127, 1131, 1133, 1134, 1137, 1151, 1182, 1186, 1188, 1191, 1199, 1201, 1203, 1205, 1206, 1209, 1211, 1212, 1214, 1219, 1221, 1223, 1224, 1227, 1234, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247], "n1": [0, 664, 1107], "n10": [1205, 1227], "n2": [0, 664, 1107], "n3": 664, "n_batch": [92, 104, 107, 122], "n_class": 1159, "n_dens": [92, 104, 107, 122], "n_devic": 1136, "n_in": [1135, 1201, 1211, 1247], "n_l": 957, "n_max": 965, "n_n": 965, "n_out": [1135, 1201, 1211, 1247], "n_spars": 80, "n_target": [1203, 1209], "nabla": [372, 373, 1130, 1133, 1205, 1227, 1230], "nabla_": 1130, "naiv": [1132, 1133, 1183, 1205, 1210, 1218, 1221, 1227, 1231, 1242], "naive_sum": 1221, "naive_sum_kernel": 1221, "naively_batched_apply_matrix": [1210, 1242], "name": [0, 3, 24, 41, 69, 71, 79, 136, 150, 157, 158, 169, 271, 272, 273, 277, 278, 279, 280, 281, 329, 340, 341, 342, 397, 494, 637, 645, 681, 683, 703, 722, 724, 746, 747, 792, 809, 824, 828, 830, 831, 832, 1102, 1103, 1105, 1107, 1110, 1112, 1117, 1119, 1120, 1121, 1123, 1130, 1131, 1135, 1136, 1150, 1151, 1152, 1158, 1165, 1166, 1175, 1182, 1183, 1184, 1185, 1186, 1187, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1205, 1206, 1208, 1209, 1211, 1212, 1216, 1219, 1221, 1223, 1225, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1244, 1247], "name_of_wrapper_p": 0, "name_scop": 341, "name_stack": [1202, 1208, 1212, 1233, 1236], "named_arg": 55, "named_batch_matrix_single_matrix": 1214, "named_broadcast": 1214, "named_broadcast_and_reduc": 1214, "named_cal": 1110, "named_loss": 1214, "named_predict": 1214, "named_scop": [1110, 1186], "named_shap": [0, 3, 71, 340, 1102, 1214], "named_shard": 1175, "namedshap": [840, 866, 877, 878, 1185], "namedshard": [0, 18, 338, 339, 1110, 1151, 1175, 1180, 1186, 1211, 1244], "namedtupl": [9, 50, 332, 619, 620, 634, 635, 637, 1102, 1107, 1110, 1135, 1136, 1137, 1145, 1200, 1208, 1224, 1227, 1233, 1239, 1246, 1247], "namegen": 1107, "namespac": [0, 1110, 1137, 1148, 1170, 1177, 1185, 1246], "namestack": [1202, 1236], "nan": [23, 57, 232, 242, 245, 246, 307, 312, 369, 391, 409, 414, 538, 542, 543, 590, 594, 597, 647, 661, 667, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 702, 717, 718, 741, 750, 754, 765, 773, 774, 799, 816, 889, 894, 897, 900, 905, 954, 955, 964, 1029, 1048, 1049, 1110, 1114, 1115, 1116, 1117, 1190, 1200, 1211, 1216, 1227, 1247], "nan_check": [57, 1114], "nan_polici": [1029, 1048, 1049], "nanargmax": 1199, "nanargmin": 1199, "nanerror": [53, 54, 59, 61], "nanj": 741, "nanstr": [558, 750], "nansum": 1199, "nansum_2": 1199, "narg": 792, "narrow": [1112, 1187, 1219], "naryop": 1110, "naryop_dtype_rul": 1110, "nathaniel": [1208, 1233], "nation": 572, "nativ": [0, 295, 325, 1107, 1110, 1134, 1135, 1189, 1190, 1195, 1210, 1219, 1242, 1243, 1247], "native_seri": 1110, "native_serializaation_disabled_check": 1110, "native_serialization_strict_check": 1110, "natur": [258, 635, 646, 648, 711, 932, 1107, 1130, 1131, 1135, 1137, 1183, 1185, 1186, 1188, 1195, 1214, 1216, 1238, 1246], "navig": 1223, "nb": [77, 1107], "nb_execution_mod": 1119, "nb_gpu": 1119, "nccl": [1110, 1127, 1198], "nccl_ll128_buffsiz": 1125, "nccl_ll_buffsiz": 1125, "nccl_proto": 1125, "nchw": [195, 196, 197, 1207], "nchwd": 197, "nd": [441, 1214], "ndarrai": [50, 51, 67, 72, 73, 80, 88, 89, 91, 94, 96, 103, 105, 106, 107, 138, 152, 153, 154, 155, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 189, 190, 192, 196, 197, 200, 201, 202, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 331, 332, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 443, 448, 450, 453, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 532, 538, 540, 541, 542, 543, 545, 546, 547, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 591, 594, 595, 596, 597, 598, 599, 600, 605, 607, 608, 609, 611, 612, 613, 616, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 691, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 749, 751, 752, 753, 754, 755, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 787, 788, 789, 790, 791, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 916, 918, 919, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 958, 959, 960, 961, 962, 963, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 987, 988, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1058, 1060, 1062, 1063, 1064, 1065, 1097, 1106, 1107, 1110, 1121, 1122, 1123, 1130, 1136, 1137, 1145, 1152, 1170, 1171, 1175, 1179, 1185, 1186, 1199, 1201, 1205, 1206, 1210, 1212, 1224, 1227, 1234, 1239, 1246], "ndarray_of_devic": 1201, "ndi": 452, "ndigit": [1130, 1199, 1212], "ndim": [90, 98, 215, 232, 310, 392, 393, 411, 426, 427, 428, 441, 482, 485, 503, 526, 637, 641, 659, 660, 666, 740, 778, 780, 783, 787, 813, 891, 893, 1101, 1107, 1110, 1131, 1159, 1175, 1199, 1207, 1214, 1238], "ndindex": [397, 452, 773], "ndmin": 413, "ndtr": 953, "ne": [758, 938, 1208, 1233], "nearest": [146, 160, 293, 527, 528, 681, 683, 703, 724, 738, 791, 912, 1165, 1166, 1189], "nearli": [926, 1159, 1170], "neat": [1205, 1214], "neatli": [1133, 1227], "necessari": [7, 37, 38, 72, 73, 101, 413, 426, 431, 441, 452, 468, 495, 513, 519, 521, 526, 723, 735, 750, 926, 1102, 1104, 1110, 1119, 1133, 1183, 1185, 1188, 1189, 1192, 1198, 1201, 1214, 1219, 1223, 1227], "necessarili": [443, 445, 452, 496, 619, 621, 707, 1105, 1106, 1110, 1130, 1180, 1208, 1216, 1233], "necula": 1202, "need": [0, 7, 37, 38, 49, 50, 55, 71, 120, 150, 208, 217, 219, 262, 295, 413, 443, 664, 728, 746, 747, 773, 774, 813, 816, 820, 821, 822, 823, 824, 834, 836, 888, 914, 920, 924, 925, 926, 1070, 1075, 1081, 1088, 1102, 1104, 1106, 1107, 1109, 1110, 1112, 1116, 1117, 1119, 1121, 1122, 1124, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1144, 1145, 1150, 1151, 1152, 1158, 1170, 1173, 1176, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1243, 1244, 1246, 1247], "neg": [90, 118, 176, 215, 229, 232, 340, 366, 369, 390, 395, 409, 429, 431, 434, 435, 436, 452, 484, 485, 506, 514, 515, 516, 519, 527, 531, 538, 552, 559, 589, 594, 596, 598, 610, 627, 644, 647, 669, 672, 688, 702, 717, 718, 720, 722, 723, 725, 728, 729, 740, 765, 771, 773, 777, 779, 804, 805, 824, 870, 910, 938, 939, 941, 942, 955, 964, 1107, 1110, 1114, 1116, 1121, 1122, 1205, 1212, 1227, 1230], "neg1": 1212, "neg_jvp": 1107, "neg_p": [1107, 1159], "neg_transpose_rul": 1107, "negat": 267, "negative_slop": 366, "negep": 527, "neginf": 672, "neighbor": [146, 159, 160, 912, 1165, 1189, 1211], "neighborhood": [1200, 1227], "neither": [71, 150, 1110, 1158, 1187], "nep": [1110, 1185], "neq": 266, "nest": [7, 9, 29, 30, 31, 32, 50, 71, 145, 150, 165, 191, 208, 229, 262, 295, 317, 325, 332, 413, 441, 824, 1101, 1107, 1130, 1135, 1145, 1158, 1176, 1178, 1186, 1200, 1221, 1227, 1239, 1247], "nesterov": 1145, "net": [198, 542, 543, 661, 667, 1123, 1136, 1137, 1146, 1189, 1191, 1206, 1212, 1234, 1246], "netlib": [948, 949, 950, 951, 960], "network": [35, 72, 73, 374, 1103, 1108, 1109, 1110, 1125, 1126, 1133, 1137, 1146, 1168, 1169, 1188, 1205, 1206, 1207, 1219, 1223, 1227, 1234, 1235, 1239, 1244, 1246, 1248], "networkx": 1195, "neural": [198, 374, 1103, 1108, 1109, 1123, 1125, 1126, 1133, 1136, 1137, 1146, 1168, 1169, 1188, 1191, 1205, 1206, 1207, 1212, 1219, 1227, 1234, 1235, 1239, 1244, 1246, 1248], "neural_network_and_data_load": 1209, "never": [37, 38, 43, 557, 644, 656, 808, 813, 1109, 1122, 1131, 1134, 1136, 1152, 1185, 1188, 1190, 1195, 1196, 1200, 1205, 1214, 1227, 1238, 1239, 1243], "nevertheless": [1182, 1188, 1189, 1193, 1237], "new": [0, 7, 31, 56, 66, 67, 68, 69, 78, 104, 147, 157, 174, 179, 180, 217, 218, 219, 230, 295, 390, 395, 396, 397, 402, 404, 420, 423, 440, 445, 452, 469, 475, 476, 480, 485, 494, 498, 499, 503, 542, 543, 552, 553, 557, 559, 562, 563, 572, 580, 606, 624, 634, 644, 645, 656, 657, 661, 662, 663, 667, 670, 675, 676, 678, 679, 682, 684, 685, 686, 697, 707, 708, 709, 710, 711, 712, 713, 714, 715, 722, 734, 735, 741, 746, 760, 768, 769, 772, 775, 776, 778, 810, 817, 853, 874, 894, 912, 922, 935, 1007, 1066, 1070, 1088, 1089, 1105, 1107, 1110, 1112, 1114, 1118, 1121, 1127, 1128, 1130, 1131, 1134, 1136, 1137, 1144, 1146, 1151, 1152, 1170, 1173, 1175, 1178, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1195, 1196, 1197, 1199, 1200, 1201, 1204, 1205, 1206, 1210, 1211, 1212, 1214, 1218, 1221, 1223, 1224, 1227, 1228, 1229, 1234, 1238, 1239, 1240, 1241, 1243, 1245, 1246, 1247], "new_arg": [1107, 1131, 1199, 1208, 1212, 1233, 1238], "new_axi": 1107, "new_cach": [1199, 1212, 1238], "new_compiler_token": 1183, "new_const": 1107, "new_const_bind": 1107, "new_dtyp": [174, 200, 1182, 1212, 1237], "new_dynam": 1107, "new_eqn": 1107, "new_jax_arrai": 1199, "new_jaxpr": [1107, 1208, 1233], "new_jaxpr1": 1107, "new_jaxpr2": 1107, "new_kei": [1134, 1194, 1213, 1243], "new_main": [1107, 1199, 1208, 1212, 1233, 1238], "new_optimizer_st": [1137, 1246], "new_out": 1107, "new_param": [1107, 1136, 1137, 1246], "new_r": 1107, "new_rng": 1191, "new_runtime_token": 1183, "new_shap": [735, 1107], "new_siz": [97, 289], "new_sublevel": 1131, "new_trac": 1107, "new_val": [64, 1066], "new_valu": 1121, "newaxi": [780, 1207], "newer": [833, 1110, 1119, 1127, 1154, 1179, 1185, 1201, 1219, 1246], "newest": 1127, "newli": [413, 1190, 1202, 1226, 1236], "newlin": [416, 418], "newshap": [734, 1212], "newton": [1200, 1205, 1227], "newton_sqrt": [1200, 1227], "newval": [1074, 1093], "nexp": 527, "next": [0, 268, 527, 691, 1048, 1107, 1110, 1130, 1131, 1134, 1135, 1136, 1159, 1173, 1182, 1186, 1190, 1191, 1195, 1196, 1199, 1200, 1201, 1221, 1223, 1237, 1238, 1247], "nextaft": [527, 1110], "nf": 942, "nfev": 913, "nfft": [919, 921, 922, 923], "nfound": [1202, 1236], "ngradient": [1202, 1236], "nhw": 197, "nhwc": [195, 196, 1207], "nhwdc": 1207, "ni": [397, 664, 773, 774], "nice": [1183, 1184, 1185, 1195, 1214], "nicer": [576, 745], "nich": 292, "nichola": [894, 895, 909], "nifti": 1136, "nightli": 1223, "nin": [551, 792], "nine": 1118, "ninf": 1110, "nist": [930, 931, 933, 938, 939, 941, 943, 944, 945, 946, 947, 961, 962, 968], "nit": 913, "nj": [397, 440, 773, 774], "njev": 913, "nk": [397, 773, 774, 1214], "nm": 1214, "nmant": 527, "nn": [342, 664, 1105, 1110, 1117, 1122, 1129, 1135, 1207, 1211, 1214, 1216, 1218, 1219, 1244, 1247], "nnormal": [1202, 1236], "no_kwarg": 1176, "no_parallel_custom_cal": 0, "no_perfetto_link": 1223, "nobodi": 1213, "node": [0, 35, 1070, 1079, 1080, 1081, 1082, 1088, 1089, 1107, 1110, 1178, 1195, 1198, 1224, 1230], "node_color": 1195, "node_metadata": 1107, "node_s": 1195, "node_typ": 1107, "nodetyp": [1079, 1081, 1107], "nois": [1130, 1136, 1137, 1207, 1246], "noise_rng": [1137, 1246], "noisi": 1207, "noisy_imag": 1207, "nomin": 913, "non": [0, 1, 71, 72, 77, 78, 90, 103, 121, 213, 215, 232, 268, 303, 323, 370, 390, 392, 393, 395, 399, 411, 427, 428, 429, 431, 435, 471, 529, 538, 542, 543, 548, 550, 557, 565, 567, 591, 595, 605, 610, 619, 624, 631, 644, 656, 657, 660, 662, 664, 666, 672, 684, 686, 691, 692, 706, 717, 718, 720, 722, 765, 769, 771, 777, 804, 810, 824, 847, 870, 889, 897, 900, 904, 905, 910, 921, 941, 942, 1007, 1101, 1104, 1105, 1107, 1110, 1114, 1116, 1121, 1122, 1133, 1135, 1152, 1175, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1188, 1189, 1191, 1192, 1194, 1195, 1198, 1202, 1205, 1211, 1214, 1219, 1236, 1237, 1244, 1248], "non_negative_dim": 1110, "nonconcretebooleanindexerror": [1121, 1199, 1212], "noncontigu": 1216, "nondeterminist": 688, "nondiff_argnum": [0, 9, 14, 15, 1190, 1197], "none": [0, 3, 7, 12, 16, 17, 18, 19, 21, 25, 28, 30, 33, 35, 37, 38, 42, 55, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 75, 88, 91, 92, 93, 97, 98, 101, 104, 105, 107, 109, 113, 117, 118, 120, 122, 128, 132, 150, 157, 158, 170, 188, 191, 193, 194, 195, 196, 197, 198, 199, 208, 212, 213, 229, 230, 231, 232, 247, 251, 253, 254, 270, 271, 272, 273, 279, 280, 281, 287, 289, 295, 296, 297, 298, 299, 300, 301, 310, 311, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 368, 369, 378, 382, 390, 392, 393, 395, 396, 399, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 422, 429, 431, 452, 453, 459, 460, 461, 464, 465, 467, 468, 471, 472, 473, 475, 476, 477, 480, 486, 490, 493, 495, 496, 498, 499, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 531, 546, 551, 553, 554, 557, 559, 565, 566, 567, 568, 570, 573, 576, 579, 580, 587, 598, 599, 615, 620, 624, 628, 630, 631, 633, 635, 637, 641, 643, 644, 645, 650, 651, 652, 653, 654, 655, 656, 658, 660, 662, 663, 666, 669, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 697, 698, 699, 700, 701, 702, 703, 711, 712, 720, 722, 723, 724, 733, 739, 743, 744, 745, 747, 748, 750, 751, 761, 762, 767, 768, 769, 771, 773, 774, 777, 779, 780, 781, 782, 784, 788, 792, 798, 799, 804, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 834, 837, 838, 840, 841, 842, 843, 844, 846, 847, 849, 852, 854, 856, 858, 861, 863, 865, 868, 870, 873, 875, 876, 877, 879, 881, 882, 883, 884, 885, 886, 892, 893, 895, 903, 904, 908, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 955, 965, 968, 1007, 1029, 1032, 1048, 1049, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1101, 1102, 1104, 1107, 1110, 1114, 1117, 1130, 1132, 1133, 1136, 1146, 1150, 1151, 1152, 1158, 1165, 1166, 1175, 1176, 1180, 1182, 1185, 1186, 1188, 1189, 1192, 1193, 1194, 1199, 1200, 1201, 1202, 1203, 1204, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1221, 1224, 1227, 1231, 1233, 1234, 1236, 1238, 1244], "nonlinear": [7, 1107, 1200, 1227], "nonneg": [194, 431, 820, 821, 822, 823, 839, 840, 841, 842, 843, 844, 845, 846, 849, 851, 852, 854, 856, 857, 860, 861, 862, 863, 865, 866, 868, 870, 872, 873, 875, 876, 877, 878, 879, 944, 945, 1014, 1166], "nonscalar": 579, "nonsingular": 903, "nonstationari": 922, "nonsymmetr": [246, 924], "nontrivi": 1238, "nonzero": [82, 84, 471, 505, 529, 605, 700, 816, 1110, 1121, 1125, 1170, 1189, 1205, 1208, 1227, 1233], "noqa": [1107, 1208, 1233], "nor": [103, 150, 621, 1110, 1158, 1176, 1187, 1201], "norm": [0, 120, 160, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 615, 624, 626, 643, 839, 882, 883, 884, 885, 893, 894, 896, 909, 924, 925, 926, 1145, 1207, 1212, 1213], "norm_compil": 1212, "norm_shap": 0, "normal": [34, 150, 247, 268, 353, 355, 357, 362, 364, 374, 382, 430, 440, 441, 472, 562, 563, 565, 566, 567, 568, 587, 606, 619, 620, 650, 651, 691, 729, 740, 758, 824, 855, 863, 865, 877, 882, 883, 884, 885, 892, 893, 953, 957, 959, 960, 965, 1032, 1033, 1075, 1110, 1112, 1117, 1120, 1121, 1122, 1130, 1132, 1134, 1135, 1136, 1137, 1146, 1154, 1159, 1182, 1185, 1191, 1192, 1193, 1195, 1199, 1201, 1202, 1203, 1204, 1205, 1207, 1209, 1210, 1211, 1212, 1213, 1218, 1223, 1227, 1230, 1231, 1236, 1237, 1242, 1243, 1244, 1246, 1247], "normal_pseudorandom": 1199, "normal_sampl": [1134, 1213], "normal_unbias": [681, 683, 703, 724], "normalis": [1133, 1227], "normalized_convolut": 1136, "nostrand": 715, "not_map": [1107, 1208, 1233], "not_side_effect": 1121, "notabl": [486, 604, 1134, 1137, 1170, 1195, 1219, 1243, 1248], "notat": [750, 965, 1107, 1188, 1195, 1205, 1227, 1230], "note": [0, 34, 35, 50, 55, 66, 71, 77, 82, 84, 120, 146, 147, 215, 217, 219, 230, 257, 268, 298, 332, 362, 391, 396, 405, 413, 424, 429, 447, 465, 468, 472, 480, 496, 505, 512, 514, 515, 516, 519, 527, 565, 567, 568, 576, 580, 590, 595, 604, 631, 634, 644, 652, 653, 654, 655, 664, 681, 683, 691, 703, 706, 723, 724, 728, 734, 735, 745, 746, 747, 750, 758, 767, 778, 811, 813, 824, 828, 834, 836, 882, 883, 884, 885, 904, 909, 912, 915, 917, 921, 922, 924, 925, 935, 954, 964, 1007, 1075, 1104, 1105, 1110, 1114, 1117, 1121, 1122, 1124, 1127, 1130, 1131, 1134, 1135, 1136, 1152, 1153, 1158, 1159, 1173, 1178, 1179, 1180, 1182, 1183, 1185, 1187, 1193, 1195, 1196, 1199, 1202, 1203, 1204, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1226, 1233, 1236, 1237, 1238, 1243, 1247, 1248], "notebook": [71, 1110, 1112, 1132, 1136, 1173, 1175, 1190, 1192, 1198, 1200, 1201, 1203, 1205, 1206, 1209, 1213, 1214, 1227, 1231, 1234], "noteworthi": 1220, "noth": [36, 1102, 1110, 1114, 1131, 1137, 1152, 1208, 1212, 1223, 1233, 1238, 1246], "nothing_sav": [1206, 1234], "notic": [34, 1102, 1107, 1110, 1117, 1130, 1135, 1136, 1137, 1145, 1151, 1159, 1183, 1186, 1188, 1191, 1193, 1195, 1200, 1202, 1204, 1205, 1206, 1208, 1211, 1212, 1221, 1227, 1232, 1233, 1234, 1236, 1238, 1242, 1246, 1247], "notimplementederror": [0, 956, 957, 1107, 1199, 1202, 1204, 1208, 1233, 1236], "notion": [620, 622, 1104, 1185, 1188, 1216, 1239], "notmap": 1107, "notori": 1214, "nout": [551, 792], "noverlap": [919, 921, 922, 923], "now": [0, 75, 339, 452, 480, 487, 503, 557, 628, 633, 644, 656, 1107, 1110, 1114, 1123, 1128, 1130, 1133, 1135, 1136, 1137, 1151, 1152, 1158, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1199, 1201, 1202, 1203, 1204, 1205, 1208, 1209, 1210, 1211, 1214, 1216, 1218, 1221, 1223, 1227, 1233, 1236, 1246, 1247], "np": [31, 32, 63, 64, 71, 72, 73, 77, 157, 158, 159, 160, 169, 197, 209, 231, 262, 272, 279, 280, 295, 332, 338, 339, 369, 385, 386, 409, 410, 416, 418, 431, 441, 447, 452, 453, 470, 484, 485, 489, 494, 496, 505, 527, 529, 530, 548, 550, 553, 568, 576, 595, 604, 605, 624, 630, 634, 635, 637, 644, 657, 663, 668, 670, 679, 689, 705, 706, 707, 719, 722, 732, 745, 746, 747, 750, 753, 758, 760, 761, 773, 775, 776, 780, 815, 816, 837, 842, 844, 856, 861, 869, 879, 955, 1102, 1104, 1106, 1107, 1110, 1121, 1122, 1130, 1134, 1135, 1136, 1151, 1152, 1153, 1158, 1159, 1175, 1179, 1180, 1182, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1195, 1199, 1201, 1202, 1203, 1204, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1218, 1221, 1225, 1233, 1236, 1237, 1242, 1243, 1244, 1247, 1248], "np_array1": 1180, "np_array2": 1180, "np_dtype": 1195, "np_dtype_to_cod": 1195, "np_result_cod": 1195, "nperseg": [919, 921, 922, 923], "npy": [645, 746, 747], "npz": [645, 746, 747], "npzfile": [645, 747], "nrep": 1212, "nrh": 907, "nse": [80, 82, 84, 92, 101, 107, 109, 113, 119, 122, 125, 1159], "nu": [846, 852, 875, 1208, 1233], "nu_1": 852, "nu_2": 852, "nuc": 631, "num": [557, 644, 656, 874, 1134, 1146, 1211, 1243], "num_carri": [1182, 1237], "num_chunk": [1199, 1212], "num_class": [371, 1209, 1214], "num_col": 633, "num_const": [1107, 1182, 1237], "num_covec": [1205, 1227], "num_devic": [1136, 1202, 1236], "num_el": 1107, "num_elem": 165, "num_epoch": [1203, 1209], "num_featur": 1213, "num_fram": 16, "num_it": 251, "num_kei": 312, "num_label": 1209, "num_leav": 1247, "num_partit": [0, 331], "num_pixel": 1209, "num_point": 1213, "num_process": [35, 77, 1198], "num_r": 1107, "num_replica": 331, "num_row": 633, "num_scalar_prefetch": 1219, "num_seg": [820, 821, 822, 823], "num_step": [828, 1145, 1173, 1191], "num_vec": [1205, 1227], "num_work": 1203, "numba": 1110, "number": [0, 16, 28, 35, 47, 71, 72, 73, 82, 84, 91, 92, 100, 101, 103, 104, 106, 107, 109, 113, 118, 120, 122, 138, 146, 147, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 200, 201, 202, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 288, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 331, 333, 335, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 391, 394, 398, 399, 411, 412, 413, 416, 417, 418, 422, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 440, 443, 446, 452, 453, 458, 460, 461, 462, 463, 471, 472, 477, 482, 484, 486, 492, 495, 497, 499, 503, 506, 507, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 527, 529, 545, 547, 551, 552, 554, 557, 559, 562, 563, 565, 566, 567, 568, 569, 573, 578, 589, 590, 592, 594, 601, 605, 606, 609, 610, 615, 616, 618, 624, 625, 626, 628, 629, 631, 632, 634, 635, 638, 639, 640, 641, 642, 643, 644, 650, 651, 652, 653, 654, 655, 656, 658, 662, 664, 669, 672, 675, 676, 677, 678, 680, 682, 684, 685, 686, 689, 691, 692, 698, 700, 701, 703, 704, 706, 711, 715, 723, 724, 725, 733, 735, 737, 739, 742, 743, 744, 750, 751, 754, 761, 769, 778, 780, 782, 787, 791, 798, 799, 800, 801, 802, 803, 804, 807, 809, 810, 811, 812, 814, 816, 818, 820, 821, 822, 823, 824, 826, 828, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 887, 889, 894, 895, 897, 900, 902, 903, 905, 906, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 929, 930, 933, 937, 938, 942, 943, 952, 953, 955, 959, 960, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1030, 1031, 1034, 1035, 1044, 1045, 1046, 1047, 1050, 1051, 1062, 1063, 1064, 1065, 1097, 1100, 1101, 1107, 1108, 1109, 1110, 1119, 1121, 1127, 1130, 1135, 1136, 1137, 1139, 1145, 1146, 1153, 1158, 1159, 1166, 1169, 1173, 1182, 1185, 1186, 1188, 1189, 1191, 1194, 1195, 1196, 1197, 1198, 1200, 1206, 1208, 1210, 1211, 1212, 1214, 1219, 1221, 1223, 1225, 1233, 1234, 1235, 1237, 1239, 1242, 1244, 1246, 1247], "number_of_dimens": 689, "numer": [7, 49, 67, 120, 208, 369, 372, 430, 447, 494, 514, 515, 516, 519, 521, 541, 552, 559, 562, 563, 578, 593, 598, 599, 628, 645, 690, 694, 710, 711, 716, 822, 823, 852, 917, 924, 925, 926, 955, 957, 975, 986, 993, 999, 1003, 1016, 1021, 1025, 1029, 1039, 1044, 1050, 1054, 1059, 1062, 1064, 1107, 1108, 1109, 1110, 1112, 1114, 1117, 1126, 1130, 1131, 1145, 1173, 1176, 1179, 1185, 1187, 1189, 1190, 1191, 1194, 1195, 1199, 1201, 1204, 1210, 1211, 1212, 1216, 1219, 1221, 1224, 1238, 1242, 1244, 1247], "numpi": [0, 1, 7, 18, 29, 31, 32, 34, 41, 42, 49, 50, 55, 57, 67, 68, 71, 78, 92, 107, 109, 113, 122, 144, 145, 148, 149, 150, 151, 159, 160, 174, 181, 200, 213, 214, 215, 216, 217, 218, 219, 229, 232, 238, 291, 295, 296, 297, 298, 299, 300, 301, 310, 311, 325, 333, 338, 339, 340, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 372, 819, 824, 837, 883, 885, 894, 895, 921, 1075, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1114, 1116, 1117, 1119, 1120, 1121, 1123, 1125, 1126, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1148, 1151, 1152, 1153, 1158, 1159, 1166, 1171, 1173, 1175, 1179, 1180, 1182, 1184, 1186, 1188, 1191, 1194, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1218, 1219, 1221, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1244, 1246, 1247, 1248], "numpy_arrai": 1199, "numpy_col": 1203, "numpy_dtype_promot": 1248, "numpy_random_lik": [1208, 1233], "numpy_random_like_ord": [1208, 1233], "numpy_rank_promot": 1225, "numpy_resid": 624, "numpyload": 1203, "numpystr": 750, "nutshel": 1219, "nvcc": [0, 1127], "nvidia": [1107, 1110, 1119, 1122, 1125, 1128, 1199, 1200, 1202, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1223, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "nvlink": 1127, "nvmap": [1205, 1227], "nvreg_restrictprofilingtoadminus": 1223, "nwc": 1207, "nx": [566, 568, 1195], "ny": [469, 566, 568, 760, 775, 776], "nyquist": [512, 514, 515, 516, 524], "nz": [1208, 1233], "nzero": 1110, "o": [0, 13, 195, 196, 532, 533, 695, 867, 953, 1107, 1110, 1125, 1136, 1152, 1182, 1190, 1199, 1201, 1206, 1207, 1208, 1211, 1214, 1221, 1233, 1234, 1237], "o3": 0, "o_ref": [1216, 1218, 1221], "o_wo": 1186, "ob": [1135, 1247], "obei": [837, 1105, 1208, 1233], "obj": [413, 480, 494, 580, 604, 1122, 1136, 1224, 1247], "obj1": 1122, "obj2": 1122, "object": [0, 3, 5, 6, 9, 10, 22, 23, 25, 26, 27, 32, 37, 38, 41, 46, 47, 48, 50, 53, 54, 57, 58, 59, 60, 61, 62, 67, 70, 71, 76, 77, 85, 137, 141, 142, 150, 157, 158, 169, 191, 194, 195, 196, 232, 271, 272, 273, 277, 278, 279, 280, 281, 296, 297, 298, 299, 300, 301, 319, 332, 337, 338, 340, 372, 373, 390, 395, 413, 446, 465, 471, 494, 498, 500, 527, 546, 547, 548, 550, 560, 561, 572, 576, 580, 603, 604, 611, 612, 613, 614, 615, 617, 620, 627, 631, 633, 634, 645, 650, 651, 663, 665, 679, 681, 683, 693, 695, 696, 703, 707, 708, 713, 714, 715, 721, 724, 725, 734, 745, 746, 747, 750, 777, 816, 819, 824, 831, 837, 874, 896, 903, 913, 914, 920, 924, 925, 926, 927, 939, 941, 947, 953, 954, 961, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1097, 1101, 1102, 1104, 1107, 1109, 1110, 1121, 1122, 1123, 1130, 1131, 1135, 1137, 1145, 1152, 1158, 1159, 1170, 1175, 1176, 1178, 1179, 1185, 1190, 1191, 1194, 1199, 1200, 1201, 1202, 1203, 1205, 1212, 1213, 1214, 1216, 1218, 1222, 1223, 1227, 1236, 1238, 1239, 1243, 1244, 1246, 1247, 1248], "object_": 750, "objective_fn": 9, "observ": [467, 472, 1122, 1133, 1135, 1136, 1152, 1184, 1190, 1202, 1227, 1236, 1247], "obtain": [26, 67, 462, 463, 644, 758, 1110, 1119, 1122, 1130, 1133, 1175, 1182, 1202, 1203, 1209, 1214, 1221, 1227, 1236, 1237, 1244], "obviou": [1120, 1122, 1183, 1189, 1207], "occas": 1185, "occasion": [0, 1122, 1224, 1247], "occupi": 527, "occur": [18, 57, 71, 165, 396, 447, 480, 496, 580, 619, 672, 723, 728, 828, 829, 830, 861, 912, 922, 1048, 1107, 1114, 1115, 1117, 1121, 1122, 1124, 1131, 1136, 1152, 1180, 1183, 1188, 1199, 1208, 1212, 1214, 1222, 1223, 1233, 1238, 1247], "occurr": [431, 588, 799, 1202, 1225, 1236], "oct": [1125, 1192, 1199, 1200, 1212, 1238], "octob": [1189, 1202], "od": [1110, 1189], "odd": [157, 195, 430, 440, 510, 513, 517, 519, 521, 522, 524, 562, 563, 606, 701, 921, 922, 1199], "odeint": [1110, 1189, 1190, 1200, 1227], "odrpack": 1189, "off": [7, 26, 399, 624, 804, 893, 1107, 1110, 1119, 1121, 1184, 1199, 1206, 1207, 1208, 1212, 1233, 1234, 1238, 1247], "offer": [1, 26, 82, 84, 681, 683, 703, 724, 1104, 1112, 1115, 1117, 1159, 1160, 1183, 1185, 1186, 1187, 1188, 1189, 1195, 1198, 1199, 1204, 1207, 1216, 1221, 1236, 1244, 1246], "offic": 572, "offset": [485, 494, 547, 618, 657, 725, 779, 784, 785, 788, 789, 1153, 1166, 1219], "offset_dim": 1166, "often": [3, 49, 70, 399, 430, 450, 464, 540, 564, 748, 926, 956, 957, 1104, 1106, 1107, 1119, 1121, 1122, 1123, 1130, 1133, 1135, 1137, 1146, 1170, 1183, 1185, 1186, 1187, 1189, 1190, 1191, 1194, 1195, 1199, 1201, 1205, 1206, 1207, 1211, 1212, 1214, 1216, 1219, 1221, 1223, 1224, 1227, 1234, 1239, 1247], "oftentim": 1219, "og": 1188, "ogrid": 665, "oh": [1137, 1246], "oi": [196, 197], "oihw": [195, 196, 1207], "oihwd": 197, "oiwh": 197, "ok": [1122, 1131, 1196, 1198, 1199, 1238], "okai": 1183, "old": [624, 634, 644, 645, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 735, 741, 746, 1105, 1106, 1110, 1130, 1134, 1180, 1190, 1192, 1194, 1196, 1199, 1228, 1229, 1240, 1241, 1243], "old_excepthook": [1208, 1233], "older": [1110, 1118, 1120, 1196, 1235], "omit": [35, 452, 634, 711, 750, 892, 907, 1029, 1048, 1049, 1175, 1201, 1214], "omni": 1193, "omnistag": [1107, 1110, 1197], "on_fals": 302, "on_ineffici": 104, "on_tru": 302, "onc": [0, 16, 18, 35, 66, 71, 150, 157, 158, 262, 271, 272, 273, 278, 279, 280, 281, 295, 333, 409, 702, 711, 750, 824, 834, 836, 1102, 1107, 1112, 1119, 1122, 1130, 1131, 1134, 1136, 1137, 1152, 1158, 1182, 1183, 1185, 1186, 1188, 1194, 1199, 1201, 1202, 1205, 1208, 1211, 1212, 1214, 1218, 1221, 1223, 1227, 1233, 1236, 1237, 1238, 1242, 1243, 1244, 1246], "one": [0, 7, 13, 27, 34, 35, 47, 50, 69, 71, 90, 104, 111, 115, 130, 131, 146, 147, 150, 156, 174, 191, 195, 196, 200, 214, 215, 216, 218, 238, 279, 289, 291, 311, 319, 339, 364, 369, 371, 390, 392, 393, 395, 397, 398, 407, 408, 409, 410, 415, 426, 429, 430, 431, 440, 443, 445, 447, 452, 464, 471, 480, 494, 504, 506, 508, 509, 513, 514, 515, 517, 518, 519, 521, 522, 542, 543, 559, 562, 563, 567, 573, 576, 577, 587, 590, 592, 603, 605, 606, 615, 624, 631, 648, 660, 661, 662, 663, 664, 666, 667, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 692, 703, 705, 707, 711, 720, 722, 724, 729, 740, 745, 746, 747, 749, 752, 767, 768, 769, 771, 784, 788, 799, 805, 810, 813, 824, 837, 864, 865, 895, 914, 919, 921, 922, 923, 955, 965, 1029, 1049, 1073, 1092, 1101, 1102, 1104, 1107, 1108, 1110, 1112, 1117, 1119, 1121, 1122, 1125, 1127, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1146, 1152, 1158, 1170, 1173, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1225, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1246, 1247], "one_hot": [1110, 1203, 1209, 1214], "one_of_thre": [1182, 1237], "oner": 1110, "ones": [0, 1, 32, 118, 119, 125, 217, 218, 219, 506, 573, 598, 599, 657, 675, 682, 698, 782, 813, 829, 830, 1101, 1104, 1107, 1114, 1116, 1121, 1122, 1135, 1146, 1152, 1173, 1182, 1185, 1190, 1193, 1196, 1198, 1199, 1200, 1204, 1205, 1206, 1207, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1227, 1234, 1237, 1239, 1247], "ones_lik": 1201, "ongo": 1189, "onli": [0, 7, 16, 17, 19, 34, 35, 38, 50, 57, 67, 69, 71, 75, 90, 97, 120, 121, 150, 159, 160, 191, 215, 229, 242, 245, 246, 247, 248, 256, 262, 280, 292, 302, 311, 332, 336, 369, 409, 413, 417, 426, 429, 430, 432, 434, 436, 437, 439, 440, 447, 464, 485, 494, 497, 512, 526, 546, 556, 557, 559, 562, 563, 565, 567, 577, 588, 589, 595, 606, 614, 619, 620, 622, 633, 634, 637, 644, 645, 650, 651, 652, 653, 654, 655, 656, 658, 672, 673, 674, 678, 681, 683, 684, 686, 688, 702, 703, 706, 711, 724, 728, 734, 740, 746, 747, 750, 751, 752, 758, 772, 774, 799, 804, 811, 813, 816, 824, 834, 836, 837, 889, 892, 893, 895, 897, 900, 904, 905, 906, 907, 908, 910, 912, 914, 915, 916, 917, 918, 920, 924, 925, 933, 943, 947, 955, 957, 961, 964, 1007, 1029, 1048, 1049, 1070, 1081, 1088, 1101, 1104, 1105, 1106, 1107, 1110, 1112, 1114, 1117, 1119, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1145, 1146, 1151, 1152, 1158, 1173, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1223, 1224, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1243, 1244, 1246, 1247, 1248], "onlin": 1145, "ont": 1117, "onto": [37, 217, 218, 219, 296, 297, 299, 300, 301, 339, 1107, 1122, 1180, 1183, 1201, 1211, 1219], "oob": 1216, "ooberror": [53, 54, 60], "oom": [1110, 1152, 1219], "oop": [1137, 1185, 1246], "op": [34, 255, 291, 1105, 1107, 1110, 1122, 1125, 1129, 1130, 1131, 1136, 1151, 1180, 1184, 1188, 1193, 1199, 1204, 1211, 1212, 1219, 1221, 1238], "op_nam": 0, "op_profil": 1223, "opaqu": [0, 1110, 1120, 1190, 1194, 1224, 1247], "opaque_len": 0, "open": [35, 399, 487, 545, 605, 644, 645, 665, 696, 746, 747, 834, 836, 877, 1112, 1119, 1120, 1122, 1185, 1198, 1200, 1205, 1216, 1223, 1227, 1230, 1242], "openai": 1216, "openxla": 1110, "oper": [7, 17, 22, 23, 25, 26, 30, 34, 55, 57, 69, 71, 88, 89, 105, 137, 141, 142, 147, 150, 156, 165, 174, 180, 190, 191, 195, 196, 200, 208, 212, 213, 215, 218, 232, 241, 268, 269, 285, 286, 287, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 312, 319, 324, 341, 342, 392, 393, 397, 432, 434, 435, 436, 437, 438, 439, 464, 480, 493, 496, 497, 531, 532, 533, 541, 544, 551, 552, 570, 589, 610, 614, 628, 633, 640, 652, 653, 654, 655, 660, 666, 668, 672, 673, 674, 688, 691, 721, 732, 737, 778, 792, 808, 815, 824, 834, 836, 848, 924, 925, 926, 927, 953, 1071, 1076, 1090, 1103, 1105, 1106, 1107, 1110, 1114, 1117, 1121, 1122, 1123, 1124, 1127, 1130, 1131, 1135, 1136, 1145, 1152, 1158, 1159, 1170, 1173, 1178, 1180, 1182, 1186, 1188, 1189, 1190, 1193, 1194, 1195, 1198, 1201, 1202, 1205, 1206, 1207, 1208, 1210, 1211, 1214, 1216, 1218, 1220, 1221, 1222, 1223, 1224, 1227, 1228, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1247], "operand": [0, 30, 86, 87, 90, 93, 97, 156, 159, 160, 161, 162, 174, 179, 180, 188, 190, 191, 200, 203, 204, 205, 206, 207, 214, 215, 216, 217, 218, 219, 232, 238, 269, 285, 286, 287, 289, 290, 296, 297, 298, 299, 300, 301, 310, 311, 312, 319, 323, 324, 431, 496, 497, 1104, 1107, 1110, 1135, 1151, 1152, 1166, 1182, 1185, 1186, 1188, 1199, 1202, 1212, 1214, 1236, 1237, 1247], "operand_layout": 0, "operand_layout_constraint": 0, "operand_shap": 1107, "operation": 317, "operation_queue_id": 0, "operation_semant": [196, 197, 291], "oplu": 178, "oppenheim": [430, 440, 921, 922], "oppos": [1190, 1216], "opposit": [505, 706, 912, 1185, 1186], "opresult": [1202, 1236], "opshard": [1180, 1186, 1187], "opshardingshard": 1110, "opt": [0, 719, 1075, 1109, 1110, 1119, 1128, 1184, 1185, 1195, 1203, 1219], "opt_init": 1145, "opt_mak": 1145, "opt_stat": 1145, "opt_upd": 1145, "optax": [1109, 1110, 1126, 1145, 1147], "optic": 1219, "optim": [0, 7, 49, 101, 120, 191, 331, 440, 490, 496, 497, 565, 567, 630, 934, 952, 963, 1104, 1107, 1109, 1110, 1117, 1122, 1130, 1131, 1137, 1144, 1159, 1170, 1183, 1184, 1186, 1199, 1205, 1206, 1208, 1210, 1211, 1212, 1216, 1218, 1221, 1233, 1234, 1238, 1244, 1246], "optimis": [1131, 1186, 1238], "optimistix": 1189, "optimizer_st": [1137, 1246], "optimizeresult": 914, "optimizerst": 1145, "option": [0, 3, 5, 6, 7, 12, 16, 21, 22, 23, 25, 26, 27, 28, 30, 33, 35, 37, 38, 46, 47, 48, 57, 66, 67, 69, 70, 71, 72, 73, 75, 97, 101, 104, 117, 118, 128, 144, 145, 148, 149, 150, 151, 157, 158, 159, 160, 193, 195, 196, 197, 198, 199, 212, 213, 229, 230, 231, 246, 247, 251, 253, 271, 272, 273, 279, 280, 281, 289, 295, 310, 311, 331, 333, 336, 337, 340, 341, 351, 359, 362, 363, 369, 371, 390, 392, 393, 394, 395, 396, 399, 407, 408, 409, 410, 411, 413, 416, 418, 419, 429, 431, 447, 452, 453, 459, 461, 464, 465, 467, 468, 471, 472, 473, 475, 476, 480, 481, 482, 484, 485, 486, 487, 490, 494, 495, 496, 498, 499, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 531, 547, 549, 551, 552, 553, 554, 557, 558, 559, 565, 566, 567, 568, 573, 577, 579, 580, 587, 595, 613, 615, 620, 622, 624, 628, 631, 633, 634, 637, 640, 641, 644, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 662, 663, 664, 666, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 697, 698, 700, 701, 702, 703, 705, 709, 711, 712, 719, 720, 722, 723, 724, 728, 729, 733, 734, 739, 740, 746, 747, 748, 749, 750, 751, 761, 762, 764, 767, 768, 769, 771, 773, 774, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 798, 799, 804, 808, 809, 810, 811, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 831, 832, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 888, 889, 890, 892, 893, 894, 895, 896, 897, 900, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 932, 936, 940, 942, 944, 945, 954, 955, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1076, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1102, 1104, 1107, 1108, 1109, 1110, 1112, 1119, 1121, 1122, 1124, 1127, 1132, 1135, 1145, 1151, 1152, 1158, 1170, 1173, 1175, 1176, 1183, 1188, 1189, 1196, 1198, 1199, 1200, 1201, 1207, 1211, 1214, 1216, 1221, 1222, 1223, 1225, 1226, 1227, 1231, 1247], "optix": [1110, 1147], "optstatepytre": 1145, "or_": 1107, "orbax": [1126, 1128], "ord": [626, 631, 643], "order": [0, 7, 9, 16, 17, 19, 69, 70, 72, 73, 97, 103, 122, 159, 160, 171, 172, 195, 196, 197, 247, 289, 296, 312, 340, 369, 409, 410, 413, 419, 447, 465, 485, 487, 497, 498, 499, 514, 515, 516, 519, 521, 531, 532, 533, 553, 554, 559, 572, 613, 615, 619, 620, 621, 622, 630, 631, 637, 664, 670, 688, 692, 697, 698, 700, 702, 709, 711, 712, 715, 728, 729, 734, 735, 740, 748, 762, 772, 773, 777, 780, 804, 809, 817, 818, 824, 892, 893, 898, 910, 912, 922, 948, 949, 950, 951, 955, 956, 957, 962, 965, 1048, 1068, 1081, 1084, 1104, 1107, 1110, 1112, 1123, 1127, 1132, 1134, 1136, 1152, 1153, 1158, 1159, 1166, 1170, 1175, 1185, 1186, 1188, 1190, 1191, 1195, 1198, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1221, 1230, 1231, 1232, 1233, 1234, 1239, 1243, 1244, 1247], "ordered_effect": 1212, "ordereddict": 1224, "ordin": [624, 636, 1048], "ordinari": [579, 614, 1114, 1236], "org": [13, 120, 159, 160, 196, 197, 209, 291, 381, 388, 401, 403, 406, 421, 425, 430, 434, 436, 464, 501, 527, 546, 562, 563, 572, 589, 606, 630, 646, 647, 648, 711, 758, 776, 781, 839, 882, 886, 928, 929, 933, 934, 935, 944, 945, 948, 949, 950, 951, 952, 963, 1048, 1123, 1127, 1145, 1186, 1203, 1209, 1223], "org_tensorflow": 1223, "organ": [1214, 1239], "orient": [774, 928, 1080, 1082, 1126, 1137, 1173, 1185, 1190, 1191, 1242, 1246], "orig_ind": 1107, "origin": [37, 57, 67, 68, 69, 369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 454, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 579, 580, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 630, 631, 633, 634, 635, 636, 637, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 751, 752, 754, 755, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 799, 804, 805, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 923, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 958, 961, 962, 963, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1075, 1104, 1110, 1112, 1117, 1119, 1122, 1123, 1128, 1130, 1131, 1133, 1152, 1170, 1183, 1185, 1188, 1193, 1194, 1195, 1196, 1199, 1200, 1202, 1204, 1205, 1206, 1207, 1212, 1221, 1224, 1227, 1232, 1234], "orlando": [615, 619, 620, 633, 636], "ortho": [508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 882, 883, 884, 885], "orthogon": [120, 249, 252, 352, 634, 897, 904, 1110, 1189], "orthonorm": [120, 361, 634, 637, 903, 957, 965], "oryx": 1187, "other": [0, 3, 5, 6, 7, 16, 17, 19, 34, 35, 75, 77, 101, 145, 147, 209, 213, 229, 232, 247, 255, 256, 262, 279, 295, 296, 297, 298, 299, 300, 301, 325, 340, 341, 342, 399, 413, 415, 429, 443, 480, 486, 496, 514, 515, 516, 519, 521, 548, 550, 567, 571, 573, 630, 634, 645, 652, 653, 654, 655, 658, 670, 681, 683, 703, 724, 740, 741, 750, 770, 782, 824, 888, 907, 915, 916, 917, 918, 920, 933, 1011, 1048, 1101, 1104, 1107, 1109, 1110, 1111, 1112, 1114, 1121, 1122, 1123, 1125, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1146, 1152, 1158, 1170, 1173, 1175, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1215, 1218, 1219, 1221, 1223, 1224, 1226, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1246, 1247], "other_bind": 1107, "otherwis": [7, 16, 30, 33, 35, 73, 121, 158, 159, 160, 186, 229, 232, 247, 254, 255, 337, 391, 407, 408, 413, 414, 415, 419, 429, 465, 467, 471, 472, 486, 490, 499, 554, 557, 579, 587, 594, 595, 596, 597, 604, 624, 637, 644, 656, 662, 663, 678, 679, 681, 683, 684, 686, 688, 698, 703, 708, 713, 724, 728, 734, 740, 748, 751, 769, 772, 773, 779, 782, 810, 816, 818, 838, 839, 841, 842, 843, 845, 846, 849, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 870, 872, 873, 875, 876, 877, 878, 879, 921, 934, 952, 963, 1007, 1104, 1107, 1110, 1130, 1132, 1133, 1136, 1150, 1166, 1173, 1185, 1189, 1190, 1191, 1198, 1199, 1200, 1205, 1208, 1212, 1214, 1219, 1223, 1227, 1231, 1233, 1238, 1247], "ou": [1199, 1212, 1238], "ought": [1112, 1187], "our": [0, 964, 1104, 1105, 1107, 1112, 1122, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1199, 1200, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1214, 1216, 1218, 1221, 1227, 1233, 1238, 1242, 1244, 1246], "our_jacfwd": [1205, 1227], "our_jacrev": [1205, 1227], "ourselv": [1131, 1183], "out": [0, 9, 16, 17, 18, 19, 49, 50, 55, 56, 57, 71, 90, 97, 98, 100, 150, 188, 216, 217, 232, 289, 296, 297, 298, 299, 300, 301, 319, 338, 339, 341, 342, 390, 392, 393, 395, 396, 397, 399, 403, 404, 406, 407, 408, 412, 413, 415, 419, 421, 423, 425, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 447, 448, 452, 459, 461, 464, 466, 468, 470, 472, 475, 476, 480, 481, 484, 486, 490, 496, 498, 499, 500, 501, 502, 503, 504, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 528, 531, 533, 546, 547, 553, 554, 560, 561, 562, 563, 564, 567, 570, 572, 573, 575, 579, 580, 588, 589, 591, 598, 599, 600, 603, 605, 606, 607, 610, 611, 612, 634, 650, 651, 652, 653, 654, 655, 658, 660, 662, 663, 666, 669, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 691, 693, 697, 698, 699, 703, 705, 708, 713, 714, 720, 722, 723, 724, 729, 730, 735, 736, 737, 738, 741, 743, 744, 755, 758, 763, 765, 766, 768, 769, 771, 773, 774, 779, 805, 808, 809, 810, 815, 816, 817, 818, 820, 821, 822, 823, 824, 916, 920, 932, 936, 940, 944, 945, 954, 966, 968, 1101, 1106, 1107, 1108, 1110, 1112, 1114, 1116, 1117, 1120, 1121, 1122, 1124, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1146, 1166, 1173, 1175, 1176, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1198, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1216, 1219, 1221, 1223, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247], "out1": [145, 489], "out2": [145, 489], "out_1": 145, "out_2": 145, "out_aux_tre": [1208, 1233], "out_av": [1107, 1131, 1199, 1208, 1212, 1233, 1238], "out_ax": [71, 333, 824, 1101, 1110, 1132, 1182, 1186, 1188, 1202, 1208, 1211, 1214, 1224, 1231, 1233, 1236, 1247], "out_axi": [353, 354, 355, 356, 357, 358, 364], "out_axis_resourc": [1110, 1114], "out_bdim": 1107, "out_bind": 1107, "out_binders1": 1107, "out_binders2": 1107, "out_block": 1211, "out_buf": 1107, "out_chan": 1146, "out_ct": [1202, 1236], "out_dim": 1146, "out_dtyp": 1247, "out_featur": 71, "out_flat": [1107, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "out_layout": [1199, 1212, 1238], "out_layouts_flat": [1199, 1212, 1238], "out_layouts_thunk": [1199, 1212, 1238], "out_nod": 1107, "out_nonzero": [1208, 1233], "out_part": [1102, 1110], "out_prim": [1107, 1202, 1208, 1233, 1236], "out_primal_pv": [1208, 1233], "out_primals_const": [1208, 1233], "out_primals_pv": [1208, 1233], "out_pspec": [76, 77, 1180], "out_pval": [1208, 1233], "out_pytree_def": 1131, "out_ref": 1221, "out_shap": [1216, 1218, 1221], "out_shard": [0, 18, 150, 1110, 1114, 1151, 1152, 1158, 1175, 1180, 1199, 1208, 1212, 1233, 1238], "out_shardings_leav": [1199, 1212, 1238], "out_shardings_treedef": [1199, 1212, 1238], "out_spec": [195, 196, 197, 1166, 1207, 1216, 1218, 1221, 1244], "out_stor": [127, 1199, 1208, 1212, 1233, 1238], "out_summand": 1211, "out_summand_hi": 1211, "out_summand_lo": 1211, "out_tan": 1107, "out_tang": [333, 1202, 1236], "out_tangents_pv": [1208, 1233], "out_trac": [1107, 1131, 1199, 1208, 1212, 1233, 1238], "out_tre": [0, 1107, 1131, 1176, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "out_tree_": 1107, "out_typ": [1107, 1199, 1212, 1238], "out_types1": 1107, "out_types2": 1107, "out_uk": 1107, "out_unknown": 1107, "out_val": 1107, "out_var": 1107, "out_vjp": [1208, 1233], "out_weak_typ": 1247, "outcom": 1111, "outer": [0, 73, 497, 568, 824, 1073, 1092, 1110, 1121, 1122, 1135, 1136, 1145, 1152, 1205, 1216, 1227, 1247], "outer_p": 0, "outer_p_low": 0, "outer_primit": 0, "outer_structur": [1073, 1092], "outer_treedef": [1073, 1092, 1135, 1247], "outermost": [441, 452], "outfe": [66, 67, 69, 1110, 1152, 1200, 1227], "outfeed_receiv": [1110, 1152], "outfeed_receiver_pi": 1152, "outfeed_thunk": 1152, "outfil": [746, 747], "outlier": [566, 567], "outlin": [472, 1185, 1189, 1194, 1195, 1197, 1208, 1215, 1219, 1233], "outperform": [1122, 1216], "output": [0, 7, 9, 12, 13, 22, 23, 31, 32, 50, 56, 57, 70, 71, 76, 78, 89, 91, 101, 104, 118, 127, 131, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 174, 195, 196, 197, 198, 214, 230, 231, 232, 238, 262, 278, 280, 281, 295, 296, 297, 298, 299, 300, 301, 325, 332, 333, 339, 340, 353, 354, 355, 356, 357, 358, 362, 364, 378, 380, 389, 391, 392, 393, 397, 398, 399, 405, 409, 411, 424, 430, 431, 432, 435, 437, 438, 439, 440, 441, 443, 459, 464, 466, 470, 475, 476, 484, 486, 487, 488, 489, 490, 494, 496, 497, 498, 500, 501, 506, 508, 509, 511, 513, 514, 515, 516, 519, 520, 521, 527, 529, 538, 541, 542, 543, 544, 549, 551, 555, 557, 560, 561, 562, 563, 564, 571, 573, 575, 590, 591, 605, 606, 608, 609, 610, 611, 612, 630, 644, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 663, 664, 666, 667, 668, 671, 675, 676, 677, 678, 679, 680, 681, 683, 684, 686, 691, 692, 693, 700, 702, 703, 705, 708, 710, 713, 715, 717, 718, 724, 725, 730, 732, 733, 736, 737, 738, 739, 741, 747, 749, 750, 751, 755, 769, 770, 771, 777, 778, 790, 798, 799, 804, 808, 809, 810, 811, 813, 816, 820, 821, 822, 823, 824, 831, 832, 837, 847, 854, 871, 887, 896, 906, 912, 915, 916, 917, 918, 920, 921, 922, 932, 936, 940, 944, 945, 954, 966, 1029, 1048, 1049, 1068, 1084, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1114, 1115, 1117, 1119, 1120, 1123, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1146, 1151, 1152, 1158, 1166, 1170, 1176, 1179, 1180, 1182, 1187, 1189, 1190, 1191, 1192, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1230, 1231, 1233, 1234, 1236, 1237, 1238, 1243, 1244, 1246, 1247, 1248], "output_global_arrai": 339, "output_shap": 174, "output_shape_dtyp": 1110, "output_shard": 0, "output_stream": [68, 1152], "output_tang": [1202, 1236], "output_token": 1183, "outs1": 1107, "outs1_r": 1107, "outs2": 1107, "outs_flat": 1107, "outs_transpos": 1107, "outsid": [1, 7, 56, 147, 303, 371, 452, 453, 464, 565, 566, 567, 820, 821, 822, 823, 848, 912, 1110, 1114, 1121, 1122, 1140, 1152, 1158, 1173, 1183, 1188, 1190, 1195, 1199, 1205, 1210, 1216, 1227], "outsiz": 1189, "outstand": [912, 1153, 1193], "outval": 1204, "outvar": [12, 1107, 1204, 1208, 1233], "outweigh": 1189, "over": [7, 13, 71, 96, 157, 158, 160, 165, 167, 191, 209, 211, 262, 271, 272, 273, 279, 280, 281, 284, 294, 295, 312, 319, 369, 390, 395, 398, 429, 464, 468, 476, 490, 496, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 531, 549, 557, 565, 567, 579, 595, 604, 613, 624, 631, 641, 644, 652, 653, 654, 655, 656, 658, 662, 664, 675, 676, 678, 682, 684, 685, 686, 700, 705, 720, 735, 769, 771, 773, 774, 777, 804, 808, 810, 811, 812, 824, 847, 882, 883, 884, 885, 919, 920, 922, 923, 955, 1010, 1067, 1070, 1071, 1083, 1088, 1089, 1090, 1101, 1104, 1105, 1107, 1110, 1112, 1117, 1120, 1121, 1127, 1130, 1132, 1133, 1134, 1135, 1136, 1158, 1173, 1178, 1180, 1182, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1198, 1199, 1200, 1201, 1204, 1205, 1206, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1224, 1227, 1231, 1232, 1234, 1237, 1242, 1243, 1244, 1247], "overal": [159, 160, 1122, 1124, 1185, 1190, 1219, 1221], "overarch": 1159, "overestim": 567, "overflow": [211, 288, 399, 447, 527, 538, 635, 957, 1110, 1122, 1195], "overflowerror": 1110, "overhead": [0, 5, 6, 7, 104, 332, 926, 1106, 1122, 1124, 1131, 1179, 1183, 1185, 1187, 1193, 1199, 1205, 1208, 1227, 1233, 1238], "overlai": [1173, 1194, 1199, 1243], "overlap": [232, 296, 297, 298, 299, 300, 301, 464, 912, 921, 922, 923, 1125, 1185, 1186, 1189, 1211, 1216, 1219, 1221], "overli": [1184, 1185, 1193, 1219], "overlin": [192, 468], "overload": 1247, "overpromot": 1248, "overrid": [159, 160, 208, 473, 499, 554, 698, 750, 818, 1107, 1110, 1119, 1122, 1124, 1127, 1208, 1233], "overridden": [472, 1122, 1135, 1196, 1223, 1247], "override_lowering_rul": [1202, 1236], "override_repositori": 1119, "overrun": 215, "oversmooth": 1007, "overus": 1219, "overview": [1108, 1110, 1242], "overwhelmingli": 1184, "overwrit": [889, 897, 900, 1199], "overwrite_": [888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 907, 908, 910], "overwrite_a": [888, 890, 891, 892, 897, 899, 900, 901, 904, 907, 910], "overwrite_b": [889, 892, 902, 907, 908], "overwrite_input": [663, 679, 681, 683, 703, 724], "own": [71, 150, 339, 824, 1110, 1112, 1117, 1122, 1135, 1136, 1147, 1183, 1185, 1186, 1188, 1191, 1196, 1199, 1204, 1205, 1210, 1211, 1221, 1223, 1230, 1239, 1247], "ownership": 1110, "p": [0, 250, 338, 339, 430, 501, 502, 562, 563, 606, 615, 628, 630, 709, 711, 712, 715, 741, 780, 808, 839, 840, 842, 847, 855, 856, 891, 900, 901, 903, 904, 919, 923, 944, 952, 954, 960, 963, 969, 970, 971, 972, 981, 982, 1007, 1015, 1016, 1017, 1018, 1019, 1030, 1031, 1034, 1035, 1107, 1117, 1135, 1136, 1151, 1152, 1175, 1180, 1182, 1186, 1191, 1199, 1200, 1201, 1202, 1206, 1208, 1209, 1211, 1212, 1227, 1233, 1234, 1236, 1238, 1244, 1247], "p1": 568, "p2": 568, "p3": 568, "p_indic": 900, "p_l": 957, "p_n": 965, "p_transpos": [1202, 1236], "pack": [700, 728, 804, 1152, 1182, 1200, 1224, 1227, 1237, 1247], "pack_optimizer_st": 1145, "packag": [681, 683, 703, 724, 1104, 1107, 1109, 1110, 1117, 1119, 1120, 1122, 1127, 1130, 1131, 1147, 1160, 1167, 1173, 1182, 1185, 1187, 1189, 1193, 1199, 1202, 1203, 1208, 1212, 1214, 1223, 1233, 1236, 1237, 1238, 1239, 1242, 1247], "packdescriptor": 0, "packed_st": 1145, "packet": 1152, "pacman": 1119, "pad": [50, 101, 193, 195, 196, 197, 198, 199, 251, 287, 411, 468, 494, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 529, 692, 700, 741, 751, 798, 799, 804, 816, 882, 883, 884, 885, 915, 916, 917, 918, 919, 920, 921, 922, 923, 1110, 1119, 1122, 1146, 1198, 1206, 1212, 1234], "pad_width": 701, "padding_config": 269, "padding_valu": 269, "page": [430, 562, 563, 628, 781, 886, 1112, 1116, 1121, 1122, 1219], "page_297": 935, "page_379": 572, "page_67": [646, 647, 648], "page_69": 501, "page_79": [387, 400, 402, 404, 420, 423], "page_83": 776, "page_86": [388, 401, 403, 406, 421, 425], "pai": [1135, 1136, 1195, 1206, 1214, 1234, 1248], "pain": [1107, 1114, 1221], "pair": [9, 13, 57, 140, 143, 144, 145, 148, 149, 151, 195, 196, 197, 199, 248, 252, 256, 263, 264, 277, 295, 333, 340, 369, 497, 541, 619, 707, 906, 955, 1068, 1079, 1081, 1084, 1085, 1087, 1099, 1100, 1101, 1102, 1107, 1109, 1110, 1125, 1130, 1146, 1153, 1175, 1176, 1182, 1186, 1188, 1190, 1195, 1200, 1202, 1205, 1206, 1211, 1214, 1224, 1227, 1234, 1236, 1237, 1243, 1247, 1248], "palla": [1110, 1228, 1249], "pallas_cal": [1218, 1219, 1221], "palm": 1186, "panda": 1195, "paper": [681, 683, 703, 724, 1107, 1145, 1186, 1199, 1219], "paradigm": [1123, 1214], "paragraph": 1214, "parallel": [0, 29, 71, 73, 165, 326, 339, 340, 824, 1101, 1102, 1108, 1110, 1117, 1119, 1123, 1125, 1126, 1134, 1138, 1139, 1146, 1158, 1173, 1175, 1180, 1183, 1184, 1185, 1186, 1188, 1191, 1198, 1199, 1216, 1218, 1219, 1221, 1235, 1239], "parallel_accelerator_execut": 1119, "parallel_reduc": 1199, "paralleliz": [1134, 1191, 1221, 1243], "param": [0, 69, 127, 128, 131, 132, 1107, 1122, 1128, 1130, 1131, 1133, 1135, 1136, 1137, 1145, 1159, 1173, 1182, 1184, 1186, 1188, 1191, 1199, 1201, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1212, 1224, 1227, 1233, 1234, 1237, 1238, 1239, 1246, 1247], "param_0": 0, "param_1": 0, "paramet": [0, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 44, 45, 50, 51, 55, 56, 57, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 130, 136, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 447, 448, 450, 452, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1107, 1109, 1110, 1121, 1122, 1130, 1131, 1133, 1136, 1137, 1145, 1146, 1153, 1158, 1159, 1166, 1175, 1176, 1182, 1185, 1186, 1188, 1192, 1193, 1199, 1200, 1203, 1204, 1205, 1207, 1209, 1211, 1213, 1219, 1221, 1227, 1232, 1237, 1238, 1239, 1246], "parameter": 1107, "parameteris": [1133, 1227], "parameterpytre": 1145, "parametr": [781, 886, 1007, 1110], "params_": 1211, "params_dens": 1159, "params_dict": [1205, 1230], "params_fn": 1145, "params_frag": 1211, "params_singl": 1201, "params_spars": 1159, "params_stack": 1211, "params_without_jaxpr": 1107, "paramslist": [1206, 1234], "paramspec": 1185, "pardon": 1244, "parent": [1107, 1208, 1233], "parent_head": [1208, 1233], "parenthes": 630, "parlanc": 1195, "pars": [331, 1180, 1184, 1193, 1199, 1216], "parse_flags_with_absl": [1115, 1199], "part": [0, 17, 56, 128, 150, 189, 237, 280, 283, 312, 384, 404, 423, 459, 462, 463, 542, 543, 575, 591, 592, 600, 601, 619, 620, 622, 661, 667, 669, 701, 707, 708, 709, 710, 711, 712, 713, 714, 715, 730, 741, 763, 791, 888, 896, 907, 919, 1104, 1110, 1112, 1119, 1120, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1144, 1158, 1166, 1175, 1180, 1182, 1184, 1185, 1186, 1189, 1193, 1194, 1195, 1196, 1205, 1206, 1212, 1214, 1218, 1224, 1230, 1231, 1234, 1237, 1238, 1243, 1244, 1246], "part_grad": 0, "part_grad_s": 0, "part_grad_shap": 0, "parti": 1185, "partial": [0, 6, 7, 9, 14, 50, 130, 131, 150, 159, 160, 165, 169, 250, 333, 813, 824, 830, 900, 1107, 1110, 1121, 1122, 1130, 1131, 1133, 1136, 1145, 1152, 1153, 1159, 1182, 1183, 1184, 1186, 1189, 1190, 1192, 1195, 1196, 1200, 1202, 1204, 1205, 1206, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1227, 1233, 1234, 1236, 1237, 1238, 1244, 1247], "partial_0": [1200, 1205, 1227], "partial_1": [1200, 1205, 1227], "partial_ev": [1107, 1110, 1122, 1131, 1187, 1193, 1202, 1216, 1236], "partial_eval_flat": 1107, "partial_eval_jaxpr": 1107, "partial_eval_jaxpr_rul": 1107, "partial_eval_rul": 1107, "partial_i": [1133, 1205, 1227, 1230], "partial_j": [1133, 1227], "partial_prod": 165, "partialevaltrac": 1107, "partialv": 1107, "particip": [824, 1152, 1158], "particular": [67, 71, 145, 158, 231, 422, 688, 907, 926, 1104, 1107, 1109, 1110, 1112, 1119, 1131, 1137, 1146, 1152, 1159, 1173, 1175, 1179, 1185, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1200, 1201, 1202, 1205, 1206, 1211, 1212, 1214, 1219, 1223, 1224, 1227, 1230, 1234, 1236, 1238, 1239, 1243, 1244, 1247, 1249], "particularli": [624, 748, 824, 1105, 1110, 1132, 1185, 1189, 1195, 1206, 1231, 1234], "partit": [0, 71, 77, 150, 331, 409, 1102, 1110, 1151, 1158, 1173, 1175, 1180, 1186, 1201, 1211, 1219], "partition": [150, 326, 331, 1110, 1151, 1158, 1186, 1201, 1216], "partition_list": 1107, "partition_spec": [18, 1180], "partitioned_arrai": 702, "partitionspec": [0, 18, 76, 77, 338, 339, 1110, 1114, 1151, 1158, 1175, 1180, 1186, 1201, 1211, 1244], "partli": [1185, 1189], "pass": [0, 7, 9, 13, 16, 17, 19, 29, 31, 32, 34, 50, 57, 67, 68, 69, 70, 77, 117, 118, 122, 124, 127, 147, 150, 188, 331, 332, 352, 390, 392, 393, 395, 405, 409, 424, 441, 500, 503, 549, 552, 560, 561, 567, 568, 605, 611, 612, 624, 634, 645, 657, 660, 662, 665, 666, 672, 677, 678, 679, 680, 681, 683, 684, 685, 688, 693, 696, 702, 705, 711, 720, 722, 725, 747, 750, 769, 771, 810, 813, 824, 828, 830, 835, 837, 914, 919, 921, 922, 923, 924, 925, 926, 938, 1008, 1029, 1070, 1075, 1079, 1081, 1088, 1101, 1104, 1106, 1107, 1110, 1111, 1112, 1114, 1117, 1119, 1121, 1123, 1124, 1127, 1130, 1133, 1135, 1136, 1137, 1145, 1151, 1152, 1154, 1158, 1159, 1166, 1173, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1198, 1199, 1200, 1202, 1206, 1208, 1211, 1212, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1244, 1246, 1247], "past": [485, 912, 1122, 1214], "patch": [197, 1110, 1119, 1195, 1196], "patchwork": 1185, "path": [497, 645, 746, 747, 928, 938, 1081, 1085, 1087, 1089, 1106, 1110, 1119, 1122, 1127, 1150, 1176, 1180, 1186, 1189, 1195, 1196, 1216, 1223, 1248], "pathlib": [645, 746], "pattern": [91, 119, 125, 150, 429, 1107, 1109, 1110, 1121, 1122, 1125, 1131, 1137, 1151, 1179, 1185, 1186, 1194, 1195, 1206, 1208, 1212, 1218, 1219, 1233, 1234, 1238, 1243, 1246], "paus": [1116, 1117, 1152, 1232], "pave": 1186, "pax": [1125, 1184], "pbroadcast": [1186, 1188], "pd": 1195, "pdb": [1115, 1116, 1117, 1186, 1190, 1200, 1227], "pdf": [120, 559, 960, 997, 1007, 1008, 1009, 1012, 1014, 1032, 1110, 1145, 1186, 1207], "pdot": 1214, "pe": [1131, 1199, 1208, 1212, 1233, 1238], "pe_debug": [1199, 1212, 1238], "peak": [722, 876], "pearson": 467, "ped": [1186, 1211, 1214], "peel": 1107, "peer": 1110, "peform": 37, "penalti": [1195, 1203, 1209, 1248], "pend": 778, "pendulum": 1190, "penros": 633, "penultim": 921, "peopl": [929, 1185, 1199], "pep": [1185, 1196], "pepper": 1185, "per": [35, 90, 215, 218, 339, 510, 524, 711, 729, 750, 828, 921, 1107, 1110, 1119, 1122, 1130, 1131, 1145, 1151, 1152, 1183, 1197, 1198, 1201, 1203, 1205, 1209, 1210, 1211, 1212, 1214, 1238, 1242], "per_core_batch_s": 0, "per_device_data": 339, "per_device_data_on_devic": 339, "per_device_shap": 339, "per_host_data": 339, "per_host_gener": 339, "per_host_shap": 339, "percent": [972, 989, 1027, 1042, 1061], "percentag": 703, "percentil": [681, 1110], "perceptron": 1247, "perex_grad": [1133, 1227], "perfectli": 1186, "perfetto": [834, 836, 1110], "perfetto_trac": [834, 836], "perform": [0, 5, 6, 7, 13, 14, 15, 35, 37, 49, 50, 71, 72, 96, 120, 150, 160, 165, 174, 200, 208, 214, 232, 238, 250, 271, 272, 273, 277, 279, 280, 292, 295, 296, 297, 298, 299, 300, 301, 337, 390, 395, 409, 410, 419, 453, 480, 486, 496, 509, 511, 515, 516, 521, 525, 531, 567, 613, 614, 688, 715, 720, 748, 771, 811, 820, 821, 822, 823, 824, 828, 847, 888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 912, 914, 915, 917, 921, 926, 928, 1029, 1048, 1049, 1102, 1107, 1110, 1119, 1121, 1122, 1123, 1127, 1128, 1130, 1131, 1136, 1137, 1145, 1152, 1158, 1166, 1183, 1184, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1223, 1227, 1233, 1234, 1235, 1236, 1238, 1242, 1244, 1246, 1248], "perhap": [229, 1107, 1122, 1135, 1136, 1185, 1189, 1193, 1195, 1200, 1205, 1206, 1216, 1221, 1227, 1234], "period": [35, 587, 808, 1105, 1110, 1127, 1199], "periodogram": [430, 919, 923], "perm": [277, 278, 1107, 1186, 1211], "permalink": 1223, "permiss": [452, 1111, 1112, 1199, 1200, 1203, 1209, 1222, 1227], "permissive_sum": 1199, "permit": [1110, 1111], "permut": [97, 103, 250, 277, 278, 289, 312, 313, 324, 780, 900, 901, 1107, 1110, 1186, 1201, 1207, 1211, 1219], "permute_l": 900, "permuted_devic": 1201, "perpendicular": 473, "persist": [1107, 1110, 1150, 1249], "person": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648, 776], "perspect": [1185, 1194, 1208, 1233], "pertain": 1152, "pertin": 892, "perturb": [1122, 1202, 1205, 1216, 1227, 1236], "pervas": 1110, "pg": [615, 620, 631, 636, 699, 707, 715, 760, 776], "phase": [0, 307, 369, 808, 922, 955, 1219], "phawkin": 1247, "phi": [957, 965], "philosophi": [1186, 1191], "physic": [32, 72, 73, 331, 572, 1110, 1180, 1186, 1188, 1189, 1198, 1201, 1211, 1214, 1216], "physical_mesh": 1212, "pi": [345, 387, 394, 400, 402, 404, 405, 420, 423, 424, 757, 758, 808, 863, 865, 866, 879, 935, 953, 959, 965, 1122, 1205, 1207, 1213, 1227], "pic": 1203, "pick": [16, 1122, 1135, 1205, 1218, 1221], "pickl": [645, 746, 1110, 1170], "pictur": 1136, "piec": [71, 705, 960, 1107, 1158, 1186, 1196, 1201, 1202, 1211, 1221, 1236], "piecewis": [587, 1199], "piecewise_const": 1145, "pillow": [1119, 1203], "pin": [1110, 1119, 1121, 1187, 1196], "pin_memori": 1203, "ping": 1186, "pinpoint": [1117, 1128], "pinv": 1110, "pip": [0, 1110, 1112, 1122, 1128, 1196, 1203, 1223, 1242], "pipe": [1137, 1246], "pipelin": [159, 160, 339, 1125, 1136, 1186, 1209, 1216, 1217, 1220], "pitfal": 1198, "piv": 901, "pivot": [250, 900, 901, 904], "pix": [1165, 1189], "pixel": [147, 493, 570, 815, 912, 1186], "pjit": [0, 18, 76, 77, 150, 326, 1104, 1110, 1115, 1116, 1117, 1122, 1147, 1151, 1152, 1173, 1175, 1182, 1188, 1199, 1202, 1208, 1212, 1216, 1233, 1236, 1237, 1238, 1239], "pjit_custom_p_loss": 0, "pjit_fft": 1151, "pjit_my_fft": 1151, "pjit_p": [1110, 1208, 1212, 1233], "pjit_rms_norm": 0, "pjit_transformer_lay": 1186, "pjitted_f": 1180, "pjitted_fun": [76, 77], "pjrt": 1119, "pjrt_client": 1152, "pl": [900, 1216, 1218, 1221], "place": [37, 38, 71, 150, 165, 281, 391, 396, 480, 503, 505, 526, 546, 577, 580, 672, 688, 701, 723, 734, 739, 837, 1074, 1093, 1104, 1108, 1110, 1119, 1121, 1122, 1130, 1135, 1136, 1152, 1158, 1170, 1175, 1179, 1185, 1186, 1190, 1193, 1195, 1200, 1201, 1206, 1208, 1211, 1212, 1214, 1216, 1218, 1222, 1223, 1227, 1232, 1233, 1234, 1246], "placehold": [924, 925, 926, 1107, 1182, 1201, 1228, 1229, 1237, 1240, 1241, 1245], "placement": [25, 30, 413, 419, 465, 1175, 1186, 1201, 1211], "plai": [1199, 1203, 1206, 1209, 1234], "plain": [747, 1106], "plan": [0, 339, 914, 1112, 1133, 1186, 1194, 1214], "plane": [394, 742, 939, 943, 1205, 1227], "platform": [0, 24, 26, 28, 38, 73, 291, 329, 330, 334, 475, 476, 675, 676, 682, 685, 688, 720, 771, 824, 827, 1102, 1104, 1105, 1110, 1119, 1122, 1124, 1158, 1196, 1201, 1202, 1208, 1216, 1221, 1223, 1233, 1236, 1242], "pleas": [41, 71, 77, 417, 467, 492, 569, 664, 747, 787, 814, 847, 1105, 1110, 1112, 1122, 1127, 1128, 1144, 1158, 1171, 1180, 1182, 1184, 1190, 1194, 1199, 1208, 1219, 1233, 1235], "plot": [912, 1117, 1130, 1136, 1137, 1200, 1207, 1210, 1212, 1213, 1227, 1246], "plot_scal": 1213, "plt": [1130, 1135, 1136, 1137, 1195, 1200, 1207, 1212, 1227, 1246], "plu": [380, 576, 648, 745, 1104, 1187, 1207], "plug": [0, 1203, 1209], "pluggabl": [1197, 1243], "plugin": [1110, 1119, 1127, 1196, 1223], "plumb": [0, 1107, 1110, 1114, 1216], "pm": 242, "pmap": [7, 25, 56, 71, 157, 158, 169, 271, 272, 273, 277, 278, 279, 280, 281, 337, 340, 837, 1101, 1102, 1104, 1109, 1110, 1115, 1116, 1121, 1122, 1123, 1152, 1175, 1176, 1179, 1180, 1182, 1183, 1188, 1193, 1198, 1199, 1202, 1204, 1211, 1214, 1216], "pmapshard": [1175, 1180], "pmax": 1136, "pmean": [1136, 1188, 1211, 1214], "pmf": 1110, "png": [781, 886], "po": [907, 1110, 1195, 1199], "poch": 947, "pochhamm": [947, 961], "pocketfft": 1110, "pod": [572, 824, 1110, 1158, 1198], "point": [7, 16, 39, 47, 48, 57, 120, 144, 248, 256, 307, 312, 333, 369, 399, 405, 416, 418, 424, 430, 440, 458, 464, 508, 510, 513, 514, 518, 519, 521, 522, 524, 527, 539, 559, 562, 563, 566, 578, 587, 606, 609, 627, 640, 650, 651, 662, 672, 691, 710, 711, 713, 748, 750, 781, 886, 912, 913, 921, 922, 923, 933, 934, 935, 942, 955, 956, 957, 958, 972, 989, 1008, 1012, 1013, 1027, 1042, 1061, 1104, 1107, 1110, 1119, 1120, 1121, 1122, 1127, 1130, 1134, 1135, 1136, 1152, 1153, 1182, 1183, 1184, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1199, 1200, 1202, 1203, 1205, 1209, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1232, 1236, 1243, 1247, 1248], "pointer": [0, 121, 1216], "pointless": 198, "pointwis": [1202, 1236], "poke": [1116, 1190], "polar": [251, 965, 1110], "polar_unitari": 1110, "poli": 1110, "polici": [7, 18, 47, 48, 1104, 1105, 1110, 1201, 1211, 1215, 1222], "poly1d": [708, 709, 710, 712, 713, 714, 715], "polyadd": 1189, "polydiv": 1189, "polymorph": 1110, "polynomi": [707, 708, 709, 710, 711, 712, 713, 714, 715, 741, 1153], "polynomial_decai": 1145, "polynomial_interpol": 711, "polyshap": 1110, "pool": 1146, "poor": [7, 1210, 1242], "poorli": [624, 1189], "pop": 1107, "popcount": 275, "popul": [77, 1049, 1110, 1185], "popular": [1204, 1216], "populate_stor": [1199, 1212, 1238], "port": [35, 833, 1122, 1198, 1223], "portabl": [746, 1216], "portion": [527, 565, 567, 705, 1109, 1119, 1186, 1195, 1223], "pos_batch": 270, "pos_contract": 270, "posdef": 903, "pose": [1185, 1246], "posinf": 672, "posit": [0, 5, 6, 17, 19, 50, 55, 56, 71, 78, 87, 91, 118, 144, 145, 148, 149, 150, 151, 157, 158, 159, 160, 195, 196, 209, 232, 245, 280, 281, 295, 332, 333, 340, 364, 391, 394, 399, 409, 431, 446, 452, 484, 485, 503, 506, 507, 514, 515, 516, 519, 524, 527, 538, 590, 594, 596, 599, 614, 627, 640, 670, 672, 688, 702, 725, 739, 740, 747, 749, 750, 765, 773, 779, 813, 824, 837, 865, 874, 888, 890, 892, 903, 907, 925, 931, 932, 942, 944, 945, 947, 953, 961, 964, 1032, 1033, 1070, 1088, 1089, 1099, 1100, 1101, 1102, 1107, 1110, 1114, 1115, 1121, 1122, 1145, 1146, 1151, 1152, 1153, 1158, 1176, 1185, 1189, 1190, 1199, 1200, 1202, 1205, 1211, 1216, 1221, 1227, 1230, 1236], "position": [538, 717, 718, 1110], "positional_broadcast_and_reduc": 1214, "positionalshard": 1175, "positive_valu": 1121, "positon": 1110, "possibl": [17, 18, 34, 37, 38, 49, 71, 293, 302, 427, 428, 440, 447, 465, 490, 497, 526, 542, 543, 546, 565, 568, 650, 651, 652, 653, 654, 655, 657, 706, 723, 734, 747, 764, 780, 824, 892, 1075, 1107, 1110, 1112, 1121, 1122, 1124, 1127, 1130, 1131, 1151, 1152, 1165, 1166, 1170, 1173, 1180, 1185, 1186, 1188, 1193, 1194, 1195, 1196, 1197, 1199, 1200, 1205, 1206, 1211, 1214, 1219, 1224, 1227, 1234, 1238], "possibli": [165, 214, 216, 758, 1104, 1135, 1176, 1194], "post": 1199, "post_norm_batch": 1186, "post_norm_emb": 1186, "posterior": [1109, 1213], "postmortem": 1115, "potenti": [7, 17, 215, 548, 550, 578, 1107, 1117, 1124, 1183, 1184, 1185, 1186, 1188, 1189, 1193, 1195, 1199, 1210, 1211, 1216, 1219, 1225, 1247, 1248], "pow": [1110, 1219], "power": [145, 240, 276, 440, 502, 527, 538, 562, 563, 627, 656, 688, 711, 717, 809, 919, 923, 1081, 1089, 1145, 1182, 1185, 1190, 1199, 1204, 1205, 1208, 1212, 1227, 1233, 1237], "power3": 1152, "power3_with_cotang": 1152, "power3_with_tang": 1152, "powershel": 1119, "pp": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 430, 440, 527, 562, 563, 572, 606, 619, 633, 646, 647, 648, 681, 683, 703, 724, 741, 882, 895, 909, 919, 923, 1007, 1107, 1110, 1117, 1202, 1236], "pp_eqn": 1107, "pp_jaxpr": 1107, "pp_param": 1107, "pp_rule": 1107, "pp_valu": [1202, 1236], "ppermut": [278, 1186], "ppermute_ref": 1211, "ppmerut": 1186, "pprint": 1107, "pprint_cond": 1107, "pprint_xla_cal": 1107, "pprof": [831, 1120], "pr": [1112, 1119, 1122, 1128, 1144, 1185, 1190, 1192, 1196], "practic": [71, 688, 1007, 1105, 1109, 1152, 1166, 1183, 1185, 1186, 1190, 1191, 1193, 1196, 1201, 1211, 1216, 1238, 1239, 1242], "pre": [778, 1112, 1119, 1122, 1127, 1158, 1193, 1199, 1202, 1205, 1227, 1236, 1238], "prealloc": [1110, 1124], "prebuilt": [1109, 1119, 1196], "preced": [0, 736, 1131, 1185, 1186, 1190, 1202, 1208, 1211, 1233, 1236], "precis": [9, 22, 23, 26, 88, 104, 105, 146, 147, 170, 193, 195, 196, 197, 198, 199, 212, 213, 270, 399, 416, 418, 429, 464, 468, 475, 476, 490, 495, 496, 527, 538, 558, 579, 624, 630, 657, 658, 675, 676, 682, 685, 711, 719, 720, 750, 771, 777, 779, 811, 812, 861, 893, 903, 907, 909, 915, 916, 917, 918, 924, 925, 933, 947, 953, 1107, 1110, 1115, 1122, 1130, 1166, 1184, 1185, 1186, 1189, 1204, 1205, 1211, 1216, 1227, 1239, 1248], "precisionlik": 1166, "preclud": [15, 1186, 1190], "precompil": 1110, "precondit": [120, 924, 925, 926], "precondition": [924, 925, 926], "pred": [55, 191, 302, 303, 1102, 1107, 1136, 1137, 1182, 1193, 1199, 1203, 1205, 1209, 1230, 1237, 1246], "pred_dim": 1107, "pred_trac": 1107, "pred_tracer_": 1107, "pred_typ": 1107, "pred_unk": 1107, "predecessor": 808, "predefin": [530, 576, 745], "predic": [55, 56, 191, 302, 319, 1107, 1110, 1182, 1199, 1237], "predict": [0, 1130, 1135, 1136, 1137, 1184, 1186, 1188, 1195, 1201, 1205, 1206, 1211, 1214, 1227, 1230, 1234, 1243, 1246], "predict_dict": [1205, 1227], "predict_fsdp": 1211, "predict_fsdp_tp": 1211, "predict_pp": 1211, "predict_tp": 1211, "predicted_class": [1203, 1209], "prefer": [82, 84, 232, 289, 296, 297, 298, 299, 300, 301, 339, 490, 568, 707, 708, 709, 710, 711, 712, 713, 714, 715, 740, 741, 816, 1107, 1108, 1110, 1119, 1121, 1122, 1127, 1135, 1166, 1191, 1194, 1196, 1197, 1219, 1244, 1247, 1248], "preferred_element_typ": [88, 105, 193, 195, 197, 198, 199, 212, 213, 464, 468, 490, 496, 579, 658, 777, 811, 812, 1204, 1219, 1234], "prefetch": [1209, 1219, 1221], "prefetchscalargridspec": 1219, "prefix": [30, 71, 150, 165, 341, 342, 849, 865, 1014, 1070, 1088, 1089, 1101, 1105, 1110, 1158, 1214, 1219, 1224, 1247], "preinstal": [1119, 1127], "preliminari": [1110, 1187], "prentic": [430, 440, 707, 919, 921, 922], "prepar": [35, 1110, 1112], "prepend": [413, 441, 486, 495, 778], "preproc": 1199, "prerequisit": 1119, "prescript": 1144, "presenc": [17, 1110, 1117, 1152, 1183], "present": [7, 68, 69, 71, 246, 392, 393, 619, 660, 666, 677, 680, 711, 816, 831, 1029, 1049, 1107, 1110, 1117, 1119, 1122, 1151, 1185, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1247], "preserv": [238, 280, 289, 341, 342, 413, 419, 426, 427, 428, 447, 531, 532, 533, 620, 622, 722, 748, 786, 1117, 1119, 1159, 1178, 1180, 1183, 1190, 1199, 1208, 1233], "press": [430, 562, 563, 606, 615, 619, 620, 628, 631, 633, 636, 699, 707, 741, 934, 952, 963, 1223], "pressur": 1219, "presum": 711, "pretend": [1133, 1183, 1202, 1227, 1236], "pretransform": 1110, "pretti": [1078, 1107, 1110, 1117, 1187, 1190, 1200, 1201, 1203, 1204, 1205, 1209, 1227, 1230], "prev": 1212, "prev_dynamic_trac": 1107, "prev_i": [1131, 1238], "prevent": [7, 120, 317, 710, 713, 1110, 1124, 1128, 1190, 1194, 1199, 1248], "prevent_cs": [7, 1206, 1234], "previou": [429, 557, 624, 1110, 1131, 1132, 1180, 1182, 1183, 1185, 1191, 1195, 1205, 1211, 1214, 1221, 1223, 1227, 1230, 1231, 1237, 1238, 1247], "previous": [0, 681, 683, 703, 724, 1110, 1121, 1154, 1180, 1185, 1187, 1189, 1193, 1194, 1195, 1233, 1236], "price": 1135, "prim": 1107, "prim_requires_devic": 1212, "prim_requires_devices_during_low": [0, 1110], "primaci": 1195, "primal": [7, 13, 14, 151, 332, 333, 1100, 1107, 1110, 1114, 1152, 1153, 1190, 1200, 1205, 1206, 1208, 1227, 1233, 1234], "primal_env": 1107, "primal_out": [14, 1107, 1200, 1202, 1208, 1227, 1233, 1236], "primal_pv": 1107, "primal_pvals_in": 1107, "primals_and_tang": 1107, "primals_flat": [1107, 1208, 1233], "primals_in": [1107, 1208, 1233], "primals_in_flat": 1107, "primals_out": [151, 333, 1100, 1107, 1153], "primals_out_flat": 1107, "primals_tangents_in": 1107, "primari": [312, 613, 1104, 1110, 1123, 1159, 1178, 1188, 1189, 1190, 1216], "primarili": [441, 1110, 1189, 1196, 1224], "primer": [1208, 1220, 1233], "primit": [7, 17, 34, 57, 69, 150, 262, 291, 295, 325, 824, 1103, 1108, 1110, 1114, 1115, 1116, 1122, 1123, 1130, 1131, 1152, 1153, 1159, 1166, 1170, 1183, 1186, 1187, 1189, 1190, 1191, 1193, 1200, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1219, 1224, 1227, 1233, 1234, 1235, 1238, 1239], "primitive_batch": [0, 1202, 1236], "primitive_comput": 1102, "primitive_computation__1": 1102, "primitive_jvp": [1202, 1208, 1233, 1236], "primitive_transpos": [1202, 1236], "primitives_with_limited_support": 1110, "primtiv": 0, "princip": 939, "principl": [926, 1122, 1134, 1186, 1190, 1194, 1200, 1201, 1216, 1227], "print": [0, 13, 16, 17, 18, 34, 50, 63, 64, 68, 70, 144, 145, 148, 149, 150, 151, 157, 169, 272, 279, 280, 333, 340, 387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 558, 572, 646, 647, 648, 719, 746, 750, 824, 825, 834, 836, 896, 1075, 1078, 1100, 1101, 1102, 1104, 1106, 1107, 1110, 1114, 1115, 1116, 1121, 1122, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1151, 1152, 1153, 1158, 1159, 1176, 1182, 1183, 1186, 1187, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1224, 1226, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "print_cotang": 1152, "print_cotangents_bwd": 1152, "print_cotangents_fwd": 1152, "print_exc": [1202, 1236], "print_except": 1201, "print_fwd_bwd": [1206, 1234], "print_grad": 1117, "print_grad_bwd": 1117, "print_grad_fwd": 1117, "print_large_const": 1110, "print_opt": 558, "print_saved_residu": [1206, 1234], "print_someth": [1208, 1233], "print_tang": 1152, "print_tangents_jvp": 1152, "print_truncated_random_st": [1134, 1243], "print_zero": 1075, "printabl": 497, "printer": 1107, "printopt": [558, 750, 1122], "prior": [485, 486, 487, 1104, 1110, 1112, 1118, 1150, 1176, 1187, 1222, 1234], "priorit": [1190, 1227], "prioriti": [16, 1122, 1191], "prioritis": 1133, "prism": 1158, "pristin": 1150, "privat": [1105, 1110, 1185, 1194], "prng": [27, 43, 122, 137, 141, 142, 291, 292, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 1014, 1105, 1110, 1121, 1134, 1137, 1169, 1187, 1189, 1193, 1197, 1201, 1243, 1246], "prng_kei": [42, 881, 1110, 1194], "prngimpl": [138, 838, 858, 881, 1194], "prngkei": [0, 362, 1110, 1173, 1180, 1193, 1194, 1211, 1227, 1243], "prngkeyarrai": [137, 138, 141, 142, 1110, 1194], "prngspec": [838, 858, 881], "probabili": 724, "probabl": [464, 472, 565, 566, 568, 650, 651, 683, 724, 840, 841, 842, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 860, 862, 863, 864, 865, 866, 868, 870, 871, 873, 875, 876, 877, 879, 880, 958, 959, 970, 971, 972, 975, 977, 979, 980, 981, 982, 984, 986, 988, 989, 993, 995, 997, 998, 999, 1000, 1003, 1005, 1007, 1016, 1017, 1018, 1019, 1021, 1022, 1024, 1025, 1026, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1039, 1041, 1042, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1112, 1121, 1188, 1189, 1196, 1205, 1211, 1218, 1227, 1230], "problem": [120, 527, 889, 892, 893, 897, 900, 905, 926, 1110, 1114, 1119, 1120, 1121, 1122, 1127, 1130, 1131, 1135, 1137, 1152, 1159, 1180, 1184, 1185, 1186, 1191, 1193, 1195, 1199, 1216, 1238, 1243, 1246, 1247], "problemat": [1105, 1110, 1121, 1122, 1131, 1195, 1199, 1238, 1243, 1248], "proce": [1152, 1182, 1202, 1236, 1237], "procedur": [1105, 1200, 1219, 1227], "process": [0, 28, 35, 37, 38, 66, 71, 72, 73, 78, 335, 336, 339, 430, 440, 464, 468, 546, 758, 824, 826, 827, 828, 829, 830, 834, 836, 882, 919, 921, 922, 926, 1103, 1104, 1110, 1117, 1119, 1122, 1123, 1124, 1131, 1134, 1137, 1150, 1152, 1158, 1175, 1176, 1180, 1182, 1185, 1187, 1188, 1190, 1194, 1195, 1197, 1199, 1202, 1203, 1208, 1211, 1218, 1219, 1223, 1233, 1236, 1237, 1240, 1243, 1246], "process_cal": [1131, 1212], "process_count": [77, 336, 1110], "process_id": [35, 1198], "process_index": [33, 77, 336, 824, 1110, 1244], "process_is_granul": 73, "process_map": 1131, "process_on": [1208, 1233], "process_primit": [1107, 1208, 1212, 1233], "processed_eqn": 1107, "processor": 1110, "prod": [197, 338, 339, 640, 641, 1104, 1110, 1186, 1193, 1201, 1212, 1218], "prod_": 849, "produc": [0, 7, 22, 23, 38, 56, 72, 73, 145, 160, 195, 211, 229, 288, 295, 333, 340, 485, 552, 557, 644, 656, 774, 840, 841, 842, 844, 846, 849, 852, 853, 854, 856, 861, 863, 865, 868, 870, 873, 874, 875, 876, 877, 879, 891, 1070, 1088, 1089, 1102, 1104, 1106, 1107, 1110, 1114, 1115, 1116, 1122, 1132, 1133, 1152, 1182, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1204, 1206, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1231, 1234, 1236, 1237, 1242, 1243, 1247], "product": [26, 71, 72, 73, 110, 111, 114, 115, 145, 151, 159, 165, 206, 212, 213, 249, 333, 464, 467, 473, 475, 490, 497, 579, 605, 607, 630, 641, 658, 671, 675, 682, 699, 711, 713, 720, 777, 811, 822, 824, 924, 925, 926, 942, 1011, 1100, 1101, 1109, 1110, 1123, 1130, 1133, 1159, 1182, 1199, 1200, 1202, 1210, 1214, 1216, 1219, 1236, 1237, 1242, 1244], "product_along_axi": 720, "prof": 1120, "profil": [331, 341, 342, 1105, 1110, 1117, 1129, 1183, 1186, 1199, 1202, 1208, 1211, 1212, 1233, 1235, 1236, 1238, 1249], "profilerserv": 833, "program": [16, 17, 35, 56, 67, 69, 71, 340, 341, 342, 405, 424, 567, 824, 834, 836, 1104, 1106, 1107, 1110, 1117, 1119, 1121, 1122, 1123, 1124, 1126, 1130, 1131, 1136, 1137, 1152, 1154, 1158, 1159, 1172, 1175, 1182, 1183, 1186, 1187, 1188, 1189, 1190, 1193, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1217, 1219, 1221, 1222, 1227, 1232, 1233, 1236, 1237, 1238, 1241, 1242, 1246, 1249], "program_id": [1218, 1221], "programm": [1104, 1137, 1186, 1191, 1215, 1242, 1246], "programmat": 1190, "programmazion": 1199, "progress": [71, 557, 809, 1107, 1110, 1122, 1179, 1187, 1190, 1205, 1214, 1219, 1235], "project": [926, 1105, 1108, 1110, 1112, 1119, 1127, 1160, 1185, 1186, 1187, 1189, 1207, 1222, 1249], "projector": 1223, "prologu": [1205, 1230], "promis": [144, 145, 148, 149, 232, 296, 297, 298, 299, 300, 301, 332, 688, 1099, 1110, 1166, 1183, 1186, 1187, 1191, 1205, 1211, 1227], "promise_in_bound": [232, 296, 297, 298, 299, 300, 301, 688, 1166], "promot": [44, 143, 229, 295, 325, 413, 490, 538, 579, 658, 720, 721, 736, 771, 777, 778, 811, 819, 1110, 1123, 1170, 1188, 1194, 1197, 1199, 1208, 1210, 1212, 1215, 1233, 1242, 1249], "promote_integ": [720, 771, 1199], "promote_typ": 1248, "prompt": [1117, 1223, 1232], "prone": [1124, 1132, 1194, 1195, 1231, 1242], "prop": [1200, 1227], "propag": [0, 150, 661, 667, 816, 1029, 1048, 1049, 1118, 1133, 1153, 1158, 1199, 1200, 1201, 1227, 1244], "propagate_source_info": [1208, 1233], "propagate_user_shard": [0, 1151], "proper": [587, 921, 1199, 1202, 1236], "properli": [1110, 1119, 1152, 1190, 1194, 1216, 1246], "properti": [2, 122, 285, 296, 297, 298, 299, 300, 301, 634, 688, 926, 1104, 1107, 1110, 1122, 1134, 1135, 1171, 1173, 1175, 1176, 1190, 1191, 1194, 1199, 1202, 1205, 1220, 1227, 1236, 1243, 1247], "propos": [1112, 1113, 1179, 1187, 1188, 1189, 1190, 1214, 1215], "propto": [841, 845, 846, 849, 850, 852, 854, 855, 864, 873, 875, 877, 880], "prospect": 1191, "protect": 1121, "protocol": [494, 546, 831, 1110, 1176, 1185], "prototyp": [499, 1110, 1136, 1185, 1186], "proven": [1189, 1216], "provid": [0, 7, 14, 18, 27, 35, 150, 191, 208, 209, 229, 291, 295, 409, 448, 461, 492, 493, 496, 497, 565, 567, 570, 588, 593, 613, 650, 651, 652, 653, 654, 655, 658, 665, 688, 696, 702, 705, 747, 765, 768, 780, 781, 799, 804, 813, 815, 816, 820, 821, 822, 823, 824, 828, 831, 854, 861, 886, 887, 927, 1012, 1013, 1070, 1080, 1082, 1088, 1101, 1104, 1106, 1107, 1108, 1109, 1110, 1114, 1126, 1127, 1131, 1132, 1133, 1134, 1135, 1144, 1151, 1152, 1158, 1159, 1160, 1169, 1170, 1173, 1176, 1178, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1227, 1230, 1231, 1234, 1236, 1238, 1239, 1242, 1243, 1244, 1247], "proxi": [1223, 1247], "prune": [16, 150, 1107, 1110, 1158], "ps_flat": [1202, 1236], "pscatter": 1188, "pseudo": [47, 633, 838, 853, 858, 1108, 1133, 1137, 1139, 1173, 1227, 1243, 1246], "pseudorandom": [1105, 1134, 1173, 1194, 1199, 1235, 1242, 1246], "pseudospectra": 894, "pshuffl": 1214, "psi": [210, 274, 933, 962], "pspec": [76, 77, 1180, 1186, 1201, 1211], "pspect": 77, "psum": [0, 158, 280, 281, 824, 1101, 1102, 1110, 1136, 1182, 1186, 1198, 1199, 1214, 1244], "psum2": 1188, "psum_idrev": [1186, 1188], "psum_ref": 1211, "psum_scatt": [1186, 1188], "psum_scatter_ref": 1211, "pt": [1200, 1227], "pt_dot": [1200, 1227], "ptx": 1110, "ptxa": 1127, "pu": 903, "public": [1, 440, 562, 563, 1104, 1105, 1110, 1160, 1179, 1185, 1187, 1194], "publicli": [1110, 1112], "publish": [1196, 1219], "pull": [1119, 1144, 1185, 1194, 1197, 1199, 1205, 1227], "pullback": [1205, 1227, 1247], "punt": 1185, "pura": 1199, "pure": [9, 17, 70, 150, 548, 550, 688, 824, 837, 921, 1107, 1110, 1114, 1117, 1121, 1122, 1123, 1127, 1130, 1131, 1158, 1170, 1183, 1185, 1189, 1194, 1196, 1201, 1205, 1208, 1211, 1212, 1214, 1227, 1233, 1238, 1246], "pure_callback": [17, 70, 1110, 1122], "pure_callback_api": [1208, 1233], "pure_callback_batching_rul": [1208, 1233], "pure_callback_jvp_rul": [1208, 1233], "pure_callback_p": [1208, 1233], "pure_uses_internal_st": 1199, "purer": 1185, "puriti": [1114, 1208, 1233], "purpos": [7, 70, 292, 624, 750, 824, 1107, 1121, 1122, 1123, 1127, 1131, 1137, 1144, 1152, 1173, 1176, 1178, 1188, 1190, 1195, 1196, 1202, 1203, 1205, 1208, 1209, 1212, 1214, 1224, 1227, 1232, 1233, 1236, 1238, 1239, 1246], "pursu": 1227, "push": [725, 824, 1107, 1112, 1119, 1199, 1205, 1210, 1227], "pushforward": [333, 1205, 1227], "pushfwd": [333, 1107], "put": [339, 706, 750, 1107, 1122, 1158, 1183, 1185, 1186, 1195, 1205, 1212, 1214, 1223, 1227], "put_executable_and_tim": 1150, "pval": [1107, 1208, 1233], "pvals_in": 1107, "pvals_out": 1107, "pwd": [1119, 1128], "pxla": [1110, 1180, 1187, 1208, 1212, 1233], "pxx": 923, "pxy": 919, "py": [0, 194, 351, 896, 1102, 1107, 1110, 1112, 1119, 1122, 1128, 1130, 1131, 1135, 1145, 1152, 1185, 1190, 1193, 1194, 1196, 1199, 1202, 1203, 1205, 1207, 1208, 1212, 1224, 1225, 1227, 1233, 1234, 1236, 1238, 1246, 1247], "py_val": 1199, "pybind11": [0, 1185], "pybind11_kernel_help": 0, "pybind11_modul": 0, "pybind_include_path": 0, "pyc": 1199, "pycapsul": 38, "pyenv": [1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "pyfunc": 813, "pygment": 1119, "pyi": [1110, 1185], "pykernel": 1212, "pylanc": 1185, "pylint": [1202, 1236], "pymc": 1109, "pypi": [1110, 1127], "pyplot": [1130, 1135, 1136, 1137, 1195, 1200, 1207, 1212, 1213, 1227, 1246], "pyproject": 1119, "pyright": 1185, "pytensor": 1109, "pytest": 1112, "python": [0, 5, 6, 7, 9, 13, 17, 19, 29, 30, 31, 32, 49, 50, 56, 66, 67, 69, 70, 71, 128, 144, 145, 150, 151, 157, 158, 165, 169, 191, 214, 216, 229, 262, 271, 272, 273, 277, 278, 279, 280, 281, 295, 310, 319, 325, 332, 333, 340, 341, 342, 399, 432, 434, 436, 437, 439, 471, 489, 541, 544, 546, 576, 589, 645, 668, 695, 732, 745, 746, 813, 824, 831, 834, 836, 837, 924, 925, 926, 933, 953, 1079, 1081, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1110, 1111, 1112, 1114, 1115, 1117, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1137, 1147, 1148, 1153, 1158, 1167, 1170, 1176, 1178, 1179, 1182, 1183, 1185, 1186, 1187, 1189, 1191, 1192, 1193, 1194, 1196, 1198, 1202, 1204, 1205, 1208, 1210, 1212, 1215, 1216, 1223, 1224, 1226, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1242, 1243, 1247], "python3": [1119, 1128, 1130, 1131, 1199, 1202, 1203, 1208, 1212, 1233, 1236, 1238, 1247], "python_execut": 0, "python_spec": [38, 546], "pythonpath": 1128, "pytorch": [0, 1103, 1110, 1130, 1133, 1190, 1199, 1200, 1216, 1227, 1248], "pytre": [4, 9, 16, 18, 29, 50, 67, 69, 70, 71, 75, 76, 77, 78, 143, 145, 150, 157, 158, 191, 262, 271, 272, 273, 277, 278, 279, 281, 295, 325, 326, 332, 340, 837, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1100, 1101, 1102, 1108, 1110, 1117, 1123, 1130, 1139, 1145, 1152, 1158, 1175, 1178, 1186, 1190, 1192, 1196, 1211, 1230, 1235, 1249], "pytree_arg": 1107, "pytree_to_transpos": [1073, 1092, 1135, 1247], "pytreedef": [0, 51, 1068, 1072, 1073, 1074, 1077, 1084, 1085, 1091, 1092, 1093, 1094, 1095, 1096, 1107, 1110, 1176, 1224, 1239, 1247], "pytyp": [1110, 1193], "pyvista": 1128, "pzero": 1110, "q": [252, 328, 634, 641, 681, 683, 703, 710, 724, 891, 897, 904, 945, 952, 963, 968, 972, 984, 989, 1024, 1027, 1037, 1042, 1061, 1107, 1117, 1128, 1182, 1186, 1199, 1200, 1206, 1214, 1227, 1234, 1237], "q_wi": 1186, "q_wi_per_head": 1186, "qdwh": [903, 1110], "qkv": 1186, "qquad": [1200, 1205, 1227], "qr": [121, 251, 903, 926, 1110], "qrresult": 634, "qth": [681, 683], "quad": 1189, "quadrant": [405, 424], "qualiti": [1112, 1119, 1173, 1219], "qualnam": [1165, 1166], "quantifi": [922, 1107, 1189], "quantil": [681, 683, 703, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1110], "quantiti": [1121, 1195, 1200, 1211, 1227], "quarteroni": 559, "quasi": [905, 906, 1213], "quat": 927, "quaternion": 927, "quaternion_slerp": 928, "queri": [71, 747, 1104, 1176, 1221], "question": [481, 825, 1108, 1112, 1185, 1189, 1195, 1216], "queueempti": [1208, 1233], "quick": [1128, 1184, 1193, 1242], "quickli": [605, 917, 1122, 1195, 1218, 1242], "quickstart": [1108, 1119, 1203, 1209, 1217, 1235], "quit": [71, 1109, 1112, 1130, 1133, 1152, 1185, 1186, 1205, 1211, 1213, 1219, 1223, 1227, 1230], "quotient": [488, 489, 668, 710, 732, 790], "qy": [159, 160], "qy_siz": 159, "r": [0, 14, 17, 19, 120, 165, 252, 430, 440, 446, 467, 473, 493, 559, 562, 563, 567, 570, 606, 634, 645, 681, 683, 703, 710, 724, 725, 741, 815, 904, 911, 919, 921, 922, 958, 1007, 1107, 1110, 1112, 1119, 1130, 1133, 1134, 1152, 1182, 1191, 1199, 1200, 1201, 1202, 1205, 1206, 1212, 1213, 1227, 1234, 1236, 1237, 1247], "r1": 1188, "r2": 1188, "r3": [1205, 1227], "r_": [446, 467], "r_n": 953, "r_t": [1133, 1227], "rabin": 919, "race": [1218, 1219], "rad": 757, "rad2deg": 479, "radian": [387, 394, 400, 402, 405, 420, 424, 469, 478, 479, 726, 757, 808], "radiu": [146, 147, 1165], "rag": [72, 1211], "raggedaxi": [1208, 1233], "rai": [387, 400, 405, 424], "rais": [13, 35, 37, 38, 49, 50, 56, 57, 65, 66, 67, 71, 72, 73, 104, 120, 150, 384, 390, 392, 393, 395, 431, 443, 452, 503, 526, 538, 627, 660, 662, 666, 673, 674, 677, 678, 679, 680, 681, 683, 684, 685, 686, 706, 717, 718, 720, 722, 723, 729, 740, 764, 769, 771, 809, 810, 819, 824, 834, 835, 836, 953, 956, 957, 959, 960, 964, 1029, 1048, 1049, 1102, 1104, 1105, 1107, 1110, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1130, 1131, 1152, 1158, 1179, 1185, 1186, 1190, 1193, 1194, 1199, 1200, 1201, 1204, 1205, 1208, 1211, 1212, 1225, 1226, 1227, 1233, 1238, 1247], "raise_as_much_as_poss": [1208, 1233], "raise_concretization_error": 1193, "raise_to_shap": [1107, 1110], "ralha": 909, "ram": 1218, "ramp": 701, "ran": [1199, 1203, 1208, 1209, 1233], "rand": [159, 160, 1191, 1199, 1212, 1213], "rand_uniform": 1110, "randint": [49, 1110], "randn": [1151, 1191, 1212, 1213], "random": [0, 43, 47, 49, 122, 150, 159, 160, 165, 291, 292, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 464, 888, 1007, 1014, 1106, 1108, 1110, 1120, 1121, 1129, 1130, 1135, 1136, 1137, 1139, 1151, 1154, 1160, 1169, 1180, 1185, 1191, 1193, 1194, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1218, 1219, 1223, 1227, 1230, 1233, 1242, 1244, 1246, 1247], "random_bit": [136, 137, 141, 142], "random_flattened_imag": [1203, 1209], "random_layer_param": [1203, 1209], "random_se": [137, 141, 142], "random_st": 1159, "random_unwrap": 1187, "random_wrap": 1187, "randomalgorithm": 291, "randomgamma": 1110, "randomli": [869, 1014, 1203, 1209], "randomst": 1191, "rang": [0, 32, 35, 150, 216, 217, 229, 247, 292, 303, 332, 362, 363, 368, 371, 378, 394, 399, 405, 424, 434, 436, 452, 503, 565, 566, 567, 568, 578, 589, 650, 651, 688, 722, 723, 729, 780, 805, 808, 820, 821, 822, 823, 869, 872, 878, 893, 909, 912, 931, 1101, 1107, 1110, 1112, 1120, 1122, 1130, 1132, 1134, 1135, 1136, 1137, 1145, 1151, 1166, 1173, 1182, 1184, 1186, 1189, 1191, 1195, 1198, 1199, 1201, 1203, 1207, 1209, 1211, 1213, 1214, 1216, 1221, 1231, 1237, 1243, 1246], "range_select": 247, "rank": [86, 182, 193, 195, 196, 197, 198, 199, 214, 229, 238, 251, 280, 295, 325, 505, 549, 624, 628, 636, 701, 711, 741, 819, 904, 1048, 1110, 1122, 1151, 1158, 1175, 1188, 1194, 1214, 1215], "rankdata": [1110, 1189], "rankedtensortyp": 0, "rapidli": 942, "rare": [1105, 1185, 1199, 1247], "rate": [510, 524, 854, 870, 924, 925, 926, 1145, 1146, 1189, 1191, 1247], "rather": [7, 9, 43, 150, 198, 208, 232, 399, 409, 426, 427, 428, 480, 481, 485, 496, 531, 532, 533, 552, 576, 635, 664, 670, 688, 692, 702, 728, 734, 740, 742, 745, 750, 764, 767, 772, 780, 813, 824, 825, 924, 925, 1107, 1110, 1114, 1170, 1178, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1199, 1200, 1205, 1206, 1211, 1212, 1224, 1227, 1232, 1234, 1239, 1243, 1244, 1247, 1248], "ratio": [624, 750, 1221], "ration": 960, "rational": 1110, "ravel": [143, 188, 505, 529, 631, 1029, 1049, 1110, 1190, 1203, 1207], "ravel_multi_index": 1110, "ravel_pytre": 1110, "raveled_indic": 729, "raw": [634, 904, 1110, 1180, 1186, 1194, 1203, 1243], "raw_cel": [1208, 1233], "raw_kei": 1194, "rb": 746, "rbg": [137, 1110, 1173, 1194], "rbg_kei": 1110, "rccl": 1119, "rceil": [185, 450], "rclass": 725, "rcond": [624, 633, 711], "re": [0, 7, 9, 15, 56, 57, 283, 333, 369, 398, 409, 427, 461, 529, 702, 739, 740, 934, 935, 943, 955, 958, 1107, 1108, 1109, 1110, 1112, 1115, 1117, 1119, 1121, 1122, 1124, 1126, 1127, 1130, 1131, 1132, 1134, 1136, 1137, 1151, 1158, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1230, 1231, 1233, 1234, 1236, 1238, 1242, 1243, 1244, 1246], "reach": [441, 913, 924, 925, 926, 1110, 1184, 1208, 1233], "read": [38, 213, 485, 546, 547, 552, 645, 728, 734, 961, 1106, 1107, 1110, 1119, 1121, 1122, 1133, 1186, 1195, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1208, 1211, 1213, 1214, 1218, 1219, 1221, 1227, 1233, 1239], "read_cotang": 1107, "read_prim": 1107, "readabl": [746, 1176], "reader": [1133, 1135, 1137, 1221, 1246, 1247], "readi": [4, 38, 1106, 1108, 1110, 1112, 1128, 1176, 1183, 1185, 1195, 1199], "readili": [18, 1195], "readlin": 645, "readm": [1110, 1119, 1190, 1204], "readonli": 445, "readthedoc": [143, 413, 419, 465, 816, 1066, 1101, 1110, 1130, 1131, 1173, 1175, 1179, 1193, 1195, 1199, 1202, 1212, 1236, 1238], "real": [0, 49, 189, 245, 247, 255, 263, 264, 312, 332, 359, 363, 364, 369, 384, 387, 394, 399, 400, 404, 405, 414, 423, 424, 513, 519, 520, 521, 522, 523, 525, 527, 542, 543, 575, 593, 600, 614, 619, 620, 621, 622, 633, 634, 635, 637, 661, 667, 672, 703, 707, 724, 754, 763, 765, 882, 883, 884, 885, 892, 893, 896, 905, 906, 910, 911, 914, 919, 921, 922, 923, 931, 932, 933, 936, 937, 938, 939, 941, 943, 946, 947, 955, 961, 962, 964, 968, 1107, 1110, 1122, 1128, 1130, 1133, 1136, 1185, 1195, 1200, 1201, 1205, 1214, 1218, 1227], "realist": 1188, "realiz": 1189, "realli": [71, 213, 1107, 1110, 1122, 1128, 1130, 1131, 1183, 1188, 1189, 1190, 1194, 1210, 1218, 1238, 1242], "realpath": 1119, "reap": 1216, "rearrang": [702, 1122, 1195, 1200, 1219, 1227], "reason": [49, 160, 413, 521, 645, 746, 900, 1107, 1110, 1118, 1121, 1122, 1130, 1131, 1133, 1134, 1136, 1137, 1170, 1173, 1180, 1182, 1185, 1186, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1211, 1212, 1214, 1216, 1218, 1219, 1224, 1227, 1237, 1246], "rebas": 1112, "reboot": 1223, "rebuild": [493, 570, 815, 926, 1119, 1128, 1196], "recal": [159, 160, 1186, 1195, 1205, 1206, 1211, 1212, 1219, 1227, 1232, 1234], "recall_target": [159, 160], "recap": 1214, "receiv": [66, 339, 1110, 1152, 1185, 1211, 1216, 1219], "receivedon": 1125, "recent": [0, 55, 56, 57, 813, 1110, 1121, 1122, 1125, 1130, 1131, 1154, 1185, 1186, 1189, 1194, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247, 1248], "recept": [196, 197, 364], "recip": [339, 430, 562, 563, 628, 1107, 1130, 1188, 1199, 1224, 1247], "recipe_to_eqn": 1107, "reciproc": 294, "recogn": [1110, 1119, 1122, 1159, 1185, 1195, 1224, 1242], "recognis": 1130, "recommend": [5, 6, 213, 452, 711, 778, 1110, 1112, 1118, 1119, 1120, 1122, 1124, 1125, 1127, 1133, 1134, 1136, 1173, 1179, 1185, 1189, 1194, 1198, 1199, 1207, 1208, 1214, 1219, 1222, 1233], "recommonmark": 1119, "recompil": [150, 824, 1110, 1128, 1131, 1150, 1158, 1199, 1222, 1238], "recomput": [7, 1184, 1206, 1234], "reconcili": [1208, 1233], "reconfigur": [104, 1219], "reconstruct": [799, 921, 922, 1074, 1093, 1121, 1131, 1224, 1238, 1247], "record": [1131, 1152, 1204, 1212, 1238], "recours": 1187, "recov": [624, 859, 1110, 1194], "rectangular": 1158, "rectifi": [366, 372, 373], "recurr": [1208, 1233], "recurs": [7, 165, 471, 486, 909, 1079, 1107, 1178, 1190, 1210, 1218, 1224, 1247], "recursive_checkpoint": [7, 1206, 1234], "recycl": [71, 150, 824, 1102, 1158], "red": [1136, 1137, 1201, 1246], "redefin": [1131, 1238], "redirect": 1223, "redistribut": [1112, 1127, 1211], "redo": 1107, "reduc": [0, 7, 71, 121, 150, 248, 252, 256, 262, 271, 272, 273, 279, 280, 295, 325, 369, 390, 392, 393, 395, 407, 408, 429, 527, 630, 634, 660, 662, 663, 664, 666, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 703, 711, 720, 722, 724, 769, 771, 810, 820, 821, 822, 824, 955, 1029, 1049, 1070, 1088, 1090, 1102, 1107, 1109, 1110, 1122, 1125, 1136, 1158, 1184, 1188, 1190, 1191, 1193, 1201, 1206, 1214, 1221, 1234, 1238, 1239], "reduce_ax": [144, 332, 1099, 1100, 1186], "reduce_prod": [1110, 1193], "reduce_scatt": 1211, "reduce_sum": [1107, 1182, 1199, 1237], "reduce_sum_abstract_ev": 1107, "reduce_sum_batching_rul": 1107, "reduce_sum_jvp": 1107, "reduce_sum_p": [1107, 1159], "reduce_sum_transl": 1107, "reduce_sum_transpose_rul": 1107, "reduceat": 1110, "reduceprecis": 286, "reducescatt": [1125, 1186], "reducescattersum": 1188, "reducewindow": 1110, "reducewindowwithgeneralpad": 287, "reduct": [48, 159, 160, 229, 279, 390, 395, 681, 683, 703, 711, 724, 1071, 1090, 1110, 1133, 1159, 1201, 1211, 1220, 1227, 1239], "reductio": 1199, "reduction_dim": [159, 160], "reduction_dimens": [159, 160], "reduction_input_size_overrid": [159, 160], "redund": [489, 1201, 1206, 1234], "reexpress": 1121, "ref": [0, 628, 1107, 1110, 1218, 1221, 1246], "ref_loss": 0, "ref_out": 0, "refactor": [1110, 1112, 1185, 1189, 1194], "refer": [0, 9, 71, 118, 150, 157, 387, 388, 390, 395, 400, 401, 402, 403, 404, 405, 406, 417, 420, 421, 423, 424, 425, 430, 434, 436, 440, 443, 445, 448, 464, 467, 468, 469, 471, 475, 476, 492, 494, 501, 506, 508, 509, 511, 515, 516, 521, 525, 527, 528, 546, 559, 562, 563, 564, 569, 572, 589, 598, 599, 606, 615, 619, 620, 628, 630, 631, 633, 636, 646, 647, 648, 662, 664, 678, 681, 683, 684, 686, 688, 699, 703, 707, 711, 715, 720, 724, 728, 734, 741, 755, 758, 760, 765, 769, 771, 775, 776, 781, 787, 810, 814, 824, 839, 882, 886, 894, 895, 896, 909, 912, 919, 921, 922, 923, 928, 929, 930, 931, 933, 934, 935, 936, 938, 939, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 958, 961, 962, 963, 968, 1007, 1048, 1107, 1110, 1117, 1121, 1122, 1123, 1127, 1134, 1135, 1136, 1158, 1178, 1182, 1188, 1190, 1195, 1197, 1198, 1201, 1204, 1206, 1211, 1212, 1218, 1219, 1221, 1224, 1227, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1243, 1247], "referenc": [150, 595, 816, 908, 1110], "referencetyp": 1107, "referenti": 1224, "refin": [0, 1107, 1199], "reflect": [701, 912, 1104, 1127, 1176, 1182, 1187, 1188, 1197, 1201, 1202, 1208, 1233, 1236, 1237, 1244], "reflect_typ": 701, "reflector": [248, 249, 256, 634], "refresh": [1223, 1234], "regard": [567, 1112, 1187, 1189, 1215], "regardless": [339, 741, 752, 814, 816, 891, 907, 1107, 1110, 1208, 1226, 1233], "regex": 1151, "regim": 1107, "region": [1219, 1222], "region_0": 0, "regist": [0, 16, 1085, 1087, 1107, 1110, 1122, 1135, 1152, 1178, 1185, 1187, 1202, 1204, 1205, 1216, 1218, 1219, 1221, 1224, 1236, 1247], "register_collective_primit": 1110, "register_custom_call_target": 0, "register_keypath": 1110, "register_low": [0, 1110, 1187, 1202, 1236], "register_primit": 0, "register_pytree_nod": [1080, 1081, 1107, 1122, 1135, 1224, 1247], "register_pytree_node_class": [1082, 1224], "register_pytree_with_kei": [1082, 1085, 1087, 1110, 1135], "register_stat": 1135, "register_transl": 1110, "registeredspeci": [1224, 1247], "registeredspecial2": 1224, "registr": [0, 1185, 1224, 1247], "registri": [1178, 1204, 1224, 1247], "regress": [71, 1110, 1113, 1130, 1136, 1189, 1199, 1205, 1219], "regression_loss": 71, "regular": [173, 196, 235, 236, 370, 931, 944, 945, 1114, 1119, 1121, 1122, 1130, 1131, 1192, 1199, 1210, 1216, 1219, 1225, 1238], "regulargridinterpol": 1189, "regularli": [1119, 1187], "reifi": 1104, "reimplement": [1110, 1202, 1236], "reinforc": [1133, 1227, 1247], "reinhold": 715, "reiniti": 1110, "reinstal": [1119, 1223], "reintroduc": 1187, "reinvent": [1203, 1209], "reject": 1189, "rel": [391, 472, 590, 640, 711, 740, 963, 1048, 1049, 1117, 1122, 1152, 1159, 1173, 1188, 1189, 1195, 1197, 1208, 1214, 1233], "relai": 1176, "relat": [232, 296, 297, 298, 299, 300, 301, 1108, 1110, 1122, 1123, 1125, 1131, 1133, 1134, 1135, 1182, 1183, 1187, 1189, 1194, 1197, 1200, 1211, 1227, 1228, 1229, 1237, 1240, 1241, 1243, 1247], "relatedli": [1104, 1170], "relationship": [0, 467, 472, 1107, 1208, 1233], "relax": [0, 1110, 1127, 1131, 1184, 1195, 1199], "releas": [71, 485, 1105, 1110, 1118, 1119, 1125, 1127, 1128, 1135, 1160, 1179, 1185, 1187, 1199, 1201, 1205, 1208, 1214, 1215, 1227, 1233, 1242], "relev": [557, 644, 656, 684, 711, 1110, 1122, 1125, 1130, 1138, 1152, 1158, 1184, 1185, 1189, 1215, 1249], "reli": [120, 150, 231, 915, 916, 917, 918, 920, 1110, 1114, 1122, 1131, 1153, 1158, 1185, 1187, 1188, 1190, 1193, 1194, 1206, 1234, 1238, 1239], "reliabl": [711, 1104, 1176, 1216], "reloc": [1110, 1187], "relu": [342, 366, 373, 1117, 1122, 1135, 1203, 1209, 1211, 1214, 1218, 1219, 1247], "relu6": [347, 372], "rem": [544, 668, 732, 1199], "remain": [71, 312, 380, 411, 525, 529, 565, 652, 653, 654, 655, 670, 681, 683, 692, 703, 724, 733, 734, 751, 798, 799, 816, 824, 1029, 1049, 1104, 1105, 1107, 1114, 1117, 1122, 1136, 1176, 1190, 1191, 1194, 1195, 1200, 1201, 1219, 1223, 1227], "remaind": [288, 489, 541, 544, 668, 710], "remat": [7, 1103, 1110, 1197, 1211, 1235], "remat2": [1206, 1234], "remat_cal": 1110, "remateri": [7, 1152, 1206, 1211, 1234], "rememb": [576, 745, 1122, 1136, 1185, 1202, 1214, 1236, 1237], "remind": [526, 706, 723], "reminisc": 1195, "remot": [1110, 1112, 1128], "remov": [34, 71, 158, 280, 289, 292, 397, 407, 408, 438, 480, 485, 677, 680, 720, 737, 767, 771, 779, 892, 1102, 1105, 1107, 1110, 1122, 1127, 1135, 1171, 1185, 1187, 1189, 1193, 1194, 1196, 1199, 1207, 1208, 1214, 1216, 1219, 1223, 1233, 1247], "remove_dupl": 1107, "remove_fram": 1110, "renam": [471, 805, 1110, 1194, 1203], "render": 1123, "reopen": [746, 747], "reorder": [17, 121, 531, 641, 670, 837, 1117, 1183, 1184, 1193, 1216, 1243], "rep": [778, 1185], "rep149": 120, "repartit": 1151, "repeat": [71, 247, 398, 472, 509, 511, 515, 516, 521, 526, 619, 620, 621, 622, 627, 664, 706, 723, 735, 778, 813, 820, 821, 822, 823, 892, 893, 1110, 1122, 1137, 1153, 1193, 1211, 1246], "repeated_arrai": 733, "repeatedli": [325, 398, 527, 1222], "repetit": [733, 778], "repl": 1199, "replac": [0, 12, 145, 150, 296, 298, 339, 397, 453, 672, 675, 676, 723, 847, 904, 1104, 1107, 1110, 1121, 1122, 1136, 1158, 1185, 1186, 1187, 1189, 1190, 1193, 1194, 1199, 1212, 1214, 1219, 1223], "replace_tokens_with_dummi": [1202, 1236], "replai": 1119, "repli": [1208, 1233], "replic": [0, 31, 77, 78, 150, 778, 824, 912, 1102, 1110, 1136, 1151, 1158, 1175, 1180, 1186, 1187, 1199, 1201, 1211, 1222, 1244], "replica": [72, 73, 157, 158, 271, 272, 273, 279, 281, 331, 824, 1107, 1173, 1186, 1191], "replica_group": [0, 1102], "replicaid": 1188, "replicated_param": 1136, "reply_cont": [1208, 1233], "repo": [1112, 1119], "report": [120, 165, 924, 925, 926, 1121, 1127, 1130, 1185, 1193, 1199, 1208, 1212, 1219], "repositori": [1112, 1127, 1196], "repr": [750, 1106, 1107, 1135, 1247], "repres": [2, 3, 13, 28, 29, 30, 31, 32, 33, 34, 37, 56, 57, 71, 82, 84, 104, 110, 111, 114, 115, 120, 121, 127, 143, 145, 146, 150, 157, 169, 193, 194, 195, 196, 197, 199, 200, 229, 250, 271, 272, 273, 277, 279, 280, 295, 325, 336, 340, 362, 413, 416, 418, 429, 434, 436, 467, 472, 496, 514, 549, 577, 589, 598, 599, 635, 684, 686, 700, 709, 741, 750, 769, 786, 804, 810, 813, 820, 821, 822, 823, 824, 827, 837, 839, 840, 841, 842, 843, 844, 845, 846, 851, 852, 853, 854, 855, 856, 857, 860, 861, 862, 863, 866, 868, 870, 872, 873, 875, 876, 877, 878, 879, 901, 924, 925, 926, 927, 1068, 1072, 1073, 1084, 1085, 1091, 1092, 1100, 1102, 1107, 1114, 1121, 1123, 1130, 1133, 1135, 1136, 1137, 1145, 1146, 1153, 1158, 1166, 1173, 1176, 1180, 1182, 1185, 1186, 1189, 1190, 1191, 1193, 1194, 1195, 1199, 1200, 1201, 1205, 1208, 1211, 1214, 1216, 1219, 1227, 1230, 1233, 1237, 1238, 1239, 1242, 1246, 1247], "represent": [37, 80, 92, 104, 107, 109, 113, 250, 256, 268, 340, 341, 342, 416, 418, 419, 432, 434, 435, 436, 437, 438, 439, 497, 527, 577, 578, 589, 610, 672, 691, 737, 750, 1007, 1078, 1102, 1104, 1107, 1110, 1117, 1121, 1122, 1123, 1131, 1159, 1170, 1173, 1176, 1179, 1180, 1182, 1183, 1190, 1194, 1195, 1204, 1216, 1237, 1239, 1244, 1248], "reproduc": [1128, 1134, 1173, 1191, 1193, 1243], "repsect": 699, "request": [37, 215, 567, 847, 906, 912, 1110, 1127, 1144, 1183, 1185, 1190, 1194, 1197, 1199, 1219, 1244], "requir": [0, 7, 32, 37, 72, 73, 77, 150, 208, 291, 292, 295, 325, 332, 409, 413, 447, 448, 480, 507, 567, 645, 672, 702, 705, 735, 746, 765, 813, 820, 821, 822, 823, 824, 893, 894, 914, 919, 921, 922, 923, 1082, 1104, 1107, 1110, 1112, 1114, 1119, 1120, 1121, 1122, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1152, 1154, 1158, 1170, 1173, 1176, 1180, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1205, 1206, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1219, 1223, 1225, 1227, 1233, 1234, 1238, 1243, 1244, 1246, 1247, 1248], "rerais": [1199, 1208, 1212, 1233, 1238], "reraise_with_filtered_traceback": [1131, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "rerun": [1127, 1130], "res1": [428, 1107, 1152], "res2": [427, 428, 1107, 1152], "res_": 1107, "res_trac": 1107, "resampl": [146, 147, 1165], "rescal": [368, 378, 1188], "research": [1119, 1126, 1127, 1139, 1190, 1210, 1216, 1242], "resembl": [1107, 1188, 1195, 1216], "reserv": 1105, "reset": [750, 1137, 1208, 1233, 1246], "reset_cach": 1150, "reshad": 0, "reshap": [71, 77, 97, 98, 100, 123, 157, 214, 215, 216, 238, 279, 280, 310, 311, 338, 339, 446, 493, 815, 824, 1048, 1101, 1104, 1107, 1110, 1136, 1151, 1159, 1170, 1175, 1180, 1186, 1193, 1201, 1203, 1209, 1211, 1212, 1214, 1225, 1244], "reshape_p": 1159, "reshaped_arrai": [734, 735], "reshard": [339, 1201], "resid": [30, 1122, 1219, 1221], "residu": [0, 7, 120, 624, 711, 924, 925, 926, 1107, 1152, 1190, 1192, 1200, 1206, 1227, 1234], "residual_batch": 1186, "residual_emb": 1186, "residual_tim": 1186, "resili": 567, "resiz": [147, 1110, 1165], "resizemethod": [146, 147, 1165], "resnet": 1110, "resolut": 527, "resolv": [1110, 1122, 1131, 1151, 1185, 1186, 1190], "resourc": [71, 150, 758, 1108, 1110, 1113, 1158, 1175, 1186, 1189], "resource_env": [1208, 1212, 1233], "respect": [0, 16, 71, 119, 121, 125, 144, 145, 148, 149, 165, 195, 196, 209, 246, 398, 559, 637, 710, 714, 725, 750, 808, 903, 909, 915, 916, 917, 918, 920, 957, 965, 1099, 1104, 1107, 1110, 1117, 1121, 1130, 1133, 1136, 1180, 1182, 1186, 1188, 1192, 1195, 1200, 1201, 1202, 1203, 1208, 1209, 1211, 1214, 1219, 1221, 1227, 1233, 1236, 1237, 1248], "respond": 1189, "respons": [0, 645, 1120, 1122, 1152, 1180, 1193, 1196, 1211, 1221], "rest": [0, 69, 417, 816, 943, 1070, 1088, 1089, 1107, 1130, 1152, 1182, 1188, 1198, 1202, 1216, 1224, 1236, 1237, 1247], "rest1": 1107, "rest2": 1107, "restart": [926, 1150, 1222], "restor": [719, 739, 1110, 1195, 1248], "restrict": [35, 937, 1104, 1127, 1152, 1185, 1195, 1198, 1199, 1208, 1214, 1216, 1220, 1233], "restructur": 1185, "result": [0, 30, 32, 37, 67, 68, 69, 70, 71, 77, 88, 89, 94, 95, 96, 97, 104, 105, 120, 150, 157, 158, 159, 160, 165, 179, 180, 181, 193, 195, 196, 197, 198, 199, 208, 209, 212, 213, 230, 231, 251, 271, 272, 273, 277, 278, 279, 280, 281, 285, 288, 289, 292, 298, 302, 332, 369, 390, 392, 393, 395, 398, 399, 407, 408, 411, 413, 429, 431, 432, 434, 436, 437, 439, 446, 452, 464, 468, 471, 475, 476, 481, 485, 486, 489, 490, 494, 499, 503, 507, 520, 523, 528, 538, 549, 552, 554, 557, 565, 568, 577, 579, 588, 589, 594, 597, 598, 599, 604, 609, 619, 631, 634, 637, 640, 644, 645, 650, 651, 652, 653, 654, 655, 656, 658, 660, 662, 663, 664, 666, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 698, 700, 703, 707, 708, 710, 713, 715, 717, 718, 720, 722, 724, 725, 734, 736, 740, 750, 751, 755, 764, 767, 768, 769, 771, 773, 774, 777, 778, 779, 781, 786, 798, 799, 810, 811, 816, 818, 820, 821, 822, 824, 829, 830, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 870, 873, 875, 876, 877, 878, 879, 882, 883, 884, 885, 886, 889, 891, 894, 896, 897, 900, 903, 905, 911, 912, 913, 914, 936, 942, 954, 955, 962, 965, 966, 967, 1009, 1010, 1011, 1014, 1029, 1049, 1067, 1071, 1075, 1076, 1083, 1090, 1101, 1102, 1104, 1106, 1107, 1110, 1112, 1114, 1122, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1136, 1146, 1151, 1154, 1158, 1159, 1170, 1173, 1176, 1179, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1247, 1248], "result_av": [1208, 1233], "result_cod": 1195, "result_dtyp": 1199, "result_info": 0, "result_layout": [0, 1212], "result_path": [1199, 1212, 1238], "result_shap": [67, 1151, 1152, 1199, 1208, 1233], "result_shape_dtyp": [70, 837, 1208, 1233], "result_shard": 1151, "result_typ": [0, 447, 494, 1107, 1110, 1208, 1233, 1247], "resum": 1117, "ret": 426, "ret_check": 1152, "retain": [280, 652, 653, 654, 655, 1110, 1112, 1134, 1150, 1243], "rethink": 1221, "retrac": 7, "retri": 35, "retriev": [150, 336, 824, 1158, 1199, 1200, 1227], "retstep": 644, "return": [0, 1, 4, 7, 9, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 42, 44, 45, 49, 50, 55, 56, 57, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 132, 136, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 450, 452, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 579, 580, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 833, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1110, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1150, 1151, 1153, 1158, 1159, 1166, 1169, 1170, 1175, 1176, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "return_count": 799, "return_index": 799, "return_indic": 588, "return_invers": [799, 1110], "return_onesid": [919, 921, 922, 923], "return_shap": [340, 1102, 1152], "return_sign": [369, 955, 1110], "return_str": 825, "return_weak_typ": 44, "return_weak_type_flag": 44, "returnvalu": [14, 15], "retval": 429, "reus": [7, 71, 150, 824, 848, 1102, 1107, 1121, 1122, 1124, 1131, 1134, 1158, 1173, 1199, 1214, 1238, 1243], "rev": [0, 9, 1128, 1199], "rev_it": [1200, 1227], "reveal": [17, 904, 1117, 1151, 1183, 1185, 1205, 1227], "revers": [7, 9, 13, 15, 149, 165, 203, 204, 205, 206, 207, 229, 295, 317, 325, 333, 405, 424, 531, 532, 533, 700, 728, 780, 804, 809, 816, 1100, 1107, 1110, 1122, 1123, 1133, 1182, 1190, 1199, 1204, 1210, 1211, 1214, 1237, 1242], "revert": [1105, 1110, 1112, 1184], "review": [1007, 1104, 1112, 1185], "revis": [1103, 1183, 1188, 1190, 1193], "revisit": [1185, 1187, 1194, 1221], "reward": [1133, 1227], "rewrit": [191, 1112, 1114, 1122, 1131, 1132, 1135, 1183, 1186, 1190, 1192, 1193, 1195, 1211, 1214, 1231, 1238, 1242, 1247], "rewritten": [1137, 1183, 1188, 1190, 1242, 1246], "rfft": [519, 524, 525, 921, 1110], "rfft2": [520, 1110], "rfftfreq": 1110, "rfftn": [521, 1110], "rfloor": [228, 540], "rg": 120, "rgb": 1207, "rh": [88, 89, 94, 95, 105, 170, 193, 195, 196, 197, 198, 199, 212, 213, 1107, 1186, 1201, 1211], "rhs_batch_dim": [88, 89, 105, 213], "rhs_block": 1211, "rhs_block_hi": 1211, "rhs_block_lo": 1211, "rhs_contracting_dim": [88, 89, 105, 213], "rhs_dilat": [195, 196, 197, 198, 199], "rhs_shape": 194, "rhs_spec": [195, 196, 197, 1166, 1207, 1211], "rice": 567, "rich": [21, 1206, 1234], "richer": 1107, "riemann": [968, 1205, 1227], "right": [71, 121, 185, 208, 228, 246, 254, 257, 305, 306, 343, 344, 345, 346, 368, 435, 438, 485, 487, 532, 571, 587, 610, 619, 641, 725, 737, 748, 781, 809, 852, 863, 875, 876, 879, 886, 889, 893, 902, 903, 907, 908, 910, 924, 925, 926, 965, 1068, 1084, 1105, 1188, 1190, 1195, 1196, 1200, 1202, 1206, 1208, 1210, 1211, 1213, 1214, 1216, 1221, 1223, 1227, 1233, 1234, 1236], "right_shift": 438, "rightmost": [565, 566, 567, 641, 1221], "rigor": [1205, 1227], "ring": [1136, 1211], "rint": 1110, "rippl": 430, "rise": 961, "risk": [71, 1219], "river": 440, "rl": 1135, "rm": [362, 877, 1128], "rms_backward_affin": 0, "rms_forward_affine_mixed_dtyp": 0, "rms_norm": 0, "rms_norm_bwd": 0, "rms_norm_fwd": 0, "rms_norm_kernel": 0, "rmsnorm": 0, "rmsnormbwdclass": 0, "rmsnormdescriptor": 0, "rmsnormfwdclass": 0, "rmsnormregistr": 0, "rmsprop": 1145, "rmsprop_momentum": 1145, "rnel": 1212, "rng": [1136, 1137, 1187, 1189, 1191, 1197, 1201, 1213, 1243, 1244, 1246], "rng_1": 1191, "rng_2": 1191, "rng_3": 1191, "rng_bit_gener": 1110, "rng_default": 291, "rng_input": 1191, "rng_state": 1199, "rngbitgener": 291, "road": 1134, "roadmap": 1197, "robust": [120, 567, 635, 1110, 1173, 1206, 1234], "robustifi": 1192, "rocfft": 1119, "rocket": 1213, "rocm": 1127, "rocm_path": 1119, "rocmsoftwareplatform": 1119, "rocrand": 1119, "roctrac": 1119, "rodrigu": 927, "roi": 1194, "role": [35, 405, 424, 1137, 1246], "roll": [229, 295, 740, 1110, 1185, 1199, 1211, 1224], "rollaxi": 1110, "roman": 1136, "ronald": [921, 922], "room": 1185, "root": [0, 184, 209, 294, 314, 448, 567, 615, 707, 765, 909, 1102, 1107, 1110, 1119, 1130, 1190, 1193, 1200, 1227, 1232], "rosalia": [1130, 1131, 1134], "rot90": 1207, "rotat": [742, 926, 928, 1110, 1189, 1205, 1207, 1227], "rotvec": 928, "rough": 1216, "roughli": [26, 120, 214, 216, 295, 399, 723, 1107, 1117, 1186, 1188, 1211], "round": [399, 412, 528, 624, 644, 668, 732, 738, 744, 1110, 1133, 1190, 1199, 1200, 1212, 1219, 1227], "rounding_method": 293, "roundingmethod": [293, 1166], "roundoff": 541, "rout": [1110, 1152, 1185, 1211, 1216, 1224, 1247], "routin": [1, 120, 209, 635, 813, 1110, 1159, 1170, 1173, 1189, 1200, 1208, 1211, 1227, 1233], "row": [118, 121, 122, 147, 149, 250, 279, 339, 361, 413, 419, 467, 472, 506, 532, 533, 568, 573, 613, 624, 630, 692, 725, 728, 729, 782, 784, 809, 814, 815, 824, 847, 900, 901, 903, 910, 911, 1029, 1049, 1133, 1134, 1135, 1159, 1182, 1186, 1205, 1211, 1212, 1216, 1218, 1227, 1242, 1243, 1247], "row_norm": 824, "row_stack": [815, 1110], "rows_per_devic": 339, "rows_sort": 82, "rowsum": 1102, "rowvar": [467, 472], "royal": 1007, "rpath": 1122, "rpc": 1198, "rr": 1199, "rsf2csf": 1110, "rtd": 1119, "rtol": [0, 391, 590, 861, 1205, 1211, 1227, 1242], "rtree": 1128, "rtype": 351, "rudin": [1200, 1227], "ruff": [1112, 1119], "rui": 909, "rule": [9, 13, 14, 15, 229, 289, 295, 325, 399, 413, 429, 441, 447, 490, 567, 579, 624, 658, 736, 777, 781, 811, 886, 1103, 1107, 1110, 1130, 1131, 1134, 1151, 1153, 1166, 1182, 1184, 1187, 1188, 1192, 1195, 1196, 1197, 1199, 1205, 1206, 1208, 1214, 1216, 1219, 1225, 1230, 1232, 1233, 1234, 1237, 1238, 1243, 1248], "run": [0, 16, 18, 35, 36, 55, 57, 66, 67, 68, 69, 150, 157, 158, 197, 229, 280, 281, 295, 341, 824, 834, 835, 836, 1104, 1106, 1107, 1110, 1112, 1114, 1115, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1136, 1137, 1150, 1152, 1158, 1180, 1182, 1185, 1195, 1196, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1227, 1233, 1234, 1236, 1237, 1238, 1242, 1244, 1248], "run_and_verifi": 0, "run_ast_nod": [1202, 1208, 1212, 1233, 1236], "run_cel": [1208, 1212, 1233], "run_cell_async": [1202, 1208, 1212, 1233, 1236], "run_cod": [1202, 1208, 1212, 1233, 1236], "run_forev": [1208, 1233], "run_und": 1119, "runner": [1208, 1233], "runpi": [1202, 1236], "runtim": [67, 69, 70, 715, 888, 889, 890, 891, 892, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 1104, 1110, 1114, 1117, 1122, 1127, 1130, 1136, 1152, 1170, 1176, 1179, 1186, 1190, 1193, 1196, 1200, 1208, 1211, 1227, 1229, 1232, 1233, 1238, 1244, 1249], "runtime_execut": [0, 1151, 1176], "runtime_token": 1183, "runtimeerror": [35, 679, 681, 683, 684, 834, 835, 836, 1110, 1122, 1226], "runtimewarn": [677, 678, 680, 684, 686], "rv": [969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "rvert": 946, "s0895479899356080": 894, "s1": [494, 1188], "s10": 494, "s2": 1188, "s25": 494, "s32": [0, 1102, 1193], "s4": 447, "s8": 1152, "s_": [397, 576, 903, 1133, 1227], "s_complement": [434, 436, 589], "s_grad": [1133, 1227], "s_t": [1133, 1227], "s_tm1": [1133, 1227], "sacco": 559, "sad": 1199, "saddl": [440, 913], "safe": [71, 150, 208, 447, 645, 824, 837, 853, 1102, 1107, 1110, 1114, 1117, 1134, 1137, 1158, 1173, 1179, 1183, 1185, 1186, 1198, 1211, 1243, 1246, 1248], "safe_for_grad_log": 1122, "safe_map": [1110, 1204], "safe_zip": 1110, "safer": [645, 1152, 1186], "safeti": [1110, 1194], "sai": [0, 1104, 1107, 1127, 1137, 1175, 1180, 1183, 1185, 1186, 1188, 1199, 1200, 1201, 1205, 1206, 1211, 1216, 1218, 1221, 1227, 1234, 1246], "said": [641, 1105, 1189, 1195, 1212, 1213, 1214, 1219], "sake": [43, 1185, 1195, 1208, 1233], "saleri": 559, "salient": 1122, "same": [0, 4, 7, 9, 13, 28, 32, 35, 37, 41, 50, 57, 67, 71, 73, 74, 75, 76, 77, 78, 91, 104, 119, 121, 125, 140, 143, 144, 145, 147, 148, 149, 151, 157, 158, 159, 160, 165, 174, 193, 195, 196, 197, 198, 199, 200, 208, 209, 214, 231, 245, 247, 249, 250, 255, 262, 269, 271, 272, 273, 277, 278, 279, 280, 281, 295, 296, 302, 312, 313, 326, 332, 333, 339, 340, 348, 349, 369, 376, 383, 388, 391, 396, 398, 401, 403, 404, 406, 407, 408, 409, 410, 413, 414, 415, 421, 423, 425, 429, 431, 441, 448, 452, 454, 462, 463, 464, 467, 468, 470, 472, 476, 485, 486, 487, 493, 499, 505, 514, 515, 516, 521, 527, 528, 538, 544, 554, 556, 559, 565, 567, 570, 576, 587, 595, 596, 598, 599, 600, 613, 627, 637, 653, 662, 663, 668, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 698, 700, 701, 702, 703, 705, 706, 711, 717, 718, 720, 724, 725, 728, 732, 733, 738, 739, 745, 748, 749, 758, 762, 765, 766, 768, 769, 771, 773, 777, 779, 780, 783, 785, 804, 805, 810, 813, 815, 818, 824, 844, 887, 894, 909, 911, 912, 915, 916, 917, 918, 920, 921, 924, 925, 926, 940, 954, 955, 1007, 1070, 1081, 1088, 1089, 1099, 1100, 1102, 1104, 1107, 1109, 1110, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1146, 1152, 1153, 1154, 1158, 1159, 1170, 1173, 1175, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247, 1248], "same_data": 848, "same_kind": 447, "same_low": 195, "sampl": [147, 282, 364, 430, 440, 472, 510, 517, 524, 557, 559, 562, 565, 566, 568, 587, 606, 644, 656, 681, 683, 703, 711, 724, 781, 833, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 886, 912, 919, 921, 922, 923, 956, 957, 1007, 1014, 1049, 1130, 1133, 1134, 1144, 1191, 1201, 1207, 1227, 1243], "sample_count": [566, 568], "sample_s": 1191, "sampler": [861, 1110, 1203], "sane": 552, "sass": 1110, "satisfactori": 339, "satisfi": [120, 122, 150, 165, 208, 251, 413, 487, 505, 623, 712, 748, 749, 849, 892, 900, 903, 906, 937, 1112, 1131, 1134, 1185, 1194, 1195, 1202, 1203, 1236, 1238, 1243], "sauc": 1214, "save": [7, 747, 832, 834, 835, 836, 1103, 1110, 1119, 1131, 1150, 1184, 1190, 1192, 1193, 1199, 1200, 1205, 1210, 1211, 1222, 1227, 1234, 1238], "save_any_names_but_thes": [1206, 1234], "save_anything_but_these_nam": [1206, 1234], "save_device_memory_profil": 1120, "save_for_backward": [1200, 1227], "save_only_these_nam": [1206, 1234], "savetxt": [746, 747], "savez": 746, "savez_compress": 747, "saw": [1119, 1182, 1237], "sc": 929, "scalabl": 1212, "scalar": [7, 9, 12, 26, 29, 30, 31, 32, 41, 43, 45, 50, 67, 71, 78, 90, 143, 144, 145, 150, 151, 174, 191, 200, 209, 215, 217, 218, 219, 231, 248, 249, 256, 293, 295, 303, 319, 325, 332, 333, 340, 343, 344, 366, 385, 386, 387, 388, 389, 392, 393, 394, 397, 400, 401, 402, 403, 404, 405, 406, 413, 420, 421, 423, 424, 425, 426, 432, 434, 435, 436, 437, 438, 439, 441, 446, 447, 448, 450, 451, 458, 462, 463, 466, 469, 470, 473, 478, 479, 484, 486, 488, 489, 490, 494, 500, 501, 502, 504, 507, 510, 524, 526, 530, 538, 539, 540, 541, 542, 543, 544, 545, 549, 551, 553, 555, 556, 557, 559, 560, 561, 564, 565, 567, 571, 575, 578, 579, 586, 589, 590, 594, 596, 597, 602, 608, 609, 610, 611, 612, 636, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 664, 666, 667, 668, 669, 671, 672, 677, 680, 681, 682, 683, 685, 689, 690, 691, 692, 693, 694, 701, 703, 705, 712, 716, 717, 718, 720, 722, 724, 725, 726, 727, 730, 731, 732, 736, 737, 738, 748, 749, 754, 755, 756, 757, 760, 765, 766, 767, 770, 771, 775, 776, 777, 781, 790, 791, 806, 813, 824, 858, 886, 891, 896, 912, 914, 916, 918, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 961, 963, 966, 967, 984, 997, 998, 1007, 1009, 1010, 1011, 1024, 1030, 1031, 1032, 1033, 1037, 1099, 1100, 1102, 1107, 1110, 1121, 1123, 1130, 1134, 1145, 1146, 1153, 1158, 1166, 1179, 1182, 1185, 1189, 1194, 1199, 1202, 1205, 1211, 1219, 1221, 1224, 1227, 1230, 1236, 1237, 1243, 1248], "scalar_lik": 571, "scalar_or_schedul": 1145, "scale": [21, 71, 147, 171, 172, 333, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 369, 374, 497, 557, 607, 634, 656, 711, 850, 854, 873, 880, 894, 919, 923, 949, 951, 953, 955, 973, 974, 975, 976, 977, 978, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1110, 1126, 1130, 1131, 1145, 1146, 1186, 1191, 1203, 1205, 1206, 1209, 1211, 1213, 1214, 1216, 1221, 1227, 1234, 1238], "scan": [7, 34, 49, 55, 56, 165, 229, 262, 715, 748, 1107, 1110, 1114, 1115, 1122, 1152, 1186, 1190, 1199, 1206, 1208, 1216, 1224, 1233, 1234, 1247], "scan_p": 1159, "scan_unrol": 748, "scatter": [280, 297, 298, 299, 300, 301, 1107, 1110, 1130, 1135, 1136, 1137, 1166, 1199, 1207, 1211, 1212, 1216, 1246], "scatter_dimens": [280, 1186, 1211], "scatter_dims_to_operand_dim": 1166, "scatter_indic": [296, 297, 298, 299, 300, 301, 1166], "scatterdimensionnumb": [296, 297, 298, 299, 300, 301, 1166], "scenario": [0, 71, 1110, 1158, 1199], "scene": [1199, 1211], "schafer": [430, 440, 921, 922], "schedul": [1125, 1145, 1186, 1214, 1216, 1219], "schemat": 1190, "scheme": [121, 1195], "schneider": [1130, 1131, 1134], "school": [165, 1186, 1205, 1227], "schur": [905, 909, 1110], "scienc": [165, 909, 1213], "scientif": [750, 1118, 1134, 1182, 1199, 1216, 1237, 1243], "scipi": [369, 524, 1105, 1110, 1118, 1121, 1122, 1129, 1159, 1173, 1197, 1203, 1207, 1208, 1209, 1213, 1214, 1233], "scope": [341, 342, 719, 1110, 1121, 1130, 1175, 1182, 1190, 1197, 1202, 1214, 1226, 1236, 1237, 1238], "score": 1048, "scott": [567, 1007], "scratch": [926, 1109, 1113, 1146, 1189, 1221], "screen": [1117, 1123], "screenshot": 1185, "screw": 1199, "script": [1110, 1119, 1128, 1206, 1223, 1234], "sda": 1180, "sdim": 906, "seamlessli": [71, 1159, 1170], "search": [120, 159, 160, 331, 497, 913, 914, 1122, 1151, 1189], "searchsort": 1110, "sec": [35, 1186, 1203, 1209, 1212], "second": [0, 13, 35, 57, 143, 144, 145, 148, 149, 151, 208, 209, 295, 333, 339, 340, 405, 424, 429, 441, 464, 473, 485, 490, 493, 494, 497, 510, 515, 516, 524, 528, 538, 559, 565, 566, 567, 569, 570, 598, 599, 607, 613, 657, 664, 699, 717, 718, 742, 772, 777, 779, 809, 811, 815, 841, 915, 916, 917, 918, 920, 1068, 1084, 1085, 1089, 1099, 1100, 1101, 1102, 1104, 1107, 1110, 1122, 1133, 1134, 1145, 1152, 1175, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1195, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1211, 1214, 1219, 1221, 1223, 1224, 1227, 1232, 1233, 1234, 1236, 1237, 1244, 1247], "secondari": [613, 1190], "secondli": 1214, "secret": 1214, "section": [345, 399, 413, 417, 511, 516, 521, 525, 1103, 1110, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1152, 1159, 1180, 1185, 1186, 1189, 1191, 1193, 1194, 1195, 1199, 1200, 1204, 1205, 1211, 1214, 1215, 1217, 1219, 1222, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247], "secur": [645, 746], "see": [0, 7, 13, 14, 15, 17, 19, 25, 26, 30, 34, 41, 57, 65, 66, 67, 68, 69, 70, 71, 106, 120, 127, 143, 150, 157, 158, 159, 160, 165, 174, 195, 212, 229, 252, 255, 271, 272, 273, 277, 278, 279, 280, 281, 293, 302, 323, 326, 332, 340, 343, 345, 370, 372, 374, 390, 391, 392, 393, 395, 399, 405, 413, 419, 424, 441, 465, 467, 472, 481, 483, 490, 496, 514, 515, 516, 519, 527, 538, 546, 548, 550, 558, 565, 567, 568, 571, 590, 595, 615, 619, 631, 634, 645, 652, 653, 654, 655, 656, 658, 660, 662, 664, 666, 677, 678, 680, 681, 682, 683, 684, 685, 686, 688, 703, 705, 707, 709, 711, 712, 717, 718, 719, 720, 721, 724, 736, 746, 747, 769, 771, 773, 774, 780, 784, 785, 788, 789, 810, 824, 831, 832, 848, 882, 883, 884, 885, 904, 912, 915, 917, 919, 921, 922, 923, 927, 943, 944, 945, 946, 947, 953, 961, 962, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1079, 1101, 1102, 1104, 1105, 1109, 1110, 1112, 1113, 1114, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1130, 1131, 1133, 1135, 1136, 1137, 1138, 1145, 1152, 1158, 1159, 1160, 1166, 1170, 1172, 1173, 1175, 1176, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1230, 1233, 1236, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "seed": [27, 136, 137, 138, 141, 142, 838, 858, 1110, 1134, 1173, 1199, 1205, 1212, 1213, 1227, 1243], "seek": [645, 746, 747, 1112, 1185, 1195], "seem": [71, 452, 1107, 1125, 1134, 1137, 1183, 1184, 1192, 1200, 1205, 1214, 1216, 1221, 1227, 1246], "seen": [71, 464, 1107, 1136, 1137, 1159, 1193, 1194, 1195, 1199, 1205, 1214, 1218, 1227, 1246, 1248], "segfault": 1110, "segment": [820, 821, 822, 823, 919, 921, 922, 923, 1110], "segment_id": [820, 821, 822, 823], "segment_len": [1208, 1233], "segment_sum": 1110, "seldom": [538, 1184], "select": [27, 191, 303, 319, 459, 567, 630, 705, 773, 847, 892, 893, 919, 923, 1007, 1107, 1110, 1114, 1119, 1152, 1173, 1182, 1193, 1194, 1199, 1205, 1206, 1219, 1221, 1223, 1226, 1227, 1234, 1237], "select_cal": 253, "select_n": 1239, "select_rang": 893, "select_tril": 1193, "self": [91, 370, 374, 829, 1080, 1082, 1107, 1112, 1127, 1130, 1131, 1135, 1137, 1175, 1176, 1186, 1199, 1202, 1203, 1206, 1208, 1212, 1214, 1216, 1224, 1233, 1234, 1236, 1238, 1246, 1247], "selu": [150, 344, 1131, 1210, 1238, 1239, 1242], "selu_jit": [1131, 1210, 1238, 1239, 1242], "sem": 1110, "semant": [17, 56, 69, 71, 76, 77, 191, 213, 229, 232, 262, 268, 295, 296, 297, 298, 299, 300, 301, 319, 325, 340, 526, 565, 568, 688, 691, 706, 721, 723, 773, 813, 824, 1075, 1107, 1110, 1114, 1117, 1123, 1136, 1158, 1166, 1170, 1180, 1186, 1188, 1189, 1191, 1193, 1197, 1199, 1202, 1204, 1208, 1210, 1211, 1213, 1214, 1216, 1233, 1236, 1242, 1249], "semantic_in_shard": 1212, "semantic_out_shard": 1212, "semendyayev": 715, "semi": [1032, 1033, 1188], "semidefinit": 903, "send": [1112, 1119, 1131, 1136, 1144, 1152, 1208, 1211, 1233, 1238], "senddon": 1125, "sens": [493, 570, 641, 711, 815, 1107, 1130, 1133, 1134, 1136, 1137, 1152, 1173, 1180, 1185, 1188, 1189, 1190, 1191, 1195, 1205, 1216, 1227, 1230, 1243, 1246], "sensibl": [1185, 1195, 1200, 1227], "sent": [69, 1109, 1136, 1152], "sentinel": 1107, "sep": 552, "separ": [14, 49, 196, 464, 468, 490, 494, 496, 552, 579, 658, 672, 750, 777, 811, 812, 820, 821, 822, 823, 919, 1048, 1104, 1105, 1110, 1111, 1127, 1131, 1133, 1136, 1137, 1145, 1152, 1180, 1182, 1183, 1185, 1186, 1190, 1195, 1199, 1200, 1211, 1214, 1218, 1219, 1221, 1227, 1237, 1238, 1244, 1246], "sept": 1193, "seq": 1128, "seq_len": 0, "seq_of_zero": 707, "sequeez": 280, "sequel": 1211, "sequenc": [3, 7, 11, 12, 21, 31, 32, 35, 69, 71, 72, 73, 80, 81, 85, 86, 87, 88, 89, 90, 96, 97, 98, 100, 103, 105, 117, 119, 125, 144, 145, 146, 147, 148, 149, 150, 179, 180, 183, 190, 193, 195, 196, 197, 198, 199, 213, 215, 218, 225, 227, 230, 231, 232, 239, 250, 269, 285, 287, 289, 290, 298, 310, 312, 316, 319, 324, 339, 340, 353, 354, 355, 356, 357, 358, 360, 364, 365, 394, 399, 409, 413, 417, 427, 428, 430, 452, 454, 460, 461, 464, 468, 492, 493, 499, 509, 511, 515, 516, 520, 521, 523, 525, 553, 554, 557, 562, 563, 565, 567, 568, 569, 570, 577, 580, 587, 604, 605, 606, 613, 630, 639, 644, 656, 663, 670, 679, 681, 683, 697, 698, 701, 702, 703, 706, 707, 708, 709, 712, 713, 714, 715, 724, 768, 777, 781, 786, 814, 815, 818, 824, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 882, 884, 886, 1099, 1100, 1101, 1102, 1107, 1110, 1122, 1123, 1134, 1135, 1146, 1158, 1166, 1170, 1173, 1175, 1179, 1182, 1185, 1186, 1191, 1195, 1197, 1199, 1200, 1201, 1202, 1210, 1211, 1212, 1214, 1216, 1221, 1227, 1236, 1237, 1238, 1239, 1242, 1243, 1247], "sequencekei": [1110, 1135, 1247], "sequenti": [0, 70, 837, 1134, 1186, 1191, 1218, 1219, 1232], "seri": [508, 572, 919, 921, 922, 923, 929, 947, 953, 958, 1007, 1110, 1127, 1130, 1135, 1153], "serial": [1110, 1145, 1146, 1176, 1190, 1191], "serializ": 1173, "serialloop": 71, "series_ord": 953, "series_out": 1153, "seriou": 1219, "serv": [35, 339, 1107, 1144, 1185, 1189, 1202, 1223, 1236], "server": [833, 1223], "servic": [35, 1198, 1223], "session": [1110, 1119, 1124, 1232], "set": [0, 7, 12, 14, 15, 25, 34, 37, 57, 71, 72, 73, 120, 147, 150, 159, 160, 198, 229, 231, 232, 275, 296, 297, 298, 299, 300, 301, 337, 340, 369, 371, 390, 392, 393, 395, 397, 407, 408, 409, 429, 443, 464, 467, 468, 471, 472, 482, 484, 490, 494, 496, 526, 573, 579, 624, 628, 631, 633, 644, 652, 653, 654, 655, 658, 660, 662, 663, 666, 673, 674, 677, 678, 679, 680, 681, 683, 684, 685, 686, 688, 701, 702, 703, 705, 706, 710, 711, 713, 715, 719, 720, 722, 723, 724, 741, 750, 751, 752, 755, 769, 771, 773, 777, 810, 811, 812, 813, 820, 821, 822, 823, 824, 828, 837, 869, 900, 907, 919, 923, 953, 955, 957, 965, 1008, 1012, 1013, 1029, 1049, 1079, 1080, 1081, 1082, 1102, 1104, 1107, 1108, 1110, 1112, 1114, 1115, 1119, 1121, 1122, 1124, 1125, 1127, 1130, 1132, 1133, 1134, 1135, 1150, 1151, 1154, 1158, 1159, 1166, 1167, 1170, 1173, 1175, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1242, 1243, 1244, 1247, 1248], "set_cache_dir": [1150, 1222], "set_linestyl": 1195, "set_printopt": [416, 418, 558, 719], "set_string_funct": [558, 750], "set_titl": 1207, "set_trac": [1200, 1227], "set_valu": 1107, "set_visible_devic": [1124, 1209], "set_ylim": 1195, "setdiff1d": 1189, "setup": [1110, 1113, 1127, 1205, 1230], "setuptool": 1119, "seussian": 1186, "seven": 615, "sever": [120, 711, 746, 747, 837, 903, 914, 1104, 1110, 1112, 1119, 1122, 1123, 1127, 1130, 1131, 1133, 1134, 1136, 1173, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1197, 1198, 1199, 1204, 1208, 1211, 1216, 1221, 1225, 1227, 1233, 1237, 1239, 1243], "sf": [984, 1024, 1037], "sf_gamma": [944, 945], "sfu": 935, "sgd": [1133, 1135, 1136, 1137, 1145, 1227, 1246, 1247], "sgn": [369, 955], "sh": [1119, 1128, 1211], "shanji": 929, "shape": [0, 3, 21, 34, 50, 67, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 96, 97, 110, 111, 114, 115, 117, 122, 137, 140, 141, 142, 144, 145, 146, 147, 151, 157, 158, 159, 160, 165, 174, 179, 180, 181, 183, 188, 190, 194, 196, 197, 200, 217, 219, 229, 230, 231, 245, 246, 247, 249, 250, 251, 252, 255, 257, 271, 272, 273, 277, 278, 279, 280, 281, 289, 291, 292, 295, 298, 302, 303, 311, 325, 331, 332, 338, 339, 340, 352, 360, 361, 364, 365, 369, 388, 389, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 421, 423, 424, 425, 428, 429, 431, 432, 435, 437, 438, 439, 441, 444, 445, 446, 448, 452, 464, 466, 467, 470, 476, 482, 485, 486, 487, 488, 489, 493, 494, 498, 499, 500, 503, 506, 509, 511, 512, 515, 516, 517, 520, 521, 523, 525, 531, 538, 541, 542, 543, 544, 549, 553, 554, 555, 559, 560, 561, 563, 564, 565, 566, 567, 570, 571, 572, 577, 579, 580, 587, 592, 595, 596, 600, 601, 602, 605, 606, 608, 609, 610, 611, 612, 613, 623, 624, 627, 630, 634, 636, 637, 640, 641, 650, 651, 652, 653, 654, 655, 657, 658, 661, 664, 667, 668, 671, 676, 677, 680, 685, 689, 691, 693, 697, 698, 700, 701, 702, 705, 707, 710, 711, 713, 717, 718, 720, 725, 728, 729, 732, 733, 734, 735, 737, 738, 739, 748, 758, 761, 762, 765, 766, 768, 770, 771, 773, 778, 779, 780, 782, 783, 788, 789, 790, 804, 805, 813, 815, 816, 817, 818, 820, 821, 822, 823, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 891, 893, 894, 901, 904, 908, 910, 911, 912, 914, 921, 924, 925, 926, 928, 940, 954, 955, 956, 957, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1110, 1117, 1121, 1122, 1131, 1132, 1134, 1135, 1136, 1146, 1151, 1152, 1159, 1166, 1169, 1170, 1175, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1191, 1192, 1194, 1198, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1225, 1227, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1243, 1244, 1247], "shape_depend": 1146, "shape_dtype_struct": 50, "shape_poli": 1110, "shape_poly_st": [1202, 1212, 1236], "shape_tupl": 1214, "shapecheck": 1110, "shaped_arrai": 1188, "shapedarrai": [0, 34, 340, 1075, 1107, 1110, 1121, 1122, 1131, 1187, 1193, 1199, 1202, 1208, 1212, 1232, 1233, 1236, 1238, 1239], "shapedtypestruct": [0, 50, 70, 1104, 1152, 1208, 1216, 1218, 1221, 1233], "shapelik": 1185, "shapepolyloweringst": [1202, 1236], "sharad_map": 1186, "sharadmv": [1183, 1186, 1187], "shard": [3, 18, 20, 21, 30, 32, 37, 70, 72, 73, 76, 77, 150, 230, 231, 326, 331, 338, 339, 498, 499, 546, 553, 554, 697, 698, 817, 818, 824, 837, 1110, 1114, 1129, 1136, 1151, 1152, 1158, 1173, 1180, 1185, 1186, 1198, 1199, 1208, 1214, 1226, 1233, 1235], "shard_arg": 1212, "shard_map": [0, 71, 1103, 1110, 1197, 1214, 1216], "shard_shap": 1175, "shardabl": 1173, "sharded_cal": 1110, "sharded_dim": 1175, "sharded_impl": 0, "sharded_jit": [1102, 1110], "sharded_x": 1180, "shardeddevicearrai": [1110, 1180, 1198], "sharding1": 1201, "sharding2": 1201, "sharding_shap": 1201, "sharding_spec": [1175, 1180], "shardingcontext": [1202, 1236], "shardingspec": 1175, "share": [0, 13, 35, 37, 213, 711, 1107, 1110, 1122, 1136, 1152, 1183, 1186, 1190, 1191, 1196, 1216, 1221, 1223], "sharp": [1108, 1121, 1122, 1130, 1131, 1232, 1238, 1242, 1246], "shelf": 1199, "shell": [1119, 1125, 1180, 1184, 1193, 1199, 1208, 1223, 1233], "shell_futur": [1208, 1233], "shell_stream": [1208, 1233], "shelv": 1199, "shick": 1186, "shift": [304, 305, 306, 435, 438, 512, 517, 610, 737, 739, 1186, 1211], "shift_dn": 1211, "shift_up": 1211, "shim": 1203, "ship": [0, 1127], "shmap": [1188, 1197], "sho": 1186, "sholto": 1186, "sholto_map": 1186, "shoot": [1131, 1238], "short": [791, 919, 921, 922, 923, 1118, 1122, 1123, 1137, 1173, 1185, 1191, 1195, 1197, 1212, 1216, 1223, 1239], "shortcom": 1186, "shortcut": [701, 1135], "shorter": [513, 519, 723, 1215], "shortest": [928, 1222], "shorthand": [385, 386, 593, 816, 1200, 1201, 1227], "should": [0, 1, 7, 13, 16, 30, 35, 37, 43, 50, 67, 70, 71, 73, 76, 77, 82, 84, 122, 137, 141, 142, 144, 145, 146, 147, 150, 151, 165, 174, 209, 213, 214, 232, 238, 250, 255, 277, 278, 291, 292, 296, 297, 298, 299, 300, 301, 303, 333, 340, 346, 352, 353, 354, 355, 356, 357, 358, 361, 364, 368, 371, 378, 397, 413, 417, 447, 472, 485, 496, 514, 515, 516, 521, 544, 548, 550, 556, 568, 580, 605, 668, 670, 700, 701, 705, 721, 729, 732, 734, 736, 740, 747, 748, 750, 774, 779, 804, 808, 811, 813, 816, 820, 821, 822, 823, 824, 831, 832, 837, 895, 904, 915, 916, 917, 918, 920, 921, 924, 925, 926, 1007, 1030, 1031, 1068, 1069, 1070, 1071, 1072, 1079, 1081, 1084, 1086, 1088, 1090, 1091, 1099, 1100, 1101, 1102, 1105, 1107, 1110, 1114, 1117, 1119, 1121, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1136, 1137, 1150, 1152, 1153, 1158, 1166, 1173, 1175, 1180, 1182, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1227, 1233, 1234, 1237, 1238, 1243, 1246, 1247], "should_sort_granules_by_kei": 73, "shouldn": [1119, 1131, 1137, 1183, 1192, 1199, 1206, 1234, 1238, 1246], "show": [0, 341, 342, 828, 829, 830, 833, 1104, 1110, 1119, 1120, 1121, 1122, 1127, 1128, 1130, 1131, 1136, 1151, 1152, 1159, 1182, 1183, 1185, 1186, 1189, 1191, 1193, 1199, 1201, 1202, 1203, 1204, 1205, 1209, 1211, 1214, 1216, 1223, 1226, 1227, 1230, 1237, 1238], "show_exampl": 1224, "show_head": [1206, 1234], "show_lin": [1206, 1234], "shown": [722, 1109, 1137, 1152, 1182, 1195, 1202, 1206, 1211, 1234, 1236, 1237, 1246, 1247], "shpecialized_xmap": 1186, "shuffl": [277, 869, 1185, 1203], "shut": [35, 36, 1223], "siam": [894, 895], "side": [17, 34, 56, 69, 121, 150, 195, 208, 257, 361, 548, 550, 559, 748, 837, 850, 864, 889, 902, 903, 907, 908, 919, 921, 922, 923, 924, 925, 926, 1106, 1107, 1110, 1114, 1117, 1121, 1122, 1123, 1130, 1131, 1137, 1152, 1158, 1185, 1186, 1188, 1189, 1190, 1197, 1199, 1200, 1208, 1214, 1227, 1232, 1233, 1238, 1246], "side_effect": 1121, "sight": [1200, 1227], "sigma": [711, 850, 863, 865, 873, 880, 1213], "sigmoid": [260, 346, 347, 367, 376, 383, 940, 1122, 1159, 1205, 1227, 1230, 1244], "sign": [211, 232, 288, 369, 377, 391, 405, 424, 434, 436, 452, 462, 463, 466, 527, 544, 545, 558, 589, 593, 635, 668, 688, 720, 722, 732, 750, 756, 771, 773, 791, 903, 955, 1110, 1112, 1122], "signal": [65, 430, 440, 464, 468, 513, 518, 758, 808, 882, 1110, 1207], "signatur": [0, 13, 56, 71, 122, 137, 141, 142, 150, 165, 229, 295, 325, 333, 657, 658, 813, 1104, 1107, 1110, 1145, 1151, 1158, 1182, 1190, 1196, 1200, 1203, 1205, 1209, 1214, 1216, 1227, 1237], "signifi": [1130, 1136], "signific": [1110, 1122, 1184, 1186, 1192, 1195, 1208, 1211, 1214, 1219, 1233, 1248], "significantli": [527, 1110, 1214, 1219], "silenc": [104, 624], "silent": [1110, 1127, 1199, 1208, 1213, 1225, 1226, 1233], "silli": 71, "silu": [348, 349, 383], "silverman": 1007, "simd": [1134, 1191, 1243], "similar": [26, 49, 56, 122, 150, 158, 200, 231, 280, 302, 333, 413, 418, 430, 465, 494, 557, 657, 665, 696, 706, 741, 820, 821, 822, 823, 897, 1075, 1081, 1082, 1104, 1110, 1114, 1117, 1121, 1122, 1124, 1152, 1170, 1180, 1184, 1185, 1189, 1190, 1191, 1195, 1199, 1200, 1204, 1205, 1206, 1207, 1211, 1214, 1219, 1222, 1226, 1227, 1232, 1234, 1239, 1242, 1248], "similarli": [14, 15, 71, 77, 147, 736, 824, 1104, 1107, 1109, 1110, 1122, 1132, 1135, 1152, 1158, 1185, 1186, 1187, 1189, 1193, 1194, 1198, 1200, 1204, 1211, 1214, 1216, 1221, 1227, 1231, 1232, 1242, 1247], "simpl": [0, 7, 71, 215, 289, 310, 447, 452, 472, 496, 820, 821, 822, 823, 1103, 1107, 1110, 1117, 1121, 1122, 1125, 1130, 1131, 1132, 1135, 1136, 1159, 1176, 1182, 1183, 1184, 1185, 1187, 1188, 1190, 1191, 1193, 1195, 1197, 1199, 1201, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1224, 1227, 1230, 1231, 1233, 1234, 1235, 1237, 1239, 1242, 1244, 1247], "simple_typ": 1185, "simplenamespac": [332, 1102], "simpler": [180, 576, 745, 1107, 1122, 1180, 1184, 1185, 1186, 1188, 1195, 1201, 1202, 1214, 1224, 1236], "simplest": [1107, 1189, 1201, 1211, 1214, 1239, 1244], "simpli": [0, 49, 146, 339, 340, 565, 567, 780, 824, 1104, 1112, 1120, 1121, 1122, 1127, 1131, 1132, 1133, 1183, 1190, 1193, 1196, 1198, 1199, 1200, 1224, 1227, 1231, 1238, 1244], "simplic": [567, 1109, 1130, 1189, 1190, 1195], "simplif": [1107, 1122, 1202, 1236], "simplifi": [715, 1104, 1109, 1110, 1122, 1180, 1187, 1188, 1190, 1193, 1208, 1233], "simul": [746, 747, 1190, 1200, 1216, 1227], "simultan": [489, 1134, 1221, 1243], "sin": [7, 14, 15, 18, 49, 57, 148, 149, 151, 333, 340, 747, 758, 760, 775, 1100, 1102, 1107, 1114, 1116, 1117, 1121, 1152, 1153, 1180, 1182, 1184, 1186, 1190, 1200, 1201, 1202, 1205, 1206, 1207, 1208, 1212, 1216, 1219, 1227, 1232, 1233, 1234, 1236, 1237, 1244], "sin_deriv_at_3": 1107, "sin_jvp": 1107, "sin_lin": 1107, "sin_p": 1107, "sin_sharded_x": 1180, "sin_vjp": [1206, 1234], "sin_vjp2": [1206, 1234], "sin_x": [15, 1200, 1227], "sinc": [16, 18, 50, 71, 295, 325, 409, 435, 443, 503, 519, 531, 532, 533, 552, 610, 663, 679, 681, 683, 692, 702, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 724, 741, 820, 821, 822, 823, 892, 927, 1102, 1106, 1107, 1110, 1117, 1127, 1131, 1134, 1136, 1137, 1151, 1152, 1170, 1180, 1182, 1183, 1186, 1188, 1189, 1190, 1191, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1211, 1216, 1219, 1222, 1223, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1246], "sinc_funct": 758, "sincfunct": 758, "sine": [163, 164, 308, 309, 402, 403, 420, 421, 757, 760, 1102], "sing": 615, "singl": [0, 14, 15, 35, 71, 73, 145, 150, 188, 196, 197, 209, 217, 219, 229, 295, 302, 325, 339, 395, 418, 441, 443, 444, 445, 454, 467, 472, 497, 527, 559, 568, 590, 630, 664, 673, 674, 681, 683, 703, 712, 724, 747, 777, 781, 816, 824, 847, 886, 924, 925, 926, 927, 1008, 1102, 1107, 1110, 1114, 1117, 1119, 1123, 1125, 1130, 1132, 1133, 1134, 1135, 1136, 1138, 1145, 1152, 1158, 1175, 1178, 1180, 1183, 1186, 1187, 1190, 1194, 1195, 1196, 1198, 1199, 1201, 1203, 1205, 1208, 1209, 1211, 1214, 1218, 1219, 1223, 1224, 1227, 1230, 1231, 1233, 1239, 1243, 1244, 1247], "single_device_shard": 1175, "singledeviceshard": [70, 837, 1175, 1244], "singleton": [1107, 1110, 1221], "singular": [121, 254, 615, 624, 628, 633, 637, 711, 865, 891, 903, 910, 1032, 1033, 1110], "singular_valu": 711, "sinh": 776, "sister": 1130, "sit": [1107, 1219], "site": [831, 1119, 1158, 1199, 1202, 1203, 1206, 1208, 1212, 1233, 1234, 1236, 1238, 1247], "situat": [0, 7, 82, 84, 1104, 1105, 1114, 1121, 1122, 1182, 1188, 1199, 1200, 1208, 1227, 1233, 1237], "six": [824, 1189, 1203], "size": [31, 71, 86, 90, 97, 100, 104, 111, 115, 121, 150, 157, 158, 159, 160, 165, 174, 179, 195, 197, 215, 216, 217, 225, 232, 241, 251, 271, 272, 273, 278, 279, 280, 281, 289, 295, 316, 333, 340, 346, 369, 390, 392, 393, 395, 399, 407, 408, 411, 417, 429, 431, 441, 459, 471, 476, 482, 485, 494, 497, 505, 529, 530, 559, 567, 631, 637, 644, 645, 656, 657, 660, 662, 663, 666, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 692, 703, 706, 720, 722, 724, 728, 739, 751, 769, 771, 777, 788, 798, 799, 804, 808, 810, 813, 816, 820, 821, 822, 823, 824, 883, 885, 898, 904, 909, 914, 915, 916, 917, 918, 920, 926, 955, 1029, 1048, 1049, 1101, 1102, 1107, 1110, 1121, 1122, 1130, 1134, 1135, 1136, 1145, 1152, 1158, 1166, 1170, 1180, 1186, 1188, 1189, 1193, 1194, 1198, 1199, 1201, 1203, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1230, 1233, 1243, 1244, 1247], "size_t": 0, "skeleton": 1204, "sketch": 1107, "skip": [76, 1107, 1110, 1119, 1130, 1131, 1180, 1188, 1199, 1214, 1219, 1238], "skip_app": 1192, "skip_app_bwd": 1192, "skip_app_fwd": 1192, "skip_on_devic": 1110, "sklearn": 1159, "slate": 1185, "sleep": 1223, "sleev": [1205, 1227], "sleight": 1195, "slerp": [1110, 1189], "slice": [0, 31, 71, 73, 77, 90, 98, 214, 215, 216, 217, 218, 219, 232, 238, 277, 278, 295, 296, 297, 298, 299, 300, 301, 311, 338, 392, 393, 397, 446, 459, 480, 576, 580, 645, 660, 665, 666, 673, 674, 675, 676, 677, 678, 680, 682, 684, 685, 686, 688, 696, 725, 745, 773, 774, 781, 788, 886, 891, 1029, 1049, 1110, 1151, 1152, 1166, 1175, 1185, 1186, 1188, 1198, 1199, 1201, 1211, 1214, 1216, 1219], "slice_in_dim": [216, 238, 310], "slice_index": 73, "slice_p": 1159, "slice_s": [90, 93, 215, 216, 232, 1166], "slide": 1190, "slight": [736, 1122, 1198], "slightli": [71, 422, 440, 919, 924, 925, 1106, 1107, 1122, 1184, 1195, 1196, 1206, 1214, 1218, 1234], "slogdet": 1110, "slogdetresult": 635, "slope": 366, "slow": [926, 1110, 1115, 1117, 1119, 1124, 1152, 1173, 1199, 1216, 1219], "slowdown": 1128, "slower": [46, 73, 920, 1110, 1122, 1133, 1166, 1173, 1210, 1219, 1227], "slowest": [188, 728, 734, 1130, 1131, 1166, 1201, 1205, 1219, 1227], "slurm": [35, 1110, 1198], "sm": [1110, 1127], "sm3": 1145, "sm_35": 1110, "sm_70": 0, "sm_75": 0, "sm_80": 0, "sm_86": 0, "small": [71, 391, 590, 624, 633, 635, 645, 650, 651, 672, 748, 750, 854, 1106, 1107, 1110, 1125, 1130, 1144, 1145, 1146, 1178, 1182, 1184, 1186, 1188, 1189, 1195, 1200, 1211, 1214, 1218, 1219, 1221, 1227, 1237], "smaller": [101, 251, 361, 409, 416, 418, 453, 472, 486, 508, 509, 511, 514, 515, 516, 518, 521, 522, 525, 541, 590, 624, 663, 679, 681, 683, 702, 703, 706, 711, 724, 733, 824, 1110, 1117, 1119, 1121, 1122, 1128, 1180, 1188, 1195, 1199, 1211, 1212, 1218, 1219, 1221, 1222], "smallest": [120, 268, 450, 527, 615, 624, 691, 750], "smallest_norm": 527, "smallest_subnorm": 527, "smem": [1110, 1220], "smith": [1208, 1233], "smooth": [380, 381, 1109, 1122, 1205, 1207, 1227], "smooth_imag": 1207, "snapshot": [831, 1205, 1216, 1227], "snippet": [77, 1135, 1223], "so": [0, 5, 6, 7, 9, 13, 19, 35, 49, 71, 76, 146, 150, 195, 196, 197, 229, 232, 262, 278, 280, 295, 296, 297, 298, 299, 300, 301, 325, 333, 387, 397, 400, 404, 405, 423, 424, 441, 443, 527, 538, 541, 565, 580, 601, 613, 624, 633, 644, 646, 650, 651, 664, 700, 711, 712, 736, 746, 747, 765, 778, 809, 824, 844, 922, 924, 925, 926, 966, 967, 1101, 1107, 1110, 1112, 1114, 1117, 1119, 1121, 1122, 1124, 1125, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1144, 1145, 1150, 1152, 1158, 1159, 1173, 1175, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247, 1248], "societi": 1007, "soft": [120, 377, 1222], "soft_pmap": 1110, "soft_sign": 1122, "softmax": [368, 844, 1110, 1122, 1125], "softplu": [370, 380, 1122], "softspac": [1208, 1233], "softwar": [1109, 1127, 1182, 1189, 1190, 1191, 1196, 1203, 1209, 1219, 1237], "sole": [1122, 1186, 1214, 1246], "solidli": 1187, "solut": [121, 208, 209, 257, 624, 636, 889, 902, 907, 908, 913, 924, 925, 926, 1121, 1122, 1124, 1133, 1135, 1185, 1195, 1200, 1227, 1247], "solv": [208, 209, 255, 624, 641, 889, 892, 893, 902, 908, 924, 925, 926, 1110, 1122, 1131, 1135, 1190, 1191, 1200, 1214, 1227], "solve_method": 926, "solver": [121, 208, 209, 907, 909, 913, 914, 924, 925, 1109, 1110, 1189, 1190, 1200, 1227], "some": [4, 5, 6, 7, 16, 26, 49, 65, 71, 150, 232, 238, 268, 296, 297, 298, 299, 300, 301, 310, 311, 332, 399, 411, 413, 422, 426, 427, 428, 452, 481, 484, 485, 505, 529, 531, 532, 533, 568, 624, 664, 670, 681, 683, 688, 691, 692, 703, 724, 728, 734, 736, 740, 742, 751, 764, 767, 772, 773, 780, 798, 799, 808, 816, 824, 914, 1079, 1081, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1110, 1112, 1114, 1117, 1119, 1121, 1125, 1126, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1144, 1145, 1152, 1153, 1158, 1159, 1170, 1176, 1179, 1180, 1182, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1224, 1227, 1228, 1229, 1230, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248], "some_funct": 1184, "some_kernel": 1221, "somebodi": 1119, "somehow": 1190, "someon": 1128, "someth": [339, 1104, 1107, 1110, 1117, 1122, 1127, 1136, 1137, 1152, 1180, 1185, 1188, 1190, 1192, 1193, 1195, 1199, 1200, 1205, 1206, 1208, 1216, 1218, 1221, 1223, 1227, 1233, 1234, 1246], "sometim": [72, 208, 564, 912, 958, 1110, 1122, 1123, 1124, 1130, 1131, 1133, 1135, 1136, 1170, 1185, 1188, 1189, 1193, 1194, 1198, 1202, 1205, 1212, 1223, 1224, 1227, 1232, 1238, 1248], "sometru": 1110, "somewhat": [1117, 1159, 1185, 1199, 1214], "somewher": [1214, 1223], "son": [606, 929, 1007], "sonnet": 1169, "soon": [5, 6, 1110, 1119, 1121, 1130, 1186, 1189, 1194, 1206, 1216, 1218, 1234, 1244], "sophist": [7, 1159, 1189, 1210], "sort": [68, 73, 99, 101, 122, 159, 160, 232, 247, 296, 297, 298, 299, 300, 301, 313, 409, 410, 587, 588, 613, 637, 681, 683, 688, 702, 703, 724, 747, 748, 751, 752, 763, 764, 773, 774, 781, 798, 799, 820, 821, 822, 823, 886, 906, 910, 1107, 1110, 1121, 1183, 1199, 1211], "sort_eig_v": 253, "sort_eigenvalu": [247, 1110], "sorted_arrai": 762, "sorted_indic": 122, "sorted_nod": 1107, "sorter": 748, "sought": [615, 1195], "sound": [1190, 1205, 1227], "sourc": [3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 49, 50, 51, 52, 55, 56, 57, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 390, 391, 394, 395, 396, 397, 398, 399, 407, 408, 409, 410, 411, 413, 414, 415, 417, 419, 422, 426, 427, 428, 429, 430, 431, 433, 438, 440, 441, 443, 444, 445, 452, 453, 454, 459, 460, 461, 463, 464, 465, 466, 467, 468, 471, 472, 473, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 493, 495, 496, 497, 498, 499, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 559, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 577, 579, 580, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 603, 605, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 649, 650, 651, 656, 658, 659, 660, 662, 663, 664, 666, 669, 670, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 718, 720, 721, 722, 723, 724, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 748, 749, 751, 752, 755, 758, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1109, 1110, 1112, 1113, 1117, 1122, 1128, 1144, 1145, 1146, 1150, 1151, 1152, 1153, 1158, 1165, 1166, 1175, 1176, 1183, 1185, 1195, 1200, 1202, 1208, 1211, 1212, 1214, 1227, 1233, 1236, 1242], "source_fil": 0, "source_index": [277, 1211], "source_info": [1208, 1233], "source_info_util": [1110, 1202, 1208, 1233, 1236], "source_lin": 0, "sp": [895, 1213], "sp_mat": 94, "space": [144, 149, 331, 399, 510, 512, 524, 527, 557, 559, 568, 644, 656, 750, 781, 854, 861, 886, 926, 958, 1010, 1099, 1109, 1110, 1205, 1216, 1218, 1219, 1220, 1227], "spam": [1110, 1134, 1243], "span": [828, 829, 1175, 1180, 1198, 1201, 1219], "sparr": 91, "spars": [380, 577, 664, 665, 696, 1110, 1147, 1195, 1219], "sparse_format": [117, 118], "sparseefficiencyerror": 104, "sparsif": 123, "sparsiti": [91, 119, 125, 1159], "spatial": [146, 147, 195, 196, 197, 198, 199, 364, 1110, 1166, 1207, 1211], "spatial_dim": 147, "spawn": 1226, "speak": [1122, 1185, 1195, 1218], "spec": [0, 1118, 1146, 1151, 1158, 1175, 1180, 1185, 1186, 1211, 1216, 1244], "special": [7, 9, 35, 66, 281, 292, 295, 353, 354, 355, 356, 357, 358, 369, 446, 576, 679, 681, 683, 725, 728, 745, 816, 926, 1080, 1082, 1100, 1104, 1107, 1110, 1115, 1122, 1123, 1131, 1136, 1152, 1158, 1173, 1176, 1182, 1185, 1186, 1190, 1191, 1192, 1194, 1195, 1199, 1202, 1203, 1204, 1205, 1208, 1209, 1213, 1214, 1216, 1219, 1224, 1227, 1233, 1236, 1237, 1238, 1243, 1247], "special2": 1186, "special_flatten": [1224, 1247], "special_funct": 929, "special_unflatten": [1224, 1247], "specif": [2, 7, 26, 34, 117, 118, 120, 150, 194, 195, 196, 198, 230, 231, 291, 326, 341, 405, 424, 480, 490, 530, 546, 549, 566, 568, 715, 809, 816, 824, 896, 913, 914, 953, 1101, 1103, 1104, 1110, 1112, 1115, 1119, 1120, 1121, 1123, 1127, 1128, 1131, 1133, 1134, 1135, 1145, 1146, 1153, 1158, 1159, 1173, 1175, 1179, 1182, 1183, 1185, 1188, 1189, 1190, 1194, 1196, 1198, 1199, 1200, 1203, 1205, 1206, 1209, 1210, 1212, 1216, 1218, 1219, 1220, 1221, 1224, 1227, 1234, 1237, 1242, 1243, 1244, 1247], "specifi": [0, 7, 13, 31, 32, 35, 38, 67, 68, 69, 70, 71, 87, 92, 97, 98, 100, 101, 104, 109, 110, 111, 113, 114, 115, 117, 118, 122, 137, 141, 142, 144, 145, 147, 148, 149, 150, 159, 160, 196, 197, 214, 216, 217, 231, 238, 289, 291, 295, 311, 312, 323, 326, 340, 341, 342, 366, 390, 395, 396, 397, 399, 407, 408, 409, 410, 411, 413, 429, 431, 446, 447, 452, 453, 464, 468, 472, 475, 476, 480, 485, 490, 496, 497, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 529, 531, 538, 551, 557, 559, 566, 579, 587, 593, 613, 620, 622, 631, 644, 658, 662, 663, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 692, 703, 709, 717, 718, 720, 721, 723, 724, 725, 728, 729, 733, 735, 740, 742, 747, 750, 751, 761, 762, 768, 769, 771, 773, 774, 777, 779, 780, 781, 798, 799, 804, 809, 810, 811, 816, 824, 837, 838, 839, 841, 842, 843, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 870, 872, 873, 875, 876, 877, 878, 879, 881, 883, 885, 886, 892, 894, 896, 903, 914, 919, 921, 922, 923, 924, 925, 926, 928, 1010, 1014, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1099, 1101, 1102, 1110, 1114, 1119, 1122, 1131, 1132, 1133, 1134, 1135, 1151, 1152, 1158, 1159, 1170, 1175, 1176, 1182, 1185, 1190, 1192, 1194, 1195, 1196, 1199, 1200, 1202, 1203, 1207, 1209, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1227, 1231, 1236, 1237, 1238, 1243, 1244, 1247, 1248], "spectra": [430, 440, 562, 563, 919, 923], "spectral": [919, 923, 1110], "spectrum": [512, 513, 919, 922, 923], "speech": 882, "speed": [26, 567, 588, 595, 630, 751, 752, 909, 1110, 1119, 1122, 1125, 1128, 1131, 1137, 1158, 1166, 1186, 1190, 1198, 1203, 1209, 1211, 1219, 1238, 1242, 1246, 1247], "speedup": [1184, 1203, 1209, 1219, 1242], "spell": 634, "spelt": 552, "spend": [1131, 1221, 1238], "spent": [1125, 1221], "sph_harm": [1110, 1189], "spheric": [928, 957, 965], "sphinx": 1185, "sphinx_autodoc_typehints_typ": 351, "spill": 1219, "spiral": 1110, "spivak": [1205, 1230], "spline": 912, "split": [72, 73, 136, 137, 141, 142, 157, 195, 295, 339, 346, 417, 492, 569, 814, 838, 853, 858, 1110, 1121, 1134, 1136, 1137, 1173, 1187, 1191, 1193, 1194, 1196, 1199, 1201, 1203, 1205, 1209, 1213, 1214, 1218, 1221, 1227, 1230, 1242, 1243, 1244, 1246], "split_axi": [158, 1211], "split_half": 1107, "split_list": 1107, "splitlin": 1107, "splittabl": [1191, 1199], "spmd": [67, 69, 71, 159, 160, 331, 824, 1103, 1107, 1110, 1123, 1136, 1151, 1158, 1186, 1198, 1218, 1244], "spmd_axis_nam": [71, 1101, 1110, 1208, 1233], "spmd_pipelin": 1211, "spoiler": 1188, "spot": 1187, "spread": [684, 686, 769, 810, 1136, 1158, 1198], "spreadsheet": 613, "springer": 559, "sq_err": 1211, "sqrt": [184, 294, 345, 364, 381, 382, 385, 386, 467, 567, 571, 863, 866, 879, 909, 935, 953, 959, 965, 1114, 1122, 1135, 1200, 1201, 1205, 1211, 1227, 1230, 1247], "sqrtm": 1110, "squar": [18, 120, 160, 245, 246, 247, 248, 255, 294, 314, 361, 567, 573, 614, 615, 619, 620, 623, 624, 627, 635, 640, 641, 657, 707, 711, 765, 785, 789, 809, 891, 894, 899, 907, 909, 923, 926, 1110, 1130, 1136, 1137, 1182, 1189, 1200, 1202, 1205, 1227, 1236, 1237, 1246], "square_add_lax": [1202, 1236], "square_add_numpi": [1202, 1236], "square_add_prim": [1202, 1236], "squared_error_with_aux": 1130, "squareplu": [1110, 1122], "squash": 1112, "squeez": [100, 289, 1201, 1219, 1221], "squeeze_p": 1159, "sram": 1218, "src": [30, 239, 1107, 1208, 1211, 1233], "src_devic": 38, "sreg": 1221, "ssh": 1223, "stabil": [822, 823, 926, 957, 1145, 1185], "stabl": [208, 291, 312, 369, 410, 613, 711, 762, 924, 955, 1105, 1110, 1166, 1189, 1190, 1196, 1200, 1201, 1227], "stablehlo": [0, 1104, 1110, 1176, 1183, 1186, 1196, 1202, 1212, 1216, 1236], "stack": [16, 31, 32, 78, 157, 262, 295, 342, 446, 454, 493, 570, 626, 627, 628, 629, 633, 634, 637, 815, 831, 837, 891, 1107, 1110, 1116, 1117, 1120, 1121, 1130, 1131, 1132, 1133, 1134, 1136, 1152, 1159, 1186, 1190, 1191, 1193, 1199, 1202, 1206, 1208, 1210, 1211, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1242, 1243], "stackedbias": 1206, "stackedweight": 1206, "stacklevel": 1199, "stackoverflow": 1108, "stage": [8, 16, 17, 19, 49, 55, 56, 341, 342, 1110, 1114, 1117, 1119, 1121, 1129, 1140, 1152, 1186, 1187, 1188, 1190, 1193, 1201, 1204, 1206, 1211, 1232, 1234], "stage_param": 1211, "stageabl": 17, "stai": [1122, 1130, 1136, 1188, 1219, 1224, 1247], "staircas": 1145, "stakehold": 1185, "stand": [120, 1122, 1182, 1185, 1186, 1195, 1212, 1237, 1239, 1243], "standalon": [1109, 1110], "standard": [7, 9, 29, 30, 31, 32, 50, 71, 101, 120, 144, 145, 150, 151, 332, 333, 340, 359, 362, 364, 405, 424, 527, 576, 684, 745, 769, 780, 824, 854, 861, 863, 866, 877, 892, 965, 1049, 1075, 1099, 1100, 1101, 1110, 1112, 1115, 1117, 1121, 1122, 1123, 1131, 1135, 1148, 1153, 1158, 1159, 1170, 1185, 1189, 1190, 1194, 1195, 1198, 1200, 1205, 1212, 1214, 1216, 1222, 1226, 1227, 1230, 1248], "standard_abstract_ev": 1110, "standard_devi": [684, 769], "standard_naryop": 1110, "standard_primit": 1110, "standard_unop": 1110, "standin": 1123, "standpoint": 1185, "start": [0, 98, 127, 188, 214, 215, 216, 218, 219, 247, 310, 311, 399, 485, 497, 510, 514, 524, 547, 557, 644, 656, 665, 682, 685, 696, 720, 725, 740, 771, 833, 834, 835, 836, 922, 924, 925, 926, 1107, 1110, 1118, 1120, 1124, 1126, 1128, 1136, 1137, 1152, 1165, 1166, 1182, 1183, 1185, 1187, 1188, 1193, 1194, 1195, 1198, 1199, 1200, 1202, 1207, 1208, 1214, 1216, 1218, 1219, 1221, 1223, 1227, 1233, 1235, 1236, 1237, 1242, 1246], "start_dimens": 188, "start_index": [216, 219, 238, 311], "start_index_map": 1166, "start_indic": [90, 93, 98, 215, 218, 232, 296, 298, 299, 300, 301, 310, 1166, 1185], "start_serv": [1110, 1223], "start_tim": [1203, 1209], "start_trac": [835, 1110, 1223], "starter": 1195, "startup": [1110, 1199], "stash": [1107, 1190], "stat": [1110, 1207, 1213], "stat_length": 701, "state": [165, 292, 295, 831, 1107, 1108, 1109, 1110, 1122, 1127, 1130, 1133, 1134, 1136, 1139, 1145, 1150, 1173, 1185, 1189, 1190, 1191, 1193, 1194, 1208, 1211, 1213, 1214, 1216, 1227, 1233, 1235], "stateful_method": [1137, 1246], "statefulclass": [1137, 1246], "stateless": [291, 1121, 1137, 1246], "stateless_method": [1137, 1246], "statelessclass": [1137, 1246], "statement": [7, 66, 719, 813, 1117, 1121, 1122, 1180, 1185, 1193, 1195, 1208, 1212, 1233], "statevector": 1199, "static": [0, 3, 7, 50, 90, 127, 130, 150, 215, 216, 229, 325, 409, 411, 431, 480, 529, 692, 702, 751, 798, 799, 816, 820, 821, 822, 823, 824, 1110, 1112, 1117, 1121, 1123, 1131, 1151, 1158, 1170, 1179, 1182, 1184, 1186, 1189, 1199, 1211, 1218, 1224, 1232, 1237], "static_arg": 0, "static_argnam": [150, 159, 160, 1110, 1121, 1131, 1158, 1216, 1238], "static_argnum": [0, 7, 150, 340, 820, 821, 822, 823, 1102, 1104, 1110, 1121, 1122, 1131, 1151, 1158, 1184, 1190, 1193, 1199, 1202, 1212, 1213, 1236, 1238], "static_broadcast_argnum": 1110, "static_broadcasted_argnum": [824, 1122], "static_cast": 200, "static_idx": [1199, 1212], "staticmethod": [0, 1107], "staticstr": 1135, "stationeri": 572, "statist": [650, 681, 683, 701, 703, 724, 853, 958, 1007, 1029, 1049, 1110, 1137, 1189, 1246], "statistician": [681, 683, 703, 724], "statistiqu": 1007, "statu": [913, 1134, 1150, 1243], "stax": [1110, 1144, 1191], "stb": [1208, 1233], "std": [0, 527, 1205, 1210, 1212, 1227, 1238, 1242], "stddev": [359, 362], "stdin": 1122, "stdout": [825, 1116, 1117, 1152, 1208, 1233], "stebz": 893, "steepest": 1130, "stegun": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 469, 501, 572, 646, 647, 648, 760, 775, 776, 935], "stem": [1122, 1191], "step": [251, 399, 497, 564, 644, 656, 665, 696, 715, 725, 828, 903, 924, 925, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1104, 1107, 1110, 1112, 1117, 1119, 1122, 1130, 1131, 1133, 1134, 1136, 1137, 1145, 1183, 1187, 1188, 1190, 1191, 1200, 1201, 1205, 1211, 1214, 1219, 1221, 1223, 1238, 1246], "step_num": 828, "step_siz": [1145, 1201, 1203, 1209, 1213], "stephen": [934, 952, 963], "steptraceannot": 1110, "steptracecontext": 1110, "sterbenz": [1133, 1227], "steven": [935, 936], "stft": [921, 1110], "stick": 1189, "sticki": [494, 1107, 1122], "still": [34, 71, 429, 464, 644, 664, 723, 824, 1076, 1104, 1107, 1110, 1114, 1122, 1127, 1130, 1131, 1136, 1151, 1152, 1158, 1173, 1180, 1183, 1184, 1187, 1188, 1191, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1205, 1210, 1212, 1214, 1216, 1218, 1219, 1223, 1227, 1238, 1248], "stochast": [1145, 1199, 1247], "stone": 567, "stop": [317, 399, 557, 644, 656, 665, 696, 725, 835, 924, 925, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1152, 1195, 1199, 1208, 1233], "stop_dimens": 188, "stop_outfeed_receiv": 1152, "stop_serv": 1223, "stop_trac": [834, 1110, 1223], "stopiter": [1208, 1233], "storag": [104, 1110, 1127, 1159, 1201, 1222, 1242, 1244], "store": [7, 9, 71, 80, 104, 107, 127, 150, 333, 447, 528, 557, 598, 599, 644, 645, 650, 651, 652, 653, 654, 655, 656, 658, 746, 747, 824, 901, 924, 925, 926, 927, 1079, 1081, 1102, 1107, 1110, 1121, 1131, 1145, 1158, 1159, 1189, 1199, 1200, 1201, 1204, 1205, 1206, 1211, 1212, 1214, 1219, 1221, 1222, 1224, 1227, 1234, 1238, 1239, 1244, 1247], "store_histori": [1208, 1233], "stori": [1205, 1216, 1227], "storm": 1216, "str": [16, 19, 24, 28, 33, 35, 42, 55, 66, 71, 74, 79, 92, 93, 104, 107, 109, 113, 117, 118, 136, 146, 147, 150, 161, 162, 170, 174, 183, 193, 195, 196, 197, 198, 199, 200, 212, 213, 227, 230, 231, 232, 241, 287, 296, 297, 298, 299, 300, 301, 329, 330, 331, 335, 336, 341, 342, 416, 422, 461, 464, 468, 477, 490, 493, 496, 497, 552, 558, 565, 567, 570, 579, 593, 626, 635, 643, 645, 658, 681, 683, 688, 701, 703, 711, 721, 724, 746, 747, 748, 750, 768, 774, 777, 786, 792, 811, 812, 815, 824, 825, 826, 827, 828, 829, 830, 831, 832, 838, 839, 841, 842, 843, 845, 846, 849, 850, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 895, 903, 907, 910, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 1007, 1066, 1098, 1102, 1106, 1107, 1117, 1121, 1134, 1135, 1158, 1166, 1175, 1176, 1199, 1201, 1202, 1206, 1208, 1211, 1212, 1213, 1233, 1234, 1236, 1238, 1243, 1247], "str_": 750, "str_kind": 750, "str_short": 1107, "straight_through_f": [1133, 1227], "straightforward": [1107, 1122, 1130, 1189, 1191, 1195, 1205, 1208, 1214, 1216, 1230, 1233], "strang": [615, 619, 620, 633, 636, 707, 1185, 1195], "strategi": [7, 71, 1128, 1131, 1183, 1205, 1206, 1211, 1214, 1218, 1221, 1227, 1234, 1238, 1244], "strawperson": 1188, "stream": [0, 38, 746, 853, 1136, 1173, 1183, 1191, 1194, 1208, 1219, 1223, 1233], "stream_executor": [1110, 1223], "strength": [1185, 1232], "stress": 1107, "stretch": 1190, "strict": [326, 1131, 1183, 1185, 1186, 1188, 1191, 1212], "stricter": [1185, 1212], "strictest": 1185, "strictli": [268, 691, 707, 1130, 1131, 1238], "stride": [98, 193, 195, 196, 197, 198, 199, 238, 310, 311, 728, 1146, 1185], "strike": 1195, "string": [19, 28, 33, 55, 56, 57, 66, 68, 71, 104, 117, 118, 146, 147, 150, 193, 194, 195, 196, 197, 199, 336, 416, 418, 446, 447, 451, 471, 494, 552, 567, 593, 645, 701, 725, 746, 747, 750, 773, 786, 824, 825, 827, 831, 838, 858, 907, 915, 916, 917, 918, 919, 920, 921, 922, 923, 1078, 1102, 1105, 1107, 1110, 1117, 1119, 1135, 1136, 1158, 1175, 1176, 1179, 1185, 1192, 1200, 1214, 1225, 1227, 1247, 1248], "string_repr": 497, "stringifi": 68, "strip": [0, 741, 1185], "strip_zero": [741, 1110], "strive": [1134, 1243], "strong": 1189, "strongli": [556, 778, 1127, 1133, 1248], "struct": [0, 494, 1107], "structur": [4, 32, 67, 70, 71, 143, 145, 150, 151, 165, 208, 209, 229, 295, 325, 332, 340, 447, 494, 750, 907, 924, 925, 926, 1068, 1069, 1070, 1073, 1074, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1101, 1102, 1104, 1122, 1128, 1130, 1135, 1145, 1153, 1158, 1166, 1176, 1177, 1178, 1182, 1185, 1187, 1189, 1197, 1200, 1204, 1205, 1214, 1224, 1227, 1230, 1237, 1239, 1247], "stub": 1110, "stuck": 1152, "student": 875, "studi": [1173, 1205, 1227], "studio": [1112, 1119, 1127], "sturg": 567, "style": [71, 232, 419, 692, 701, 728, 729, 813, 819, 1110, 1126, 1130, 1173, 1185, 1186, 1187, 1190, 1195, 1199, 1214, 1216, 1218, 1239, 1242, 1243], "sub": [341, 390, 392, 393, 395, 417, 471, 480, 485, 492, 569, 641, 660, 662, 666, 677, 678, 679, 680, 681, 683, 684, 685, 720, 722, 764, 769, 771, 779, 782, 810, 814, 897, 1136, 1158, 1182, 1194, 1206, 1212, 1219, 1224, 1234, 1237, 1239, 1247], "sub_kei": 1213, "subarrai": [238, 480, 577], "subc": 1107, "subclass": [2, 33, 336, 394, 419, 816, 1107, 1135, 1175, 1185, 1194, 1247], "subcomput": [341, 1221], "subcub": 77, "subdiagon": [248, 256], "subdirectori": [1119, 1196], "subdivid": 494, "subdtyp": 881, "subexpress": [7, 1188, 1191], "subfun": [1208, 1233], "subfunct": [1199, 1212], "subgradi": 1145, "subjaxpr": 150, "subject": [83, 197, 1159, 1173, 1216, 1219], "subkei": [1134, 1173, 1193, 1194, 1199, 1205, 1227, 1230, 1243], "subkey1": [1205, 1227], "subkey2": [1205, 1227], "sublan": 1219, "sublanguag": 1193, "sublift": 1212, "submesh": 72, "submiss": 1184, "submit": [1112, 1119, 1128], "submodul": [1110, 1122, 1179, 1185, 1189, 1196], "subnorm": 527, "suboptim": 1186, "subpackag": 1247, "subplot": [1195, 1207], "subroutin": 1191, "subscrib": 1223, "subscriber_": 1223, "subscript": [496, 497], "subsequ": [1070, 1088, 1104, 1122, 1131, 1136, 1137, 1152, 1183, 1199, 1206, 1208, 1219, 1233, 1234, 1238, 1246], "subset": [159, 160, 767, 824, 915, 916, 917, 918, 920, 1110, 1133, 1185, 1186, 1198, 1210, 1211, 1219, 1227], "subset_by_index": [247, 254, 637, 892], "subspac": [119, 120, 125, 926], "substanti": 1119, "substitut": [715, 1130], "substrat": 1216, "subsum": [67, 68, 69, 1110, 1152, 1180, 1188, 1195], "subtl": [1110, 1122, 1183, 1185, 1194, 1199], "subtleti": [452, 1121], "subtli": 1122, "subtract": [318, 369, 382, 701, 714, 955, 1102, 1212], "subtrahend": 714, "subtre": [71, 150, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1145, 1158], "subtree_def": 1145, "subtyp": 728, "subunit": 1219, "succe": [1202, 1236], "succeed": 913, "success": [842, 856, 913, 1137, 1189, 1216, 1246], "successfulli": [816, 1127], "succinctli": [1185, 1202, 1236], "sudo": [1119, 1223], "suffer": 1211, "suffic": [1187, 1200, 1227], "suffici": [1110, 1127, 1185, 1196, 1198, 1200, 1207, 1227], "suffix": [0, 1219, 1226], "sugar": [813, 1110, 1199, 1212], "suggest": [229, 485, 556, 567, 1110, 1128, 1151, 1185, 1189, 1190], "suit": [1127, 1185, 1189, 1248], "suitabl": [35, 71, 72, 132, 748, 774, 910, 1110, 1119, 1185, 1189], "sullivan": 707, "sum": [0, 49, 71, 80, 91, 96, 101, 165, 207, 279, 296, 297, 299, 300, 301, 369, 378, 389, 429, 464, 476, 490, 514, 565, 566, 568, 579, 615, 624, 640, 641, 650, 651, 676, 678, 682, 685, 708, 711, 733, 777, 779, 820, 821, 822, 823, 824, 915, 917, 953, 955, 1030, 1031, 1107, 1110, 1121, 1130, 1132, 1134, 1136, 1148, 1159, 1179, 1182, 1186, 1189, 1190, 1199, 1200, 1201, 1205, 1206, 1210, 1211, 1213, 1214, 1219, 1221, 1227, 1230, 1231, 1234, 1237, 1242, 1243, 1244], "sum_": [849, 947, 948, 950, 953], "sum_along_axi": 771, "sum_along_diagon": 779, "sum_in_shard": 1244, "sum_j": [368, 378], "sum_kernel": 1221, "sum_logist": [1210, 1242], "sum_n": 468, "sum_of_posit": 1121, "sum_of_squar": 1130, "sum_of_squares_dx": 1130, "sum_of_weight": 429, "sum_p": 1107, "sum_squared_error": 1130, "sum_squared_error_dx": 1130, "sum_two_arg": 1214, "summar": [681, 683, 703, 724, 750, 1107, 1173, 1185, 1188, 1195, 1205, 1215, 1227], "summari": [452, 707, 708, 709, 710, 711, 712, 713, 714, 715, 741, 750, 1116, 1122, 1130, 1173, 1176, 1189, 1196, 1197], "summaris": 750, "summat": [440, 496, 497, 1159, 1244], "summed_chunk": 1211, "summer": [1205, 1227], "sumpool": 1146, "super": [1203, 1208, 1233], "supercomput": [1214, 1219], "superdiagon": 256, "superset": 12, "supplement": 1216, "suppli": [14, 15, 528, 598, 599, 630, 701, 755, 907, 921, 924, 925, 965, 1104, 1109, 1189, 1221], "support": [0, 35, 38, 71, 87, 90, 103, 120, 145, 215, 229, 332, 410, 429, 464, 468, 490, 496, 503, 531, 552, 557, 567, 579, 587, 627, 644, 645, 656, 658, 663, 679, 703, 740, 762, 777, 811, 812, 813, 816, 820, 821, 822, 823, 824, 888, 889, 890, 891, 892, 894, 895, 897, 899, 900, 901, 902, 903, 904, 905, 907, 908, 910, 912, 914, 927, 935, 1029, 1048, 1049, 1107, 1108, 1110, 1111, 1114, 1119, 1121, 1122, 1125, 1130, 1132, 1134, 1135, 1136, 1148, 1158, 1159, 1173, 1176, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1195, 1199, 1202, 1205, 1208, 1210, 1212, 1215, 1216, 1218, 1220, 1221, 1222, 1224, 1227, 1231, 1233, 1236, 1237, 1242, 1243, 1246, 1247, 1248], "supported_shard": 1151, "supportsdtyp": [42, 92, 107, 109, 113, 117, 118, 161, 162, 174, 183, 193, 195, 198, 199, 200, 212, 213, 230, 231, 241, 422, 477, 493, 496, 593, 721, 812, 839, 841, 842, 843, 845, 846, 849, 850, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 1098], "suppos": [0, 35, 279, 452, 927, 1104, 1131, 1132, 1137, 1152, 1186, 1208, 1210, 1218, 1224, 1231, 1233, 1238, 1244, 1246], "suppress": [416, 418, 558, 750, 1122, 1188], "suppress_smal": [416, 418], "supremum": 1195, "sure": [847, 1112, 1119, 1122, 1127, 1128, 1131, 1158, 1175, 1188, 1190, 1198, 1201, 1202, 1205, 1221, 1222, 1223, 1224, 1227, 1230, 1236, 1238, 1247], "surfac": [1152, 1185, 1186, 1189, 1216], "surnam": 494, "surpris": [215, 1106, 1117, 1122, 1152, 1188, 1195, 1199, 1206, 1225, 1234], "surprisingli": [1106, 1191], "survei": 1207, "surviv": [976, 978, 984, 987, 990, 994, 996, 1004, 1006, 1024, 1028, 1037, 1040, 1043, 1055, 1057], "sussman": [1205, 1230], "sustain": 1189, "svd": [615, 628, 633, 865, 903, 1110], "svdresult": 637, "swap": [198, 250, 281, 464, 512, 1107, 1194], "swap_thread_local_state_disable_jit": 1212, "swiglu": 1186, "swish": [348, 349, 376], "swish2": 1186, "switch": [705, 711, 1110, 1122, 1159, 1182, 1184, 1186, 1188, 1194, 1199, 1201, 1205, 1206, 1227, 1234, 1237], "swoop": 1221, "sy": [0, 750, 1106, 1208, 1213, 1233], "sylvest": 909, "sym": 907, "sym_po": 1110, "symamd": 121, "symbol": [947, 961, 1110, 1119, 1187, 1190, 1223], "symbol_t": [1202, 1236], "symbolic_args_spec": 1110, "symbolic_shap": 1110, "symbolt": [1202, 1236], "symm": [916, 918], "symmetr": [208, 245, 247, 256, 519, 614, 619, 620, 622, 633, 637, 701, 892, 893, 907, 912, 916, 918, 926, 1032, 1033, 1110, 1205, 1227], "symmetri": [513, 518, 926], "symmetrize_input": [245, 247, 620], "symrcm": 121, "sync": [1112, 1128, 1136, 1224, 1247], "synchron": [1117, 1122, 1157, 1193, 1208, 1233, 1243], "synchronis": 1136, "synonym": 912, "syntact": [813, 1110, 1199, 1212], "syntax": [19, 214, 216, 296, 297, 298, 299, 300, 301, 310, 546, 576, 688, 745, 1107, 1185, 1188, 1212, 1216, 1237, 1239], "synthet": 1207, "system": [16, 25, 35, 36, 121, 209, 257, 434, 436, 464, 589, 606, 636, 831, 889, 902, 908, 924, 925, 926, 1107, 1110, 1119, 1122, 1127, 1133, 1173, 1183, 1185, 1187, 1190, 1195, 1198, 1199, 1200, 1204, 1205, 1214, 1216, 1224, 1226, 1227, 1230, 1248], "systemexit": [1208, 1233], "sz": [1186, 1211], "t": [0, 7, 14, 17, 18, 19, 55, 71, 72, 73, 120, 123, 160, 295, 317, 322, 325, 339, 430, 472, 485, 562, 563, 621, 628, 715, 736, 780, 781, 782, 824, 829, 830, 834, 835, 836, 865, 886, 892, 902, 905, 906, 908, 921, 922, 930, 931, 935, 938, 939, 941, 943, 944, 945, 959, 964, 1071, 1075, 1079, 1081, 1090, 1106, 1107, 1110, 1112, 1114, 1117, 1119, 1122, 1125, 1128, 1130, 1133, 1134, 1135, 1137, 1152, 1159, 1173, 1180, 1183, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1223, 1224, 1227, 1230, 1232, 1233, 1234, 1236, 1242, 1243, 1246, 1247], "t0": 1183, "t1": [1107, 1183, 1195], "t10k": 1203, "t2": [1107, 1195], "t2v": 1107, "t5x": 1184, "t_jaxpr1": 1107, "t_jaxpr2": 1107, "t_nre": 1107, "t_out_uk": 1107, "t_ref": 1107, "ta": 1190, "tab": 1120, "tabl": [501, 572, 631, 740, 935, 1116, 1127, 1186, 1188, 1204, 1206, 1232, 1234, 1248], "tag": [136, 1107, 1119], "tagless": 1107, "tail": [972, 984, 989, 1024, 1027, 1037, 1042, 1061, 1199, 1212], "take": [0, 7, 9, 18, 35, 56, 71, 77, 119, 125, 128, 209, 255, 338, 372, 373, 398, 454, 459, 551, 567, 605, 657, 705, 728, 734, 736, 750, 758, 774, 808, 813, 836, 837, 883, 885, 892, 895, 919, 921, 922, 923, 953, 1007, 1070, 1079, 1081, 1088, 1089, 1104, 1105, 1107, 1110, 1119, 1120, 1122, 1123, 1130, 1131, 1134, 1135, 1136, 1144, 1146, 1150, 1151, 1152, 1169, 1170, 1182, 1183, 1185, 1186, 1188, 1189, 1192, 1195, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1226, 1233, 1234, 1236, 1237, 1238, 1247], "take_along_axi": [409, 410, 1110], "taken": [71, 232, 288, 303, 369, 429, 452, 485, 486, 495, 497, 513, 519, 521, 523, 525, 548, 550, 564, 662, 678, 736, 749, 779, 782, 811, 816, 892, 955, 1070, 1088, 1104, 1110, 1120, 1134, 1216, 1224, 1243], "talk": [1183, 1219, 1221], "tall": [526, 1205, 1227], "talli": 566, "tan": [404, 423, 776, 1202, 1236], "tandem": 1122, "tangent": [7, 14, 151, 166, 167, 168, 209, 320, 321, 333, 404, 405, 406, 423, 424, 425, 775, 776, 1107, 1110, 1152, 1190, 1200, 1202, 1205, 1206, 1208, 1227, 1233, 1234, 1236], "tangent_av": [1208, 1233], "tangent_out": [14, 1107, 1200, 1208, 1227, 1233], "tangent_pvals_in": 1107, "tangent_solv": 209, "tangenti": 1107, "tangents_flat": 1107, "tangents_in": [1107, 1208, 1233], "tangents_in_flat": 1107, "tangents_out": [151, 1107], "tangents_out_flat": 1107, "tanh": [50, 144, 345, 350, 370, 1110, 1159, 1204, 1205, 1219, 1227, 1230], "tanh_p": 1204, "tao": [1200, 1227], "tap": [66, 67, 68, 69, 1110, 1152], "tap_func": 69, "tap_with_devic": [68, 69, 1152], "taper": [430, 440, 562, 563, 606], "target": [0, 9, 86, 96, 159, 160, 180, 200, 723, 733, 1104, 1110, 1119, 1123, 1133, 1186, 1188, 1195, 1199, 1201, 1203, 1205, 1209, 1211, 1214, 1216, 1227, 1230], "target_class": [1203, 1209], "target_cpu_featur": 1110, "target_shap": 1107, "task": [1107, 1190, 1219, 1222], "tassp": [882, 921, 922], "tast": [1210, 1242], "tau": [248, 249, 256, 634, 904], "tautolog": 1136, "taylor": 1153, "tb": [1202, 1223, 1236], "td": [1133, 1227], "td_loss": [1133, 1227], "td_updat": [1133, 1227], "teach": [0, 1122, 1136], "team": [1127, 1185, 1189, 1193], "techdoc": 628, "technic": [165, 1130, 1183, 1196, 1211], "techniqu": [953, 1123, 1133, 1136, 1186, 1205, 1210, 1227, 1242], "ted": [18, 1107, 1115, 1117, 1183, 1201], "tediou": 1195, "tee": 1223, "teeth": [1116, 1199], "tell": [0, 341, 342, 1121, 1131, 1135, 1136, 1150, 1152, 1180, 1188, 1193, 1199, 1202, 1216, 1224, 1238], "temp": [1182, 1237], "temp_shard_arg": 1212, "tempfil": [746, 747], "tempor": [1133, 1227], "temporari": [1110, 1128, 1185, 1193, 1212, 1223, 1238], "temporarili": [63, 64, 750, 1107, 1110, 1122, 1180, 1186, 1193, 1221], "temporaryfil": [746, 747], "tempt": [1122, 1189], "ten": [1122, 1219, 1221], "tend": [748, 1007, 1122, 1131, 1189, 1206, 1234, 1238], "tendenc": [1195, 1199], "tensor": [0, 37, 38, 339, 364, 371, 497, 640, 641, 777, 1104, 1123, 1130, 1136, 1186, 1202, 1207, 1209, 1212, 1236], "tensorboard": [341, 342, 828, 830, 833, 834, 836, 1110, 1120], "tensorcor": [1218, 1221], "tensordot": [213, 640, 641, 1205, 1227], "tensorfloat32": [26, 1166], "tensorflow": [13, 195, 196, 197, 198, 291, 341, 342, 820, 821, 822, 823, 833, 1103, 1110, 1122, 1123, 1124, 1130, 1207, 1214, 1223], "tensorflow_dataset": 1209, "tensorflow_prob": 1189, "term": [229, 262, 333, 440, 497, 514, 515, 516, 519, 712, 715, 813, 929, 1107, 1110, 1121, 1131, 1173, 1182, 1185, 1187, 1189, 1190, 1191, 1193, 1195, 1199, 1200, 1202, 1205, 1208, 1211, 1212, 1218, 1219, 1224, 1227, 1233, 1236, 1237, 1238], "termcolor": [1128, 1201], "termin": [251, 889, 897, 900, 903, 905, 914, 926, 1214], "terminologi": [1107, 1216], "test": [390, 395, 471, 591, 594, 595, 596, 597, 598, 599, 692, 719, 746, 861, 1076, 1107, 1110, 1127, 1128, 1133, 1136, 1152, 1173, 1183, 1184, 1185, 1190, 1193, 1194, 1196, 1199, 1203, 1209, 1214, 1216, 1218, 1221, 1227, 1242], "test2": 1128, "test_acc": [1203, 1209], "test_arg": 1152, "test_computation_follows_data": 1122, "test_data": [1203, 1209], "test_el": 595, "test_env": 1119, "test_imag": [1203, 1209], "test_label": [1203, 1209], "test_runn": 1128, "test_runner2": 1128, "test_tag_filt": 1119, "test_tap_jit_simpl": 1152, "test_tap_transform": 1152, "test_target": 1119, "test_util": [0, 1105, 1110, 1205, 1230], "testcas": 1110, "testing_stream": 1152, "testlogsumexp": 1112, "testpad": 1119, "teukolski": [430, 562, 563, 628], "text": [186, 416, 418, 468, 552, 559, 747, 934, 952, 963, 1102, 1104, 1119, 1131, 1152, 1176, 1195, 1206, 1234, 1238], "textrm": 1199, "texttt": 1153, "textwrap": 1201, "tf": [13, 1110, 1124, 1133, 1173, 1195, 1199, 1205, 1207, 1209, 1223, 1227], "tf1": [1124, 1190], "tf2": 1124, "tf_cpp_min_log_level": [1130, 1152], "tf_cpp_min_vlog_level": 1152, "tf_cpp_vmodul": 1152, "tf_dtype": 1195, "tf_dtype_to_cod": 1195, "tfd": 1209, "tfrt": 1110, "tfrt_cpu_0": 1211, "tfrt_cpu_1": 1211, "tfrt_cpu_2": 1211, "tfrt_cpu_3": 1211, "th": [77, 103, 118, 165, 409, 481, 484, 486, 506, 702, 703, 711, 724, 749, 780, 783, 787, 809, 892, 1125, 1153, 1186, 1221], "than": [7, 35, 82, 84, 101, 104, 150, 157, 198, 208, 232, 233, 234, 243, 261, 280, 288, 380, 397, 398, 399, 409, 411, 416, 418, 422, 426, 427, 428, 431, 440, 443, 445, 452, 453, 459, 464, 475, 476, 480, 481, 485, 492, 496, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 527, 529, 531, 532, 533, 552, 565, 567, 576, 590, 595, 624, 628, 633, 634, 635, 645, 663, 664, 670, 675, 676, 679, 681, 682, 683, 685, 688, 692, 702, 703, 706, 711, 720, 722, 723, 724, 728, 733, 734, 735, 740, 742, 745, 750, 751, 755, 764, 767, 768, 771, 772, 779, 780, 781, 791, 798, 799, 804, 808, 811, 813, 816, 824, 825, 847, 876, 886, 894, 920, 924, 925, 942, 1029, 1075, 1101, 1102, 1105, 1106, 1107, 1110, 1112, 1114, 1117, 1118, 1121, 1130, 1131, 1133, 1137, 1152, 1166, 1178, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1196, 1198, 1199, 1200, 1201, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1224, 1227, 1232, 1233, 1234, 1238, 1239, 1243, 1246, 1247, 1248], "thank": [1183, 1214], "theano": [1133, 1227], "thei": [0, 7, 9, 35, 71, 150, 296, 362, 389, 391, 405, 415, 424, 432, 435, 437, 438, 439, 443, 466, 488, 489, 500, 538, 541, 542, 543, 544, 555, 560, 561, 564, 571, 608, 609, 610, 611, 612, 621, 624, 645, 650, 651, 652, 654, 655, 661, 667, 668, 671, 688, 691, 693, 712, 717, 718, 728, 732, 737, 747, 770, 781, 790, 798, 808, 809, 813, 815, 824, 886, 924, 925, 1105, 1107, 1109, 1110, 1112, 1117, 1119, 1122, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1150, 1152, 1158, 1170, 1173, 1175, 1178, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1224, 1227, 1230, 1233, 1234, 1236, 1237, 1238, 1243, 1246, 1247], "them": [0, 7, 9, 17, 37, 38, 71, 123, 150, 158, 317, 409, 454, 546, 702, 747, 824, 1099, 1102, 1107, 1108, 1110, 1114, 1119, 1121, 1122, 1125, 1131, 1133, 1135, 1136, 1137, 1144, 1145, 1158, 1159, 1170, 1180, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1199, 1201, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1224, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1246, 1247], "theme": 1119, "themselv": [362, 733, 747, 1107, 1109, 1122, 1130, 1133, 1136, 1195, 1197, 1200, 1202, 1212, 1227, 1230, 1236], "theophil": 809, "theorem": [209, 1200, 1227], "theori": [464, 919, 958, 1007], "thereaft": [1210, 1242], "therefor": [17, 197, 549, 620, 622, 705, 747, 824, 837, 926, 1127, 1130, 1131, 1135, 1136, 1166, 1173, 1185, 1195, 1199, 1202, 1218, 1221, 1234, 1236, 1238], "thereof": [7, 9, 29, 30, 31, 32, 71, 145, 150, 191, 295, 325, 333, 340, 471, 824, 1100, 1101, 1158, 1189, 1218], "theta": [120, 957, 965, 1130, 1133, 1227], "theta_": 1130, "thi": [0, 7, 9, 14, 15, 16, 17, 18, 19, 26, 28, 30, 31, 32, 33, 34, 35, 38, 42, 43, 47, 48, 49, 50, 55, 56, 57, 66, 67, 69, 71, 72, 73, 76, 77, 82, 84, 97, 101, 104, 120, 127, 146, 147, 150, 157, 158, 159, 160, 191, 197, 198, 208, 209, 214, 215, 216, 229, 230, 231, 232, 238, 251, 257, 262, 268, 271, 272, 273, 277, 278, 279, 281, 292, 295, 296, 297, 298, 299, 300, 301, 311, 319, 325, 326, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 362, 364, 369, 380, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 448, 450, 452, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 493, 494, 495, 497, 500, 501, 502, 503, 504, 505, 507, 508, 509, 511, 512, 513, 514, 515, 516, 519, 521, 522, 525, 526, 527, 529, 531, 532, 533, 538, 540, 541, 542, 543, 544, 545, 547, 548, 550, 552, 555, 556, 557, 560, 561, 564, 566, 567, 570, 571, 576, 587, 589, 594, 595, 596, 597, 603, 605, 608, 609, 610, 611, 612, 615, 619, 620, 622, 624, 630, 631, 635, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 690, 691, 692, 693, 696, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 726, 727, 728, 731, 732, 734, 735, 737, 738, 740, 741, 742, 745, 747, 750, 754, 755, 757, 758, 760, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 780, 781, 790, 791, 792, 799, 805, 808, 810, 813, 815, 816, 824, 825, 827, 828, 829, 830, 834, 836, 847, 848, 854, 861, 886, 892, 893, 903, 909, 911, 912, 914, 919, 920, 921, 922, 926, 927, 928, 930, 931, 937, 953, 955, 957, 960, 964, 975, 986, 993, 999, 1003, 1007, 1011, 1016, 1021, 1025, 1029, 1032, 1033, 1039, 1044, 1048, 1049, 1050, 1054, 1059, 1062, 1064, 1075, 1076, 1080, 1081, 1082, 1089, 1101, 1102, 1103, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1145, 1146, 1148, 1150, 1151, 1152, 1154, 1158, 1159, 1160, 1166, 1169, 1170, 1173, 1175, 1176, 1178, 1179, 1180, 1182, 1183, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248], "thin": [19, 1080, 1082, 1117, 1166], "thing": [0, 46, 773, 1107, 1112, 1117, 1122, 1127, 1130, 1131, 1133, 1137, 1152, 1159, 1185, 1186, 1187, 1188, 1190, 1192, 1193, 1195, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1209, 1212, 1214, 1216, 1219, 1221, 1227, 1230, 1234, 1238, 1244, 1246], "think": [280, 630, 1107, 1108, 1122, 1130, 1137, 1170, 1182, 1183, 1185, 1186, 1190, 1192, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1205, 1208, 1211, 1216, 1218, 1219, 1221, 1227, 1237, 1246], "thinli": 1173, "third": [473, 492, 493, 570, 777, 815, 906, 1110, 1185, 1195, 1199, 1202, 1211, 1219, 1236], "third_parti": 1180, "thod": [1199, 1212], "thon": 1212, "thorough": [1200, 1206, 1227, 1234], "those": [7, 34, 49, 50, 66, 71, 229, 332, 340, 364, 453, 467, 472, 480, 627, 637, 710, 712, 824, 912, 915, 916, 917, 918, 920, 1048, 1101, 1102, 1107, 1110, 1112, 1114, 1117, 1122, 1127, 1128, 1136, 1152, 1158, 1166, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1192, 1193, 1195, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1211, 1218, 1219, 1221, 1227, 1234, 1236, 1237, 1239, 1244, 1248], "though": [431, 827, 1104, 1107, 1110, 1131, 1170, 1182, 1183, 1185, 1186, 1188, 1190, 1191, 1195, 1197, 1200, 1201, 1205, 1206, 1208, 1211, 1212, 1214, 1216, 1219, 1227, 1233, 1234, 1237, 1238], "thought": [824, 1185, 1186, 1187, 1195, 1198, 1205, 1214, 1227, 1244, 1248], "thousand": 1122, "thread": [0, 30, 66, 1066, 1110, 1111, 1114, 1117, 1137, 1152, 1175, 1183, 1191, 1199, 1218, 1221, 1226, 1246], "threadid": 1216, "three": [197, 428, 440, 681, 683, 703, 724, 799, 816, 1105, 1110, 1119, 1121, 1122, 1134, 1169, 1180, 1185, 1187, 1189, 1195, 1199, 1202, 1205, 1208, 1210, 1216, 1219, 1227, 1233, 1236, 1243, 1248], "threefri": [140, 1173, 1191, 1199], "threefry2x32": [139, 141, 838, 858, 1110, 1173, 1194], "threefry2x32_kei": 1110, "threefry2x32_p": 1110, "threefry_2x32": [1110, 1187], "threefry_fold_in": 141, "threefry_random_bit": 141, "threefry_se": 141, "threefry_split": 141, "threshold": [68, 558, 628, 750, 1125], "through": [0, 56, 57, 124, 197, 208, 390, 392, 393, 395, 405, 424, 605, 657, 660, 662, 666, 677, 678, 679, 680, 681, 683, 684, 685, 720, 722, 769, 771, 810, 924, 925, 938, 1048, 1107, 1109, 1110, 1112, 1114, 1117, 1121, 1122, 1130, 1131, 1135, 1136, 1151, 1153, 1159, 1180, 1182, 1184, 1186, 1190, 1191, 1192, 1193, 1199, 1200, 1204, 1205, 1210, 1212, 1214, 1216, 1221, 1224, 1230, 1237, 1238, 1242, 1247], "throughout": [1115, 1185, 1189, 1214], "throughput": 1186, "throw": [55, 56, 57, 1114, 1115, 1134, 1199], "thrown": [1110, 1114, 1199], "thu": [0, 7, 56, 145, 231, 280, 452, 471, 526, 548, 550, 645, 706, 723, 778, 903, 1107, 1130, 1133, 1135, 1136, 1153, 1183, 1185, 1186, 1188, 1190, 1191, 1199, 1200, 1204, 1208, 1211, 1216, 1218, 1227, 1230, 1233, 1247], "thumb": [1130, 1131, 1134, 1219, 1232, 1238, 1243], "thunk": [1107, 1190], "ti": 1048, "tie_in": 1110, "tier": 1187, "tight": [1184, 1193], "tighten": [1110, 1192], "tile": [78, 157, 158, 280, 1110, 1120, 1185, 1216, 1219], "tiling_method": 1212, "time": [7, 18, 27, 35, 49, 55, 57, 71, 150, 229, 265, 292, 295, 325, 333, 337, 341, 342, 430, 435, 438, 440, 464, 472, 486, 509, 511, 515, 516, 521, 527, 531, 562, 563, 606, 610, 624, 701, 707, 715, 737, 742, 748, 778, 799, 824, 834, 836, 837, 903, 919, 921, 922, 923, 926, 928, 1101, 1105, 1106, 1107, 1108, 1110, 1114, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1127, 1128, 1130, 1133, 1136, 1139, 1152, 1158, 1170, 1176, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1199, 1201, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1239, 1240, 1241], "time_axi": 921, "timedelta": [750, 928], "timedelta64": [486, 750], "timeit": [1122, 1130, 1131, 1133, 1201, 1205, 1210, 1212, 1227, 1238, 1242], "timelin": [828, 829, 830, 1223], "timeout": [35, 1203], "tini": [268, 527, 691, 1152, 1203], "tip": [1127, 1130, 1196, 1249], "tisseur": 894, "titl": [1195, 1197, 1202, 1221, 1236], "tl": [1114, 1115, 1116, 1117, 1127, 1232, 1234], "tldr": [1173, 1191], "tm": 544, "tmp": [0, 1128, 1199, 1202, 1203, 1205, 1207, 1209, 1212, 1222, 1223, 1227, 1234, 1236, 1238, 1246], "to_appli": [0, 1102], "to_begin": 495, "to_end": 495, "to_html": 1195, "to_it": 1107, "to_iter": 1107, "to_jaxpr": [1199, 1208, 1212, 1233, 1238], "to_pi": [1110, 1199], "to_str": [0, 1151], "todai": [1186, 1187, 1189, 1219], "todens": [80, 104, 1159], "todo": [1107, 1194, 1199, 1202, 1212, 1214, 1238, 1247], "togeth": [12, 19, 32, 57, 285, 333, 391, 461, 472, 514, 570, 590, 605, 641, 768, 815, 865, 1101, 1107, 1110, 1112, 1114, 1116, 1122, 1130, 1133, 1153, 1176, 1186, 1191, 1195, 1196, 1198, 1200, 1201, 1205, 1206, 1210, 1211, 1212, 1218, 1219, 1227, 1242], "toi": [1103, 1137, 1184, 1205, 1206, 1208, 1227, 1230, 1233, 1234, 1246], "token": [16, 156], "tokens_in": [1202, 1236], "tokens_out": [1202, 1236], "tokenset": [1202, 1236], "tol": [120, 121, 628, 893, 914, 924, 925, 926], "told": [1185, 1202, 1236], "toler": [120, 121, 391, 590, 861, 893, 914, 924, 925, 926, 1112, 1184, 1193], "toml": 1119, "too": [34, 120, 209, 218, 219, 430, 723, 1107, 1118, 1122, 1131, 1136, 1152, 1184, 1186, 1188, 1189, 1190, 1191, 1195, 1198, 1200, 1201, 1204, 1205, 1211, 1214, 1216, 1219, 1221, 1227, 1230, 1248], "took": [1130, 1131, 1137, 1201, 1205, 1210, 1227, 1242, 1246], "tool": [831, 1108, 1110, 1115, 1116, 1117, 1119, 1120, 1121, 1126, 1135, 1144, 1167, 1170, 1183, 1185, 1186, 1189, 1190, 1194, 1216, 1223, 1247], "toolbox": [1127, 1128], "toolchain": [1119, 1196], "toolkit": [1119, 1127], "top": [71, 120, 159, 160, 323, 409, 702, 1104, 1107, 1110, 1112, 1115, 1125, 1133, 1165, 1180, 1182, 1189, 1190, 1191, 1193, 1199, 1214, 1223, 1227, 1237], "top_k": [409, 702, 1110], "top_main": 1107, "top_trac": [1107, 1131, 1208, 1212, 1233], "topic": [1103, 1133, 1189, 1205, 1215, 1227, 1230, 1249], "topk": 1110, "topolog": 1107, "topologi": [35, 1110, 1186, 1201, 1244], "toposort": 1107, "torch": [1195, 1203, 1216], "torch_dtyp": 1195, "torch_dtype_to_cod": 1195, "torch_result_cod": 1195, "torchvis": 1203, "tornado": [1208, 1233], "toroid": [1201, 1244], "tot": 1211, "total": [7, 28, 150, 471, 733, 750, 761, 1106, 1110, 1124, 1158, 1186, 1188, 1198, 1200, 1202, 1211, 1213, 1227, 1236], "total_ord": 1110, "total_repeat_length": 733, "touch": [1112, 1130, 1185, 1193, 1196], "toward": [527, 528, 565, 567, 644, 691, 725, 742, 1110, 1189, 1190, 1195], "tpu": [26, 28, 33, 35, 71, 150, 271, 272, 273, 336, 748, 824, 827, 833, 834, 836, 1102, 1104, 1109, 1110, 1112, 1117, 1119, 1122, 1123, 1126, 1130, 1131, 1152, 1158, 1166, 1173, 1180, 1184, 1195, 1196, 1198, 1199, 1201, 1202, 1208, 1210, 1211, 1214, 1217, 1218, 1223, 1233, 1238, 1242, 1244, 1248], "tpu_test": 1119, "tpudevic": [1136, 1244], "tpuv2": 1219, "tpuv3": 1219, "tpuv4i": 1219, "trace": [0, 1, 5, 6, 7, 14, 15, 34, 49, 55, 150, 229, 231, 340, 828, 829, 830, 831, 833, 834, 835, 1075, 1110, 1111, 1115, 1117, 1121, 1122, 1123, 1130, 1131, 1132, 1152, 1158, 1170, 1182, 1184, 1187, 1190, 1193, 1195, 1199, 1200, 1202, 1205, 1208, 1216, 1227, 1231, 1232, 1233, 1236, 1237, 1238, 1246], "trace_func": [1202, 1236], "trace_funct": 1110, "trace_stack": 1107, "trace_to_jaxpr_dynam": [1199, 1208, 1212, 1233, 1238], "trace_to_jaxpr_fin": 1131, "trace_to_jaxpr_nounit": [1208, 1233], "trace_to_subjaxpr_dynam": [1131, 1199, 1208, 1212, 1233, 1238], "trace_to_subjaxpr_nounit": [1208, 1233], "trace_typ": 1107, "trace_view": 1223, "traceabl": [0, 705, 1107, 1199, 1202, 1208, 1233, 1236], "traceannot": [1110, 1199, 1208, 1212, 1223, 1233, 1238], "traceback": [0, 16, 55, 56, 57, 813, 1110, 1121, 1122, 1130, 1131, 1154, 1193, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247, 1248], "traceback_cach": [1202, 1236], "traceback_util": [1110, 1131, 1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "tracebackcach": [1202, 1236], "tracecontext": 1110, "tracer": [1, 5, 6, 34, 1104, 1107, 1110, 1114, 1121, 1123, 1131, 1179, 1185, 1186, 1187, 1190, 1192, 1193, 1199, 1200, 1208, 1212, 1227, 1232, 1233, 1238, 1239], "tracer_out": 1107, "tracer_par": 1107, "tracer_refs_out": 1107, "tracer_to_var": 1107, "tracerarrayconversionerror": [1110, 1121], "tracerboolconversionerror": [1121, 1199, 1212, 1238], "tracerintegerconversionerror": [1110, 1121, 1199, 1212, 1238], "tracers_in": 1107, "tracers_out": 1107, "tracers_to_jaxpr": 1107, "track": [55, 342, 1107, 1109, 1110, 1114, 1119, 1120, 1121, 1134, 1137, 1145, 1185, 1194, 1199, 1200, 1212, 1214, 1227, 1243, 1246], "tracker": [1110, 1127, 1184, 1185], "trade": [7, 26, 1206, 1234], "tradeoff": [1107, 1166, 1183, 1184, 1185, 1195, 1199, 1200, 1206, 1227, 1234], "tradit": [1115, 1116], "tradition": [1205, 1227], "trail": [786, 881, 1166, 1173, 1194, 1201, 1219], "train": [828, 1103, 1108, 1125, 1126, 1133, 1135, 1136, 1146, 1188, 1191, 1198, 1205, 1206, 1211, 1219, 1223, 1227, 1230, 1234, 1247, 1248], "train_acc": [1203, 1209], "train_data": [1203, 1209], "train_imag": [1203, 1209], "train_label": [1203, 1209], "train_step": 828, "training_gener": 1203, "traitlet": [1208, 1233], "tran": [715, 902, 908, 919, 923], "trans1d": [446, 725], "trans_jaxpr": 1107, "transact": [882, 1219], "transfer": [29, 30, 31, 32, 37, 150, 1066, 1106, 1107, 1110, 1122, 1158, 1193, 1208, 1210, 1219, 1233, 1241, 1249], "transfer_guard": 1226, "transfer_guard_host_to_devic": 1226, "transfertomemorykind": 30, "transform": [0, 14, 15, 17, 18, 56, 69, 82, 84, 101, 123, 127, 128, 131, 132, 147, 191, 262, 289, 319, 332, 338, 411, 480, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 529, 548, 550, 692, 741, 751, 798, 799, 813, 824, 837, 882, 883, 884, 885, 897, 905, 906, 912, 915, 917, 919, 920, 921, 922, 923, 1073, 1075, 1092, 1103, 1110, 1116, 1121, 1122, 1123, 1125, 1126, 1133, 1136, 1137, 1145, 1151, 1166, 1175, 1176, 1178, 1179, 1182, 1187, 1189, 1192, 1193, 1195, 1197, 1199, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1224, 1230, 1232, 1233, 1234, 1236, 1237, 1242, 1246], "transform_func": 1216, "transform_funct": 1216, "transformation_with_aux": [1208, 1233], "transformed_flat": 1224, "transformed_structur": 1224, "transient": [47, 48, 1105], "transit": [9, 76, 77, 707, 708, 709, 710, 711, 712, 713, 714, 715, 741, 1110, 1133, 1180, 1227], "translat": [147, 1107, 1110, 1176, 1195, 1202, 1205, 1211, 1212, 1216, 1227, 1236], "translationcontext": 1110, "translationrul": 1110, "transpar": [1110, 1122, 1178, 1190, 1210, 1224, 1242, 1247], "transpos": [103, 110, 111, 114, 115, 159, 160, 195, 196, 197, 198, 199, 208, 255, 295, 332, 467, 472, 614, 629, 634, 637, 659, 1092, 1101, 1107, 1110, 1132, 1146, 1159, 1166, 1170, 1186, 1190, 1200, 1202, 1204, 1205, 1211, 1213, 1216, 1218, 1227, 1231, 1236], "transpose_a": 255, "transpose_input": 1107, "transpose_jaxpr": 1107, "transpose_kernel": 198, "transpose_p": [1107, 1159], "transpose_rul": 1107, "transpose_solv": 208, "transposed_conv": 1207, "transposed_jaxpr": 1107, "transposed_pytre": [1073, 1092], "transposit": [1107, 1159, 1190, 1194, 1197, 1200, 1227], "trapezoid": [900, 1110, 1189], "trapezoidal_rul": [781, 886], "trapz": [781, 1110, 1189], "travers": [1068, 1069, 1070, 1071, 1072, 1081, 1084, 1086, 1088, 1090, 1091, 1224, 1247], "treacher": 1194, "treat": [50, 73, 150, 277, 312, 332, 391, 452, 480, 503, 620, 622, 624, 630, 675, 676, 682, 685, 692, 707, 774, 778, 808, 824, 837, 1008, 1068, 1069, 1070, 1071, 1072, 1079, 1081, 1084, 1086, 1088, 1090, 1091, 1102, 1110, 1122, 1132, 1133, 1135, 1137, 1158, 1175, 1178, 1185, 1187, 1189, 1192, 1194, 1195, 1199, 1207, 1208, 1211, 1214, 1224, 1227, 1231, 1233, 1239, 1246, 1247, 1248], "treatment": [409, 604, 702, 1107, 1189], "tree": [30, 32, 74, 145, 151, 157, 158, 165, 209, 271, 272, 273, 277, 278, 279, 281, 924, 925, 926, 1076, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1101, 1107, 1110, 1119, 1129, 1145, 1151, 1153, 1176, 1178, 1196, 1224, 1239, 1246], "tree_": 1135, "tree_al": [1067, 1211], "tree_arg": 1101, "tree_def": 1145, "tree_flatten": [1068, 1074, 1080, 1081, 1085, 1093, 1107, 1110, 1122, 1135, 1199, 1206, 1208, 1212, 1224, 1233, 1234, 1247], "tree_flatten_with_kei": 1082, "tree_flatten_with_path": [1110, 1135, 1247], "tree_leav": [1069, 1076, 1087, 1110, 1135, 1208, 1233, 1247], "tree_leaves_with_path": 1110, "tree_map": [50, 1070, 1081, 1089, 1110, 1135, 1136, 1137, 1203, 1208, 1211, 1233, 1246, 1247], "tree_map_with_path": [1110, 1135, 1247], "tree_multimap": 1110, "tree_reduc": 1071, "tree_structur": [1072, 1110, 1135, 1224], "tree_transpos": [1073, 1110, 1135, 1247], "tree_unflatten": [1074, 1080, 1082, 1107, 1110, 1122, 1206, 1208, 1224, 1233, 1234, 1247], "tree_util": [50, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1105, 1110, 1122, 1129, 1135, 1177, 1203, 1206, 1208, 1211, 1212, 1224, 1233, 1234, 1246], "treedef": [1068, 1072, 1074, 1077, 1079, 1081, 1084, 1085, 1091, 1093, 1094, 1095, 1096, 1107, 1110, 1199, 1212, 1224, 1247], "treedef_is_leaf": 1110, "tri": [4, 1121, 1131, 1170, 1193, 1238], "trial": [842, 856, 1030, 1031], "triangl": [146, 147, 245, 247, 248, 249, 250, 255, 256, 571, 782, 783, 784, 785, 787, 788, 789, 888, 892, 901, 907, 908], "triangular": [146, 147, 245, 250, 252, 255, 430, 614, 620, 622, 634, 888, 890, 894, 900, 901, 904, 905, 906, 908, 1110], "trick": [1122, 1127, 1133, 1190, 1199, 1205, 1212, 1227], "tricki": [1107, 1122, 1137, 1199, 1246], "trickier": 1114, "tricub": [146, 147], "tridiagon": [257, 893, 1110], "trifurc": 1185, "trigger": [18, 150, 552, 750, 824, 1110, 1112, 1119, 1122, 1128, 1158, 1186, 1202, 1208, 1223, 1233, 1236], "trigonometr": [387, 400, 404, 423, 757], "trigonometri": 707, "tril": [657, 784, 785, 787, 1110], "tril_indic": 785, "trilinear": [146, 147], "trim": [786, 804], "trim_leading_zero": [710, 713], "trimesh": 1128, "trip": [229, 1110, 1190, 1199, 1219], "tripl": [254, 1145], "triton": [1110, 1125, 1187, 1218], "triu": [657, 788, 789, 1110], "triu_indic": 789, "trivial": [144, 149, 1099, 1104, 1110, 1114, 1133, 1185, 1186, 1188, 1190, 1191, 1199, 1201, 1227, 1244], "troubl": [1130, 1216], "true": [0, 1, 6, 7, 13, 16, 21, 31, 32, 34, 37, 38, 42, 43, 44, 64, 67, 68, 69, 72, 73, 82, 84, 91, 122, 144, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 165, 191, 198, 208, 209, 214, 229, 232, 238, 242, 245, 246, 247, 251, 252, 253, 254, 255, 256, 268, 280, 295, 296, 297, 298, 299, 300, 301, 302, 312, 313, 317, 325, 331, 333, 340, 345, 369, 390, 391, 392, 393, 394, 395, 407, 408, 410, 411, 413, 414, 415, 416, 422, 429, 443, 447, 459, 467, 471, 472, 480, 487, 494, 496, 497, 505, 526, 527, 529, 557, 565, 566, 568, 576, 577, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 620, 624, 631, 633, 637, 644, 645, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 666, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 691, 692, 696, 703, 705, 706, 710, 711, 713, 720, 722, 723, 724, 741, 745, 746, 749, 750, 751, 752, 755, 762, 769, 771, 773, 799, 809, 810, 816, 825, 834, 836, 837, 839, 841, 842, 843, 845, 846, 847, 849, 851, 852, 854, 855, 856, 857, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 888, 889, 890, 891, 892, 895, 896, 897, 899, 900, 901, 902, 904, 905, 907, 908, 910, 913, 919, 921, 922, 923, 926, 937, 942, 955, 957, 965, 1029, 1049, 1067, 1068, 1075, 1083, 1084, 1099, 1100, 1101, 1102, 1106, 1107, 1110, 1115, 1116, 1117, 1121, 1122, 1125, 1130, 1131, 1136, 1137, 1145, 1146, 1151, 1152, 1154, 1158, 1175, 1180, 1182, 1185, 1186, 1188, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1212, 1213, 1214, 1219, 1223, 1227, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1244, 1246, 1247, 1248], "true_b": [1136, 1137, 1246], "true_beta": 1213, "true_bodi": [1182, 1237], "true_comp": 1107, "true_const": 1107, "true_divid": 1199, "true_fn": [1107, 1117, 1232], "true_fun": [191, 1107, 1199], "true_jaxpr": 1107, "true_w": [1136, 1137, 1246], "truli": [1134, 1243], "trunc": 1110, "truncat": [120, 332, 362, 364, 447, 459, 508, 509, 511, 513, 514, 515, 516, 518, 519, 521, 522, 525, 791, 877, 882, 883, 884, 885, 1110, 1153, 1199, 1205, 1227], "truncated_norm": [353, 355, 357, 364], "trust": [645, 673, 674], "truth": [471, 560, 561, 611, 612, 652, 653, 654, 655], "try": [71, 150, 413, 499, 554, 645, 698, 746, 818, 824, 1102, 1105, 1107, 1110, 1119, 1120, 1122, 1127, 1130, 1131, 1133, 1135, 1152, 1158, 1185, 1188, 1192, 1194, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1209, 1210, 1212, 1213, 1214, 1218, 1219, 1221, 1223, 1226, 1227, 1233, 1236, 1238, 1247, 1248], "ts_flat": [1202, 1236], "tukei": [440, 508, 562, 563], "tune": [1125, 1214, 1216, 1219, 1221], "tunnel": 1223, "tup": [454, 493, 570, 815, 1107, 1185], "tupl": [0, 7, 9, 13, 14, 15, 21, 32, 38, 44, 50, 57, 71, 80, 81, 82, 85, 86, 88, 89, 93, 96, 103, 105, 122, 125, 127, 131, 136, 144, 147, 150, 151, 159, 160, 170, 191, 193, 194, 195, 196, 197, 198, 199, 212, 213, 229, 246, 247, 248, 250, 251, 252, 253, 254, 256, 269, 287, 295, 313, 325, 332, 333, 338, 339, 340, 368, 369, 378, 382, 390, 392, 393, 395, 397, 419, 429, 441, 444, 445, 446, 464, 468, 471, 482, 483, 489, 490, 494, 496, 497, 498, 503, 512, 517, 531, 545, 549, 559, 565, 566, 568, 576, 577, 579, 588, 593, 605, 613, 619, 624, 631, 637, 639, 641, 644, 645, 650, 651, 652, 653, 654, 655, 657, 658, 660, 662, 666, 669, 677, 678, 680, 681, 682, 683, 684, 685, 686, 692, 703, 704, 705, 710, 711, 720, 722, 724, 725, 729, 734, 735, 739, 745, 753, 767, 769, 771, 773, 777, 780, 784, 785, 788, 789, 805, 807, 810, 811, 812, 817, 824, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 854, 856, 857, 860, 861, 862, 863, 865, 866, 868, 870, 872, 873, 874, 875, 876, 877, 878, 879, 888, 889, 892, 895, 896, 897, 900, 901, 902, 903, 904, 905, 906, 910, 914, 915, 916, 917, 918, 919, 921, 922, 923, 955, 956, 1014, 1068, 1070, 1078, 1079, 1081, 1084, 1085, 1087, 1088, 1089, 1096, 1099, 1100, 1101, 1102, 1107, 1110, 1122, 1123, 1130, 1135, 1136, 1137, 1145, 1146, 1151, 1152, 1153, 1158, 1166, 1175, 1176, 1178, 1179, 1182, 1185, 1186, 1188, 1192, 1193, 1196, 1199, 1202, 1206, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1221, 1224, 1233, 1234, 1236, 1237, 1238, 1239, 1246, 1247], "tuple_arg": [1102, 1212], "tuple_delet": 1110, "tuple_insert": 1110, "tuple_of_arrai": 692, "tuple_shap": 1107, "turbo": 892, "turlach": 1007, "turn": [5, 6, 46, 56, 71, 454, 1106, 1107, 1110, 1112, 1115, 1121, 1122, 1125, 1135, 1137, 1152, 1182, 1188, 1191, 1195, 1199, 1200, 1202, 1204, 1216, 1218, 1227, 1236, 1237, 1246, 1247], "tutori": [0, 14, 15, 71, 1107, 1110, 1175, 1180, 1187, 1190, 1198, 1201, 1205, 1214, 1217, 1227, 1228, 1229, 1230, 1233, 1234, 1236, 1237, 1239, 1240, 1241, 1245], "tweak": [1180, 1186], "twice": [747, 824, 1130, 1134, 1152, 1154, 1195, 1243], "twin": 380, "twister": 1199, "two": [0, 13, 14, 35, 71, 95, 118, 145, 157, 158, 159, 160, 165, 167, 191, 193, 195, 196, 198, 199, 209, 212, 213, 214, 215, 216, 217, 218, 219, 238, 247, 255, 271, 272, 273, 277, 279, 280, 281, 289, 295, 302, 310, 311, 333, 346, 391, 398, 399, 409, 414, 427, 432, 434, 436, 437, 439, 441, 464, 468, 472, 473, 484, 485, 486, 490, 494, 496, 509, 514, 515, 520, 542, 543, 545, 566, 576, 579, 588, 589, 590, 607, 609, 620, 624, 630, 637, 658, 659, 661, 667, 699, 701, 702, 708, 713, 714, 715, 742, 745, 750, 751, 752, 772, 777, 779, 783, 784, 787, 788, 798, 811, 812, 824, 882, 891, 894, 903, 904, 910, 915, 916, 917, 918, 919, 920, 921, 922, 923, 1009, 1079, 1081, 1099, 1104, 1107, 1108, 1110, 1119, 1120, 1122, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1152, 1158, 1173, 1175, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1206, 1208, 1210, 1211, 1214, 1216, 1218, 1219, 1221, 1223, 1226, 1231, 1233, 1234, 1236, 1237, 1242, 1243, 1244, 1246, 1247, 1248], "txt": [1112, 1119], "ty": [1107, 1247], "typ": 1247, "type": [0, 1, 2, 7, 9, 13, 17, 19, 24, 28, 32, 33, 34, 40, 41, 42, 44, 45, 50, 55, 56, 57, 67, 69, 70, 71, 72, 73, 75, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 130, 131, 132, 136, 137, 138, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 831, 832, 833, 834, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1102, 1104, 1106, 1107, 1109, 1110, 1122, 1123, 1129, 1130, 1134, 1135, 1136, 1137, 1145, 1150, 1158, 1159, 1165, 1166, 1167, 1169, 1170, 1173, 1175, 1176, 1178, 1182, 1183, 1187, 1188, 1190, 1191, 1197, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1212, 1214, 1215, 1218, 1221, 1224, 1226, 1227, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1246, 1247, 1249], "type_after_upd": 1136, "type_promot": [143, 1195], "typecheck_atom": 1107, "typecheck_jaxpr": 1107, "typecheck_partial_eval_jaxpr": 1107, "typeclass": 1194, "typecod": [42, 603], "typed_kei": 1194, "typeerror": [813, 953, 956, 957, 959, 960, 964, 1075, 1104, 1107, 1110, 1122, 1130, 1135, 1179, 1185, 1194, 1195, 1199, 1200, 1203, 1209, 1212, 1227, 1247], "typepromotionerror": 1248, "typevar": [14, 15, 57, 295, 317, 322, 325, 341, 1071, 1078, 1079, 1080, 1081, 1082, 1085, 1087, 1090, 1101], "typic": [41, 198, 339, 391, 411, 443, 445, 472, 500, 513, 527, 529, 560, 561, 590, 611, 612, 692, 693, 751, 798, 799, 1104, 1109, 1112, 1121, 1122, 1127, 1133, 1134, 1136, 1166, 1173, 1185, 1186, 1187, 1188, 1198, 1199, 1205, 1206, 1211, 1227, 1234, 1242, 1243], "typing_extens": 1185, "u": [0, 120, 250, 251, 620, 622, 637, 682, 685, 710, 867, 888, 890, 900, 901, 903, 910, 1080, 1082, 1105, 1106, 1107, 1110, 1112, 1117, 1119, 1120, 1122, 1127, 1128, 1130, 1131, 1133, 1135, 1136, 1180, 1183, 1186, 1187, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1211, 1214, 1216, 1221, 1223, 1227, 1233, 1234, 1238, 1242, 1243], "u1": [447, 494], "u16": 1195, "u1u1u1u2u4u8i2i2i4i8bff2f4f8c8c16u1f": 1248, "u1u2u4u8i1i2i4i8bff2f4f8c8c16i": 1248, "u2u2u2u2u4u8i4i4i4i8bff2f4f8c8c16u2f": 1248, "u32": [0, 1195], "u4": [447, 1248], "u4u4u4u4u4u8i8i8i8i8bff2f4f8c8c16u4f": 1248, "u64": 1195, "u8": [494, 1195], "u8u8u8u8u8u8f": 1248, "u_": 903, "u_blk": 1211, "u_block": 1211, "ubc": [387, 388, 400, 401, 402, 403, 404, 406, 420, 421, 423, 425, 501, 572, 646, 647, 648, 776], "ubuntu": 1119, "ubyt": 1203, "ucdenv": 120, "ufunc": [390, 392, 393, 395, 432, 434, 436, 437, 439, 551, 589, 652, 653, 654, 655, 658, 660, 662, 666, 677, 678, 680, 682, 684, 685, 686, 688, 720, 769, 771, 810, 940, 954, 1110], "ui": [834, 836, 1110, 1223], "uint": [137, 141, 142, 1195, 1219], "uint16": [593, 1195], "uint32": [137, 140, 141, 142, 291, 593, 843, 881, 1173, 1193, 1194, 1195, 1199, 1243, 1248], "uint4": 593, "uint64": [494, 593, 793, 843, 1110], "uint8": [494, 593, 700, 804, 1110, 1195, 1199], "uit": 1117, "uk": [741, 1107], "ultim": [1107, 1122, 1191, 1193, 1201], "un": [22, 23, 1186, 1193, 1199, 1204, 1211], "una": 1199, "unabl": 1109, "unalt": 701, "unambigu": [571, 1107, 1200, 1205, 1227], "unansw": 1195, "unari": [298, 1159, 1190, 1204, 1216], "unavail": [1104, 1176], "unawar": 17, "unbatch": [1107, 1133, 1216, 1227], "unbias": 472, "unbound": [1107, 1200, 1227], "unbox": 1107, "uncertain": 452, "uncertainti": 711, "unchang": [16, 71, 146, 317, 413, 499, 525, 554, 698, 746, 780, 818, 1199, 1200, 1216, 1221, 1227], "uncheck": [71, 1214], "uncomit": 231, "uncommit": [30, 1122, 1201], "uncommon": [1112, 1219], "uncompress": 747, "uncov": 1112, "uncurri": [1205, 1227], "undecor": 1136, "undef": 1107, "undef_prim": 1107, "undefin": [37, 38, 71, 77, 232, 285, 292, 296, 297, 298, 299, 300, 301, 409, 546, 701, 702, 741, 913, 965, 1048, 1122, 1199, 1202, 1208, 1214, 1233, 1236], "undefinedprim": [1202, 1236], "undefprim": 1107, "under": [7, 34, 69, 213, 372, 373, 624, 631, 747, 837, 959, 960, 1107, 1110, 1121, 1122, 1133, 1154, 1159, 1166, 1184, 1187, 1188, 1189, 1194, 1199, 1200, 1201, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1218, 1223, 1227, 1230, 1233, 1234, 1238, 1242], "underestim": 567, "underflow": [635, 957], "underli": [14, 15, 128, 150, 295, 342, 432, 434, 436, 437, 439, 589, 679, 681, 683, 728, 734, 859, 863, 1104, 1107, 1117, 1130, 1152, 1158, 1187, 1190, 1194, 1201, 1216, 1218, 1219, 1225, 1244], "underneath": [1183, 1199, 1218], "underpin": 1166, "underscor": [1104, 1105, 1206, 1234], "understand": [213, 340, 1107, 1110, 1121, 1123, 1130, 1131, 1133, 1134, 1136, 1137, 1152, 1189, 1190, 1195, 1198, 1202, 1212, 1214, 1216, 1219, 1224, 1227, 1230, 1236, 1237, 1238, 1243, 1246, 1249], "understood": [939, 1173], "undesir": [49, 1134, 1243], "undo": 804, "undocu": 1110, "undu": [104, 1185], "unexpect": [1110, 1121, 1122, 1179, 1190, 1193, 1199, 1219, 1224], "unexpectedli": 1194, "unexpectedtracererror": [1110, 1121, 1193], "unfamiliar": [1131, 1238], "unfilt": 1110, "unfilteredstacktrac": [1110, 1131], "unflatten": [143, 1068, 1069, 1072, 1079, 1081, 1084, 1086, 1091, 1093, 1107, 1135, 1204, 1224, 1247], "unflatten_func": [1079, 1081], "unflatten_mycontain": 1135, "unflatten_mykeypathcontain": 1135, "unfold": 196, "unfortun": [1122, 1185, 1193, 1216], "unhandl": 1195, "unhash": 1110, "uni": 1007, "unicod": 552, "unif": 71, "unifi": [1110, 1138, 1180, 1194, 1201, 1242], "uniform": [122, 165, 352, 354, 356, 358, 361, 364, 565, 567, 656, 843, 847, 848, 872, 1106, 1121, 1123, 1134, 1173, 1185, 1194, 1199, 1201, 1205, 1208, 1227, 1233, 1239, 1243], "uniformli": [291, 292, 361, 363, 839, 867, 1110], "unimod": 1007, "unimpl": [548, 550], "unind": [1202, 1236], "uniniti": [498, 499, 652, 653, 654, 655, 1150], "uninstal": 1223, "unintend": [1194, 1226], "unintent": 1110, "uninterest": 1102, "union": [12, 42, 51, 55, 71, 91, 92, 106, 107, 109, 113, 117, 118, 120, 138, 146, 147, 152, 153, 154, 155, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 275, 276, 282, 283, 284, 286, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 320, 321, 323, 324, 327, 328, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 360, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 412, 417, 422, 426, 427, 428, 433, 443, 453, 460, 461, 464, 468, 477, 490, 492, 493, 496, 569, 579, 593, 616, 618, 625, 626, 628, 629, 632, 638, 639, 642, 643, 658, 664, 704, 721, 743, 744, 777, 787, 798, 800, 801, 802, 803, 807, 811, 812, 814, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 887, 889, 902, 903, 915, 916, 917, 918, 930, 933, 937, 938, 943, 952, 953, 955, 959, 960, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 991, 992, 993, 994, 995, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1016, 1017, 1018, 1019, 1024, 1027, 1034, 1035, 1044, 1045, 1046, 1047, 1050, 1051, 1062, 1063, 1064, 1065, 1107, 1145, 1176, 1185, 1188, 1201, 1214], "union1d": 1189, "uniqu": [53, 54, 58, 59, 60, 61, 62, 122, 480, 529, 588, 595, 670, 681, 683, 688, 692, 701, 703, 724, 750, 751, 752, 773, 798, 903, 937, 1110, 1134, 1135, 1170, 1185, 1186, 1189, 1195, 1211, 1243, 1247], "unique_al": 1189, "unique_const": 1107, "unique_count": [799, 1189], "unique_indic": [80, 81, 91, 93, 122, 232, 296, 297, 298, 299, 300, 301, 688, 773, 799, 820, 821, 822, 823, 1199, 1212], "unique_invers": [799, 1189], "unique_valu": 1189, "uniquifi": 1110, "unit": [73, 250, 255, 343, 344, 345, 346, 364, 366, 372, 373, 374, 387, 400, 402, 420, 510, 524, 605, 619, 635, 839, 854, 900, 901, 919, 923, 1107, 1123, 1131, 1182, 1184, 1200, 1205, 1218, 1219, 1221, 1227, 1236, 1237, 1238, 1239], "unit_diagon": [255, 908], "unitari": [249, 252, 559, 634, 637, 867, 897, 903, 904, 906, 910], "uniti": [565, 711], "unittest": 1110, "unitvar": [1182, 1237], "unitvec": [1205, 1230], "univari": 1007, "univers": [165, 430, 562, 563, 606, 628, 631, 699, 741, 813, 934, 952, 963], "unjitted_loop_bodi": [1131, 1238], "unk": 1107, "unk_tracers_in": 1107, "unk_tracers_out": 1107, "unknown": [907, 1107, 1110, 1212], "unknown_trac": 1107, "unks_in": 1107, "unks_out": 1107, "unless": [67, 69, 104, 208, 262, 390, 395, 413, 452, 475, 476, 485, 496, 500, 557, 560, 561, 565, 611, 612, 619, 631, 644, 656, 675, 676, 682, 685, 693, 700, 720, 771, 799, 824, 903, 924, 925, 926, 1121, 1130, 1134, 1180, 1189, 1190, 1203, 1209, 1219, 1222, 1243, 1247], "unlik": [56, 196, 229, 295, 303, 325, 468, 475, 476, 495, 524, 675, 676, 688, 701, 705, 711, 741, 774, 805, 896, 947, 957, 964, 1107, 1117, 1136, 1137, 1160, 1166, 1173, 1183, 1184, 1186, 1188, 1191, 1192, 1194, 1198, 1199, 1201, 1208, 1211, 1212, 1216, 1218, 1233, 1246], "unlock": [1180, 1184, 1219], "unmap": [158, 281, 1101, 1107, 1114, 1186], "unmapped_av": [1107, 1208, 1233], "unment": [1186, 1211], "unmodifi": [441, 813, 1131], "unnam": 136, "unnatur": 1219, "unnecessari": [7, 229, 295, 325, 645, 824, 1110, 1131, 1136, 1151, 1185, 1195, 1238], "unnecessarili": [1107, 1188], "unnorm": [758, 844], "unop": 1110, "unop_dtype_rul": 1110, "unoptim": 1102, "unord": [53, 54, 58, 59, 60, 61, 62, 1183, 1214], "unorder": 1195, "unordered_effect": 1212, "unpack": [37, 804, 1102, 1110, 1130, 1186, 1211], "unpack_optimizer_st": 1145, "unpad": [251, 921], "unpair": 1214, "unpickl": 1170, "unpract": 1197, "unproblemat": 1195, "unpromot": 1195, "unravel": [805, 1190], "unraveled_coord": 805, "unreach": 1226, "unrecogn": 750, "unreduc": 1186, "unrel": 1130, "unreleas": 1196, "unreli": 711, "unrestrict": 1107, "unrestrictedus": 1107, "unrol": [229, 295, 325, 715, 1110, 1117, 1182, 1199, 1216, 1219, 1237], "unsaf": [447, 548, 550, 1110, 1121, 1194, 1196, 1199], "unsafe_cal": 1131, "unsafe_map": [1131, 1199, 1212], "unsafe_raw_arrai": 1110, "unsafe_rbg": [142, 1110, 1173], "unsafe_rbg_kei": 1110, "unsafe_zip": [1208, 1233], "unsaid": 1189, "unsatisfi": [251, 903], "unscal": 711, "unshap": 1199, "unshar": 196, "unshard": 1244, "unsign": [140, 232, 494, 593, 688, 720, 771, 773, 806, 843, 1110, 1194, 1199], "unsolv": 1186, "unsort": [159, 160], "unspecifi": [37, 368, 378, 926], "unspecifiedvalu": [150, 1158], "unsquar": 711, "unstack": [1110, 1186, 1211], "unsuit": 1186, "unsupport": [1104, 1110, 1135, 1187, 1194, 1247], "untest": 1173, "until": [30, 38, 66, 441, 740, 834, 836, 1106, 1107, 1110, 1117, 1146, 1183, 1185, 1189, 1192, 1193, 1200, 1219, 1221, 1223, 1227], "untouch": 1130, "untrunc": 362, "untrust": 645, "untyp": 1107, "unus": [0, 16, 88, 105, 150, 1107, 1110, 1122, 1158, 1208, 1224, 1233, 1247], "unusu": 568, "unwant": 1248, "unzip": 1107, "unzip2": 1107, "up": [14, 15, 104, 120, 150, 191, 229, 251, 295, 325, 340, 341, 342, 443, 458, 493, 526, 533, 541, 570, 576, 588, 595, 630, 640, 712, 745, 751, 752, 774, 799, 815, 828, 829, 830, 881, 903, 909, 924, 925, 1102, 1107, 1110, 1112, 1117, 1119, 1122, 1128, 1130, 1131, 1152, 1153, 1158, 1173, 1180, 1183, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1199, 1201, 1203, 1204, 1205, 1206, 1209, 1211, 1212, 1214, 1218, 1219, 1223, 1224, 1227, 1230, 1234, 1238, 1247], "upcast": 1219, "upcast_f16_for_comput": 1199, "upcom": 1193, "updat": [104, 217, 218, 219, 296, 297, 298, 299, 300, 301, 688, 1105, 1107, 1110, 1112, 1115, 1116, 1120, 1122, 1125, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1145, 1151, 1154, 1166, 1170, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1197, 1200, 1201, 1203, 1204, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1233, 1238, 1243, 1246, 1247, 1248], "update_doc": 792, "update_fn": [1122, 1145], "update_fun": 1145, "update_index": 1186, "update_output_token": 1183, "update_runtime_token": 1183, "update_shap": 298, "update_window_dim": 1166, "updated_arrai": 1199, "upgrad": [47, 48, 446, 725, 1110, 1119, 1127, 1173, 1180, 1183, 1186, 1187, 1193, 1194, 1201, 1203, 1209], "uplo": [620, 622], "upload": [834, 836, 1119], "upon": [705, 1131, 1152, 1238], "upper": [118, 229, 245, 248, 250, 252, 255, 257, 352, 361, 362, 363, 440, 506, 565, 567, 568, 614, 620, 622, 634, 787, 788, 789, 876, 877, 888, 890, 892, 894, 900, 901, 904, 905, 906, 907, 908, 931, 945, 953, 984, 1009, 1024, 1037, 1107, 1110, 1195, 1223], "upper_seg": 953, "upper_triangular": 894, "upsampl": [146, 147], "upshot": [1200, 1205, 1227], "upsid": 1184, "upstream": [1112, 1119, 1193, 1216], "upward": 1122, "urbg": 142, "url": [1110, 1127, 1223], "us": [0, 1, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 27, 34, 35, 37, 38, 47, 48, 49, 50, 56, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 91, 120, 121, 128, 140, 145, 146, 147, 148, 149, 150, 157, 158, 159, 160, 165, 169, 191, 194, 195, 196, 198, 208, 209, 213, 229, 231, 232, 245, 247, 255, 256, 262, 263, 264, 268, 271, 272, 273, 277, 278, 279, 280, 281, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 312, 325, 326, 331, 332, 333, 338, 339, 340, 341, 342, 345, 364, 392, 393, 396, 397, 399, 405, 409, 410, 411, 413, 424, 430, 440, 441, 446, 447, 452, 461, 468, 472, 475, 476, 481, 482, 485, 486, 489, 490, 494, 496, 497, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 527, 529, 546, 548, 550, 552, 557, 559, 562, 563, 564, 567, 568, 571, 575, 576, 588, 605, 606, 609, 613, 614, 615, 624, 628, 630, 633, 634, 644, 645, 650, 651, 656, 660, 662, 664, 665, 666, 672, 673, 674, 675, 676, 678, 681, 682, 683, 684, 685, 686, 691, 692, 696, 701, 703, 705, 706, 710, 711, 713, 720, 724, 725, 728, 730, 733, 734, 736, 739, 745, 746, 747, 748, 749, 750, 751, 758, 762, 763, 769, 771, 773, 774, 778, 779, 781, 788, 798, 799, 805, 810, 811, 813, 816, 820, 821, 822, 823, 824, 825, 828, 831, 833, 834, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 883, 885, 886, 888, 893, 896, 903, 904, 907, 908, 909, 912, 913, 914, 915, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 942, 953, 957, 965, 975, 986, 993, 999, 1003, 1007, 1014, 1016, 1021, 1025, 1039, 1044, 1048, 1050, 1054, 1059, 1062, 1064, 1074, 1075, 1076, 1079, 1081, 1093, 1101, 1102, 1103, 1106, 1107, 1108, 1110, 1111, 1114, 1115, 1116, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1132, 1134, 1135, 1136, 1137, 1140, 1144, 1145, 1146, 1150, 1151, 1153, 1154, 1158, 1159, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1175, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1195, 1196, 1199, 1201, 1203, 1206, 1207, 1208, 1209, 1212, 1214, 1215, 1217, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1231, 1232, 1233, 1234, 1237, 1239, 1240, 1242, 1243, 1244, 1246, 1247, 1248], "usabl": [49, 268, 538, 691, 1122, 1199], "usag": [7, 9, 55, 63, 64, 76, 77, 262, 333, 524, 1075, 1079, 1110, 1120, 1121, 1124, 1145, 1148, 1152, 1154, 1184, 1186, 1189, 1198, 1206, 1214, 1215, 1221, 1234, 1242, 1243], "use_auto_spmd_partit": 331, "use_color": 21, "use_eq_stor": 131, "use_global_device_id": 0, "use_spmd_partit": 331, "use_trac": 123, "user": [0, 14, 15, 16, 34, 57, 69, 71, 159, 160, 213, 291, 341, 342, 362, 384, 526, 556, 672, 688, 701, 706, 723, 1105, 1106, 1110, 1117, 1118, 1122, 1126, 1127, 1130, 1135, 1151, 1152, 1166, 1170, 1173, 1178, 1183, 1185, 1186, 1190, 1192, 1195, 1196, 1199, 1208, 1211, 1212, 1213, 1216, 1218, 1221, 1223, 1224, 1226, 1233, 1235, 1247, 1248], "user_check": [57, 1114, 1116], "user_context": [1208, 1233], "user_global_n": [1208, 1233], "user_n": [1208, 1233], "user_shap": 1151, "user_shard": 1151, "userwarn": [1122, 1199, 1203], "usr": [0, 1130, 1131, 1223], "usual": [4, 35, 71, 145, 150, 229, 295, 302, 325, 480, 482, 572, 824, 834, 836, 1104, 1106, 1107, 1110, 1117, 1122, 1131, 1134, 1135, 1136, 1158, 1166, 1173, 1183, 1189, 1190, 1191, 1193, 1196, 1198, 1199, 1206, 1207, 1210, 1211, 1214, 1216, 1219, 1223, 1234, 1238, 1242, 1243], "utf": 552, "util": [9, 50, 341, 342, 707, 1107, 1109, 1110, 1119, 1122, 1135, 1156, 1173, 1175, 1177, 1178, 1180, 1185, 1187, 1195, 1199, 1204, 1206, 1211, 1219, 1221, 1234, 1239, 1247], "utterli": 1195, "v": [0, 41, 94, 111, 115, 120, 123, 247, 430, 440, 441, 464, 468, 481, 484, 710, 711, 723, 748, 892, 893, 903, 919, 921, 922, 923, 1107, 1110, 1117, 1121, 1122, 1128, 1152, 1153, 1159, 1179, 1180, 1184, 1200, 1202, 1205, 1206, 1208, 1210, 1214, 1215, 1224, 1227, 1233, 1234, 1236, 1242, 1247], "v0": [920, 1110, 1173, 1201, 1246], "v1": [1107, 1110, 1207], "v10": [494, 1119], "v2": [1107, 1127], "v4": [1110, 1219, 1221], "v5p": 1221, "v7": 1135, "v_": [1133, 1227], "v_batch": [1210, 1242], "v_blk": 1211, "v_block": 1211, "v_dot": [1208, 1233], "v_tm1": [1133, 1227], "vae": 1191, "val": [229, 325, 526, 575, 602, 700, 706, 730, 804, 1068, 1074, 1084, 1093, 1107, 1191, 1195, 1199, 1204, 1243], "val1": 1154, "val2": 1154, "val_out": [1107, 1208, 1233], "valid": [1, 71, 150, 193, 195, 196, 197, 198, 199, 216, 217, 326, 332, 441, 464, 468, 567, 657, 688, 747, 784, 785, 788, 789, 805, 907, 912, 915, 916, 917, 918, 920, 922, 1075, 1110, 1122, 1146, 1158, 1175, 1176, 1179, 1182, 1185, 1189, 1194, 1199, 1206, 1214, 1223, 1224, 1234, 1237, 1247], "valid_jaxtyp": [1208, 1212, 1233], "vals_in": [1107, 1208, 1233], "vals_out": 1107, "valu": [0, 4, 7, 9, 13, 16, 17, 18, 19, 29, 31, 33, 34, 35, 39, 44, 45, 49, 50, 55, 56, 57, 67, 68, 69, 70, 71, 74, 76, 77, 90, 91, 101, 106, 118, 119, 122, 125, 143, 144, 146, 147, 149, 150, 151, 152, 156, 157, 159, 160, 174, 191, 193, 195, 196, 197, 198, 199, 200, 208, 211, 212, 213, 215, 217, 218, 219, 229, 230, 231, 232, 251, 254, 255, 262, 268, 269, 277, 280, 288, 293, 295, 296, 297, 298, 299, 300, 301, 303, 312, 313, 319, 323, 325, 326, 331, 332, 333, 338, 340, 344, 351, 359, 362, 363, 364, 369, 371, 385, 386, 390, 391, 392, 393, 395, 396, 397, 399, 405, 407, 408, 409, 411, 413, 414, 416, 418, 424, 429, 430, 431, 434, 435, 436, 438, 440, 443, 447, 448, 452, 453, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 484, 485, 486, 487, 490, 496, 501, 502, 504, 505, 506, 507, 514, 522, 526, 527, 528, 529, 538, 545, 549, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 577, 578, 579, 580, 587, 588, 589, 590, 592, 594, 595, 596, 598, 599, 600, 601, 605, 606, 608, 610, 611, 612, 614, 615, 620, 621, 622, 624, 627, 628, 631, 633, 635, 636, 637, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 662, 665, 666, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 688, 691, 692, 696, 700, 701, 702, 703, 705, 706, 710, 711, 713, 715, 717, 718, 720, 722, 723, 724, 725, 733, 734, 736, 737, 739, 740, 741, 748, 750, 751, 752, 754, 755, 758, 760, 765, 769, 771, 773, 774, 775, 776, 777, 779, 781, 791, 798, 799, 804, 805, 808, 810, 811, 812, 816, 820, 821, 822, 823, 824, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 886, 888, 889, 890, 891, 892, 893, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 916, 918, 919, 920, 921, 922, 923, 926, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 956, 957, 958, 961, 962, 964, 965, 968, 1008, 1009, 1010, 1011, 1029, 1048, 1049, 1068, 1070, 1071, 1075, 1079, 1081, 1084, 1088, 1089, 1090, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1112, 1114, 1117, 1119, 1121, 1123, 1125, 1131, 1133, 1134, 1135, 1137, 1145, 1153, 1158, 1165, 1166, 1170, 1173, 1176, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1202, 1204, 1208, 1210, 1211, 1212, 1214, 1218, 1219, 1221, 1224, 1225, 1226, 1229, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1246, 1249], "value_and_grad": [7, 1110, 1130, 1136, 1145, 1213], "value_and_grad_f": [1202, 1208, 1233, 1236], "value_and_jvp": [1202, 1236], "value_flat": 1224, "value_fn": [1133, 1227], "value_structur": 1224, "value_tre": 1224, "valueerror": [56, 57, 72, 73, 120, 673, 674, 717, 718, 813, 824, 953, 956, 957, 1029, 1049, 1110, 1114, 1116, 1180, 1194, 1201, 1205, 1208, 1212, 1213, 1223, 1227, 1233], "van": [631, 699, 715, 896], "vandenbergh": [934, 952, 963], "vandermond": [711, 809], "vanderpla": [1108, 1189, 1194, 1195], "vanilla": [1136, 1216], "var": [12, 1107, 1110, 1135, 1202, 1204], "var_str": 1107, "vararg": 559, "vari": [188, 399, 472, 549, 577, 827, 1104, 1105, 1110, 1186, 1201, 1211, 1219], "variabl": [0, 12, 167, 209, 464, 467, 472, 567, 624, 636, 747, 840, 849, 914, 1007, 1107, 1110, 1115, 1119, 1121, 1122, 1124, 1125, 1127, 1130, 1133, 1152, 1180, 1182, 1184, 1188, 1193, 1199, 1200, 1202, 1204, 1206, 1208, 1223, 1225, 1227, 1230, 1233, 1234, 1236], "variad": [303, 1110, 1185], "varianc": [382, 472, 686, 711, 810, 1049, 1133, 1188, 1227], "variance_sc": [353, 354, 355, 356, 357, 358, 1146], "variancesc": 362, "variant": [939, 1101, 1107, 1127, 1145, 1180, 1186, 1189, 1211, 1216], "variat": [681, 683, 703, 724, 1007, 1206, 1234], "varieti": [1189, 1195, 1196, 1216], "variou": [71, 619, 914, 1104, 1113, 1176, 1187, 1195, 1201, 1208, 1214, 1218, 1232, 1233, 1243], "vast": 1185, "vastli": 1122, "vcat": 1107, "vdot": [71, 1101, 1205, 1214, 1227, 1230], "ve": [1107, 1112, 1122, 1135, 1136, 1137, 1183, 1185, 1188, 1190, 1192, 1193, 1194, 1201, 1203, 1205, 1206, 1208, 1209, 1214, 1216, 1218, 1221, 1227, 1233, 1234, 1242, 1246], "vec": [1205, 1230], "vecmat": 208, "vecs_in": 1107, "vector": [71, 110, 111, 114, 115, 143, 144, 145, 149, 151, 209, 212, 249, 254, 257, 333, 371, 472, 473, 490, 579, 624, 630, 631, 637, 643, 658, 664, 699, 701, 711, 780, 809, 811, 824, 837, 865, 869, 896, 900, 910, 924, 925, 926, 927, 956, 957, 1008, 1099, 1100, 1101, 1108, 1123, 1130, 1133, 1134, 1139, 1152, 1159, 1166, 1173, 1191, 1194, 1199, 1200, 1202, 1203, 1206, 1208, 1209, 1214, 1216, 1218, 1219, 1221, 1232, 1233, 1235, 1236, 1239, 1243], "vector_arg_valu": [1202, 1236], "vector_in": 1107, "vector_out": 1107, "vectoris": [1133, 1134, 1136, 1227, 1243], "vectorized_unop_abstract_ev": 1107, "vectorized_unop_batching_rul": 1107, "vee": [177, 1195], "veloc": [928, 1196], "vendor": 1118, "verbos": [1110, 1135, 1152, 1216, 1247], "veri": [71, 82, 84, 104, 391, 416, 418, 430, 465, 590, 635, 672, 748, 861, 926, 1104, 1107, 1110, 1124, 1127, 1130, 1131, 1132, 1133, 1136, 1170, 1185, 1186, 1189, 1191, 1192, 1193, 1195, 1198, 1199, 1205, 1207, 1212, 1218, 1219, 1221, 1227, 1231, 1238], "verif": 1212, "verifi": [74, 614, 1110, 1202, 1210, 1211, 1212, 1214, 1216, 1236, 1242], "versa": [150, 1110, 1158, 1188, 1199], "version": [0, 7, 22, 23, 32, 38, 47, 48, 71, 93, 102, 108, 112, 116, 119, 120, 125, 128, 150, 229, 295, 303, 312, 325, 340, 341, 394, 409, 411, 426, 427, 428, 441, 443, 444, 445, 447, 448, 471, 472, 480, 481, 485, 489, 498, 499, 503, 526, 529, 531, 532, 533, 538, 552, 557, 567, 576, 595, 624, 628, 633, 634, 644, 645, 656, 663, 664, 665, 670, 675, 676, 678, 679, 681, 682, 683, 684, 685, 686, 692, 696, 702, 703, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 728, 729, 734, 740, 741, 742, 745, 750, 751, 752, 764, 767, 768, 772, 774, 780, 798, 799, 805, 813, 824, 869, 892, 919, 933, 935, 943, 947, 961, 965, 1032, 1075, 1101, 1102, 1104, 1105, 1107, 1110, 1112, 1119, 1120, 1121, 1122, 1125, 1127, 1130, 1131, 1133, 1137, 1154, 1158, 1159, 1170, 1173, 1176, 1179, 1180, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1218, 1221, 1223, 1227, 1233, 1234, 1236, 1238, 1242, 1246, 1247], "versu": [1122, 1184, 1206, 1234], "vertic": [814, 815], "vetterl": [430, 562, 563, 628], "vf": 926, "vfoo": 1101, "vgrad": [1205, 1227], "vh": [637, 910], "vi": [892, 926], "via": [0, 13, 35, 50, 56, 137, 141, 142, 150, 208, 209, 336, 338, 339, 362, 409, 422, 652, 653, 654, 655, 688, 702, 705, 773, 824, 830, 837, 921, 924, 925, 1104, 1107, 1110, 1112, 1119, 1121, 1123, 1125, 1130, 1132, 1136, 1137, 1158, 1160, 1170, 1180, 1187, 1189, 1194, 1195, 1198, 1199, 1200, 1201, 1207, 1211, 1214, 1216, 1218, 1221, 1227, 1231, 1232, 1236, 1238, 1239, 1242, 1243, 1246, 1248], "viabl": [1189, 1216], "vice": [150, 1110, 1158, 1188, 1199], "video": [1108, 1133, 1205, 1227, 1230], "view": [426, 427, 428, 443, 445, 481, 485, 503, 531, 532, 533, 546, 664, 670, 728, 729, 734, 740, 742, 764, 767, 772, 780, 834, 836, 1104, 1110, 1158, 1170, 1186, 1187, 1188, 1199, 1211, 1212, 1216], "viewabl": 1112, "viewer": [834, 836, 1223], "violat": [285, 813, 1134, 1191, 1195, 1214], "viridi": 1207, "virtualenv": 1119, "visibl": [9, 35, 464, 1110, 1194, 1198, 1214], "visual": [20, 21, 831, 1007, 1112, 1119, 1120, 1127, 1140, 1176, 1201, 1216, 1218, 1223, 1244], "visualis": 567, "visualize_array_shard": [1201, 1211, 1244], "vital": 1189, "vjp": [0, 7, 13, 15, 332, 333, 1110, 1123, 1152, 1197, 1206, 1208, 1210, 1233, 1234], "vjp_a": [1200, 1227], "vjp_flat": 1107, "vjp_fn": [1205, 1227], "vjp_fun": [1205, 1227], "vjp_py": [1208, 1233], "vjp_x": [1200, 1227], "vjpfun": 1100, "vl": 246, "vladimir": [1130, 1131, 1135, 1136, 1137], "vlatimir": 1133, "vlog": 1152, "vm": [1110, 1127, 1136, 1222, 1223], "vmap": [0, 71, 165, 191, 262, 319, 333, 338, 813, 824, 837, 1104, 1109, 1110, 1117, 1121, 1122, 1123, 1132, 1133, 1159, 1179, 1184, 1185, 1186, 1188, 1189, 1194, 1199, 1200, 1202, 1203, 1204, 1208, 1209, 1211, 1214, 1218, 1224, 1230, 1231, 1232, 1233, 1236, 1239, 1243, 1246, 1247], "vmap_batched_apply_matrix": [1210, 1242], "vmap_batched_log_joint": 1213, "vmap_f": [1202, 1208, 1233, 1236, 1247], "vmap_flat": 1107, "vmap_jaxpr": 1107, "vmap_jmp": [1205, 1227], "vmap_mjp": [1205, 1227], "vmap_rul": 1107, "vmap_trac": 1107, "vmap_v": [1205, 1227], "vmat": 0, "vmem": [1219, 1220], "vmodul": 1152, "void": [0, 494, 1193], "vol": [572, 882, 919, 923, 1007], "volume12": 1145, "vpu": 1221, "vq": [1110, 1189], "vr": 246, "vreg": 1221, "vscode": 1185, "vspace": 1107, "vsplit": 815, "vstack": [1110, 1205, 1227], "vtype": [1202, 1236], "vv": 1101, "w": [14, 17, 19, 71, 196, 246, 247, 342, 430, 440, 508, 562, 563, 572, 621, 622, 628, 645, 711, 758, 892, 893, 921, 922, 935, 936, 937, 1007, 1107, 1110, 1117, 1119, 1122, 1128, 1130, 1132, 1133, 1136, 1137, 1152, 1173, 1184, 1188, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1211, 1214, 1223, 1227, 1230, 1231, 1234, 1236, 1239, 1246], "w0": 1214, "w0x": 1214, "w1": [1201, 1206, 1214, 1234], "w2": [1201, 1206, 1214, 1234], "w3": [1201, 1206, 1234], "w4": 1201, "w_": 1130, "w_b_pair": [1206, 1234], "w_copi": 1201, "w_dirderiv_autodiff": [1205, 1230], "w_dirderiv_numer": [1205, 1230], "w_dtype": 0, "w_first": 1211, "w_frag": 1211, "w_grad": [1205, 1230], "w_grad_numer": [1205, 1230], "w_i": [566, 568], "w_init": 1146, "w_kei": [1203, 1205, 1209, 1227, 1230], "w_last": 1211, "w_shape": 0, "w_type": 0, "wa": [0, 14, 15, 37, 57, 71, 72, 319, 440, 448, 681, 683, 703, 711, 724, 740, 755, 765, 901, 906, 921, 1079, 1081, 1104, 1110, 1112, 1114, 1117, 1119, 1120, 1121, 1122, 1128, 1130, 1131, 1137, 1152, 1180, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1208, 1211, 1212, 1213, 1214, 1216, 1219, 1223, 1224, 1226, 1227, 1233, 1236, 1238, 1246, 1247], "wai": [7, 9, 13, 41, 71, 120, 369, 480, 497, 514, 515, 516, 521, 576, 702, 745, 746, 750, 804, 912, 922, 955, 957, 965, 1007, 1075, 1104, 1107, 1109, 1110, 1117, 1119, 1121, 1122, 1123, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1170, 1175, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1225, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247], "wait": [38, 66, 1106, 1117, 1183, 1185, 1198, 1211, 1221], "wait_on_operation_queu": 0, "walk": [1133, 1199, 1204, 1221, 1230], "walkthrough": [1108, 1176], "wall": [0, 1106, 1211], "want": [0, 17, 34, 56, 150, 213, 279, 333, 384, 834, 836, 1075, 1076, 1104, 1105, 1107, 1110, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1128, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1151, 1152, 1158, 1180, 1182, 1183, 1184, 1186, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1214, 1216, 1219, 1224, 1227, 1232, 1233, 1234, 1236, 1237, 1238, 1242, 1243, 1244, 1246, 1247], "warm": [1131, 1238], "warmup": 1211, "warn": [104, 337, 384, 399, 443, 624, 673, 674, 711, 750, 819, 896, 1110, 1122, 1130, 1194, 1199, 1201, 1203, 1215, 1221, 1232], "warp": [0, 147], "warranti": [1193, 1203, 1209], "wasd": 1223, "wasn": 1192, "wast": [1188, 1193, 1206, 1221, 1234], "wave": 559, "wb": [746, 1211], "wb_grad": [1205, 1230], "wbar": 1188, "we": [0, 9, 13, 17, 18, 34, 66, 72, 73, 120, 150, 158, 159, 160, 213, 279, 280, 281, 333, 339, 340, 372, 373, 452, 472, 485, 736, 837, 903, 912, 924, 925, 926, 953, 965, 1075, 1101, 1104, 1105, 1106, 1107, 1108, 1110, 1112, 1114, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1128, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1151, 1152, 1154, 1158, 1159, 1173, 1178, 1179, 1180, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1227, 1231, 1233, 1234, 1239, 1242, 1243, 1244, 1246, 1247], "weak": [150, 1123, 1185, 1189, 1195, 1248], "weak_typ": [7, 13, 44, 268, 317, 333, 691, 1075, 1101, 1121, 1131, 1182, 1195, 1199, 1200, 1202, 1205, 1208, 1212, 1227, 1232, 1233, 1236, 1237, 1238, 1247, 1248], "weakli": [150, 231, 1110, 1123, 1195, 1247], "weakref": 1107, "weakref_lru_cach": [1208, 1212, 1233], "web": [758, 1120, 1223], "websit": [1109, 1127], "wedg": 175, "wee": 1211, "weed": [1200, 1227], "weep": 1199, "weibul": [681, 683, 703, 724, 880], "weigh": [566, 568, 1189], "weight": [0, 193, 195, 196, 198, 199, 251, 352, 353, 354, 355, 356, 357, 358, 361, 364, 429, 431, 472, 562, 563, 565, 566, 567, 568, 711, 903, 1007, 1125, 1132, 1135, 1136, 1137, 1145, 1186, 1203, 1205, 1206, 1209, 1211, 1227, 1231, 1234, 1244, 1246, 1247], "weight_info": 0, "weight_named_shap": 0, "weights_kei": [1136, 1137, 1246], "weights_shard": 1244, "weird": [1107, 1199], "weisstein": 758, "welch": [919, 1110], "welcom": [1108, 1112, 1113, 1122], "well": [0, 7, 475, 496, 527, 565, 567, 624, 636, 645, 675, 720, 838, 858, 912, 1089, 1104, 1107, 1108, 1110, 1113, 1117, 1122, 1128, 1130, 1135, 1137, 1152, 1159, 1173, 1179, 1182, 1183, 1185, 1186, 1187, 1189, 1194, 1195, 1197, 1200, 1202, 1205, 1208, 1210, 1211, 1212, 1214, 1216, 1219, 1221, 1227, 1230, 1233, 1236, 1237, 1239, 1246], "went": 1248, "were": [66, 549, 748, 808, 847, 1102, 1107, 1109, 1110, 1115, 1120, 1121, 1122, 1123, 1128, 1136, 1137, 1152, 1159, 1166, 1171, 1173, 1180, 1183, 1184, 1185, 1186, 1189, 1192, 1193, 1194, 1195, 1196, 1197, 1199, 1201, 1206, 1216, 1234, 1246, 1247, 1248], "weren": [1188, 1200, 1227], "what": [0, 7, 150, 291, 340, 384, 447, 481, 494, 591, 645, 904, 1104, 1107, 1109, 1110, 1117, 1121, 1122, 1124, 1130, 1131, 1133, 1136, 1137, 1152, 1166, 1182, 1183, 1186, 1187, 1188, 1190, 1191, 1195, 1199, 1200, 1201, 1202, 1205, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1220, 1221, 1227, 1230, 1232, 1233, 1237, 1238, 1242, 1244, 1246, 1248], "whatev": [150, 911, 1110, 1119, 1158, 1188, 1204], "wheel": [1110, 1119, 1186, 1196], "when": [0, 7, 9, 13, 14, 15, 18, 22, 23, 26, 27, 35, 37, 38, 56, 57, 67, 69, 71, 119, 120, 125, 145, 146, 147, 150, 157, 158, 159, 160, 191, 195, 196, 232, 251, 262, 280, 281, 293, 295, 296, 297, 298, 299, 300, 301, 319, 337, 339, 340, 341, 342, 384, 399, 411, 413, 429, 441, 459, 475, 476, 490, 521, 529, 542, 543, 546, 564, 568, 619, 631, 634, 637, 644, 645, 651, 657, 658, 664, 675, 676, 677, 680, 682, 685, 688, 692, 707, 710, 711, 713, 728, 736, 740, 747, 748, 749, 750, 751, 773, 781, 798, 799, 809, 816, 824, 825, 834, 836, 837, 861, 886, 893, 896, 907, 909, 914, 919, 920, 921, 922, 923, 924, 925, 926, 937, 953, 1029, 1048, 1049, 1075, 1081, 1102, 1105, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1119, 1121, 1122, 1123, 1124, 1125, 1128, 1130, 1134, 1135, 1136, 1137, 1145, 1151, 1152, 1154, 1158, 1170, 1173, 1179, 1182, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1204, 1205, 1206, 1208, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1232, 1233, 1234, 1237, 1242, 1243, 1246, 1247, 1248], "whenev": [71, 780, 1134, 1183, 1188, 1199, 1214, 1221], "where": [0, 4, 7, 13, 28, 34, 57, 69, 71, 72, 73, 75, 77, 103, 104, 120, 143, 144, 145, 148, 149, 150, 151, 158, 159, 160, 188, 191, 195, 196, 197, 208, 215, 240, 246, 248, 249, 250, 251, 255, 256, 281, 295, 296, 297, 298, 299, 300, 301, 302, 333, 340, 346, 353, 354, 355, 356, 357, 358, 364, 366, 368, 369, 374, 378, 382, 390, 392, 393, 395, 397, 398, 399, 411, 427, 428, 441, 452, 453, 459, 464, 468, 472, 473, 486, 490, 503, 505, 506, 513, 519, 521, 545, 549, 564, 566, 569, 570, 577, 590, 591, 594, 595, 596, 597, 598, 599, 600, 614, 634, 637, 644, 647, 650, 652, 653, 654, 655, 657, 660, 662, 666, 677, 678, 680, 682, 684, 685, 686, 691, 706, 707, 711, 720, 736, 747, 748, 749, 755, 764, 769, 771, 779, 780, 808, 810, 824, 837, 840, 842, 846, 849, 850, 855, 865, 870, 871, 873, 875, 879, 880, 892, 893, 894, 896, 897, 900, 901, 903, 904, 906, 910, 914, 919, 921, 923, 930, 938, 946, 948, 950, 953, 955, 956, 957, 962, 965, 1068, 1070, 1075, 1084, 1088, 1089, 1099, 1100, 1101, 1102, 1104, 1107, 1109, 1110, 1112, 1114, 1115, 1117, 1120, 1121, 1127, 1128, 1130, 1131, 1132, 1135, 1136, 1137, 1145, 1150, 1152, 1153, 1158, 1166, 1170, 1175, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1213, 1216, 1218, 1219, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1246, 1247, 1248], "where_": 1199, "wherea": [56, 471, 484, 896, 1107, 1117, 1133, 1185, 1188, 1199, 1208, 1211, 1227, 1233, 1248], "wherev": [705, 1186, 1192, 1195], "whether": [7, 16, 17, 19, 37, 38, 70, 73, 75, 78, 110, 111, 114, 115, 122, 144, 145, 148, 149, 150, 151, 208, 209, 214, 232, 238, 280, 295, 296, 297, 298, 299, 300, 301, 312, 331, 333, 345, 390, 391, 395, 398, 410, 414, 481, 487, 590, 591, 593, 604, 614, 620, 622, 634, 637, 644, 672, 682, 685, 729, 762, 820, 821, 822, 823, 837, 847, 888, 889, 890, 892, 894, 895, 897, 900, 903, 904, 905, 910, 921, 922, 1032, 1033, 1069, 1070, 1071, 1072, 1076, 1086, 1088, 1090, 1091, 1099, 1100, 1107, 1109, 1110, 1112, 1122, 1131, 1136, 1150, 1152, 1182, 1185, 1187, 1189, 1191, 1194, 1195, 1200, 1205, 1206, 1208, 1211, 1212, 1227, 1233, 1234, 1237, 1238], "which": [0, 7, 13, 14, 15, 17, 22, 23, 26, 30, 31, 32, 34, 35, 37, 47, 48, 50, 56, 57, 66, 67, 68, 69, 70, 71, 73, 77, 86, 87, 96, 103, 120, 127, 130, 137, 141, 142, 144, 145, 148, 149, 150, 151, 157, 159, 160, 165, 174, 180, 190, 191, 193, 195, 196, 197, 198, 199, 200, 208, 209, 212, 213, 214, 216, 232, 238, 246, 247, 255, 256, 262, 268, 280, 295, 296, 297, 298, 299, 300, 301, 303, 311, 312, 319, 326, 331, 333, 338, 339, 340, 342, 346, 351, 361, 368, 369, 371, 378, 389, 390, 392, 393, 395, 396, 397, 398, 405, 407, 408, 409, 410, 411, 413, 422, 424, 429, 431, 432, 435, 437, 438, 439, 441, 447, 452, 459, 461, 464, 466, 468, 471, 472, 475, 476, 480, 482, 484, 485, 486, 487, 488, 489, 490, 496, 500, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 531, 538, 541, 542, 543, 544, 549, 552, 555, 556, 557, 559, 560, 561, 564, 570, 571, 579, 580, 587, 588, 595, 608, 609, 610, 611, 612, 613, 614, 619, 628, 631, 641, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 668, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 691, 692, 693, 700, 701, 702, 703, 706, 707, 711, 715, 717, 718, 720, 721, 722, 723, 724, 725, 729, 732, 733, 735, 736, 737, 739, 741, 746, 747, 749, 750, 751, 752, 758, 761, 762, 764, 768, 769, 770, 771, 773, 777, 779, 780, 781, 782, 783, 784, 788, 790, 791, 798, 799, 804, 808, 810, 811, 812, 813, 816, 824, 831, 832, 834, 836, 837, 844, 847, 854, 861, 869, 882, 883, 884, 885, 886, 893, 895, 896, 903, 907, 912, 915, 917, 919, 920, 921, 922, 923, 924, 925, 926, 955, 956, 957, 964, 1029, 1048, 1049, 1069, 1070, 1071, 1072, 1075, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1109, 1110, 1112, 1114, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1145, 1151, 1152, 1153, 1158, 1159, 1170, 1171, 1175, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248], "whichev": [319, 1182, 1237], "while": [0, 5, 6, 7, 12, 13, 17, 34, 37, 38, 49, 56, 66, 71, 196, 229, 295, 325, 380, 431, 443, 467, 472, 525, 545, 546, 565, 567, 630, 679, 681, 683, 684, 686, 706, 720, 739, 771, 782, 824, 828, 829, 830, 834, 836, 1107, 1110, 1111, 1117, 1121, 1122, 1125, 1128, 1130, 1131, 1133, 1134, 1136, 1151, 1152, 1170, 1173, 1180, 1183, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1211, 1212, 1214, 1216, 1219, 1221, 1223, 1224, 1227, 1230, 1233, 1238, 1243], "while_loop": [34, 208, 229, 1107, 1110, 1122, 1182, 1200, 1208, 1227, 1233, 1237], "while_p": 1159, "whileop": [295, 325], "whilst": 426, "whim": 1214, "whio": 196, "whistl": 1190, "whitespac": [552, 750], "whl": [1119, 1128], "who": [1188, 1189, 1190, 1191], "whole": [16, 150, 792, 912, 1010, 1068, 1069, 1070, 1071, 1072, 1084, 1086, 1088, 1090, 1091, 1107, 1120, 1122, 1133, 1158, 1180, 1189, 1200, 1203, 1205, 1206, 1209, 1214, 1218, 1224, 1227, 1234], "whose": [50, 70, 91, 145, 148, 149, 213, 249, 251, 303, 340, 359, 362, 363, 413, 429, 448, 485, 505, 506, 526, 615, 620, 621, 622, 657, 662, 670, 677, 678, 680, 682, 685, 686, 700, 707, 765, 779, 785, 805, 810, 881, 888, 892, 909, 1119, 1122, 1123, 1134, 1152, 1158, 1173, 1175, 1195, 1199, 1212, 1224, 1243, 1246, 1247], "why": [0, 150, 519, 1120, 1121, 1134, 1136, 1137, 1158, 1188, 1191, 1192, 1194, 1198, 1202, 1205, 1212, 1223, 1227, 1243, 1246, 1247], "wi0": 1186, "wi1": 1186, "wide": [619, 1108, 1189, 1194, 1195, 1205, 1216, 1219, 1227], "widest": [720, 771], "width": [493, 565, 567, 570, 701, 815, 893, 1195, 1206, 1207, 1234], "wiki": [209, 388, 401, 403, 406, 421, 425, 430, 434, 436, 464, 501, 527, 562, 563, 589, 606, 630, 646, 647, 648, 711, 758, 776, 781, 882, 886, 928, 929, 935, 963, 1048], "wikipedia": [209, 388, 401, 403, 406, 421, 425, 430, 434, 436, 464, 501, 527, 562, 563, 589, 606, 630, 646, 647, 648, 711, 758, 776, 781, 882, 886, 928, 929, 935, 963, 1048], "wild": 1194, "wildcard": 1195, "wilei": [606, 929, 958, 1007], "willing": [1195, 1248], "win": [1184, 1205, 1214, 1227], "window": [193, 195, 196, 197, 199, 430, 440, 510, 524, 562, 563, 606, 919, 921, 922, 923, 1105, 1110, 1118, 1127, 1166, 1187, 1207, 1216, 1219, 1242], "window_dil": 287, "window_dimens": 287, "window_funct": [430, 562, 563, 606], "window_shap": 1146, "window_strid": [50, 193, 195, 196, 197, 199, 287, 1212], "wio": 1207, "wipe": 1119, "wisdom": [1205, 1230], "wise": [94, 95, 262, 331, 343, 344, 345, 347, 348, 349, 350, 366, 367, 370, 372, 373, 374, 375, 376, 377, 379, 381, 383, 385, 386, 387, 388, 389, 391, 400, 401, 402, 403, 404, 405, 406, 420, 421, 423, 424, 425, 432, 434, 436, 437, 439, 448, 450, 462, 463, 466, 469, 470, 488, 489, 493, 500, 501, 502, 504, 507, 528, 538, 540, 542, 543, 544, 560, 561, 564, 569, 570, 571, 589, 590, 594, 596, 597, 598, 599, 609, 611, 612, 646, 647, 648, 652, 653, 654, 655, 661, 667, 668, 669, 671, 690, 691, 693, 716, 717, 718, 731, 732, 754, 755, 757, 760, 765, 766, 770, 775, 776, 790, 791, 809, 814, 815, 937, 940, 954, 960, 1179, 1202, 1224, 1236, 1242, 1244], "wish": [362, 481, 1122, 1133, 1185, 1223, 1224, 1227, 1247], "with_config": 1110, "with_cur_sublevel": [1208, 1212, 1233], "with_info": 1209, "with_inner_jit": 56, "with_label": 1195, "with_memory_kind": 1175, "with_sharding_constraint": [1110, 1201, 1211, 1244], "within": [34, 80, 101, 229, 232, 251, 295, 296, 297, 298, 299, 300, 301, 319, 339, 341, 342, 391, 399, 411, 447, 514, 515, 516, 519, 521, 529, 548, 550, 565, 567, 590, 637, 652, 653, 654, 655, 692, 751, 798, 799, 820, 821, 822, 823, 926, 927, 1075, 1105, 1107, 1110, 1117, 1121, 1122, 1136, 1154, 1158, 1159, 1170, 1179, 1183, 1184, 1185, 1189, 1191, 1194, 1198, 1199, 1205, 1211, 1212, 1216, 1226, 1227, 1232, 1238, 1239, 1244, 1248, 1249], "without": [0, 18, 30, 50, 56, 104, 333, 430, 441, 447, 459, 490, 498, 530, 576, 579, 645, 734, 745, 750, 773, 813, 834, 836, 847, 1081, 1105, 1106, 1110, 1114, 1115, 1119, 1122, 1127, 1130, 1133, 1135, 1136, 1152, 1159, 1180, 1183, 1184, 1185, 1186, 1187, 1191, 1194, 1195, 1196, 1200, 1201, 1203, 1205, 1206, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1225, 1227, 1234], "wlast": [1206, 1234], "wolfram": 758, "won": [1107, 1114, 1117, 1130, 1134, 1137, 1183, 1190, 1192, 1201, 1203, 1204, 1205, 1209, 1214, 1221, 1227], "wonder": [1131, 1186, 1214, 1238], "woo": 1107, "woohoo": 1192, "word": [145, 209, 229, 295, 325, 399, 471, 514, 515, 516, 519, 521, 782, 907, 1101, 1107, 1111, 1122, 1134, 1135, 1186, 1187, 1190, 1195, 1200, 1201, 1205, 1206, 1211, 1214, 1227, 1234], "work": [0, 13, 18, 19, 66, 67, 69, 71, 120, 333, 364, 394, 429, 441, 459, 485, 489, 567, 711, 722, 723, 736, 824, 831, 837, 926, 1007, 1075, 1103, 1105, 1106, 1107, 1108, 1110, 1114, 1117, 1119, 1120, 1121, 1122, 1123, 1127, 1128, 1130, 1132, 1133, 1136, 1139, 1145, 1151, 1152, 1170, 1175, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1201, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1219, 1221, 1223, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1239, 1242, 1244], "workaround": [816, 1110, 1133, 1193, 1227], "worker": 1198, "worker_init_fn": 1203, "workflow": [1159, 1185, 1190, 1195, 1200, 1227], "workload": [1125, 1191, 1216, 1219, 1222], "workon": 1119, "workspac": [1119, 1196], "world": [49, 494, 1183, 1185, 1186, 1190, 1203, 1205, 1209, 1214, 1216, 1217, 1227], "worri": [71, 1130, 1137, 1186, 1204, 1208, 1214, 1233, 1246], "wors": [440, 1191], "worst": [120, 1213], "worth": [1107, 1130, 1131, 1133, 1134, 1184, 1188, 1198, 1206, 1219, 1227, 1234, 1238, 1243], "worthwhil": 1194, "would": [157, 158, 165, 271, 272, 273, 279, 280, 281, 331, 340, 410, 494, 549, 557, 644, 656, 657, 688, 702, 729, 747, 748, 750, 764, 820, 821, 822, 823, 937, 1048, 1075, 1102, 1104, 1107, 1110, 1114, 1119, 1121, 1122, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1158, 1159, 1180, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1204, 1205, 1206, 1207, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1227, 1230, 1231, 1234, 1236, 1238, 1242, 1243, 1246, 1247, 1248], "wouldn": [1128, 1131, 1137, 1188, 1193, 1200, 1206, 1227, 1234, 1238, 1246], "wrap": [0, 14, 71, 132, 150, 156, 159, 160, 174, 180, 190, 191, 195, 200, 212, 213, 215, 218, 232, 241, 269, 285, 286, 287, 289, 290, 296, 297, 298, 299, 300, 301, 302, 310, 312, 319, 324, 340, 341, 452, 526, 551, 701, 723, 729, 808, 881, 912, 916, 918, 1075, 1102, 1107, 1109, 1110, 1122, 1131, 1132, 1133, 1158, 1173, 1176, 1189, 1199, 1202, 1204, 1208, 1212, 1214, 1227, 1231, 1233, 1236, 1238, 1246], "wrap_init": [1202, 1236, 1247], "wrap_key_data": [1173, 1194], "wrappedfun": [128, 130, 131, 132], "wrapper": [0, 13, 19, 183, 193, 198, 199, 214, 216, 217, 219, 238, 278, 311, 548, 550, 551, 665, 696, 813, 832, 1080, 1082, 1107, 1117, 1166, 1190, 1197, 1199, 1200, 1205, 1206, 1208, 1212, 1221, 1227, 1233, 1234, 1236, 1238], "wrinkl": 1190, "writabl": 443, "write": [0, 19, 68, 217, 218, 219, 443, 481, 485, 526, 664, 734, 813, 832, 903, 1103, 1106, 1107, 1108, 1110, 1112, 1119, 1120, 1122, 1130, 1133, 1136, 1137, 1145, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1195, 1197, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1214, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1227, 1233, 1234, 1235, 1236, 1239, 1243, 1244, 1246, 1247, 1248], "write_cotang": 1107, "write_prim": 1107, "writer": 1216, "written": [443, 526, 813, 832, 957, 965, 1102, 1110, 1117, 1119, 1122, 1130, 1131, 1133, 1134, 1136, 1152, 1182, 1183, 1199, 1200, 1202, 1204, 1205, 1214, 1216, 1218, 1221, 1227, 1236, 1237, 1238, 1243], "wrong": [0, 1110, 1127, 1185, 1188, 1192], "wrote": [1201, 1218], "wrt": 1130, "wsl2": 1127, "wst": [1132, 1231], "wu": 1211, "www": [13, 196, 197, 291, 527, 628, 935, 944, 945, 948, 949, 950, 951, 1112, 1123, 1145, 1203, 1209, 1223], "wx": 1130, "x": [0, 1, 4, 7, 13, 14, 15, 18, 19, 29, 30, 31, 32, 34, 38, 45, 49, 50, 55, 56, 57, 63, 64, 71, 77, 119, 120, 125, 145, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 182, 184, 185, 186, 187, 189, 192, 201, 202, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 293, 294, 295, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 317, 318, 320, 321, 322, 326, 327, 328, 332, 333, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 362, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 400, 401, 402, 403, 404, 405, 406, 416, 420, 421, 422, 423, 424, 425, 431, 433, 434, 436, 442, 448, 450, 453, 455, 456, 462, 463, 467, 468, 469, 470, 471, 472, 477, 478, 479, 487, 489, 494, 501, 502, 504, 507, 509, 511, 512, 515, 516, 517, 525, 528, 534, 535, 536, 540, 545, 546, 549, 566, 568, 572, 573, 581, 582, 583, 584, 587, 589, 591, 592, 594, 596, 597, 598, 599, 600, 601, 615, 618, 624, 626, 629, 631, 636, 638, 641, 643, 646, 647, 648, 649, 653, 657, 659, 669, 672, 688, 690, 705, 707, 711, 712, 715, 716, 726, 727, 731, 738, 741, 746, 747, 750, 753, 754, 755, 757, 758, 760, 765, 766, 775, 776, 781, 791, 794, 795, 796, 797, 800, 801, 802, 803, 807, 809, 816, 824, 829, 830, 837, 841, 845, 846, 850, 851, 852, 854, 855, 857, 860, 862, 863, 864, 865, 866, 868, 869, 871, 873, 876, 877, 879, 880, 882, 883, 884, 885, 886, 889, 902, 907, 908, 913, 914, 919, 921, 922, 923, 924, 925, 926, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 959, 960, 962, 963, 964, 966, 967, 968, 973, 974, 975, 976, 977, 978, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1012, 1013, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1070, 1077, 1080, 1082, 1088, 1089, 1100, 1101, 1102, 1104, 1106, 1107, 1110, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1151, 1152, 1153, 1158, 1159, 1170, 1175, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1221, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1244, 1246, 1247, 1248], "x0": [9, 914, 924, 925, 926, 1159], "x0_bar": 9, "x1": [268, 389, 405, 424, 432, 435, 437, 438, 439, 466, 488, 489, 500, 527, 538, 541, 542, 543, 544, 555, 560, 561, 564, 571, 608, 609, 610, 611, 612, 616, 625, 632, 639, 642, 650, 651, 652, 654, 655, 658, 661, 664, 667, 668, 671, 691, 693, 717, 718, 732, 737, 770, 790, 812, 1107, 1152, 1186, 1199, 1211, 1221], "x2": [49, 268, 389, 405, 424, 432, 435, 437, 438, 439, 466, 488, 489, 500, 527, 538, 541, 542, 543, 544, 555, 560, 561, 564, 571, 608, 609, 610, 611, 612, 616, 625, 632, 639, 642, 650, 651, 652, 654, 655, 658, 661, 664, 667, 668, 671, 691, 693, 717, 718, 732, 737, 770, 790, 812, 1107, 1199, 1212, 1221], "x64": [63, 64, 1110, 1199], "x64_enabl": 40, "x86": 1110, "x86_64": 1127, "x_": [903, 1186, 1200, 1211, 1227], "x_0": 1218, "x_1": [472, 1218], "x_1d": 1104, "x_2": 472, "x_arr": 1179, "x_aval": 1107, "x_bar": [1107, 1200, 1206, 1227, 1234], "x_bdim": 1107, "x_blk": 1211, "x_block": [1186, 1211], "x_dot": [14, 1107, 1200, 1227], "x_dtype": 0, "x_edg": 566, "x_f": 1104, "x_grad": 1117, "x_guess": [1200, 1227], "x_i": [368, 378, 472, 566, 568, 849, 1130], "x_index_map": 1221, "x_info": 0, "x_init": [1200, 1227], "x_j": [368, 378, 472], "x_jax": 1122, "x_jnp": 1212, "x_k": [251, 903], "x_n": 472, "x_np": [1122, 1212], "x_opt": 9, "x_prev": [1200, 1227], "x_ref": [1216, 1218, 1221], "x_rng": [1137, 1246], "x_sa": 1187, "x_shape": [0, 1201], "x_shard": [1201, 1244], "x_singl": 1201, "x_small": [1210, 1242], "x_spec": 0, "x_split": 1136, "x_star": [1200, 1227], "x_star_bar": [1200, 1227], "x_t": [1200, 1227], "x_type": 0, "x_vmem_ref": 1221, "x_vreg": 1221, "x_with_shard": 326, "x_without_nan": 1199, "xarrai": 1214, "xavier": [353, 354], "xb": [1107, 1214], "xbar": [1100, 1188], "xc": [1107, 1187, 1202, 1212, 1236], "xcode": 1119, "xcompil": 0, "xct": [1202, 1236], "xdist": 1119, "xdot": 1107, "xe": [873, 1107], "xedg": 566, "xfals": [1182, 1237], "xfeed_manag": 1152, "xi": 664, "xla": [0, 18, 24, 28, 33, 34, 71, 150, 156, 157, 169, 174, 180, 190, 191, 195, 196, 197, 200, 212, 213, 215, 218, 232, 241, 269, 272, 279, 280, 285, 286, 287, 289, 290, 291, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 312, 319, 324, 325, 329, 331, 336, 337, 341, 342, 498, 499, 824, 827, 1102, 1104, 1107, 1110, 1114, 1117, 1122, 1123, 1128, 1131, 1136, 1151, 1152, 1158, 1166, 1167, 1170, 1173, 1175, 1180, 1183, 1186, 1187, 1190, 1191, 1194, 1196, 1199, 1200, 1204, 1206, 1207, 1210, 1211, 1216, 1227, 1234, 1238, 1242, 1244], "xla_bridg": [1107, 1110, 1202, 1236], "xla_cal": [150, 1107, 1110, 1190, 1204], "xla_call_abstract_eval_rul": 1107, "xla_call_impl": 1107, "xla_call_jvp_rul": 1107, "xla_call_p": [1107, 1110], "xla_call_partial_ev": 1107, "xla_call_peval_eqn": 1107, "xla_call_transl": 1107, "xla_call_transpose_rul": 1107, "xla_call_vmap_rul": 1107, "xla_client": [0, 194, 331, 1102, 1107, 1187, 1196], "xla_comput": [1110, 1122], "xla_computation_f": 1102, "xla_computation_to_mlir_modul": 1107, "xla_const": 1107, "xla_destructur": 1110, "xla_extens": [291, 1130, 1199, 1202, 1212, 1236], "xla_extension_vers": [1196, 1212], "xla_flag": [1125, 1136, 1173, 1211, 1214], "xla_force_host_platform_device_count": [1136, 1211, 1214], "xla_gpu_all_gather_combine_threshold_byt": 1125, "xla_gpu_all_reduce_combine_threshold_byt": 1125, "xla_gpu_collective_permute_decomposer_threshold": 1125, "xla_gpu_enable_async_collect": 1125, "xla_gpu_enable_highest_priority_async_stream": 1125, "xla_gpu_enable_latency_hiding_schedul": 1125, "xla_gpu_enable_pipelined_collect": 1125, "xla_gpu_enable_triton_softmax_fus": 1125, "xla_gpu_reduce_scatter_combine_threshold_byt": 1125, "xla_gpu_triton_gemm_ani": 1125, "xla_param": 1107, "xla_pmap": [1110, 1204], "xla_python_client_alloc": [1119, 1124], "xla_python_client_mem_fract": [1110, 1122, 1124], "xla_python_client_prealloc": [1119, 1122, 1124], "xla_tpu_spmd_rng_bit_generator_unsaf": 1173, "xla_transl": 1107, "xlabel": 1213, "xlabuild": 1107, "xlacompatibleshard": [150, 1158, 1175], "xlacomput": [1107, 1110], "xladot": 1110, "xlalow": 1176, "xlaop": [1107, 1110, 1202, 1236], "xlaopshardingproto": 1187, "xlb": 1128, "xlim": 1195, "xlu": 1219, "xmap": [0, 1103, 1104, 1110, 1117, 1188, 1198], "xmax": 566, "xmin": 566, "xmode": [1199, 1208, 1212], "xn": 664, "xnorm": 1186, "xop": 1107, "xor": [439, 655], "xp": [587, 1148], "xrang": 1191, "xsp": 1159, "xst": [1132, 1231], "xt": [659, 1202, 1236], "xtrue": [1182, 1237], "xx": [828, 1110, 1124], "xy": [664, 1186, 1218], "y": [0, 7, 9, 13, 14, 15, 31, 32, 34, 49, 55, 57, 71, 111, 115, 119, 125, 147, 155, 157, 167, 169, 175, 177, 178, 189, 209, 211, 217, 218, 219, 220, 233, 234, 240, 243, 261, 263, 264, 265, 266, 270, 272, 276, 279, 280, 288, 289, 295, 304, 305, 306, 318, 322, 332, 333, 338, 339, 387, 400, 402, 404, 405, 420, 423, 424, 448, 450, 462, 463, 467, 469, 472, 478, 479, 488, 489, 494, 507, 512, 517, 538, 540, 541, 542, 543, 544, 549, 555, 566, 568, 587, 590, 594, 596, 597, 601, 604, 608, 609, 646, 647, 648, 649, 652, 653, 654, 655, 658, 661, 667, 668, 671, 681, 683, 688, 690, 703, 711, 716, 717, 718, 724, 726, 727, 728, 731, 732, 742, 747, 753, 754, 757, 760, 765, 770, 775, 776, 781, 790, 791, 816, 824, 837, 882, 883, 885, 886, 919, 930, 937, 952, 963, 966, 967, 1070, 1080, 1082, 1088, 1100, 1101, 1104, 1107, 1110, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1130, 1135, 1136, 1137, 1151, 1152, 1153, 1159, 1170, 1175, 1180, 1183, 1186, 1187, 1188, 1191, 1193, 1194, 1195, 1196, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1216, 1218, 1221, 1223, 1224, 1225, 1226, 1227, 1232, 1233, 1234, 1236, 1244, 1246, 1247, 1248], "y0": 32, "y1": [32, 669, 1152, 1221], "y2": [49, 669, 1212, 1221], "y3": [1186, 1211], "y4": [1186, 1211], "y5": [1186, 1211], "y_0": 1218, "y_1": 1218, "y_1d": 1104, "y_att": 1186, "y_bar": [9, 1107, 1200, 1206, 1227, 1234], "y_bdim": 1107, "y_blk": [1186, 1211], "y_block": 1211, "y_dot": [14, 1107, 1200, 1227], "y_edg": 566, "y_f": 1104, "y_fuse": 1186, "y_hat": [711, 1159], "y_i": [566, 568], "y_jnp": 1212, "y_l": 957, "y_mlp": 1186, "y_model": 1159, "y_n": 965, "y_np": 1212, "y_out": 1186, "y_po": 7, "y_pred": 71, "y_ref": [1216, 1218], "y_sa": 1187, "y_smooth": 1207, "y_split": 1136, "y_vmem_ref": 1221, "y_vreg": 1221, "yaml": 1119, "yank": 1110, "yann": 1203, "yashk2810": 1187, "yashkatariya": 1180, "ybar": [1100, 1107, 1188], "yc": [1187, 1202, 1236], "yct": [1202, 1236], "ydot": 1107, "ye": [1127, 1128, 1130], "year": [1185, 1186, 1219], "yedg": 566, "yet": [71, 120, 824, 909, 914, 1105, 1107, 1117, 1125, 1152, 1176, 1185, 1186, 1188, 1190, 1193, 1194, 1195, 1202, 1203, 1208, 1209, 1211, 1214, 1216, 1233, 1236], "yetanothercontain": 1135, "yield": [342, 409, 410, 527, 701, 774, 816, 954, 1066, 1107, 1110, 1199, 1208, 1212, 1213, 1233, 1238], "ylabel": 1213, "ylim": 1195, "ymax": 566, "ymin": 566, "yml": 1119, "york": [402, 404, 420, 423, 440, 469, 559, 562, 563, 572, 606, 715, 760, 775, 776, 935, 1007], "you": [0, 1, 14, 17, 18, 19, 34, 35, 55, 56, 57, 71, 76, 77, 82, 84, 150, 209, 213, 232, 262, 292, 296, 297, 298, 299, 300, 301, 333, 339, 409, 443, 480, 481, 485, 526, 576, 664, 702, 740, 745, 750, 773, 816, 824, 833, 834, 836, 888, 914, 924, 925, 926, 1075, 1081, 1102, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1145, 1146, 1152, 1158, 1159, 1170, 1173, 1175, 1180, 1182, 1185, 1188, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1219, 1221, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248], "your": [55, 56, 71, 77, 150, 339, 341, 342, 485, 527, 741, 824, 1102, 1108, 1110, 1112, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1124, 1127, 1131, 1133, 1135, 1144, 1152, 1158, 1179, 1180, 1185, 1193, 1194, 1197, 1198, 1199, 1205, 1210, 1211, 1214, 1218, 1219, 1223, 1224, 1225, 1227, 1232, 1233, 1234, 1238, 1239, 1242, 1244, 1247, 1249], "your_usernam": 1112, "yourself": [1131, 1133, 1134, 1199, 1227, 1238], "yt": [1202, 1236], "yz": 1186, "yzx": 1186, "z": [7, 9, 49, 394, 473, 549, 568, 571, 850, 905, 906, 933, 935, 937, 938, 943, 956, 957, 961, 964, 966, 967, 1101, 1104, 1107, 1114, 1116, 1117, 1120, 1121, 1122, 1152, 1153, 1180, 1186, 1187, 1188, 1189, 1191, 1195, 1196, 1199, 1201, 1202, 1205, 1206, 1207, 1208, 1211, 1214, 1216, 1218, 1221, 1225, 1226, 1227, 1232, 1233, 1234, 1236, 1248], "z1": 1221, "z2": 1221, "z7": 1119, "z_bar": [1107, 1205, 1206, 1227, 1234], "z_blk": 1211, "z_block": [1186, 1211], "z_dot": [1205, 1208, 1227, 1233], "z_i": 568, "z_partialsum": 1186, "z_posit": 49, "z_ref": 1218, "z_sa": 1187, "z_vmem_ref": 1221, "z_vreg": 1221, "zbar": 1188, "zc": [1187, 1202, 1236], "zeal": [1199, 1202, 1208, 1212, 1233, 1236, 1238, 1247], "zero": [1, 57, 104, 121, 147, 169, 187, 209, 211, 217, 218, 219, 268, 277, 288, 311, 364, 371, 380, 411, 416, 418, 430, 431, 435, 440, 468, 471, 473, 486, 498, 499, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 521, 522, 524, 525, 528, 529, 562, 563, 572, 591, 592, 598, 599, 600, 601, 606, 610, 619, 620, 622, 624, 627, 628, 631, 633, 635, 657, 672, 676, 684, 685, 686, 689, 691, 692, 700, 707, 710, 712, 713, 714, 715, 735, 741, 750, 751, 755, 769, 782, 783, 786, 787, 791, 804, 810, 816, 818, 847, 861, 882, 883, 884, 885, 888, 891, 896, 897, 907, 910, 915, 916, 917, 918, 919, 920, 922, 923, 926, 1075, 1107, 1110, 1114, 1121, 1133, 1135, 1137, 1146, 1159, 1175, 1182, 1185, 1186, 1190, 1193, 1194, 1195, 1199, 1200, 1201, 1202, 1207, 1208, 1211, 1213, 1214, 1216, 1219, 1224, 1227, 1233, 1236, 1237, 1239, 1246, 1247], "zeros_lik": [1107, 1193, 1200, 1211, 1221, 1227], "zeros_like1": 1107, "zeros_like2": 1107, "zeros_like_arrai": [1202, 1236], "zeta": 1110, "zgx9fwms2fnd2d8pwb2c3r2400gbn1": 1135, "zhang": 929, "zhangqiaorjc": 1186, "zip": [0, 747, 1107, 1110, 1135, 1186, 1191, 1199, 1201, 1203, 1208, 1209, 1211, 1212, 1216, 1233, 1238, 1247], "zmqinteractiveshel": 1212, "zmqshell": [1208, 1212, 1233], "zoom": 913, "zt": [1202, 1236], "zx": 1214, "zxx": [921, 922], "\u00b2": [1208, 1233], "\u00b3": [1208, 1233], "\u00b5": [1106, 1122, 1131, 1133, 1205, 1210, 1212, 1227, 1238, 1242], "\u00b9": [1208, 1233], "\u00e5": 909, "\u03b8": 957, "\u03bb": 892, "\u03c6": 957}, "titles": ["Custom operations for GPUs with C++ and CUDA", "jax.Array", "jax.Device", "jax.ShapeDtypeStruct", "jax.block_until_ready", "jax.check_tracer_leaks", "jax.checking_leaks", "jax.checkpoint", "jax.clear_caches", "jax.closure_convert", "jax.config", "jax.core.ClosedJaxpr", "jax.core.Jaxpr", "jax.custom_gradient", "jax.custom_jvp", "jax.custom_vjp", "jax.debug.breakpoint", "jax.debug.callback", "jax.debug.inspect_array_sharding", "jax.debug.print", "jax.debug.visualize_array_sharding", "jax.debug.visualize_sharding", "jax.debug_infs", "jax.debug_nans", "jax.default_backend", "jax.default_device", "jax.default_matmul_precision", "jax.default_prng_impl", "jax.device_count", "jax.device_get", "jax.device_put", "jax.device_put_replicated", "jax.device_put_sharded", "jax.devices", "jax.disable_jit", "jax.distributed.initialize", "jax.distributed.shutdown", "jax.dlpack.from_dlpack", "jax.dlpack.to_dlpack", "jax.dtypes.bfloat16", "jax.dtypes.canonicalize_dtype", "jax.dtypes.float0", "jax.dtypes.issubdtype", "jax.dtypes.prng_key", "jax.dtypes.result_type", "jax.dtypes.scalar_type_of", "jax.enable_checks", "jax.enable_custom_prng", "jax.enable_custom_vjp_by_custom_transpose", "jax.ensure_compile_time_eval", "jax.eval_shape", "jax.experimental.checkify.Error", "jax.experimental.checkify.JaxRuntimeError", "jax.experimental.checkify.all_checks", "jax.experimental.checkify.automatic_checks", "jax.experimental.checkify.check", "jax.experimental.checkify.check_error", "jax.experimental.checkify.checkify", "jax.experimental.checkify.div_checks", "jax.experimental.checkify.float_checks", "jax.experimental.checkify.index_checks", "jax.experimental.checkify.nan_checks", "jax.experimental.checkify.user_checks", "jax.experimental.disable_x64", "jax.experimental.enable_x64", "jax.experimental.host_callback.CallbackException", "jax.experimental.host_callback.barrier_wait", "jax.experimental.host_callback.call", "jax.experimental.host_callback.id_print", "jax.experimental.host_callback.id_tap", "jax.experimental.io_callback", "jax.experimental.maps.xmap", "jax.experimental.mesh_utils.create_device_mesh", "jax.experimental.mesh_utils.create_hybrid_device_mesh", "jax.experimental.multihost_utils.assert_equal", "jax.experimental.multihost_utils.broadcast_one_to_all", "jax.experimental.multihost_utils.global_array_to_host_local_array", "jax.experimental.multihost_utils.host_local_array_to_global_array", "jax.experimental.multihost_utils.process_allgather", "jax.experimental.multihost_utils.sync_global_devices", "jax.experimental.sparse.BCOO", "jax.experimental.sparse.BCSR", "jax.experimental.sparse.COO", "jax.experimental.sparse.CSC", "jax.experimental.sparse.CSR", "jax.experimental.sparse.JAXSparse", "jax.experimental.sparse.bcoo_broadcast_in_dim", "jax.experimental.sparse.bcoo_concatenate", "jax.experimental.sparse.bcoo_dot_general", "jax.experimental.sparse.bcoo_dot_general_sampled", "jax.experimental.sparse.bcoo_dynamic_slice", "jax.experimental.sparse.bcoo_extract", "jax.experimental.sparse.bcoo_fromdense", "jax.experimental.sparse.bcoo_gather", "jax.experimental.sparse.bcoo_multiply_dense", "jax.experimental.sparse.bcoo_multiply_sparse", "jax.experimental.sparse.bcoo_reduce_sum", "jax.experimental.sparse.bcoo_reshape", "jax.experimental.sparse.bcoo_slice", "jax.experimental.sparse.bcoo_sort_indices", "jax.experimental.sparse.bcoo_squeeze", "jax.experimental.sparse.bcoo_sum_duplicates", "jax.experimental.sparse.bcoo_todense", "jax.experimental.sparse.bcoo_transpose", "jax.experimental.sparse.bcoo_update_layout", "jax.experimental.sparse.bcsr_dot_general", "jax.experimental.sparse.bcsr_extract", "jax.experimental.sparse.bcsr_fromdense", "jax.experimental.sparse.bcsr_todense", "jax.experimental.sparse.coo_fromdense", "jax.experimental.sparse.coo_matmat", "jax.experimental.sparse.coo_matvec", "jax.experimental.sparse.coo_todense", "jax.experimental.sparse.csr_fromdense", "jax.experimental.sparse.csr_matmat", "jax.experimental.sparse.csr_matvec", "jax.experimental.sparse.csr_todense", "jax.experimental.sparse.empty", "jax.experimental.sparse.eye", "jax.experimental.sparse.grad", "jax.experimental.sparse.linalg.lobpcg_standard", "jax.experimental.sparse.linalg.spsolve", "jax.experimental.sparse.random_bcoo", "jax.experimental.sparse.sparsify", "jax.experimental.sparse.todense", "jax.experimental.sparse.value_and_grad", "jax.extend.linear_util.StoreException", "jax.extend.linear_util.WrappedFun", "jax.extend.linear_util.cache", "jax.extend.linear_util.merge_linear_aux", "jax.extend.linear_util.transformation", "jax.extend.linear_util.transformation_with_aux", "jax.extend.linear_util.wrap_init", "jax.extend.mlir.dialects", "jax.extend.mlir.ir", "jax.extend.mlir.passmanager", "jax.extend.random.define_prng_impl", "jax.extend.random.rbg_prng_impl", "jax.extend.random.seed_with_impl", "jax.extend.random.threefry2x32_p", "jax.extend.random.threefry_2x32", "jax.extend.random.threefry_prng_impl", "jax.extend.random.unsafe_rbg_prng_impl", "jax.flatten_util.ravel_pytree", "jax.grad", "jax.hessian", "jax.image.resize", "jax.image.scale_and_translate", "jax.jacfwd", "jax.jacrev", "jax.jit", "jax.jvp", "jax.lax.abs", "jax.lax.acos", "jax.lax.acosh", "jax.lax.add", "jax.lax.after_all", "jax.lax.all_gather", "jax.lax.all_to_all", "jax.lax.approx_max_k", "jax.lax.approx_min_k", "jax.lax.argmax", "jax.lax.argmin", "jax.lax.asin", "jax.lax.asinh", "jax.lax.associative_scan", "jax.lax.atan", "jax.lax.atan2", "jax.lax.atanh", "jax.lax.axis_index", "jax.lax.batch_matmul", "jax.lax.bessel_i0e", "jax.lax.bessel_i1e", "jax.lax.betainc", "jax.lax.bitcast_convert_type", "jax.lax.bitwise_and", "jax.lax.bitwise_not", "jax.lax.bitwise_or", "jax.lax.bitwise_xor", "jax.lax.broadcast", "jax.lax.broadcast_in_dim", "jax.lax.broadcast_shapes", "jax.lax.broadcast_to_rank", "jax.lax.broadcasted_iota", "jax.lax.cbrt", "jax.lax.ceil", "jax.lax.clamp", "jax.lax.clz", "jax.lax.collapse", "jax.lax.complex", "jax.lax.concatenate", "jax.lax.cond", "jax.lax.conj", "jax.lax.conv", "jax.lax.conv_dimension_numbers", "jax.lax.conv_general_dilated", "jax.lax.conv_general_dilated_local", "jax.lax.conv_general_dilated_patches", "jax.lax.conv_transpose", "jax.lax.conv_with_general_padding", "jax.lax.convert_element_type", "jax.lax.cos", "jax.lax.cosh", "jax.lax.cumlogsumexp", "jax.lax.cummax", "jax.lax.cummin", "jax.lax.cumprod", "jax.lax.cumsum", "jax.lax.custom_linear_solve", "jax.lax.custom_root", "jax.lax.digamma", "jax.lax.div", "jax.lax.dot", "jax.lax.dot_general", "jax.lax.dynamic_index_in_dim", "jax.lax.dynamic_slice", "jax.lax.dynamic_slice_in_dim", "jax.lax.dynamic_update_index_in_dim", "jax.lax.dynamic_update_slice", "jax.lax.dynamic_update_slice_in_dim", "jax.lax.eq", "jax.lax.erf", "jax.lax.erf_inv", "jax.lax.erfc", "jax.lax.exp", "jax.lax.expand_dims", "jax.lax.expm1", "jax.lax.fft", "jax.lax.floor", "jax.lax.fori_loop", "jax.lax.full", "jax.lax.full_like", "jax.lax.gather", "jax.lax.ge", "jax.lax.gt", "jax.lax.igamma", "jax.lax.igammac", "jax.lax.imag", "jax.lax.index_in_dim", "jax.lax.index_take", "jax.lax.integer_pow", "jax.lax.iota", "jax.lax.is_finite", "jax.lax.le", "jax.lax.lgamma", "jax.lax.linalg.cholesky", "jax.lax.linalg.eig", "jax.lax.linalg.eigh", "jax.lax.linalg.hessenberg", "jax.lax.linalg.householder_product", "jax.lax.linalg.lu", "jax.lax.linalg.qdwh", "jax.lax.linalg.qr", "jax.lax.linalg.schur", "jax.lax.linalg.svd", "jax.lax.linalg.triangular_solve", "jax.lax.linalg.tridiagonal", "jax.lax.linalg.tridiagonal_solve", "jax.lax.log", "jax.lax.log1p", "jax.lax.logistic", "jax.lax.lt", "jax.lax.map", "jax.lax.max", "jax.lax.min", "jax.lax.mul", "jax.lax.ne", "jax.lax.neg", "jax.lax.nextafter", "jax.lax.pad", "jax.lax.pdot", "jax.lax.pmax", "jax.lax.pmean", "jax.lax.pmin", "jax.lax.polygamma", "jax.lax.population_count", "jax.lax.pow", "jax.lax.ppermute", "jax.lax.pshuffle", "jax.lax.psum", "jax.lax.psum_scatter", "jax.lax.pswapaxes", "jax.lax.random_gamma_grad", "jax.lax.real", "jax.lax.reciprocal", "jax.lax.reduce", "jax.lax.reduce_precision", "jax.lax.reduce_window", "jax.lax.rem", "jax.lax.reshape", "jax.lax.rev", "jax.lax.rng_bit_generator", "jax.lax.rng_uniform", "jax.lax.round", "jax.lax.rsqrt", "jax.lax.scan", "jax.lax.scatter", "jax.lax.scatter_add", "jax.lax.scatter_apply", "jax.lax.scatter_max", "jax.lax.scatter_min", "jax.lax.scatter_mul", "jax.lax.select", "jax.lax.select_n", "jax.lax.shift_left", "jax.lax.shift_right_arithmetic", "jax.lax.shift_right_logical", "jax.lax.sign", "jax.lax.sin", "jax.lax.sinh", "jax.lax.slice", "jax.lax.slice_in_dim", "jax.lax.sort", "jax.lax.sort_key_val", "jax.lax.sqrt", "jax.lax.square", "jax.lax.squeeze", "jax.lax.stop_gradient", "jax.lax.sub", "jax.lax.switch", "jax.lax.tan", "jax.lax.tanh", "jax.lax.tie_in", "jax.lax.top_k", "jax.lax.transpose", "jax.lax.while_loop", "jax.lax.with_sharding_constraint", "jax.lax.zeros_like_array", "jax.lax.zeta", "jax.lib.xla_bridge.default_backend", "jax.lib.xla_bridge.get_backend", "jax.lib.xla_bridge.get_compile_options", "jax.linear_transpose", "jax.linearize", "jax.live_arrays", "jax.local_device_count", "jax.local_devices", "jax.log_compiles", "jax.make_array_from_callback", "jax.make_array_from_single_device_arrays", "jax.make_jaxpr", "jax.named_call", "jax.named_scope", "jax.nn.celu", "jax.nn.elu", "jax.nn.gelu", "jax.nn.glu", "jax.nn.hard_sigmoid", "jax.nn.hard_silu", "jax.nn.hard_swish", "jax.nn.hard_tanh", "jax.nn.initializers.constant", "jax.nn.initializers.delta_orthogonal", "jax.nn.initializers.glorot_normal", "jax.nn.initializers.glorot_uniform", "jax.nn.initializers.he_normal", "jax.nn.initializers.he_uniform", "jax.nn.initializers.lecun_normal", "jax.nn.initializers.lecun_uniform", "jax.nn.initializers.normal", "jax.nn.initializers.ones", "jax.nn.initializers.orthogonal", "jax.nn.initializers.truncated_normal", "jax.nn.initializers.uniform", "jax.nn.initializers.variance_scaling", "jax.nn.initializers.zeros", "jax.nn.leaky_relu", "jax.nn.log_sigmoid", "jax.nn.log_softmax", "jax.nn.logsumexp", "jax.nn.mish", "jax.nn.one_hot", "jax.nn.relu", "jax.nn.relu6", "jax.nn.selu", "jax.nn.sigmoid", "jax.nn.silu", "jax.nn.soft_sign", "jax.nn.softmax", "jax.nn.softplus", "jax.nn.sparse_plus", "jax.nn.squareplus", "jax.nn.standardize", "jax.nn.swish", "jax.numpy.ComplexWarning", "jax.numpy.abs", "jax.numpy.absolute", "jax.numpy.acos", "jax.numpy.acosh", "jax.numpy.add", "jax.numpy.all", "jax.numpy.allclose", "jax.numpy.amax", "jax.numpy.amin", "jax.numpy.angle", "jax.numpy.any", "jax.numpy.append", "jax.numpy.apply_along_axis", "jax.numpy.apply_over_axes", "jax.numpy.arange", "jax.numpy.arccos", "jax.numpy.arccosh", "jax.numpy.arcsin", "jax.numpy.arcsinh", "jax.numpy.arctan", "jax.numpy.arctan2", "jax.numpy.arctanh", "jax.numpy.argmax", "jax.numpy.argmin", "jax.numpy.argpartition", "jax.numpy.argsort", "jax.numpy.argwhere", "jax.numpy.around", "jax.numpy.array", "jax.numpy.array_equal", "jax.numpy.array_equiv", "jax.numpy.array_repr", "jax.numpy.array_split", "jax.numpy.array_str", "jax.numpy.asarray", "jax.numpy.asin", "jax.numpy.asinh", "jax.numpy.astype", "jax.numpy.atan", "jax.numpy.atan2", "jax.numpy.atanh", "jax.numpy.atleast_1d", "jax.numpy.atleast_2d", "jax.numpy.atleast_3d", "jax.numpy.average", "jax.numpy.bartlett", "jax.numpy.bincount", "jax.numpy.bitwise_and", "jax.numpy.bitwise_count", "jax.numpy.bitwise_invert", "jax.numpy.bitwise_left_shift", "jax.numpy.bitwise_not", "jax.numpy.bitwise_or", "jax.numpy.bitwise_right_shift", "jax.numpy.bitwise_xor", "jax.numpy.blackman", "jax.numpy.block", "jax.numpy.bool_", "jax.numpy.broadcast_arrays", "jax.numpy.broadcast_shapes", "jax.numpy.broadcast_to", "jax.numpy.c_", "jax.numpy.can_cast", "jax.numpy.cbrt", "jax.numpy.cdouble", "jax.numpy.ceil", "jax.numpy.character", "jax.numpy.choose", "jax.numpy.clip", "jax.numpy.column_stack", "jax.numpy.complex128", "jax.numpy.complex64", "jax.numpy.complex_", "jax.numpy.complexfloating", "jax.numpy.compress", "jax.numpy.concat", "jax.numpy.concatenate", "jax.numpy.conj", "jax.numpy.conjugate", "jax.numpy.convolve", "jax.numpy.copy", "jax.numpy.copysign", "jax.numpy.corrcoef", "jax.numpy.correlate", "jax.numpy.cos", "jax.numpy.cosh", "jax.numpy.count_nonzero", "jax.numpy.cov", "jax.numpy.cross", "jax.numpy.csingle", "jax.numpy.cumprod", "jax.numpy.cumsum", "jax.numpy.cumulative_sum", "jax.numpy.deg2rad", "jax.numpy.degrees", "jax.numpy.delete", "jax.numpy.diag", "jax.numpy.diag_indices", "jax.numpy.diag_indices_from", "jax.numpy.diagflat", "jax.numpy.diagonal", "jax.numpy.diff", "jax.numpy.digitize", "jax.numpy.divide", "jax.numpy.divmod", "jax.numpy.dot", "jax.numpy.double", "jax.numpy.dsplit", "jax.numpy.dstack", "jax.numpy.dtype", "jax.numpy.ediff1d", "jax.numpy.einsum", "jax.numpy.einsum_path", "jax.numpy.empty", "jax.numpy.empty_like", "jax.numpy.equal", "jax.numpy.exp", "jax.numpy.exp2", "jax.numpy.expand_dims", "jax.numpy.expm1", "jax.numpy.extract", "jax.numpy.eye", "jax.numpy.fabs", "jax.numpy.fft.fft", "jax.numpy.fft.fft2", "jax.numpy.fft.fftfreq", "jax.numpy.fft.fftn", "jax.numpy.fft.fftshift", "jax.numpy.fft.hfft", "jax.numpy.fft.ifft", "jax.numpy.fft.ifft2", "jax.numpy.fft.ifftn", "jax.numpy.fft.ifftshift", "jax.numpy.fft.ihfft", "jax.numpy.fft.irfft", "jax.numpy.fft.irfft2", "jax.numpy.fft.irfftn", "jax.numpy.fft.rfft", "jax.numpy.fft.rfft2", "jax.numpy.fft.rfftfreq", "jax.numpy.fft.rfftn", "jax.numpy.fill_diagonal", "jax.numpy.finfo", "jax.numpy.fix", "jax.numpy.flatnonzero", "jax.numpy.flexible", "jax.numpy.flip", "jax.numpy.fliplr", "jax.numpy.flipud", "jax.numpy.float16", "jax.numpy.float32", "jax.numpy.float64", "jax.numpy.float_", "jax.numpy.float_power", "jax.numpy.floating", "jax.numpy.floor", "jax.numpy.floor_divide", "jax.numpy.fmax", "jax.numpy.fmin", "jax.numpy.fmod", "jax.numpy.frexp", "jax.numpy.from_dlpack", "jax.numpy.frombuffer", "jax.numpy.fromfile", "jax.numpy.fromfunction", "jax.numpy.fromiter", "jax.numpy.frompyfunc", "jax.numpy.fromstring", "jax.numpy.full", "jax.numpy.full_like", "jax.numpy.gcd", "jax.numpy.generic", "jax.numpy.geomspace", "jax.numpy.get_printoptions", "jax.numpy.gradient", "jax.numpy.greater", "jax.numpy.greater_equal", "jax.numpy.hamming", "jax.numpy.hanning", "jax.numpy.heaviside", "jax.numpy.histogram", "jax.numpy.histogram2d", "jax.numpy.histogram_bin_edges", "jax.numpy.histogramdd", "jax.numpy.hsplit", "jax.numpy.hstack", "jax.numpy.hypot", "jax.numpy.i0", "jax.numpy.identity", "jax.numpy.iinfo", "jax.numpy.imag", "jax.numpy.index_exp", "jax.numpy.indices", "jax.numpy.inexact", "jax.numpy.inner", "jax.numpy.insert", "jax.numpy.int16", "jax.numpy.int32", "jax.numpy.int64", "jax.numpy.int8", "jax.numpy.int_", "jax.numpy.integer", "jax.numpy.interp", "jax.numpy.intersect1d", "jax.numpy.invert", "jax.numpy.isclose", "jax.numpy.iscomplex", "jax.numpy.iscomplexobj", "jax.numpy.isdtype", "jax.numpy.isfinite", "jax.numpy.isin", "jax.numpy.isinf", "jax.numpy.isnan", "jax.numpy.isneginf", "jax.numpy.isposinf", "jax.numpy.isreal", "jax.numpy.isrealobj", "jax.numpy.isscalar", "jax.numpy.issubdtype", "jax.numpy.iterable", "jax.numpy.ix_", "jax.numpy.kaiser", "jax.numpy.kron", "jax.numpy.lcm", "jax.numpy.ldexp", "jax.numpy.left_shift", "jax.numpy.less", "jax.numpy.less_equal", "jax.numpy.lexsort", "jax.numpy.linalg.cholesky", "jax.numpy.linalg.cond", "jax.numpy.linalg.cross", "jax.numpy.linalg.det", "jax.numpy.linalg.diagonal", "jax.numpy.linalg.eig", "jax.numpy.linalg.eigh", "jax.numpy.linalg.eigvals", "jax.numpy.linalg.eigvalsh", "jax.numpy.linalg.inv", "jax.numpy.linalg.lstsq", "jax.numpy.linalg.matmul", "jax.numpy.linalg.matrix_norm", "jax.numpy.linalg.matrix_power", "jax.numpy.linalg.matrix_rank", "jax.numpy.linalg.matrix_transpose", "jax.numpy.linalg.multi_dot", "jax.numpy.linalg.norm", "jax.numpy.linalg.outer", "jax.numpy.linalg.pinv", "jax.numpy.linalg.qr", "jax.numpy.linalg.slogdet", "jax.numpy.linalg.solve", "jax.numpy.linalg.svd", "jax.numpy.linalg.svdvals", "jax.numpy.linalg.tensordot", "jax.numpy.linalg.tensorinv", "jax.numpy.linalg.tensorsolve", "jax.numpy.linalg.vecdot", "jax.numpy.linalg.vector_norm", "jax.numpy.linspace", "jax.numpy.load", "jax.numpy.log", "jax.numpy.log10", "jax.numpy.log1p", "jax.numpy.log2", "jax.numpy.logaddexp", "jax.numpy.logaddexp2", "jax.numpy.logical_and", "jax.numpy.logical_not", "jax.numpy.logical_or", "jax.numpy.logical_xor", "jax.numpy.logspace", "jax.numpy.mask_indices", "jax.numpy.matmul", "jax.numpy.matrix_transpose", "jax.numpy.max", "jax.numpy.maximum", "jax.numpy.mean", "jax.numpy.median", "jax.numpy.meshgrid", "jax.numpy.mgrid", "jax.numpy.min", "jax.numpy.minimum", "jax.numpy.mod", "jax.numpy.modf", "jax.numpy.moveaxis", "jax.numpy.multiply", "jax.numpy.nan_to_num", "jax.numpy.nanargmax", "jax.numpy.nanargmin", "jax.numpy.nancumprod", "jax.numpy.nancumsum", "jax.numpy.nanmax", "jax.numpy.nanmean", "jax.numpy.nanmedian", "jax.numpy.nanmin", "jax.numpy.nanpercentile", "jax.numpy.nanprod", "jax.numpy.nanquantile", "jax.numpy.nanstd", "jax.numpy.nansum", "jax.numpy.nanvar", "jax.numpy.ndarray", "jax.numpy.ndarray.at", "jax.numpy.ndim", "jax.numpy.negative", "jax.numpy.nextafter", "jax.numpy.nonzero", "jax.numpy.not_equal", "jax.numpy.number", "jax.numpy.object_", "jax.numpy.ogrid", "jax.numpy.ones", "jax.numpy.ones_like", "jax.numpy.outer", "jax.numpy.packbits", "jax.numpy.pad", "jax.numpy.partition", "jax.numpy.percentile", "jax.numpy.permute_dims", "jax.numpy.piecewise", "jax.numpy.place", "jax.numpy.poly", "jax.numpy.polyadd", "jax.numpy.polyder", "jax.numpy.polydiv", "jax.numpy.polyfit", "jax.numpy.polyint", "jax.numpy.polymul", "jax.numpy.polysub", "jax.numpy.polyval", "jax.numpy.positive", "jax.numpy.pow", "jax.numpy.power", "jax.numpy.printoptions", "jax.numpy.prod", "jax.numpy.promote_types", "jax.numpy.ptp", "jax.numpy.put", "jax.numpy.quantile", "jax.numpy.r_", "jax.numpy.rad2deg", "jax.numpy.radians", "jax.numpy.ravel", "jax.numpy.ravel_multi_index", "jax.numpy.real", "jax.numpy.reciprocal", "jax.numpy.remainder", "jax.numpy.repeat", "jax.numpy.reshape", "jax.numpy.resize", "jax.numpy.result_type", "jax.numpy.right_shift", "jax.numpy.rint", "jax.numpy.roll", "jax.numpy.rollaxis", "jax.numpy.roots", "jax.numpy.rot90", "jax.numpy.round", "jax.numpy.round_", "jax.numpy.s_", "jax.numpy.save", "jax.numpy.savez", "jax.numpy.searchsorted", "jax.numpy.select", "jax.numpy.set_printoptions", "jax.numpy.setdiff1d", "jax.numpy.setxor1d", "jax.numpy.shape", "jax.numpy.sign", "jax.numpy.signbit", "jax.numpy.signedinteger", "jax.numpy.sin", "jax.numpy.sinc", "jax.numpy.single", "jax.numpy.sinh", "jax.numpy.size", "jax.numpy.sort", "jax.numpy.sort_complex", "jax.numpy.split", "jax.numpy.sqrt", "jax.numpy.square", "jax.numpy.squeeze", "jax.numpy.stack", "jax.numpy.std", "jax.numpy.subtract", "jax.numpy.sum", "jax.numpy.swapaxes", "jax.numpy.take", "jax.numpy.take_along_axis", "jax.numpy.tan", "jax.numpy.tanh", "jax.numpy.tensordot", "jax.numpy.tile", "jax.numpy.trace", "jax.numpy.transpose", "jax.numpy.trapezoid", "jax.numpy.tri", "jax.numpy.tril", "jax.numpy.tril_indices", "jax.numpy.tril_indices_from", "jax.numpy.trim_zeros", "jax.numpy.triu", "jax.numpy.triu_indices", "jax.numpy.triu_indices_from", "jax.numpy.true_divide", "jax.numpy.trunc", "jax.numpy.ufunc", "jax.numpy.uint", "jax.numpy.uint16", "jax.numpy.uint32", "jax.numpy.uint64", "jax.numpy.uint8", "jax.numpy.union1d", "jax.numpy.unique", "jax.numpy.unique_all", "jax.numpy.unique_counts", "jax.numpy.unique_inverse", "jax.numpy.unique_values", "jax.numpy.unpackbits", "jax.numpy.unravel_index", "jax.numpy.unsignedinteger", "jax.numpy.unstack", "jax.numpy.unwrap", "jax.numpy.vander", "jax.numpy.var", "jax.numpy.vdot", "jax.numpy.vecdot", "jax.numpy.vectorize", "jax.numpy.vsplit", "jax.numpy.vstack", "jax.numpy.where", "jax.numpy.zeros", "jax.numpy.zeros_like", "jax.numpy_rank_promotion", "jax.ops.segment_max", "jax.ops.segment_min", "jax.ops.segment_prod", "jax.ops.segment_sum", "jax.pmap", "jax.print_environment_info", "jax.process_count", "jax.process_index", "jax.profiler.StepTraceAnnotation", "jax.profiler.TraceAnnotation", "jax.profiler.annotate_function", "jax.profiler.device_memory_profile", "jax.profiler.save_device_memory_profile", "jax.profiler.start_server", "jax.profiler.start_trace", "jax.profiler.stop_trace", "jax.profiler.trace", "jax.pure_callback", "jax.random.PRNGKey", "jax.random.ball", "jax.random.bernoulli", "jax.random.beta", "jax.random.binomial", "jax.random.bits", "jax.random.categorical", "jax.random.cauchy", "jax.random.chisquare", "jax.random.choice", "jax.random.clone", "jax.random.dirichlet", "jax.random.double_sided_maxwell", "jax.random.exponential", "jax.random.f", "jax.random.fold_in", "jax.random.gamma", "jax.random.generalized_normal", "jax.random.geometric", "jax.random.gumbel", "jax.random.key", "jax.random.key_data", "jax.random.laplace", "jax.random.loggamma", "jax.random.logistic", "jax.random.lognormal", "jax.random.maxwell", "jax.random.multivariate_normal", "jax.random.normal", "jax.random.orthogonal", "jax.random.pareto", "jax.random.permutation", "jax.random.poisson", "jax.random.rademacher", "jax.random.randint", "jax.random.rayleigh", "jax.random.split", "jax.random.t", "jax.random.triangular", "jax.random.truncated_normal", "jax.random.uniform", "jax.random.wald", "jax.random.weibull_min", "jax.random.wrap_key_data", "jax.scipy.fft.dct", "jax.scipy.fft.dctn", "jax.scipy.fft.idct", "jax.scipy.fft.idctn", "jax.scipy.integrate.trapezoid", "jax.scipy.linalg.block_diag", "jax.scipy.linalg.cho_factor", "jax.scipy.linalg.cho_solve", "jax.scipy.linalg.cholesky", "jax.scipy.linalg.det", "jax.scipy.linalg.eigh", "jax.scipy.linalg.eigh_tridiagonal", "jax.scipy.linalg.expm", "jax.scipy.linalg.expm_frechet", "jax.scipy.linalg.funm", "jax.scipy.linalg.hessenberg", "jax.scipy.linalg.hilbert", "jax.scipy.linalg.inv", "jax.scipy.linalg.lu", "jax.scipy.linalg.lu_factor", "jax.scipy.linalg.lu_solve", "jax.scipy.linalg.polar", "jax.scipy.linalg.qr", "jax.scipy.linalg.rsf2csf", "jax.scipy.linalg.schur", "jax.scipy.linalg.solve", "jax.scipy.linalg.solve_triangular", "jax.scipy.linalg.sqrtm", "jax.scipy.linalg.svd", "jax.scipy.linalg.toeplitz", "jax.scipy.ndimage.map_coordinates", "jax.scipy.optimize.OptimizeResults", "jax.scipy.optimize.minimize", "jax.scipy.signal.convolve", "jax.scipy.signal.convolve2d", "jax.scipy.signal.correlate", "jax.scipy.signal.correlate2d", "jax.scipy.signal.csd", "jax.scipy.signal.fftconvolve", "jax.scipy.signal.istft", "jax.scipy.signal.stft", "jax.scipy.signal.welch", "jax.scipy.sparse.linalg.bicgstab", "jax.scipy.sparse.linalg.cg", "jax.scipy.sparse.linalg.gmres", "jax.scipy.spatial.transform.Rotation", "jax.scipy.spatial.transform.Slerp", "jax.scipy.special.bernoulli", "jax.scipy.special.beta", "jax.scipy.special.betainc", "jax.scipy.special.betaln", "jax.scipy.special.digamma", "jax.scipy.special.entr", "jax.scipy.special.erf", "jax.scipy.special.erfc", "jax.scipy.special.erfinv", "jax.scipy.special.exp1", "jax.scipy.special.expi", "jax.scipy.special.expit", "jax.scipy.special.expn", "jax.scipy.special.factorial", "jax.scipy.special.gamma", "jax.scipy.special.gammainc", "jax.scipy.special.gammaincc", "jax.scipy.special.gammaln", "jax.scipy.special.hyp1f1", "jax.scipy.special.i0", "jax.scipy.special.i0e", "jax.scipy.special.i1", "jax.scipy.special.i1e", "jax.scipy.special.kl_div", "jax.scipy.special.log_ndtr", "jax.scipy.special.logit", "jax.scipy.special.logsumexp", "jax.scipy.special.lpmn", "jax.scipy.special.lpmn_values", "jax.scipy.special.multigammaln", "jax.scipy.special.ndtr", "jax.scipy.special.ndtri", "jax.scipy.special.poch", "jax.scipy.special.polygamma", "jax.scipy.special.rel_entr", "jax.scipy.special.spence", "jax.scipy.special.sph_harm", "jax.scipy.special.xlog1py", "jax.scipy.special.xlogy", "jax.scipy.special.zeta", "jax.scipy.stats.bernoulli.cdf", "jax.scipy.stats.bernoulli.logpmf", "jax.scipy.stats.bernoulli.pmf", "jax.scipy.stats.bernoulli.ppf", "jax.scipy.stats.beta.cdf", "jax.scipy.stats.beta.logcdf", "jax.scipy.stats.beta.logpdf", "jax.scipy.stats.beta.logsf", "jax.scipy.stats.beta.pdf", "jax.scipy.stats.beta.sf", "jax.scipy.stats.betabinom.logpmf", "jax.scipy.stats.betabinom.pmf", "jax.scipy.stats.binom.logpmf", "jax.scipy.stats.binom.pmf", "jax.scipy.stats.cauchy.cdf", "jax.scipy.stats.cauchy.isf", "jax.scipy.stats.cauchy.logcdf", "jax.scipy.stats.cauchy.logpdf", "jax.scipy.stats.cauchy.logsf", "jax.scipy.stats.cauchy.pdf", "jax.scipy.stats.cauchy.ppf", "jax.scipy.stats.cauchy.sf", "jax.scipy.stats.chi2.cdf", "jax.scipy.stats.chi2.logcdf", "jax.scipy.stats.chi2.logpdf", "jax.scipy.stats.chi2.logsf", "jax.scipy.stats.chi2.pdf", "jax.scipy.stats.chi2.sf", "jax.scipy.stats.dirichlet.logpdf", "jax.scipy.stats.dirichlet.pdf", "jax.scipy.stats.expon.logpdf", "jax.scipy.stats.expon.pdf", "jax.scipy.stats.gamma.cdf", "jax.scipy.stats.gamma.logcdf", "jax.scipy.stats.gamma.logpdf", "jax.scipy.stats.gamma.logsf", "jax.scipy.stats.gamma.pdf", "jax.scipy.stats.gamma.sf", "jax.scipy.stats.gaussian_kde", "jax.scipy.stats.gaussian_kde.evaluate", "jax.scipy.stats.gaussian_kde.integrate_box_1d", "jax.scipy.stats.gaussian_kde.integrate_gaussian", "jax.scipy.stats.gaussian_kde.integrate_kde", "jax.scipy.stats.gaussian_kde.logpdf", "jax.scipy.stats.gaussian_kde.pdf", "jax.scipy.stats.gaussian_kde.resample", "jax.scipy.stats.gennorm.cdf", "jax.scipy.stats.gennorm.logpdf", "jax.scipy.stats.gennorm.pdf", "jax.scipy.stats.geom.logpmf", "jax.scipy.stats.geom.pmf", "jax.scipy.stats.laplace.cdf", "jax.scipy.stats.laplace.logpdf", "jax.scipy.stats.laplace.pdf", "jax.scipy.stats.logistic.cdf", "jax.scipy.stats.logistic.isf", "jax.scipy.stats.logistic.logpdf", "jax.scipy.stats.logistic.pdf", "jax.scipy.stats.logistic.ppf", "jax.scipy.stats.logistic.sf", "jax.scipy.stats.mode", "jax.scipy.stats.multinomial.logpmf", "jax.scipy.stats.multinomial.pmf", "jax.scipy.stats.multivariate_normal.logpdf", "jax.scipy.stats.multivariate_normal.pdf", "jax.scipy.stats.nbinom.logpmf", "jax.scipy.stats.nbinom.pmf", "jax.scipy.stats.norm.cdf", "jax.scipy.stats.norm.isf", "jax.scipy.stats.norm.logcdf", "jax.scipy.stats.norm.logpdf", "jax.scipy.stats.norm.logsf", "jax.scipy.stats.norm.pdf", "jax.scipy.stats.norm.ppf", "jax.scipy.stats.norm.sf", "jax.scipy.stats.pareto.logpdf", "jax.scipy.stats.pareto.pdf", "jax.scipy.stats.poisson.logpmf", "jax.scipy.stats.poisson.pmf", "jax.scipy.stats.rankdata", "jax.scipy.stats.sem", "jax.scipy.stats.t.logpdf", "jax.scipy.stats.t.pdf", "jax.scipy.stats.truncnorm.cdf", "jax.scipy.stats.truncnorm.logcdf", "jax.scipy.stats.truncnorm.logpdf", "jax.scipy.stats.truncnorm.logsf", "jax.scipy.stats.truncnorm.pdf", "jax.scipy.stats.truncnorm.sf", "jax.scipy.stats.uniform.cdf", "jax.scipy.stats.uniform.logpdf", "jax.scipy.stats.uniform.pdf", "jax.scipy.stats.uniform.ppf", "jax.scipy.stats.vonmises.logpdf", "jax.scipy.stats.vonmises.pdf", "jax.scipy.stats.wrapcauchy.logpdf", "jax.scipy.stats.wrapcauchy.pdf", "jax.transfer_guard", "jax.tree.all", "jax.tree.flatten", "jax.tree.leaves", "jax.tree.map", "jax.tree.reduce", "jax.tree.structure", "jax.tree.transpose", "jax.tree.unflatten", "jax.tree_util.Partial", "jax.tree_util.all_leaves", "jax.tree_util.build_tree", "jax.tree_util.keystr", "jax.tree_util.register_pytree_node", "jax.tree_util.register_pytree_node_class", "jax.tree_util.register_pytree_with_keys", "jax.tree_util.register_pytree_with_keys_class", "jax.tree_util.tree_all", "jax.tree_util.tree_flatten", "jax.tree_util.tree_flatten_with_path", "jax.tree_util.tree_leaves", "jax.tree_util.tree_leaves_with_path", "jax.tree_util.tree_map", "jax.tree_util.tree_map_with_path", "jax.tree_util.tree_reduce", "jax.tree_util.tree_structure", "jax.tree_util.tree_transpose", "jax.tree_util.tree_unflatten", "jax.tree_util.treedef_children", "jax.tree_util.treedef_is_leaf", "jax.tree_util.treedef_tuple", "jax.typing.ArrayLike", "jax.typing.DTypeLike", "jax.value_and_grad", "jax.vjp", "jax.vmap", "jax.xla_computation", "Advanced Tutorials", "Ahead-of-time lowering and compilation", "API compatibility", "Asynchronous dispatch", "Autodidax: JAX core from scratch", "Getting Started with JAX", "Building on JAX", "Change log", "Concurrency", "Contributing to JAX", "Developer Documentation", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">checkify</span></code> transformation", "JAX debugging flags", "Runtime value debugging in JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.debug.print</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.debug.breakpoint</span></code>", "Python and NumPy version support policy", "Building from source", "Device Memory Profiling", "JAX Errors", "JAX Frequently Asked Questions (FAQ)", "JAX Glossary of Terms", "GPU memory allocation", "GPU performance tips", "JAX: High-Performance Array Computing", "Installing JAX", "Investigating a regression", "Public API: jax package", "JAX As Accelerated NumPy", "Just In Time Compilation with JAX", "Automatic Vectorization in JAX", "Advanced Automatic Differentiation in JAX", "Pseudo Random Numbers in JAX", "Working with Pytrees", "Parallel Evaluation in JAX", "Stateful Computations in JAX", "Introduction to <cite>pjit</cite>", "Tutorial: JAX 101", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.debug</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.distributed</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.dlpack</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.dtypes</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries.optimizers</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.example_libraries.stax</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.array_api</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.checkify</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.compilation_cache</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.custom_partitioning</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.host_callback</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.jet</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.key_reuse</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.maps</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.mesh_utils</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.multihost_utils</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.pjit</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.experimental.sparse</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.linear_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.mlir</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend.random</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.flatten_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.image</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.lax</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.lib</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.nn</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.nn.initializers</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.numpy</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.ops</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.profiler</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.random</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.scipy</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.sharding</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.stages</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.tree</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.tree_util</span></code> module", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.typing</span></code> module", "jax.Array migration", "Internal APIs", "Understanding Jaxprs", "Sequencing side-effects in JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> changes: what you need to know", "Type Annotation Roadmap for JAX", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shmap</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">shard_map</span></code>) for simple per-device code", "<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.extend</span></code>: a module for extensions", "Efficient transposition of replication-inducing collectives", "JEP 18137: Scope of JAX NumPy &amp; SciPy Wrappers", "Custom JVP/VJP rules for JAX-transformable functions", "JAX PRNG Design", "<code class=\"docutils literal notranslate\"><span class=\"pre\">custom_vjp</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">nondiff_argnums</span></code> update guide", "Omnistaging", "JEP 9263: Typed keys &amp; pluggable RNGs", "Design of Type Promotion Semantics for JAX", "Jax and Jaxlib versioning", "JAX Enhancement Proposals (JEPs)", "Using JAX in multi-host and multi-process environments", "\ud83d\udd2a JAX - The Sharp Bits \ud83d\udd2a", "Custom derivative rules for JAX-transformable Python functions", "Distributed arrays and automatic parallelization", "How JAX primitives work", "Training a Simple Neural Network, with PyTorch Data Loading", "Writing custom Jaxpr interpreters in JAX", "The Autodiff Cookbook", "Control autodiff\u2019s saved values with <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> (aka <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code>)", "Generalized Convolutions in JAX", "External Callbacks in JAX", "Training a Simple Neural Network, with tensorflow/datasets Data Loading", "JAX Quickstart", "SPMD multi-device parallelism with <code class=\"docutils literal notranslate\"><span class=\"pre\">shard_map</span></code>", "How to Think in JAX", "Autobatching for Bayesian Inference", "Named axes and easy-to-revise parallelism with <code class=\"docutils literal notranslate\"><span class=\"pre\">xmap</span></code>", "Notes", "Pallas Design", "Pallas: a JAX kernel language", "Pallas Quickstart", "Writing TPU kernels with Pallas", "Pallas TPU", "Pipelining and <code class=\"docutils literal notranslate\"><span class=\"pre\">BlockSpec</span></code>s", "Persistent Compilation Cache", "Profiling JAX programs", "Pytrees", "Rank promotion warning", "Transfer guard", "Advanced automatic differentiation", "Advanced compilation", "Advanced debugging", "Automatic differentiation", "Automatic vectorization", "Introduction to debugging", "External callbacks", "Gradient checkpointing with <code class=\"docutils literal notranslate\"><span class=\"pre\">jax.checkpoint</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">jax.remat</span></code>)", "JAX tutorials", "JAX Internals: primitives", "JAX internals: The jaxpr language", "Just-in-time compilation", "Key Concepts", "Parallel computation", "Profiling and performance", "Quickstart", "Pseudorandom numbers", "Introduction to sharded computation", "Example: Writing a simple neural network", "Stateful Computations", "Working with pytrees", "Type promotion semantics", "User Guides"], "titleterms": {"": [0, 1115, 1116, 1180, 1184, 1185, 1186, 1189, 1193, 1205, 1206, 1211, 1227, 1234], "0": [1110, 1195], "1": [1107, 1110, 1122, 1185, 1189, 1195, 1204, 1211, 1230], "10": 1110, "101": [1139, 1235], "11": 1110, "12": 1110, "12ish": 1110, "13": 1110, "14": 1110, "15": 1110, "16": 1110, "17": 1110, "18": 1110, "18137": 1189, "19": 1110, "1d": 1207, "2": [1107, 1110, 1122, 1185, 1189, 1195, 1201, 1204, 1207, 1211, 1227, 1230], "20": 1110, "201": 1235, "2020": 1110, "2021": 1110, "2022": 1110, "2023": 1110, "2024": 1110, "21": 1110, "22": 1110, "23": 1110, "24": 1110, "25": 1110, "26": 1110, "27": 1110, "28": 1110, "29": 1110, "3": [1107, 1110, 1122, 1185, 1189, 1195, 1230], "30": 1110, "301": 1235, "31": 1110, "38": 1110, "39": 1110, "3d": 1207, "4": [1107, 1110, 1185, 1189, 1201, 1230], "40": 1110, "42": 1110, "43": 1110, "44": 1110, "45": 1110, "46": 1110, "47": 1110, "48": 1110, "49": 1110, "5": [1107, 1110, 1185, 1189, 1230], "50": 1110, "51": 1110, "52": 1110, "55": 1110, "56": 1110, "57": 1110, "58": 1110, "59": 1110, "6": [1110, 1189], "60": 1110, "61": 1110, "62": 1110, "63": 1110, "64": 1110, "64bit": 1199, "65": 1110, "66": 1110, "67": 1110, "68": 1110, "69": 1110, "7": 1110, "70": 1110, "71": 1110, "72": 1110, "73": 1110, "74": 1110, "75": 1110, "76": 1110, "77": 1110, "8": [1110, 1201, 1211], "9": 1110, "9263": 1194, "A": [1137, 1186, 1246], "As": 1130, "But": 1214, "In": [1131, 1199], "No": 1187, "On": 1107, "One": 1207, "Or": 1214, "The": [1114, 1136, 1137, 1184, 1190, 1199, 1205, 1227, 1237, 1246], "To": 1212, "ab": [152, 385], "abil": [1184, 1188], "absolut": 386, "abstract": [0, 1202, 1236], "acceler": 1130, "access": 1219, "aco": [153, 387], "acosh": [154, 388], "across": [1109, 1188, 1196, 1201], "activ": 1168, "ad": [1107, 1183, 1223], "add": [0, 155, 389, 1216], "addit": 1119, "advanc": [1103, 1133, 1173, 1205, 1206, 1227, 1228, 1229, 1234], "after": [1180, 1184], "after_al": 156, "again": 0, "against": [1205, 1230], "agreement": 1112, "ahead": 1104, "aka": [1205, 1206], "algebra": 1166, "align": 1189, "all": [390, 1067, 1152, 1195, 1211], "all_check": 53, "all_gath": [157, 1188, 1211], "all_leav": 1076, "all_to_al": [158, 1211], "allclos": 391, "alloc": 1124, "alreadi": 1186, "altern": 1191, "amax": 392, "amd": [1119, 1127], "amin": 393, "an": 1224, "analys": 1104, "angl": 394, "ani": 395, "annot": [1185, 1194], "annotate_funct": 830, "anoth": [1152, 1186], "aot": 1104, "api": [1105, 1129, 1147, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1173, 1180, 1181, 1185, 1186, 1188, 1189, 1190, 1193, 1196, 1200, 1211, 1212, 1227], "append": 396, "appendix": [1188, 1195], "appl": 1127, "appli": 1224, "apply_along_axi": 397, "apply_over_ax": 398, "approach": 1244, "approx_max_k": 159, "approx_min_k": 160, "april": 1110, "ar": [1122, 1184, 1188, 1196, 1201, 1204], "arang": 399, "arcco": 400, "arccosh": 401, "arcsin": 402, "arcsinh": 403, "arctan": 404, "arctan2": 405, "arctanh": 406, "argmax": [161, 407], "argmin": [162, 408], "argpartit": 409, "argsort": 410, "argument": [1104, 1165, 1166, 1184, 1200, 1227, 1238], "argwher": 411, "aris": [1180, 1193], "arithmet": 1194, "arm": 1127, "around": 412, "arrai": [1, 413, 1122, 1126, 1129, 1170, 1180, 1185, 1186, 1189, 1199, 1201, 1219, 1239], "array_api": 1148, "array_equ": 414, "array_equiv": 415, "array_repr": 416, "array_split": 417, "array_str": 418, "arraylik": 1097, "asarrai": 419, "asid": 1136, "asin": [163, 420], "asinh": [164, 421], "ask": 1122, "assembl": [1186, 1211], "assert_equ": 74, "associative_scan": 165, "astyp": 422, "asynchron": [1106, 1117], "atan": [166, 423], "atan2": [167, 424], "atanh": [168, 425], "atleast_1d": 426, "atleast_2d": 427, "atleast_3d": 428, "atrou": 1207, "aug": 1110, "author": 1194, "auto": [1203, 1209, 1210, 1242], "autobatch": 1213, "autocomplet": 1185, "autodidax": 1107, "autodiff": [1107, 1152, 1199, 1205, 1206, 1227], "autom": 1244, "automat": [1103, 1129, 1132, 1133, 1201, 1227, 1230, 1231, 1244], "automatic_check": 54, "auxiliari": 1130, "avail": 1104, "aval": 1188, "averag": 429, "avoid": [1185, 1195], "ax": [1186, 1214], "axi": [1189, 1214], "axis_index": 169, "axis_resourc": 1214, "back": [1184, 1195], "background": [1173, 1183, 1185, 1189], "backward": [0, 1188], "ball": 839, "barrier_wait": [66, 1152], "bartlett": 430, "base": [1122, 1127, 1193], "basic": [1136, 1173, 1186, 1200, 1201, 1207, 1211, 1227], "batch": [1107, 1159, 1180, 1201, 1202, 1203, 1209, 1211, 1213, 1236], "batch_matmul": 170, "bayesian": 1213, "bazel": 1119, "bcoo": [80, 1159], "bcoo_broadcast_in_dim": 86, "bcoo_concaten": 87, "bcoo_dot_gener": 88, "bcoo_dot_general_sampl": 89, "bcoo_dynamic_slic": 90, "bcoo_extract": 91, "bcoo_fromdens": 92, "bcoo_gath": 93, "bcoo_multiply_dens": 94, "bcoo_multiply_spars": 95, "bcoo_reduce_sum": 96, "bcoo_reshap": 97, "bcoo_slic": 98, "bcoo_sort_indic": 99, "bcoo_squeez": 100, "bcoo_sum_dupl": 101, "bcoo_todens": 102, "bcoo_transpos": 103, "bcoo_update_layout": 104, "bcsr": [81, 1159], "bcsr_dot_gener": 105, "bcsr_extract": 106, "bcsr_fromdens": 107, "bcsr_todens": 108, "behavior": [1119, 1122, 1152, 1184], "benchmark": 1122, "benefit": 1216, "bernoulli": [840, 929, 969, 970, 971, 972, 1174], "bessel_i0": 171, "bessel_i1": 172, "best": 1179, "beta": [841, 930, 973, 974, 975, 976, 977, 978, 1174], "betabinom": [979, 980, 1174], "betainc": [173, 931], "betaln": 932, "between": [1136, 1196], "bfloat16": 39, "bicgstab": 924, "binari": 1213, "bincount": 431, "binom": [981, 982, 1174], "binomi": 842, "bit": [843, 1117, 1199, 1201], "bitcast_convert_typ": 174, "bitwise_and": [175, 432], "bitwise_count": 433, "bitwise_invert": 434, "bitwise_left_shift": 435, "bitwise_not": [176, 436], "bitwise_or": [177, 437], "bitwise_right_shift": 438, "bitwise_xor": [178, 439], "blackman": 440, "block": [441, 1183, 1186, 1211, 1218], "block_diag": 887, "block_until_readi": 4, "blockspec": [1219, 1221], "bool_": 442, "both": [1205, 1227], "bound": 1199, "boundari": 1196, "break": 1180, "breakpoint": [16, 1117, 1232], "broadcast": [179, 1214, 1219], "broadcast_arrai": 443, "broadcast_in_dim": 180, "broadcast_one_to_al": 75, "broadcast_shap": [181, 444], "broadcast_to": 445, "broadcast_to_rank": 182, "broadcasted_iota": 183, "broke": [1180, 1193], "buffer": [1122, 1194], "bug": [1110, 1193], "build": [0, 1107, 1108, 1109, 1119, 1127, 1188], "build_tre": 1077, "c": 0, "c_": 446, "cach": [128, 1131, 1222, 1238], "call": [0, 67, 1152, 1180], "callback": [17, 1117, 1129, 1152, 1208, 1232, 1233], "callbackexcept": 65, "can": [1122, 1128, 1131, 1180, 1184, 1193, 1196, 1238], "can_cast": 447, "cannot": 1104, "canonicalize_dtyp": 40, "captur": 1223, "case": 1184, "categor": 844, "categori": 1195, "cauchi": [845, 983, 984, 985, 986, 987, 988, 989, 990, 1174], "caus": 1124, "caveat": 1199, "cbrt": [184, 448], "cdf": [969, 973, 983, 991, 1001, 1015, 1020, 1023, 1036, 1052, 1058], "cdoubl": 449, "ceil": [185, 450], "celu": 343, "cg": 925, "challeng": 1185, "chang": [1110, 1112, 1122, 1180, 1184, 1193, 1196], "charact": 451, "check": [0, 55, 1112, 1114, 1116, 1119, 1154, 1185, 1205, 1230], "check_error": 56, "check_tracer_leak": 5, "checkifi": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 1114, 1116, 1149], "checking_leak": 6, "checklist": 1112, "checkpoint": [7, 1184, 1206, 1234], "chi2": [991, 992, 993, 994, 995, 996, 1174], "chisquar": 846, "cho_factor": 888, "cho_solv": 889, "choic": 847, "choleski": [245, 614, 890], "choos": 452, "chunk": 1221, "clamp": 186, "class": [1165, 1166, 1175, 1176, 1185], "classif": 1213, "clear_cach": 8, "clip": [453, 1200, 1227], "clone": 848, "closedjaxpr": [11, 1237], "closure_convert": 9, "cloud": [1127, 1222], "cluster": [1189, 1198], "clz": 187, "co": [201, 469], "code": [0, 1109, 1112, 1122, 1125, 1180, 1186, 1193, 1201, 1205, 1214, 1227], "collaps": 188, "collect": [1188, 1211, 1214], "column_stack": 454, "combin": [1132, 1195, 1231], "come": 1214, "commit": 1112, "common": [1124, 1135, 1247], "commun": [1125, 1127, 1136], "compar": 1244, "compat": [1105, 1187, 1188], "compil": [1104, 1122, 1129, 1131, 1183, 1193, 1202, 1222, 1228, 1236, 1238, 1242], "compilation_cach": 1150, "complex": [189, 1189, 1195, 1205, 1227], "complex128": 455, "complex64": 456, "complex_": 457, "complexflo": 458, "complexwarn": 384, "compos": [1109, 1205, 1227], "compress": 459, "comput": [1103, 1104, 1109, 1122, 1126, 1137, 1193, 1198, 1201, 1219, 1230, 1240, 1244, 1246], "concat": 460, "concaten": [190, 461, 1186, 1211], "concept": [1239, 1244], "conclus": 1221, "concret": 1184, "concurr": 1111, "cond": [191, 615, 1107, 1117, 1199, 1237], "conda": 1127, "condit": [1182, 1237], "config": 10, "configur": [1115, 1129, 1173, 1219, 1221], "conj": [192, 462], "conjug": 463, "consider": 1185, "constant": [351, 1182, 1184, 1189, 1237], "constrain": 1201, "constraint": [1221, 1244], "constructor": 1219, "contain": [1122, 1127, 1200, 1213, 1227], "content": [1184, 1190, 1191, 1193], "context": 1115, "contribut": 1112, "contributor": 1112, "control": [1107, 1117, 1119, 1122, 1166, 1186, 1199, 1206, 1211, 1219, 1232], "control_flow": 1199, "conv": [193, 1207], "conv_dimension_numb": 194, "conv_general_dil": [195, 1207], "conv_general_dilated_loc": 196, "conv_general_dilated_patch": 197, "conv_transpos": 198, "conv_with_general_pad": [199, 1207], "conveni": 1188, "convent": [1200, 1227], "convert": 1122, "convert_element_typ": 200, "convolut": 1207, "convolv": [464, 915], "convolve2d": 916, "coo": 82, "coo_fromdens": 109, "coo_matmat": 110, "coo_matvec": 111, "coo_todens": 112, "cookbook": 1205, "coordin": 1159, "copi": [465, 1170], "copysign": 466, "core": [11, 12, 1107, 1109, 1181, 1187, 1237], "corrcoef": 467, "correct": 0, "correl": [468, 917], "correlate2d": 918, "cosh": [202, 470], "cotang": 1188, "count_nonzero": 471, "counter": [1137, 1246], "cov": 472, "cover": 1105, "cpu": 1127, "creat": [0, 1119, 1180], "create_device_mesh": 72, "create_hybrid_device_mesh": 73, "creation": [1173, 1239], "cross": [473, 616], "csc": 83, "csd": 919, "csingl": 474, "csr": 84, "csr_fromdens": 113, "csr_matmat": 114, "csr_matvec": 115, "csr_todens": 116, "cuda": [0, 1122, 1127], "cumlogsumexp": 203, "cummax": 204, "cummin": 205, "cumprod": [206, 475], "cumsum": [207, 476], "cumulative_sum": 477, "custom": [0, 1135, 1166, 1190, 1194, 1200, 1204, 1206, 1223, 1224, 1227, 1234, 1247, 1249], "custom_gradi": 13, "custom_jvp": [14, 1200, 1208, 1227, 1233], "custom_linear_solv": 208, "custom_partit": [0, 1151], "custom_root": 209, "custom_vjp": [15, 1192, 1200, 1227], "customclass": 1122, "customiz": 1184, "data": [1107, 1122, 1130, 1159, 1184, 1201, 1203, 1209, 1211, 1214, 1219, 1244], "dataset": [1189, 1209, 1213], "dct": 882, "dctn": 883, "debug": [16, 17, 18, 19, 20, 21, 1104, 1115, 1116, 1117, 1120, 1140, 1152, 1199, 1200, 1208, 1227, 1229, 1232, 1233, 1249], "debug_inf": 22, "debug_nan": 23, "dec": 1110, "decor": [1122, 1185], "deep": 1103, "default_backend": [24, 329], "default_devic": 25, "default_matmul_precis": 26, "default_prng_impl": 27, "defin": [1188, 1200, 1202, 1207, 1213, 1227, 1236], "define_prng_impl": 136, "definit": 1224, "deg2rad": 478, "degre": 479, "delet": 480, "delta_orthogon": 352, "depend": [1184, 1188, 1193], "deriv": [1133, 1200, 1210, 1227, 1242], "describ": 1201, "descript": 1190, "design": [1173, 1185, 1191, 1194, 1195, 1216], "det": [617, 891], "detail": [1152, 1183, 1186, 1200, 1227], "detect": 1194, "develop": [1113, 1185, 1187, 1224, 1249], "devic": [0, 2, 33, 1109, 1120, 1122, 1136, 1152, 1172, 1186, 1188, 1198, 1201, 1211, 1239], "device_count": 28, "device_get": 29, "device_memory_profil": 831, "device_put": 30, "device_put_repl": 31, "device_put_shard": 32, "diag": 481, "diag_indic": 482, "diag_indices_from": 483, "diagflat": 484, "diagon": [485, 618], "dialect": 133, "dict": [1200, 1205, 1227, 1230], "diff": 486, "differ": [1122, 1130, 1193, 1205, 1230], "differenti": [0, 1103, 1129, 1133, 1200, 1202, 1205, 1227, 1230, 1236], "digamma": [210, 933], "digit": 487, "dilat": 1207, "dimens": [1207, 1219], "dimension": 1207, "direct": [1109, 1214], "dirichlet": [849, 997, 998, 1174], "disabl": [1180, 1184, 1193], "disable_jit": 34, "disable_x64": 63, "disagre": 1201, "dispatch": [1106, 1248], "displai": 1213, "distribut": [35, 36, 1141, 1201], "div": 211, "div_check": 58, "dive": 1103, "diverg": 1199, "divid": 488, "divmod": 489, "dlpack": [37, 38, 1142], "do": [1122, 1180, 1184, 1193, 1196, 1204, 1214], "docker": 1127, "doctest": 1119, "document": [1113, 1119, 1185], "doe": [1114, 1194], "domain": 1109, "don": 1186, "donat": 1122, "dot": [212, 490], "dot_gener": 213, "doubl": [491, 1199], "double_sided_maxwel": 850, "down": [1186, 1211], "downstream": 1189, "dr": [1180, 1186, 1193, 1200, 1206, 1227], "dsplit": 492, "dstack": 493, "dtype": [39, 40, 41, 42, 43, 44, 45, 494, 1143, 1194, 1248], "dtypelik": 1098, "duck": 1185, "dure": 1232, "dynam": 1199, "dynamic_index_in_dim": 214, "dynamic_slic": 215, "dynamic_slice_in_dim": 216, "dynamic_update_index_in_dim": 217, "dynamic_update_slic": 218, "dynamic_update_slice_in_dim": 219, "each": [1186, 1211], "easi": 1214, "easier": 1127, "ediff1d": 495, "edit": 1119, "effect": [1183, 1193, 1248], "effici": 1188, "eig": [246, 619], "eigh": [247, 620, 892], "eigh_tridiagon": 893, "eigval": 621, "eigvalsh": 622, "einsum": [496, 1214], "einsum_path": 497, "elbo": 1213, "elementwis": 1219, "elimin": 1214, "elu": 344, "empti": [117, 498], "empty_lik": 499, "emul": 1216, "enabl": [1180, 1184], "enable_check": 46, "enable_custom_prng": 47, "enable_custom_vjp_by_custom_transpos": 48, "enable_x64": 64, "end": 1216, "enforc": [1183, 1200, 1227], "enhanc": 1197, "ensure_compile_time_ev": 49, "enter": 1195, "entr": 934, "environ": 1198, "eq": 220, "equal": 500, "equival": 1243, "erf": [221, 935], "erf_inv": 222, "erfc": [223, 936], "erfinv": 937, "err": 1185, "error": [51, 1116, 1121, 1193, 1201], "estim": [1133, 1227], "etc": 1180, "eval_shap": 50, "evalu": [0, 1008, 1107, 1136, 1185, 1189, 1202, 1204, 1205, 1230, 1236], "event": 1223, "everyth": [1131, 1238], "exact": 1122, "exampl": [1103, 1115, 1117, 1133, 1135, 1136, 1137, 1159, 1186, 1188, 1191, 1193, 1195, 1200, 1201, 1208, 1211, 1213, 1216, 1227, 1233, 1245, 1246, 1247], "example_librari": [1144, 1145, 1146], "excess": 1207, "execut": [1152, 1216], "exercis": 1204, "exist": [1189, 1202, 1236], "exp": [224, 501], "exp1": 938, "exp2": 502, "expand_dim": [225, 503], "experiment": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 1114, 1116, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1208], "expi": 939, "expit": 940, "explan": [1186, 1192, 1193], "explicit": [1137, 1201, 1243, 1246, 1247], "explor": [1208, 1233], "expm": 894, "expm1": [226, 504], "expm_frechet": 895, "expn": 941, "expon": [999, 1000, 1174], "exponenti": 851, "expos": [1109, 1193], "express": [1188, 1201], "extend": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 1160, 1161, 1162, 1163, 1187, 1194, 1216, 1224], "extens": [0, 1187], "extern": [1208, 1233], "extract": 505, "ey": [118, 506], "f": 852, "fab": 507, "factori": 942, "fail": 1122, "failur": 1124, "fake": 1213, "faq": 1122, "faster": 1122, "featur": [1184, 1200, 1217, 1227], "feb": 1110, "februari": 1110, "fft": [227, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 882, 883, 884, 885, 1170, 1174, 1189], "fft2": 509, "fftconvolv": 920, "fftfreq": 510, "fftn": 511, "fftshift": 512, "filesystem": 1222, "fill_diagon": 526, "fin": 1199, "final": [1107, 1128], "find": 1108, "finfo": 527, "first": [1130, 1204], "fix": [528, 1110, 1193], "flag": [1115, 1116, 1125], "flatnonzero": 529, "flatten": [1068, 1107], "flatten_util": [143, 1164], "flavor": [1208, 1233], "flexibl": [530, 1190, 1216], "flip": 531, "fliplr": 532, "flipud": 533, "float": [539, 1195], "float0": 41, "float16": 534, "float32": 535, "float64": 536, "float_": 537, "float_check": 59, "float_pow": 538, "floor": [228, 540], "floor_divid": 541, "flow": [1107, 1166, 1199, 1219], "fly": 1107, "fmax": 542, "fmin": 543, "fmod": 544, "fold_in": 853, "follow": [1185, 1186, 1201], "fori_loop": [229, 1199], "forward": [0, 1107, 1200, 1202, 1205, 1227, 1236], "foundat": [1205, 1227], "frequent": 1122, "frexp": 545, "friction": 1185, "from": [1107, 1109, 1119, 1127, 1130, 1185, 1199, 1214, 1216], "from_dlpack": [37, 546], "from_gda": 1180, "frombuff": 547, "fromfil": 548, "fromfunct": 549, "fromit": 550, "frompyfunc": 551, "fromstr": 552, "front": 1216, "fsdp": 1211, "full": [230, 553, 1112, 1185, 1188], "full_lik": [231, 554], "fulli": 1211, "function": [0, 1104, 1107, 1114, 1116, 1122, 1131, 1135, 1152, 1164, 1165, 1168, 1177, 1178, 1189, 1190, 1199, 1200, 1203, 1204, 1205, 1209, 1210, 1213, 1216, 1224, 1227, 1230, 1238, 1247], "fundament": [1206, 1234], "funm": 896, "further": [1137, 1246], "gamma": [854, 943, 1001, 1002, 1003, 1004, 1005, 1006, 1174], "gammainc": 944, "gammaincc": 945, "gammaln": 946, "gather": [232, 1211], "gaussian_kd": [1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1174], "gcd": 555, "gda": 1180, "ge": 233, "gelu": 345, "gener": [556, 1125, 1137, 1189, 1201, 1207, 1213, 1246], "generalized_norm": 855, "gennorm": [1015, 1016, 1017, 1174], "geom": [1018, 1019, 1174], "geometr": 856, "geomspac": 557, "get": [1108, 1130], "get_backend": 330, "get_compile_opt": 331, "get_printopt": 558, "github": 1112, "give": 1201, "global": 1198, "global_array_to_host_local_arrai": 76, "glorot_norm": 353, "glorot_uniform": 354, "glossari": 1123, "glu": 346, "gmre": 926, "go": [1180, 1184, 1193], "goal": [1190, 1195], "googl": [1112, 1127, 1222], "gotcha": [1135, 1247], "gpu": [0, 1119, 1120, 1124, 1125, 1127, 1216, 1223], "gpu_op": 0, "grad": [119, 144, 1107, 1114, 1117, 1130, 1205, 1210, 1216, 1227, 1230, 1242], "gradient": [559, 1109, 1122, 1133, 1166, 1200, 1205, 1213, 1227, 1230, 1234], "granular": 1185, "greater": 560, "greater_equ": 561, "grid": [1218, 1219, 1221], "gt": 234, "guard": 1226, "guid": [1185, 1192, 1217, 1220, 1249], "gumbel": 857, "ham": 562, "han": 563, "handl": [1135, 1180, 1182, 1195, 1200, 1221, 1224, 1227, 1237, 1247], "happen": 1236, "hard_sigmoid": 347, "hard_silu": 348, "hard_swish": 349, "hard_tanh": 350, "harder": 1127, "hardwar": 1214, "have": 1152, "he_norm": 355, "he_uniform": 356, "heavisid": 564, "hello": 1218, "help": 1108, "helper": 1122, "hessenberg": [248, 897], "hessian": [145, 1205, 1227], "hfft": 513, "hidden": 1109, "hierarchi": 1185, "high": [0, 1126, 1232], "higher": [1133, 1182, 1227, 1237], "hilbert": 898, "histogram": 565, "histogram2d": 566, "histogram_bin_edg": 567, "histogramdd": 568, "host": [1136, 1152, 1180, 1198], "host_callback": [65, 66, 67, 68, 69, 1152], "host_local_array_to_global_arrai": 77, "hourli": 1128, "householder_product": 249, "how": [1120, 1122, 1131, 1180, 1184, 1186, 1188, 1193, 1195, 1196, 1197, 1201, 1202, 1205, 1211, 1212, 1221, 1227, 1238], "hsplit": 569, "hstack": 570, "hyp1f1": 947, "hyperparamet": [1203, 1209], "hypot": 571, "i": [1105, 1120, 1122, 1135, 1180, 1184, 1186, 1193, 1196, 1201, 1204, 1211, 1214, 1219, 1224, 1247], "i0": [572, 948, 949], "i1": [950, 951], "id_print": 68, "id_tap": [69, 1152], "idct": 884, "idctn": 885, "idea": 1190, "ident": 573, "idx": 1199, "ifft": 514, "ifft2": 515, "ifftn": 516, "ifftshift": 517, "igamma": 235, "igammac": 236, "ihfft": 518, "iinfo": 574, "illustr": 1207, "imag": [146, 147, 237, 575, 1165], "immedi": 1216, "impact": 1117, "implement": [1185, 1188, 1189, 1190, 1194, 1200, 1205, 1227], "implicit": [1200, 1227], "import": 1189, "imprecis": 1185, "improv": 1128, "in_ax": 1136, "in_spec": [1186, 1211], "inadvert": 1194, "incorpor": 1109, "index": [1194, 1199], "index_check": 60, "index_exp": 576, "index_in_dim": 238, "index_tak": 239, "indic": 577, "indirectli": [1200, 1227], "induc": 1188, "ineffici": 1188, "inexact": 578, "infer": 1213, "inform": [1104, 1135, 1224], "inherit": 1185, "initi": [35, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 1107, 1122, 1169, 1198, 1224, 1247], "inner": 579, "innocu": 1184, "input": [1107, 1180, 1185, 1186, 1188, 1199, 1207, 1211, 1221], "insert": 580, "inspect": [1104, 1116, 1117], "inspect_array_shard": 18, "instal": [1119, 1120, 1127, 1223, 1242], "instanc": 1185, "int16": 581, "int32": 582, "int64": 583, "int8": 584, "int_": 585, "integ": [586, 1195], "integer_pow": 240, "integr": [886, 1174, 1189], "integrate_box_1d": 1009, "integrate_gaussian": 1010, "integrate_kd": 1011, "intellig": 1185, "intent": 1185, "interact": [1116, 1117, 1214], "intermedi": [1188, 1201], "intern": [1103, 1181, 1184, 1193, 1224, 1236, 1237], "interp": 587, "interpol": 1189, "interpret": [1107, 1187, 1204], "intersect1d": 588, "intro": 1201, "introduc": 1214, "introduct": [1138, 1198, 1216, 1232, 1236, 1244], "inv": [623, 899], "invari": 1188, "invers": 1204, "invert": [589, 1204], "investig": 1128, "io": [1119, 1189], "io_callback": [70, 1208, 1233], "iota": 241, "ipynb": 1119, "ir": 134, "irfft": 519, "irfft2": 520, "irfftn": 521, "is_finit": 242, "isclos": 590, "iscomplex": 591, "iscomplexobj": 592, "isdtyp": 593, "isf": [984, 1024, 1037], "isfinit": 594, "isin": 595, "isinf": 596, "isnan": 597, "isneginf": 598, "isposinf": 599, "isreal": 600, "isrealobj": 601, "isscalar": 602, "issu": [1180, 1184, 1193], "issubdtyp": [42, 603], "istft": 921, "iter": [604, 1187, 1200, 1219, 1227], "its": [1205, 1213, 1221, 1230], "ix_": 605, "jacfwd": [148, 1205, 1227], "jacobian": [1205, 1227], "jacrev": [149, 1205, 1227], "jan": 1110, "januari": 1110, "jax": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1107, 1108, 1109, 1110, 1112, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1187, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1212, 1216, 1217, 1223, 1224, 1227, 1230, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1243, 1247, 1248], "jax_debug_nan": 1115, "jax_disable_jit": 1115, "jaxlib": [1110, 1119, 1127, 1196], "jaxpr": [12, 1107, 1182, 1204, 1237, 1239], "jaxruntimeerror": 52, "jaxspars": 85, "jep": [1189, 1194, 1197], "jet": 1153, "jit": [150, 1107, 1114, 1122, 1129, 1131, 1136, 1180, 1199, 1201, 1202, 1210, 1212, 1236, 1237, 1238, 1242, 1244], "joint": 1213, "juli": 1110, "june": 1110, "just": [1129, 1131, 1184, 1238, 1242], "jvp": [151, 1107, 1190, 1200, 1205, 1227], "k": [1188, 1221, 1227], "kaiser": 606, "kei": [858, 1135, 1154, 1173, 1194, 1239, 1244, 1247], "kernel": [1207, 1216, 1217, 1219, 1221], "key_data": 859, "key_reus": 1154, "keystr": 1078, "kind": 1122, "kl_div": 952, "know": [1180, 1184, 1193], "kron": 607, "lack": [1185, 1243], "laid": [1196, 1201], "languag": [1217, 1237], "laplac": [860, 1020, 1021, 1022, 1174], "lattic": 1195, "launch": 1198, "lax": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 1117, 1166, 1195, 1207, 1212], "layer": 1212, "layout": 1207, "lcm": 608, "ldexp": 609, "le": 243, "lead": 1185, "leak": 1120, "leaky_relu": 366, "leav": [1069, 1135, 1195, 1247], "lecun_norm": 357, "lecun_uniform": 358, "left_shift": 610, "less": [611, 1184, 1193], "less_equ": 612, "let": [0, 1186, 1206, 1211, 1234], "level": [0, 1152, 1185, 1211, 1232], "lexsort": 613, "lgamma": 244, "lh": 1207, "lib": [329, 330, 331, 1167], "librari": [1109, 1122, 1194], "licens": 1112, "like": [1180, 1232], "limit": [1114, 1115, 1117, 1189], "linalg": [120, 121, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 924, 925, 926, 1159, 1166, 1170, 1174, 1189], "linear": [333, 1107, 1137, 1166, 1230, 1246], "linear_transpos": 332, "linear_util": [126, 127, 128, 129, 130, 131, 132, 1161], "linspac": 644, "lint": [1112, 1119], "list": [0, 1164, 1177, 1178, 1179, 1200, 1205, 1227, 1230], "live_arrai": [334, 1180], "live_buff": 1180, "load": [645, 1122, 1203, 1209, 1216], "lobpcg_standard": 120, "local": [1127, 1180, 1198, 1222], "local_devic": 336, "local_device_count": 335, "log": [258, 646, 1110, 1213], "log10": 647, "log1p": [259, 648], "log2": 649, "log_compil": 337, "log_ndtr": 953, "log_sigmoid": 367, "log_softmax": 368, "logaddexp": 650, "logaddexp2": 651, "logcdf": [974, 985, 992, 1002, 1038, 1053], "loggamma": 861, "logical_and": 652, "logical_not": 653, "logical_or": 654, "logical_xor": 655, "logist": [260, 862, 1023, 1024, 1025, 1026, 1027, 1028, 1159, 1174, 1230], "logit": 954, "lognorm": 863, "logpdf": [975, 986, 993, 997, 999, 1003, 1012, 1016, 1021, 1025, 1032, 1039, 1044, 1050, 1054, 1059, 1062, 1064], "logpmf": [970, 979, 981, 1018, 1030, 1034, 1046], "logsf": [976, 987, 994, 1004, 1040, 1055], "logspac": 656, "logsumexp": [369, 955], "loop": [1130, 1203, 1209, 1221], "loss": [1195, 1203, 1209], "low": 1152, "lower": [0, 1104, 1216], "lpmn": 956, "lpmn_valu": 957, "lstsq": 624, "lt": 261, "lu": [250, 900], "lu_factor": 901, "lu_solv": 902, "ma": 1189, "machin": 1223, "machineri": 1107, "made": [1205, 1227], "mai": 1110, "main": 1190, "make": [1122, 1188, 1196], "make_array_from_callback": 338, "make_array_from_single_device_arrai": 339, "make_jaxpr": 340, "manag": [1115, 1183], "manipul": [1165, 1173], "manual": [1132, 1213, 1223, 1231, 1244], "map": [71, 262, 1070, 1155, 1186, 1188, 1211, 1214, 1247], "map_coordin": 912, "mar": 1110, "march": 1110, "mark": [1122, 1238], "mask_indic": 657, "materi": 1117, "math": [1205, 1227], "matmul": [625, 658, 1125, 1216], "matric": [1159, 1210], "matrix": [1205, 1211, 1219, 1227], "matrix_norm": 626, "matrix_pow": 627, "matrix_rank": 628, "matrix_transpos": [629, 659], "max": [263, 660], "maximum": 661, "maxwel": 864, "md": 1119, "mean": [662, 1194], "meaning": 1219, "mechan": [1185, 1212], "median": 663, "megacor": 1221, "member": 1179, "memori": [1120, 1124, 1172, 1201, 1219, 1221], "merge_linear_aux": 129, "mesh_util": [72, 73, 1156], "meshgrid": 664, "messag": 1193, "method": 1122, "mgrid": 665, "migrat": 1180, "min": [264, 666], "minim": 914, "minimum": 667, "miscellan": [1129, 1199], "mish": 370, "mistak": [1135, 1247], "mix": 1195, "ml": [1135, 1247], "mlir": [0, 133, 134, 135, 1162], "mod": 668, "mode": [1029, 1107, 1152, 1200, 1205, 1216, 1227], "model": [1135, 1191, 1198, 1201, 1213, 1218, 1247], "modf": 669, "modifi": 1119, "modul": [0, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1187], "more": [1116, 1117, 1135, 1183, 1186, 1191, 1200, 1205, 1214, 1216, 1227, 1232], "mosaic": 1216, "most": 1195, "motiv": [1137, 1183, 1186, 1188, 1194], "moveaxi": 670, "mul": 265, "multi": [1109, 1198, 1211], "multi_dot": 630, "multicor": 1219, "multigammaln": 958, "multihost": 1157, "multihost_util": [74, 75, 76, 77, 78, 79, 1157], "multinomi": [1030, 1031, 1174], "multipl": [0, 1109, 1219, 1223], "multipli": [671, 1210, 1211], "multivariate_norm": [865, 1032, 1033, 1174], "my": [1122, 1180, 1193, 1214], "mypi": 1185, "n": 1207, "name": [1180, 1188, 1201, 1214], "named_cal": 341, "named_scop": 342, "namedshard": 1201, "namespac": 1189, "nan": [1122, 1199], "nan_check": 61, "nan_to_num": 672, "nanargmax": 673, "nanargmin": 674, "nancumprod": 675, "nancumsum": 676, "nanmax": 677, "nanmean": 678, "nanmedian": 679, "nanmin": 680, "nanpercentil": 681, "nanprod": 682, "nanquantil": 683, "nanstd": 684, "nansum": 685, "nanvar": 686, "nbinom": [1034, 1035, 1174], "nccl": 1125, "ndarrai": [687, 688], "ndim": 689, "ndimag": [912, 1174, 1189], "ndtr": 959, "ndtri": 960, "ne": 266, "necessari": 1195, "need": [1114, 1184], "neg": [267, 690], "nest": [1136, 1205, 1230], "network": [1201, 1203, 1209, 1211, 1214, 1245], "neural": [1201, 1203, 1209, 1211, 1214, 1245], "new": [1119, 1180, 1184, 1188, 1194, 1202, 1216, 1236], "next": [1227, 1230, 1232, 1243], "nextaft": [268, 691], "nightli": [1127, 1128], "nn": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 1168, 1169], "node": [1135, 1247], "non": [1190, 1199, 1200, 1213, 1227], "nondiff_argnum": [1192, 1200, 1227], "none": [1135, 1247], "nonzero": 692, "norm": [631, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1174], "normal": [0, 359, 866], "not_equ": 693, "notabl": 1110, "note": [1119, 1190, 1194, 1206, 1215, 1234], "notebook": 1119, "noteworthi": 1219, "nov": 1110, "novemb": 1110, "now": [1180, 1184, 1193], "nsight": 1223, "num_program": 1216, "number": [694, 1134, 1199, 1201, 1205, 1207, 1227, 1243], "numer": [1105, 1122, 1184, 1193, 1200, 1205, 1227, 1230], "numpi": [384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 1118, 1122, 1130, 1134, 1170, 1185, 1189, 1193, 1195, 1199, 1212, 1242, 1243], "numpy_rank_promot": 819, "nvidia": 1127, "object": [1189, 1224], "object_": 695, "oct": 1110, "octob": 1110, "odr": 1189, "ogrid": 696, "old": 1184, "older": 1127, "omnistag": 1193, "one": 1211, "one_hot": 371, "ones": [360, 697], "ones_lik": 698, "onli": [1200, 1227], "oom": 1124, "op": [820, 821, 822, 823, 1171], "oper": [0, 1166, 1171, 1184, 1199, 1212, 1219, 1248, 1249], "operand": 1219, "optim": [913, 914, 1133, 1145, 1174, 1189, 1193, 1213, 1227], "optimizeresult": 913, "option": [1115, 1184, 1185, 1195, 1224], "order": [1117, 1122, 1133, 1182, 1183, 1219, 1227, 1237], "orient": 1189, "orthogon": [361, 867], "other": [1117, 1159, 1168, 1199, 1200, 1216, 1227], "out": [1104, 1196, 1199, 1201], "out_spec": [1186, 1188, 1211], "outer": [632, 699], "output": [1107, 1122, 1183, 1185, 1186, 1188, 1211], "over": 1186, "overhead": [1117, 1184], "overrid": 1185, "overview": [1183, 1187, 1194], "p": [1188, 1237], "packag": [1129, 1196], "packbit": 700, "pad": [269, 701, 1207], "palla": [1216, 1217, 1218, 1219, 1220, 1221], "pallas_cal": 1216, "parallel": [1103, 1109, 1129, 1136, 1152, 1166, 1201, 1211, 1214, 1240, 1244], "paramet": [1135, 1224, 1247], "parameter": 1221, "pareto": [868, 1044, 1045, 1174], "part": [1107, 1227], "partial": [1075, 1185, 1188], "partit": [702, 1214], "passmanag": 135, "path": [1135, 1247], "pattern": [1135, 1247], "pdb": 1232, "pdf": [977, 988, 995, 998, 1000, 1005, 1013, 1017, 1022, 1026, 1033, 1041, 1045, 1051, 1056, 1060, 1063, 1065], "pdot": 270, "per": [1133, 1186, 1227], "percentil": 703, "perfetto": 1223, "perform": [1117, 1125, 1126, 1241, 1249], "permiss": 1185, "permut": 869, "permute_dim": 704, "persist": 1222, "piecewis": 705, "pinv": 633, "pip": [1119, 1127], "pipelin": [1211, 1221], "pjit": [1114, 1138, 1158, 1180, 1186], "place": [706, 1199, 1219], "placement": [1122, 1219], "plan": 1185, "platform": [1127, 1217], "plu": 1188, "pluggabl": 1194, "pmap": [824, 1114, 1117, 1129, 1136, 1186], "pmax": 271, "pmean": 272, "pmf": [971, 980, 982, 1019, 1031, 1035, 1047], "pmin": 273, "poch": 961, "poisson": [870, 1046, 1047, 1174], "polar": 903, "poli": 707, "polici": [1118, 1160, 1184, 1187, 1206, 1234], "polyadd": 708, "polyd": 709, "polydiv": 710, "polyfit": 711, "polygamma": [274, 962], "polyint": 712, "polymul": 713, "polynomi": 1189, "polysub": 714, "polyv": 715, "population_count": 275, "port": 1214, "posit": [716, 1214], "positionalshard": 1201, "possibl": [1184, 1187], "pow": [276, 717], "power": 718, "pp": 1211, "ppermut": [277, 1211], "ppf": [972, 989, 1027, 1042, 1061], "practic": [1179, 1206, 1234], "precis": [1125, 1195, 1199, 1219], "predict": [1203, 1209], "preliminari": 1214, "preserv": [1186, 1211], "primal": [1202, 1236], "primer": 1221, "primit": [0, 1107, 1182, 1188, 1199, 1202, 1216, 1236, 1237], "principl": 1185, "print": [19, 1117, 1232], "print_environment_info": 825, "printopt": 719, "prng": [1173, 1191, 1194, 1199], "prng_kei": 43, "prngkei": 838, "problem": [1188, 1190, 1200, 1227], "process": [1107, 1198], "process_allgath": 78, "process_count": 826, "process_index": 827, "prod": 720, "product": [1205, 1227], "profil": [828, 829, 830, 831, 832, 833, 834, 835, 836, 1120, 1172, 1223, 1241], "program": [1120, 1191, 1198, 1218, 1223], "program_id": 1216, "programmat": 1223, "progress": 1194, "promot": [1195, 1225, 1248], "promote_typ": 721, "propag": 1214, "properti": [1195, 1219], "propos": 1197, "pseudo": 1134, "pseudorandom": 1243, "pshuffl": 278, "psum": [279, 1188, 1211], "psum_scatt": [280, 1211], "pswapax": 281, "ptp": 722, "public": [1129, 1180], "pull": 1112, "pure": 1199, "pure_callback": [837, 1208, 1233], "purpos": 1185, "put": [0, 723, 1221], "pytest": 1119, "python": [1116, 1118, 1152, 1184, 1190, 1195, 1199, 1200, 1227, 1248], "pytorch": [1195, 1203], "pytre": [1107, 1122, 1135, 1182, 1200, 1224, 1227, 1237, 1239, 1247], "pytyp": 1185, "qdwh": 251, "qr": [252, 634, 904], "quantil": 724, "question": 1122, "quick": 1201, "quickstart": [1210, 1218, 1242], "r_": 725, "rad2deg": 726, "rademach": 871, "radian": 727, "randint": 872, "random": [136, 137, 138, 139, 140, 141, 142, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 1105, 1134, 1163, 1173, 1187, 1189, 1199, 1201, 1243], "random_bcoo": 122, "random_gamma_grad": 282, "rank": [1186, 1211, 1225], "rankdata": 1048, "ravel": 728, "ravel_multi_index": 729, "ravel_pytre": 143, "rayleigh": 873, "rbg_prng_impl": 137, "read": [1116, 1216], "reader": 1204, "readthedoc": 1119, "real": [283, 730], "realist": [1186, 1191], "reciproc": [284, 731], "recurs": [1180, 1206, 1234], "recursionerror": 1180, "reduc": [285, 1071, 1186, 1211], "reduce_precis": 286, "reduce_window": 287, "reduct": [1171, 1214, 1219, 1221], "ref": 1216, "refer": [1157, 1159, 1173, 1216], "register_pytree_nod": 1079, "register_pytree_node_class": 1080, "register_pytree_with_kei": 1081, "register_pytree_with_keys_class": 1082, "regress": [1128, 1137, 1159, 1230, 1246], "rel_entr": 963, "relat": 1166, "releas": 1196, "relu": 372, "relu6": 373, "rem": 288, "remaind": 732, "remat": [1184, 1206, 1234], "remateri": 1184, "remot": 1223, "remov": [1184, 1190], "repeat": 733, "replac": 1180, "replic": [1188, 1214], "repositori": 1119, "request": 1112, "resampl": 1014, "reshap": [289, 734, 1219], "resiz": [146, 735], "resourc": 1214, "respect": [1205, 1230], "restrict": [1112, 1219], "result": [1117, 1152, 1211, 1213], "result_typ": [44, 736], "return": 1152, "reus": [1154, 1194], "rev": 290, "revers": [1152, 1200, 1202, 1205, 1227, 1236], "revis": 1214, "reviv": 1188, "rfft": 522, "rfft2": 523, "rfftfreq": 524, "rfftn": 525, "rh": 1207, "right_shift": 737, "rint": 738, "rm": 0, "rng": [1173, 1194, 1199], "rng_bit_gener": 291, "rng_uniform": 292, "roadmap": 1185, "robust": 1189, "rocm": 1119, "roll": 739, "rollaxi": 740, "root": 741, "rot90": 742, "rotat": 927, "round": [293, 743], "round_": 744, "rsf2csf": 905, "rsqrt": 294, "rubric": 1189, "rule": [0, 1190, 1200, 1202, 1227, 1236], "run": [1119, 1198, 1249], "runtim": [1116, 1140, 1183, 1185], "s_": 745, "safe": [1194, 1196], "same": 1207, "sampler": 1173, "save": [746, 1206], "save_device_memory_profil": 832, "saveabl": [1206, 1234], "savez": 747, "scalar": 1195, "scalar_type_of": 45, "scale_and_transl": 147, "scan": [295, 1182, 1237], "scatter": 296, "scatter_add": 297, "scatter_appli": 298, "scatter_max": 299, "scatter_min": 300, "scatter_mul": 301, "schur": [253, 906], "scipi": [882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1174, 1189], "scope": 1189, "scratch": 1107, "searchsort": 748, "see": [1186, 1211], "seed_with_impl": 138, "segment": 1171, "segment_max": 820, "segment_min": 821, "segment_prod": 822, "segment_sum": 823, "select": [302, 749], "select_n": 303, "self": [1122, 1213], "selu": 374, "sem": 1049, "semant": [1190, 1195, 1248], "semi": 1244, "sep": 1110, "separ": 1196, "sept": 1110, "septemb": 1110, "sequenc": 1183, "sequenti": 1243, "serial": 1170, "set": [1199, 1213], "set_printopt": 750, "setdiff1d": 751, "setup": [1136, 1227], "setxor1d": 752, "sf": [978, 990, 996, 1006, 1028, 1043, 1057], "sgd": 1213, "shape": [753, 1193, 1199], "shapedtypestruct": 3, "shard": [0, 1140, 1166, 1175, 1187, 1201, 1211, 1239, 1244], "shard_map": [1186, 1211, 1244], "sharp": [1117, 1199, 1201], "shift_left": 304, "shift_right_arithmet": 305, "shift_right_log": 306, "shmap": 1186, "should": [1185, 1186, 1197], "shutdown": 36, "side": [1183, 1193, 1211], "sigmoid": 375, "sign": [307, 754, 1195], "signal": [915, 916, 917, 918, 919, 920, 921, 922, 923, 1174, 1189], "signbit": 755, "signedinteg": 756, "significantli": 1184, "silicon": 1127, "silu": 376, "simpl": [1137, 1186, 1203, 1209, 1245, 1246], "simplic": 1185, "simplifi": [1107, 1184], "sin": [308, 757], "sinc": 758, "singl": [759, 1109, 1112], "sinh": [309, 760], "size": 761, "slerp": 928, "slice": 310, "slice_in_dim": 311, "slightli": 1193, "slogdet": 635, "slow": [1122, 1186, 1211], "small": 1193, "smem": [1219, 1221], "so": [1186, 1211], "soft_sign": 377, "softmax": 378, "softplu": 379, "solut": [1137, 1188, 1190, 1193, 1246], "solv": [636, 907, 1186, 1188], "solve_triangular": 908, "some": [1122, 1183, 1184], "sort": [312, 762, 1122], "sort_complex": 763, "sort_key_v": 313, "sourc": [1119, 1127, 1196], "space": 1221, "spars": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 924, 925, 926, 1159, 1174, 1189], "sparse_plu": 380, "sparsifi": [123, 1159], "spatial": [927, 928, 1174, 1189], "spec": 1218, "special": [929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 1174, 1189], "specif": [1109, 1186, 1211], "specifi": 1136, "speed": 1210, "speedup": 1109, "spenc": 964, "sph_harm": 965, "sphinx": 1119, "split": [764, 874, 1186, 1211], "spmd": 1211, "spsolv": 121, "sqrt": [314, 765], "sqrtm": 909, "squar": [315, 766], "squareplu": 381, "squeez": [316, 767], "stabil": [1200, 1227], "stack": 768, "stage": [1104, 1107, 1176], "stakehold": 1189, "standard": [382, 1107], "start": [1108, 1130, 1186, 1197, 1205, 1211], "start_serv": 833, "start_trac": 834, "stat": [969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1174, 1189], "state": [1137, 1199, 1243, 1246], "static": [1104, 1122, 1185, 1188, 1212, 1238], "stax": 1146, "std": 769, "step": [0, 1128, 1195, 1206, 1227, 1230, 1232, 1234, 1243], "steptraceannot": 828, "stft": 922, "stop": [1133, 1227], "stop_gradi": [317, 1133, 1227], "stop_trac": 835, "store": 1216, "storeexcept": 126, "straight": [1133, 1227], "strategi": [1122, 1137, 1246], "strength": [1114, 1115, 1117], "strict": 1248, "strictli": 1185, "stride": 1207, "structur": [1072, 1107, 1159, 1199], "style": [1107, 1194], "sub": 318, "subclass": 1201, "subpackag": 1129, "subset": 1216, "subtract": 770, "suit": 1112, "sum": [771, 1188], "summari": 1199, "support": [1118, 1127, 1152, 1214, 1219], "svd": [254, 637, 910], "svdval": 638, "swapax": 772, "swish": 383, "switch": [319, 1180, 1193], "sync": 1119, "sync_global_devic": 79, "system": 1188, "t": [875, 1050, 1051, 1131, 1174, 1186, 1238], "tabl": 1195, "take": [773, 1137, 1210, 1227, 1230, 1242, 1246], "take_along_axi": 774, "tan": [320, 775], "tanh": [321, 776], "templat": 1216, "tensor": [1201, 1211, 1214], "tensorboard": 1223, "tensordot": [639, 777], "tensorflow": [1152, 1195, 1209], "tensorinv": 640, "tensorsolv": 641, "term": 1123, "test": [0, 1112, 1119, 1189], "than": [1122, 1195], "thi": [1128, 1184, 1186, 1188, 1194], "think": [1206, 1212, 1234], "those": 1214, "three": [1191, 1244], "threefry2x32_p": 139, "threefry_2x32": 140, "threefry_prng_impl": 141, "through": [1133, 1227], "throw": 1116, "tie_in": 322, "tile": [778, 1186, 1211], "time": [1104, 1129, 1131, 1172, 1193, 1238, 1242, 1249], "tip": 1125, "tl": [1180, 1186, 1193, 1200, 1206, 1227], "to_dlpack": 38, "todens": 124, "toeplitz": 911, "togeth": [0, 1221], "toi": [1191, 1193, 1211, 1214], "token": 1183, "top": 1211, "top_k": 323, "total": 1109, "toward": 1185, "tp": 1211, "tpu": [1120, 1127, 1136, 1216, 1219, 1220, 1221], "trace": [779, 836, 1107, 1172, 1204, 1212, 1223, 1239], "traceannot": 829, "tracer": [1122, 1204], "track": 1188, "tradeoff": 1191, "train": [1130, 1203, 1209], "transfer": 1226, "transfer_guard": 1066, "transform": [130, 927, 928, 1104, 1107, 1114, 1117, 1130, 1131, 1132, 1152, 1159, 1174, 1185, 1186, 1190, 1200, 1216, 1227, 1231, 1238, 1239, 1247], "transformation_with_aux": 131, "transpos": [324, 780, 1073, 1135, 1188, 1194, 1207, 1247], "transposit": [1186, 1188, 1202, 1211, 1219, 1236], "trapezoid": [781, 886], "tree": [1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1135, 1177, 1247], "tree_al": 1083, "tree_flatten": 1084, "tree_flatten_with_path": 1085, "tree_leav": 1086, "tree_leaves_with_path": 1087, "tree_map": 1088, "tree_map_with_path": 1089, "tree_reduc": 1090, "tree_structur": 1091, "tree_transpos": 1092, "tree_unflatten": 1093, "tree_util": [1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1178, 1247], "treedef_children": 1094, "treedef_is_leaf": 1095, "treedef_tupl": 1096, "tri": 782, "triangular": 876, "triangular_solv": 255, "tridiagon": 256, "tridiagonal_solv": 257, "trigger": 1193, "tril": 783, "tril_indic": 784, "tril_indices_from": 785, "trim_zero": 786, "triton": 1216, "triu": 787, "triu_indic": 788, "triu_indices_from": 789, "troubleshoot": 1223, "true": 1184, "true_divid": 790, "trunc": 791, "truncated_norm": [362, 877], "truncnorm": [1052, 1053, 1054, 1055, 1056, 1057, 1174], "tupl": [1200, 1205, 1227, 1230], "tutori": [1103, 1108, 1139, 1211, 1235], "two": [1205, 1227], "type": [1097, 1098, 1112, 1119, 1179, 1180, 1185, 1194, 1195, 1216, 1219, 1248], "ufunc": 792, "uint": 793, "uint16": 794, "uint32": 795, "uint64": [796, 1195], "uint8": 797, "unconcaten": [1186, 1211], "undefin": 1195, "under": [1114, 1117, 1152], "understand": [1120, 1182], "unexpect": 1247, "unflatten": 1074, "unif": 1185, "unifi": 1185, "uniform": [363, 878, 1058, 1059, 1060, 1061, 1174], "union1d": 798, "uniqu": 799, "unique_al": 800, "unique_count": 801, "unique_invers": 802, "unique_valu": 803, "unmap": 1188, "unnecessari": 1117, "unpackbit": 804, "unravel_index": 805, "unsafe_rbg_prng_impl": 142, "unsign": 1195, "unsignedinteg": 806, "unstabl": 1185, "unstack": 807, "until": [1152, 1186, 1211], "unwrap": 808, "up": [1210, 1213, 1221], "updat": [1119, 1192, 1199], "upgrad": 1184, "us": [1109, 1112, 1117, 1119, 1120, 1122, 1131, 1133, 1152, 1186, 1193, 1194, 1197, 1198, 1200, 1202, 1204, 1205, 1210, 1211, 1213, 1216, 1221, 1227, 1230, 1236, 1238], "usag": [1109, 1115, 1117, 1173, 1200, 1222, 1227], "user": [1107, 1109, 1184, 1188, 1189, 1191, 1194, 1249], "user_check": 62, "util": [1140, 1157, 1203, 1209], "v": [1183, 1186, 1188, 1189, 1198, 1199, 1211, 1212], "valid": 1207, "valu": [1116, 1122, 1130, 1140, 1152, 1201, 1205, 1206, 1227, 1247, 1248], "value_and_grad": [125, 1099, 1205, 1230], "vander": 809, "var": [810, 1182, 1237], "vari": 1188, "variabl": [1212, 1237], "variance_sc": 364, "variat": 1213, "vdot": 811, "vecdot": [642, 812], "vector": [813, 1107, 1129, 1132, 1205, 1210, 1227, 1231, 1242], "vector_norm": 643, "veri": 1122, "verif": 1128, "version": [1118, 1196], "via": [1127, 1185, 1223, 1244], "view": [1223, 1224], "visualize_array_shard": 20, "visualize_shard": 21, "vjp": [1100, 1107, 1190, 1200, 1205, 1227], "vmap": [1101, 1107, 1114, 1129, 1136, 1152, 1190, 1205, 1210, 1213, 1216, 1227, 1242], "vmem": 1221, "vonmis": [1062, 1063, 1174], "vsplit": 814, "vstack": 815, "wai": [1112, 1201, 1211], "wait": 1152, "wald": 879, "warn": 1225, "we": [1131, 1184, 1196, 1238], "weakli": 1248, "weibull_min": 880, "welch": 923, "what": [1105, 1135, 1180, 1184, 1189, 1192, 1193, 1194, 1204, 1206, 1219, 1224, 1234, 1236, 1247], "wheel": 1127, "when": [1104, 1117, 1131, 1180, 1186, 1193, 1197, 1201, 1236, 1238], "where": [816, 1122, 1214], "whether": 1188, "while": [1182, 1237], "while_loop": [325, 1199], "why": [1114, 1117, 1122, 1131, 1135, 1180, 1184, 1185, 1186, 1189, 1193, 1196, 1204, 1208, 1214, 1233, 1238], "wider": 1195, "window": 1119, "with_sharding_constraint": 326, "within": [1119, 1195], "work": [1131, 1135, 1137, 1200, 1202, 1227, 1238, 1246, 1247], "workflow": 1109, "world": 1218, "wrap_init": 132, "wrap_key_data": 881, "wrapcauchi": [1064, 1065, 1174], "wrappedfun": 127, "wrapper": 1189, "write": [1204, 1213, 1216, 1219, 1245], "x": 1199, "xla": [1119, 1125, 1189, 1193, 1202, 1212, 1236], "xla_bridg": [329, 330, 331, 1167], "xla_cal": 1182, "xla_client": 1167, "xla_comput": 1102, "xla_pmap": 1182, "xlog1pi": 966, "xlogi": 967, "xmap": [71, 1186, 1214], "y": 1199, "you": [1184, 1186, 1197, 1236], "your": [1109, 1130, 1204], "zero": [365, 817, 1122], "zeros_lik": 818, "zeros_like_arrai": 327, "zeta": [328, 968]}})